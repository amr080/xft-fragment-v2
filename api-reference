<!DOCTYPE html><html lang="en"><link rel="preload" as="font" href="/fonts/FragmentMono.otf" type="font/otf"/><head><meta charSet="utf-8"/><title>Fragment API Reference</title><link rel="canonical" href="https://fragment.dev/api-reference"/><meta name="viewport" content="width=device-width, initial-scale=1.0"/><meta name="description" content="Explore our API Reference to learn how to use Fragment."/><link rel="icon" href="/favicon.ico"/><meta name="next-head-count" content="6"/><link data-next-font="" rel="preconnect" href="/" crossorigin="anonymous"/><script id="color-mode-script" data-nscript="beforeInteractive">
      (function() {
        // Also in ColorModeProvider.tsx
        const LOCAL_STORAGE_KEY = 'fragment-dev-color-mode';
        
        let stored = window.localStorage.getItem(LOCAL_STORAGE_KEY);
        if(!stored) {
          window.localStorage.setItem(LOCAL_STORAGE_KEY, 'system');
          stored = 'system';
        }

        const systemIsDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        const mode = (stored ==='dark' || stored ==='system' && systemIsDark) ? 'dark' : 'light';

        if (mode === 'dark') {
          document.documentElement.classList.add('dark');
        }
      })();
    </script><link rel="preload" href="/_next/static/css/a5efe40cc09b9bf5.css" as="style" crossorigin=""/><link rel="stylesheet" href="/_next/static/css/a5efe40cc09b9bf5.css" crossorigin="" data-n-g=""/><noscript data-n-css=""></noscript><script defer="" crossorigin="" nomodule="" src="/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js"></script><script src="/_next/static/chunks/webpack-a47b0fa283075826.js" defer="" crossorigin=""></script><script src="/_next/static/chunks/framework-1d3a272891709a17.js" defer="" crossorigin=""></script><script src="/_next/static/chunks/main-0f62ab20d26767a6.js" defer="" crossorigin=""></script><script src="/_next/static/chunks/pages/_app-291741fa3b4c7e28.js" defer="" crossorigin=""></script><script src="/_next/static/chunks/7916-62e1e7344c872882.js" defer="" crossorigin=""></script><script src="/_next/static/chunks/6748-27db3013c7a228bd.js" defer="" crossorigin=""></script><script src="/_next/static/chunks/7223-911e7ea7673d2d01.js" defer="" crossorigin=""></script><script src="/_next/static/chunks/1106-315de890c6c80a77.js" defer="" crossorigin=""></script><script src="/_next/static/chunks/pages/api-reference-b8e142caaf7ed739.js" defer="" crossorigin=""></script><script src="/_next/static/W2yOYhxwWru5tElmEw2mc/_buildManifest.js" defer="" crossorigin=""></script><script src="/_next/static/W2yOYhxwWru5tElmEw2mc/_ssgManifest.js" defer="" crossorigin=""></script></head><body><div id="__next"><div><div class="mx-auto w-full flex flex-col text-fnormal laptop:text-s20"><div class="sticky top-0 bg-canvas z-50 w-full mx-auto"><div class="mx-auto max-w-[1440px] laptop:max-w-[1728px] px-f2"><div class="flex text-s20 tablet:text-slg tablet:flex-row py-f1"><div class="grow max-h-f2 text-flg tablet:text-fxl overflow-hidden"><div class="inline-block pr-[1ch] ml-[-4px]"><a class="hover:cursor-pointer transition-all duration-150 ease-in-out text-main hover:text-main-500" target="" href="/"><span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-flg tablet:text-fxl text-inherit bg-inherit border-none">FRAGMENT</span></span></a></div><div class="inline-block pr-f2"><h1 class="text-main">Reference</h1></div></div><div class="shrink-0 justify-self-end space-x-f3 text-s20 flex items-center"><div class="hidden"><a class="hover:cursor-pointer transition-all duration-150 ease-in-out text-main hover:text-main-500" target="" href="/docs">Documentation</a></div><div class="hidden tablet:block whitespace-nowrap"><a class="hover:cursor-pointer transition-all duration-150 ease-in-out text-main hover:text-main-500" target="_blank" href="https://dashboard.fragment.dev/login">Login<span class="text-main-500">↗</span></a></div><div><button data-testid="main-menu-button" class="hover:cursor-pointer transition-all duration-150 ease-in-out text-main hover:text-main-500 text-s20" id="headlessui-menu-button-:R1qdm:" type="button" aria-haspopup="menu" aria-expanded="false" data-headlessui-state="">Menu</button></div><div class="hidden tablet:block"><div><a href="/get-access"><button data-testid="button-engine" class="font-FragmentMono text-s20 no-underline text-negative hover:text-main bg-main hover:bg-negative border-none px-[1ch]">Get a demo <span class="text-main-500">→</span></button></a></div></div></div></div></div></div><div class="mb-f2 max-w-[1440px] laptop:max-w-[1728px] w-full mx-auto px-f2"><div class="flex items-start max-w-[950px] laptop:max-w-[1250px] w-full ml-0 mr-auto"><div class="tablet:min-w-f28 hidden tablet:flex basis-1/4 sticky top-[90px] pt-f3"><div class="hidden tablet:block w-full pr-[1.5em] "><div class="sticky bottom-auto"><div class="relative overflow-y-auto overflow-x-hidden h-[calc(100vh-99px)] scrollbar-hide"><div class="sticky top-0 left-0 bg-sticky-header-background"><div data-testid="left-nav"><div><a class="hover:text-main text-main-500" href="/docs"><span class="hover:cursor-pointer">1<!-- --> <span class="text-main">Documentation</span></span></a></div><div><a class="hover:text-main text-main" href="/api-reference"><span class="hover:cursor-pointer">2<!-- --> <span class="text-main">Reference</span></span></a><div class="my-f2"><div><div><span class="hover:text-main flex text-main-500  break-words ml-[2ch]"><div><div><a class="hover:cursor-pointer" href="/api-reference#api-overview"><span>A<!-- --> </span><span class="text-main">API Overview</span></a></div><div class="ml-[2ch]"></div></div></span></div><div><span class="hover:text-main flex text-main-500  break-words ml-[2ch]"><div><div><a class="hover:cursor-pointer" href="/api-reference#queries"><span>B<!-- --> </span><span class="text-main">API Queries</span></a></div><div class="ml-[2ch]"></div></div></span></div><div><span class="hover:text-main flex text-main-500  break-words ml-[2ch]"><div><div><a class="hover:cursor-pointer" href="/api-reference#mutations"><span>C<!-- --> </span><span class="text-main">API Mutations</span></a></div><div class="ml-[2ch]"></div></div></span></div><div><span class="hover:text-main flex text-main-500  break-words ml-[2ch]"><div><div><a class="hover:cursor-pointer" href="/api-reference#types"><span>D<!-- --> </span><span class="text-main">API Types</span></a></div><div class="ml-[2ch]"></div></div></span></div><div><span class="hover:text-main flex text-main-500  break-words ml-[2ch]"><div><div><a class="hover:cursor-pointer" href="/api-reference#cli-commands"><span>E<!-- --> </span><span class="text-main">CLI Commands</span></a></div><div class="ml-[2ch]"></div></div></span></div></div></div></div><div><a class="hover:text-main text-main-500" href="/changelog"><span class="hover:cursor-pointer">3<!-- --> <span class="text-main">Changelog</span></span></a></div></div></div></div></div></div></div><div class="w-full basis-full tablet:basis-3/4 min-w-f0"><div><section id="api-overview" class="first:0 pt-f6 tablet:pt-f3 pb-[2em] scroll-mt-[90px]"><span class="TopicContainer-title group-one text-s20 tablet:text-fnormal laptop:text-s20 block mb-[1em] "><span class="text-main-500">A<!-- --> </span>API Overview<span class="pl-[0.5em] phone:invisible phone:group-one-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#api-overview">#</a></span></span><div class="TopicContainer-content py-[2em] first-of-type:pt-0 ml-0 phone:ml-[1.8em] tablet:ml-[1.25em]"><section id="api-overview-regions" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">a. </span>Regions</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#api-overview-regions">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> API is available in the following AWS regions:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">us-east-1</code></li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">us-east-2</code></li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">us-west-2</code></li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">eu-west-1</code></li>
</ul><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The region for a workspace can be found in the API URL in the settings tab of the <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://dashboard.fragmetn.dev/go/s/workspace">dashboard</a>. Use the top-left dropdown in the dashboard to create a new workspace.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/contact">Contact us</a> if you don&#x27;t see your desired AWS region.</p></div></div></section><section id="api-overview-authentication" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">b. </span>Authentication</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#api-overview-authentication">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2"><span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> uses OAuth2&#x27;s <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://www.oauth.com/oauth2-servers/access-tokens/client-credentials/">client credentials flow</a> to authenticate API clients. The call requesting an access token follows the OAuth2 spec. Use an OAuth2 library that supports the client credentials grant to retrieve the token or make an HTTP request. The flow is:</p><ol data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2 ml-[1.875em] list-decimal list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Create an API client in the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://dashboard.fragment.dev/go/s/api-clients">dashboard</a>. API Clients have complete access to the workspace.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Note the auth endpoint URL and OAuth scope for the API Client. This is specific to the AWS region for a given workspace.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Get a fresh access token from the token endpoint. The access token expires in 1 hour. We recommend retrieving a new token for each set of calls needed to be made. Multiple tokens can be generated and use simultaneously.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">To use the token, add the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">Authorization</code> request header with the value <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">Bearer {{access_token}}</code> when calling the GraphQL API.</li>
</ol><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The token request payload should be in <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">x-www-form-urlencoded</code> format, with the keys <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">grant_type</code>, <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">scope</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">client_id</code>.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Token request body</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-text" style="white-space:pre">grant_type=client_credentials&amp;scope={{scope}}&amp;client_id={{client_id}}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The token request headers should contain the following items, where <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">client_credentials</code> is the Base64-encoded version of: <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">{{client_id}}:{client_secret}}</code>.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Token request headers</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
    &quot;Content-Type&quot;: &quot;application/x-www-form-urlencoded&quot;,
    &quot;Authorization&quot;: &quot;Basic {{client_credentials}}&quot;,
    &quot;Accept&quot;: &quot;*/*&quot;
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The response is a JSON object containing the access token.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Token response body</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
    &quot;access_token&quot;: &quot;&lt;access token&gt;&quot;,
    &quot;expires_in&quot;: 3600,
    &quot;token_type&quot;: &quot;Bearer&quot;
}
</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Putting it all together:</p><div class="pt-f2"><div class="relative flex min-w-f0"><div class="flex group-one bg-negative flex-col min-w-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div data-test-role="title" class="px-[1.25em] py-f2 flex flex-row flex-auto truncate hover:cursor-pointer group-two" role="button" tabindex="0"><div class="flex-initial"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Javascript </span></div><div class="pl-f2 group-two-hover:text-main group-one-hover:block transition-colors"><div class="hidden laptop:block"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-s20 no-underline leading-none text-inherit bg-inherit border-none">↓</span></div><div class="laptop:hidden"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-fnormal no-underline leading-none text-inherit bg-inherit border-none">↓</span></div></div></div><div class="py-f2 px-[1.25em] hover:cursor-pointer hidden group-one-hover:block"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 hover:text-main bg-inherit border-none">Show</span></div></div><div class="max-h-f20 flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-javascript" style="white-space:pre">import axios from &quot;axios&quot;;

const btoa = (str) =&gt; Buffer.from(str).toString(&quot;base64&quot;);

// credentials from the dashboard
const clientId = &quot;2h4t0cv7qv5c9r0qgs1o3erkuk&quot;;
const secret = &quot;superSecretClientSecret&quot;;
const scope = &quot;https://api.us-west-2.fragment.dev/*&quot;;
const authUrl = &quot;https://auth.us-west-2.fragment.dev/oauth2/token&quot;;

const getToken = async () =&gt; {

  // encode the client id and secret
  const auth = btoa(`${clientId}:${secret}`);

  // create the request body
  const data = new URLSearchParams();
  data.append(&quot;grant_type&quot;, &quot;client_credentials&quot;);
  data.append(&quot;scope&quot;, scope);
  data.append(&quot;client_id&quot;, clientId);

  // retrieve the token
  const response = await axios.request({
    method: &quot;POST&quot;,
    url: authUrl,
    headers: {
      &quot;Content-Type&quot;: &quot;application/x-www-form-urlencoded&quot;,
      Authorization: `Basic ${auth}`,
      Accept: &quot;*/*&quot;,
    },
    data,
  });

  if (!response.data.access_token) {
    throw new Error(
      &quot;didn&#x27;t get an access token from auth endpoint&quot;
    );
  }
  return response.data.access_token;
};
</code></pre></div></div><div class="absolute w-full left-f0 bottom-f0 min-h-f20 bg-gradient-to-b from-transparent to-negative"> <!-- --> </div></div></div></div></div></section><section id="api-overview-idempotency" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">c. </span>Idempotency</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#api-overview-idempotency">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To ensure write operations are executed exactly once, all write mutations in <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> are idempotent. This enables applications to safely retry operations without risk of duplicate effects. Applications only need to guarantee that the API is called at least once.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Mutations require a unique idempotency key (<code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ik</code>). For calls to <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">reconcileTx</code>, <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">syncCustomAccounts</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">syncCustomTxs</code>, <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> internally uses the transaction or account ID from the request as the idempotency key.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Additional requests with the same <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ik</code> are ignored and the original response is returned with <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">isIkReplay: true</code> in the response.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Idempotency keys are scoped per-Ledger; requests with the same <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">IK</code> to different Ledgers will execute the mutation and return <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">isIkReplay: false</code>.</p></div></div></section><section id="api-overview-errors" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">d. </span>Errors</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#api-overview-errors">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">According to the <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://spec.graphql.org/October2021/#sec-Response-Format">GraphQL spec</a>, all responses will return an object containing <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">data</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">errors</code>.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">data</code>: the result of a query or mutation. In the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> API, all successful mutations return a union type that represents an application error or a successful result.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">For example, the response type of the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">addLedgerEntry</code> mutation is:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">API Response Union Types</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">union AddLedgerEntryResponse =
    AddLedgerEntryResult | BadRequestError | InternalError</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Queries can return <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">null</code> if an error was raised during the request. This is accompanied by a non-empty <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">errors</code> list.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">errors</code>: a list of errors raised during the request. This typically gets populated when issuing a query if a required argument is missing or an invalid ID is provided.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">When calling the API, handle errors in the following order:</p><ol data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2 ml-[1.875em] list-decimal list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Handle retryable HTTP errors. These are 429 or 5XX.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Handle non-retryable HTTP errors such as other 4XX status codes. This typically happens if the query does not conform to the GraphQL spec, like omitting a required variable or selecting a nonexistent field. This class of error can be avoided by using a generated, typed SDK.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Handle <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">null</code> responses from queries by checking the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">errors</code> key. This typically happens when querying an item with an invalid ID.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Query the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">__typename</code> field. This contains <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">BadRequestError</code>, <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">InternalError</code> or the appropriate <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">&lt;Mutation&gt;Result</code> type.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Handle <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">InternalError</code> with retries and exponential backoff.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Handle <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">BadRequestError</code> by failing the operation.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Handle <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">&lt;Mutation&gt;Result</code> types such as <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">AddLedgerEntryResult</code>.</li>
</ol><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">An example of this written in TypeScript:</p><div class="pt-f2"><div class="relative flex min-w-f0"><div class="flex group-one bg-negative flex-col min-w-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div data-test-role="title" class="px-[1.25em] py-f2 flex flex-row flex-auto truncate hover:cursor-pointer group-two" role="button" tabindex="0"><div class="flex-initial"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Handling API Responses </span></div><div class="pl-f2 group-two-hover:text-main group-one-hover:block transition-colors"><div class="hidden laptop:block"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-s20 no-underline leading-none text-inherit bg-inherit border-none">↓</span></div><div class="laptop:hidden"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-fnormal no-underline leading-none text-inherit bg-inherit border-none">↓</span></div></div></div><div class="py-f2 px-[1.25em] hover:cursor-pointer hidden group-one-hover:block"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 hover:text-main bg-inherit border-none">Show</span></div></div><div class="max-h-f20 flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-typescript" style="white-space:pre">import assert from &#x27;assert&#x27;;

type RequestParams = {
  query: string;
  variables: Record&lt;string, unknown&gt;;
};

const makeRequest = async ({ query, variables }: RequestParams): Promise&lt;Response&gt; =&gt; {
  const token = await getToken();
  return fetch(&#x27;Fragment GraphQL URL&#x27;, {
    headers: {
      Authorization: `Bearer ${token}`,
      &#x27;Content-Type&#x27;: &#x27;application/json&#x27;,
    },
    body: JSON.stringify({ query, variables }),
  });
};

const query = &#x27;&#x27;&#x27;
  mutation addLedgerEntry($ik: SafeString, $entry: LedgerEntryInput!) {
    addLedgerEntry(ik: $ik, entry: $entry) {
      __typename
      ...
    }
  }
&#x27;&#x27;&#x27;;
const variables = { ik: &#x27;sample-ik&#x27;, entry: {...} };

const handleRequest = (req: Response) =&gt; {
  if (req.status === 429 || req.status &gt;= 500) {
    // Rate-limited or intermittent http failures. Retry the request.
    return handleRequest(await makeRequest({ query, variables }));
  }
  if ((req.status &gt;= 400 || req.status &lt; 500) &amp;&amp; req.status !== 429) {
    // Invalid GraphQL request provided to Fragment. Handle the error.
    throw new Error(&#x27;Invalid GraphQL request&#x27;);
  }

  // .json() checks that it was a 200
  const response = await req.json();
  if (response.data.addLedgerEntry.__typename === &#x27;InternalError&#x27;) {
    // Retry the request in case of internal errors, with backoff.
    return handleRequest(await makeRequest({ query, variables }));
  }
  if (response.data.addLedgerEntry.__typename === &#x27;BadRequestError&#x27;) {
    // Invalid request provided to Fragment. Handle the error.
    throw new Error(&#x27;Invalid API request to Fragment&#x27;);
  }
  return response;
};

const response = handleRequest(await makeRequest({ query, variables }));
// Entry successfully posted to Fragment. Handle the response.
assert(response.data.addLedgerEntry.__typename === &#x27;AddLedgerEntryResult&#x27;);
handlePostedEntry(response.data.addLedgerEntry);
</code></pre></div></div><div class="absolute w-full left-f0 bottom-f0 min-h-f20 bg-gradient-to-b from-transparent to-negative"> <!-- --> </div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To test how your application handles errors, use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">X-Fragment-Return-Error</code> request header to instruct the API to return erroneous responses.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Set the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">X-Fragment-Return-Error</code> header to:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">internalError</code> to instruct the API to return an <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">InternalError</code></li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">badRequestError</code> to instruct the API to return a <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">BadRequestError</code></li>
</ul><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">When requesting an erroneous response, <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> will skip processing your request and return the error immediately.</p></div></div></section></div></section>
<section id="queries" class="first:0 pt-f6 tablet:pt-f3 pb-[2em] scroll-mt-[90px]"><span class="TopicContainer-title group-one text-s20 tablet:text-fnormal laptop:text-s20 block mb-[1em] "><span class="text-main-500">B<!-- --> </span>API Queries<span class="pl-[0.5em] phone:invisible phone:group-one-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#queries">#</a></span></span><div class="TopicContainer-content py-[2em] first-of-type:pt-0 ml-0 phone:ml-[1.8em] tablet:ml-[1.25em]"><section id="queries-customcurrencies" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">customCurrencies</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#queries-customcurrencies">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Query Custom Currencies in the workspace</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns a  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-customcurrenciesconnection">CustomCurrenciesConnection!</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query CustomCurrencies(
  $after: String,
  $before: String,
  $first: Int,
  $last: Int
) {
  customCurrencies(
    after: $after,
    before: $before,
    first: $first,
    last: $last
  ) {
    nodes {
      ...CurrencyFragment
    }
    pageInfo {
      ...PageInfoFragment
    }
  }
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;after&quot;: &quot;abc123&quot;, &quot;before&quot;: &quot;abc123&quot;, &quot;first&quot;: 2277, &quot;last&quot;: 2277}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;customCurrencies&quot;: {
      &quot;nodes&quot;: [Currency],
      &quot;pageInfo&quot;: PageInfo
    }
  }
}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">after  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>  . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">before  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>  . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">first  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The number of currencies to return per page, when paginating forwards. Defaults to 20, maximum is 200. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">last  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The number of currencies to return per page, when paginating backwards. Defaults to 20, maximum is 200. </td></tr></tbody></table></div></div></div></section><section id="queries-externalaccount" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">externalAccount</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#queries-externalaccount">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Get External Account by Link and External ID or <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  ID.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns an  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-externalaccount">ExternalAccount</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query ExternalAccount($externalAccount: ExternalAccountMatchInput!) {
  externalAccount(externalAccount: $externalAccount) {
    currency {
      ...CurrencyFragment
    }
    currencyMode
    externalId
    id
    ledgerAccounts {
      ...LedgerAccountsConnectionFragment
    }
    link {
      ...LinkFragment
    }
    linkId
    name
    txs {
      ...TxsConnectionFragment
    }
  }
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;externalAccount&quot;: ExternalAccountMatchInput}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;externalAccount&quot;: {
      &quot;currency&quot;: Currency,
      &quot;currencyMode&quot;: &quot;multi&quot;,
      &quot;externalId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
      &quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
      &quot;ledgerAccounts&quot;: LedgerAccountsConnection,
      &quot;link&quot;: Link,
      &quot;linkId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
      &quot;name&quot;: &quot;abc123&quot;,
      &quot;txs&quot;: TxsConnection
    }
  }
}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">externalAccount  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-externalaccountmatchinput">ExternalAccountMatchInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div></div></div></section><section id="queries-ledger" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">ledger</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#queries-ledger">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Get a Ledger by ID</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns a  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledger">Ledger</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query Ledger($ledger: LedgerMatchInput!) {
  ledger(ledger: $ledger) {
    balanceUTCOffset
    created
    dashboardUrl
    id
    ik
    ledgerAccounts {
      ...LedgerAccountsConnectionFragment
    }
    ledgerEntries {
      ...LedgerEntriesConnectionFragment
    }
    ledgerEntryGroup {
      ...LedgerEntryGroupFragment
    }
    ledgerEntryGroups {
      ...LedgerEntryGroupsConnectionFragment
    }
    migrations {
      ...LedgerMigrationConnectionFragment
    }
    name
    schema {
      ...SchemaFragment
    }
    type
    workspaceId
  }
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;ledger&quot;: LedgerMatchInput}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;ledger&quot;: {
      &quot;balanceUTCOffset&quot;: &quot;-08:00&quot;,
      &quot;created&quot;: &quot;2007-12-03T10:15:30Z&quot;,
      &quot;dashboardUrl&quot;: &quot;abc123&quot;,
      &quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
      &quot;ik&quot;: &quot;some-safe-string-ik&quot;,
      &quot;ledgerAccounts&quot;: LedgerAccountsConnection,
      &quot;ledgerEntries&quot;: LedgerEntriesConnection,
      &quot;ledgerEntryGroup&quot;: LedgerEntryGroup,
      &quot;ledgerEntryGroups&quot;: LedgerEntryGroupsConnection,
      &quot;migrations&quot;: LedgerMigrationConnection,
      &quot;name&quot;: &quot;abc123&quot;,
      &quot;schema&quot;: Schema,
      &quot;type&quot;: &quot;double&quot;,
      &quot;workspaceId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;
    }
  }
}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledger  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-ledgermatchinput">LedgerMatchInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">An object specifying the ID of the ledger you want to query </td></tr></tbody></table></div></div></div></section><section id="queries-ledgeraccount" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">ledgerAccount</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#queries-ledgeraccount">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Get a Ledger Account by ID</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns a  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledgeraccount">LedgerAccount</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query LedgerAccount($ledgerAccount: LedgerAccountMatchInput!) {
  ledgerAccount(ledgerAccount: $ledgerAccount) {
    balance
    balanceChange
    balanceChanges {
      ...CurrencyAmountConnectionFragment
    }
    balances {
      ...CurrencyAmountConnectionFragment
    }
    childBalance
    childBalanceChange
    childBalanceChanges {
      ...CurrencyAmountConnectionFragment
    }
    childBalances {
      ...CurrencyAmountConnectionFragment
    }
    childLedgerAccounts {
      ...LedgerAccountsConnectionFragment
    }
    consistencyConfig {
      ...LedgerAccountConsistencyConfigFragment
    }
    created
    currency {
      ...CurrencyFragment
    }
    currencyMode
    dashboardUrl
    id
    ik
    ledger {
      ...LedgerFragment
    }
    ledgerId
    lines {
      ...LedgerLinesConnectionFragment
    }
    link {
      ...LinkFragment
    }
    linkedAccount {
      ...ExternalAccountFragment
    }
    name
    ownBalance
    ownBalanceChange
    ownBalanceChanges {
      ...CurrencyAmountConnectionFragment
    }
    ownBalances {
      ...CurrencyAmountConnectionFragment
    }
    parentLedgerAccount {
      ...LedgerAccountFragment
    }
    parentLedgerAccountId
    path
    type
    unreconciledTxs {
      ...TxsConnectionFragment
    }
    workspaceId
  }
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;ledgerAccount&quot;: LedgerAccountMatchInput}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;ledgerAccount&quot;: {
      &quot;balance&quot;: &quot;999999999999&quot;,
      &quot;balanceChange&quot;: &quot;999999999999&quot;,
      &quot;balanceChanges&quot;: CurrencyAmountConnection,
      &quot;balances&quot;: CurrencyAmountConnection,
      &quot;childBalance&quot;: &quot;999999999999&quot;,
      &quot;childBalanceChange&quot;: &quot;999999999999&quot;,
      &quot;childBalanceChanges&quot;: CurrencyAmountConnection,
      &quot;childBalances&quot;: CurrencyAmountConnection,
      &quot;childLedgerAccounts&quot;: LedgerAccountsConnection,
      &quot;consistencyConfig&quot;: LedgerAccountConsistencyConfig,
      &quot;created&quot;: &quot;2007-12-03T10:15:30Z&quot;,
      &quot;currency&quot;: Currency,
      &quot;currencyMode&quot;: &quot;multi&quot;,
      &quot;dashboardUrl&quot;: &quot;abc123&quot;,
      &quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
      &quot;ik&quot;: &quot;abc123&quot;,
      &quot;ledger&quot;: Ledger,
      &quot;ledgerId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
      &quot;lines&quot;: LedgerLinesConnection,
      &quot;link&quot;: Link,
      &quot;linkedAccount&quot;: ExternalAccount,
      &quot;name&quot;: &quot;abc123&quot;,
      &quot;ownBalance&quot;: &quot;999999999999&quot;,
      &quot;ownBalanceChange&quot;: &quot;999999999999&quot;,
      &quot;ownBalanceChanges&quot;: CurrencyAmountConnection,
      &quot;ownBalances&quot;: CurrencyAmountConnection,
      &quot;parentLedgerAccount&quot;: LedgerAccount,
      &quot;parentLedgerAccountId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
      &quot;path&quot;: &quot;abc123&quot;,
      &quot;type&quot;: &quot;asset&quot;,
      &quot;unreconciledTxs&quot;: TxsConnection,
      &quot;workspaceId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;
    }
  }
}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerAccount  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-ledgeraccountmatchinput">LedgerAccountMatchInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">An object specifying the ID of the ledger account you want to query </td></tr></tbody></table></div></div></div></section><section id="queries-ledgerentry" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">ledgerEntry</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#queries-ledgerentry">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Get Ledger Entry by ID.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns a  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledgerentry">LedgerEntry</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query LedgerEntry($ledgerEntry: LedgerEntryMatchInput!) {
  ledgerEntry(ledgerEntry: $ledgerEntry) {
    conditions {
      ...LedgerEntryConditionFragment
    }
    created
    dashboardUrl
    date
    description
    groups {
      ...LedgerEntryGroupFragment
    }
    id
    ik
    ledger {
      ...LedgerFragment
    }
    ledgerId
    lines {
      ...LedgerLinesConnectionFragment
    }
    posted
    tags {
      ...LedgerEntryTagFragment
    }
    type
    workspaceId
  }
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;ledgerEntry&quot;: LedgerEntryMatchInput}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;ledgerEntry&quot;: {
      &quot;conditions&quot;: [LedgerEntryCondition],
      &quot;created&quot;: &quot;2007-12-03T10:15:30Z&quot;,
      &quot;dashboardUrl&quot;: &quot;abc123&quot;,
      &quot;date&quot;: &quot;2022-03-28&quot;,
      &quot;description&quot;: &quot;abc123&quot;,
      &quot;groups&quot;: [LedgerEntryGroup],
      &quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
      &quot;ik&quot;: &quot;abc123&quot;,
      &quot;ledger&quot;: Ledger,
      &quot;ledgerId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
      &quot;lines&quot;: LedgerLinesConnection,
      &quot;posted&quot;: &quot;2007-12-03T10:15:30Z&quot;,
      &quot;tags&quot;: [LedgerEntryTag],
      &quot;type&quot;: &quot;some-safe-string-ik&quot;,
      &quot;workspaceId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;
    }
  }
}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerEntry  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-ledgerentrymatchinput">LedgerEntryMatchInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">An object specifying the ID of the Ledger Entry you want to query. </td></tr></tbody></table></div></div></div></section><section id="queries-ledgerentrygroup" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">ledgerEntryGroup</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#queries-ledgerentrygroup">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Query a Ledger Entry Group given its Ledger, key, and value.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns a  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-ledgerentrygroup">LedgerEntryGroup</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query LedgerEntryGroup($ledgerEntryGroup: LedgerEntryGroupMatchInput!) {
  ledgerEntryGroup(ledgerEntryGroup: $ledgerEntryGroup) {
    balances {
      ...LedgerEntryGroupBalanceConnectionFragment
    }
    created
    dashboardUrl
    key
    ledgerEntries {
      ...LedgerEntriesConnectionFragment
    }
    value
  }
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;ledgerEntryGroup&quot;: LedgerEntryGroupMatchInput}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;ledgerEntryGroup&quot;: {
      &quot;balances&quot;: LedgerEntryGroupBalanceConnection,
      &quot;created&quot;: &quot;2007-12-03T10:15:30Z&quot;,
      &quot;dashboardUrl&quot;: &quot;abc123&quot;,
      &quot;key&quot;: &quot;some-safe-string-ik&quot;,
      &quot;ledgerEntries&quot;: LedgerEntriesConnection,
      &quot;value&quot;: &quot;some-safe-string-ik&quot;
    }
  }
}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerEntryGroup  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-ledgerentrygroupmatchinput">LedgerEntryGroupMatchInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div></div></div></section><section id="queries-ledgerline" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">ledgerLine</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#queries-ledgerline">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Get LedgerLine by ID</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns a  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledgerline">LedgerLine</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query LedgerLine($ledgerLine: LedgerLineMatchInput!) {
  ledgerLine(ledgerLine: $ledgerLine) {
    account {
      ...LedgerAccountFragment
    }
    accountId
    amount
    created
    currency {
      ...CurrencyFragment
    }
    date
    description
    externalTransferId
    externalTransferType
    externalTxId
    id
    key
    ledger {
      ...LedgerFragment
    }
    ledgerEntry {
      ...LedgerEntryFragment
    }
    ledgerEntryId
    ledgerId
    otherTxExternalAccountExternalId
    otherTxExternalAccountId
    otherTxExternalId
    otherTxId
    posted
    tx {
      ...TxFragment
    }
    txId
    type
    workspaceId
  }
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;ledgerLine&quot;: LedgerLineMatchInput}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;ledgerLine&quot;: {
      &quot;account&quot;: LedgerAccount,
      &quot;accountId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
      &quot;amount&quot;: &quot;999999999999&quot;,
      &quot;created&quot;: &quot;2007-12-03T10:15:30Z&quot;,
      &quot;currency&quot;: Currency,
      &quot;date&quot;: &quot;2022-03-28&quot;,
      &quot;description&quot;: &quot;abc123&quot;,
      &quot;externalTransferId&quot;: &quot;abc123&quot;,
      &quot;externalTransferType&quot;: &quot;ach&quot;,
      &quot;externalTxId&quot;: &quot;abc123&quot;,
      &quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
      &quot;key&quot;: &quot;abc123&quot;,
      &quot;ledger&quot;: Ledger,
      &quot;ledgerEntry&quot;: LedgerEntry,
      &quot;ledgerEntryId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
      &quot;ledgerId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
      &quot;otherTxExternalAccountExternalId&quot;: &quot;abc123&quot;,
      &quot;otherTxExternalAccountId&quot;: &quot;abc123&quot;,
      &quot;otherTxExternalId&quot;: &quot;abc123&quot;,
      &quot;otherTxId&quot;: &quot;abc123&quot;,
      &quot;posted&quot;: &quot;2007-12-03T10:15:30Z&quot;,
      &quot;tx&quot;: Tx,
      &quot;txId&quot;: &quot;abc123&quot;,
      &quot;type&quot;: &quot;credit&quot;,
      &quot;workspaceId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;
    }
  }
}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerLine  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-ledgerlinematchinput">LedgerLineMatchInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">An object specifying the ID of the LedgerLine you want to query </td></tr></tbody></table></div></div></div></section><section id="queries-ledgers" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">ledgers</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#queries-ledgers">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Query Ledgers in workspace. Ledgers are paginated and returned in reverse-chronological order by their created date.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns a  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-ledgersconnection">LedgersConnection!</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query Ledgers(
  $after: String,
  $before: String,
  $filter: LedgersFilterSet,
  $first: Int,
  $last: Int
) {
  ledgers(
    after: $after,
    before: $before,
    filter: $filter,
    first: $first,
    last: $last
  ) {
    nodes {
      ...LedgerFragment
    }
    pageInfo {
      ...PageInfoFragment
    }
  }
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;after&quot;: &quot;abc123&quot;,
  &quot;before&quot;: &quot;abc123&quot;,
  &quot;filter&quot;: LedgersFilterSet,
  &quot;first&quot;: 2277,
  &quot;last&quot;: 2277
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;ledgers&quot;: {
      &quot;nodes&quot;: [Ledger],
      &quot;pageInfo&quot;: PageInfo
    }
  }
}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">after  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>  . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">before  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>  . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">filter  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-ledgersfilterset">LedgersFilterSet</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Filter the Ledgers returned. Learn more about  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-ledgers">querying Ledgers</a>  . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">first  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The number of Ledgers to return per page, when paginating forwards. Defaults to 20, maximum is 200. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">last  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The number of Ledgers to return per page, when paginating backwards. Defaults to 20, maximum is 200. </td></tr></tbody></table></div></div></div></section><section id="queries-link" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">link</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#queries-link">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Get a Link by ID. Returns a BadRequestError if the Link is not found.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns a  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-link">Link</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query Link($link: LinkMatchInput!) {
  link(link: $link) {
    created
    dashboardUrl
    externalAccounts {
      ...ExternalAccountsConnectionFragment
    }
    id
    name
  }
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;link&quot;: LinkMatchInput}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;link&quot;: {
      &quot;created&quot;: &quot;abc123&quot;,
      &quot;dashboardUrl&quot;: &quot;abc123&quot;,
      &quot;externalAccounts&quot;: ExternalAccountsConnection,
      &quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
      &quot;name&quot;: &quot;abc123&quot;
    }
  }
}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">link  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-linkmatchinput">LinkMatchInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">An object containing the ID of the Link you are querying </td></tr></tbody></table></div></div></div></section><section id="queries-links" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">links</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#queries-links">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Get all links in a workspace</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns a  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-linksconnection">LinksConnection!</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query Links {
  links {
    nodes {
      ...LinkFragment
    }
    pageInfo {
      ...PageInfoFragment
    }
  }
}
</code></pre></div></div></div><br/><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;links&quot;: {
      &quot;nodes&quot;: [Link],
      &quot;pageInfo&quot;: PageInfo
    }
  }
}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span></div></div></section><section id="queries-schema" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">schema</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#queries-schema">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Get a Schema by key.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns a  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-schema">Schema</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query Schema($schema: SchemaMatchInput!) {
  schema(schema: $schema) {
    key
    ledgers {
      ...LedgersConnectionFragment
    }
    name
    version {
      ...SchemaVersionFragment
    }
    versions {
      ...SchemaVersionConnectionFragment
    }
  }
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;schema&quot;: SchemaMatchInput}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;schema&quot;: {
      &quot;key&quot;: &quot;some-safe-string-ik&quot;,
      &quot;ledgers&quot;: LedgersConnection,
      &quot;name&quot;: &quot;abc123&quot;,
      &quot;version&quot;: SchemaVersion,
      &quot;versions&quot;: SchemaVersionConnection
    }
  }
}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">schema  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-schemamatchinput">SchemaMatchInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">This contains the key of the Schema you want to retrieve. </td></tr></tbody></table></div></div></div></section><section id="queries-schemas" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">schemas</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#queries-schemas">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Retrieve all of the Schemas in the workspace.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns a  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-schemaconnection">SchemaConnection!</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query Schemas(
  $after: String,
  $before: String,
  $first: Int,
  $last: Int
) {
  schemas(
    after: $after,
    before: $before,
    first: $first,
    last: $last
  ) {
    nodes {
      ...SchemaFragment
    }
    pageInfo {
      ...PageInfoFragment
    }
  }
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;after&quot;: &quot;abc123&quot;, &quot;before&quot;: &quot;abc123&quot;, &quot;first&quot;: 2277, &quot;last&quot;: 2277}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;schemas&quot;: {
      &quot;nodes&quot;: [Schema],
      &quot;pageInfo&quot;: PageInfo
    }
  }
}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">after  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>  . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">before  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>  . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">first  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The number of schemas to return per page, when paginating forwards. Defaults to 20, maximum is 200. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">last  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The number of schemas to return per page, when paginating backwards. Defaults to 20, maximum is 200. </td></tr></tbody></table></div></div></div></section><section id="queries-tx" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">tx</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#queries-tx">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Get a Tx by ID</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns a  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-tx">Tx</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query Tx($tx: TxMatchInput!) {
  tx(tx: $tx) {
    accountId
    amount
    currency {
      ...CurrencyFragment
    }
    date
    description
    externalAccount {
      ...ExternalAccountFragment
    }
    externalAccountId
    externalId
    id
    ledgerEntries {
      ...LedgerEntriesConnectionFragment
    }
    ledgerEntryIds
    ledgerLineIds
    ledgerLines {
      ...LedgerLinesConnectionFragment
    }
    link {
      ...LinkFragment
    }
    linkId
    posted
    workspaceId
  }
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;tx&quot;: TxMatchInput}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;tx&quot;: {
      &quot;accountId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
      &quot;amount&quot;: &quot;999999999999&quot;,
      &quot;currency&quot;: Currency,
      &quot;date&quot;: &quot;2022-03-28&quot;,
      &quot;description&quot;: &quot;abc123&quot;,
      &quot;externalAccount&quot;: ExternalAccount,
      &quot;externalAccountId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
      &quot;externalId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
      &quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
      &quot;ledgerEntries&quot;: LedgerEntriesConnection,
      &quot;ledgerEntryIds&quot;: [&quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;],
      &quot;ledgerLineIds&quot;: [&quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;],
      &quot;ledgerLines&quot;: LedgerLinesConnection,
      &quot;link&quot;: Link,
      &quot;linkId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
      &quot;posted&quot;: &quot;2007-12-03T10:15:30Z&quot;,
      &quot;workspaceId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;
    }
  }
}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">tx  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-txmatchinput">TxMatchInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The transaction you&#x27;re querying. You can specify either:  *   The <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  ID of the transaction (id) *   The external system&#x27;s transaction ID (externalId) and <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  ID of the external account (accountId) *   The external system&#x27;s transaction ID (externalId), the external system&#x27;s account ID (externalAccountId) and <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  ID of the Link (linkId) </td></tr></tbody></table></div></div></div></section><section id="queries-workspace" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">workspace</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#queries-workspace">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Get the current Workspace</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns a  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-workspace">Workspace!</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query Workspace {
  workspace {
    id
    name
  }
}
</code></pre></div></div></div><br/><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;data&quot;: {&quot;workspace&quot;: {&quot;id&quot;: &quot;abc123&quot;, &quot;name&quot;: &quot;abc123&quot;}}}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span></div></div></section></div></section>
<section id="mutations" class="first:0 pt-f6 tablet:pt-f3 pb-[2em] scroll-mt-[90px]"><span class="TopicContainer-title group-one text-s20 tablet:text-fnormal laptop:text-s20 block mb-[1em] "><span class="text-main-500">C<!-- --> </span>API Mutations<span class="pl-[0.5em] phone:invisible phone:group-one-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#mutations">#</a></span></span><div class="TopicContainer-content py-[2em] first-of-type:pt-0 ml-0 phone:ml-[1.8em] tablet:ml-[1.25em]"><section id="mutations-addledgerentry" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">addLedgerEntry</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#mutations-addledgerentry">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Adds a Ledger Entry to a Ledger. This Ledger Entry cannot be into a Linked Ledger Account. For that, use <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#mutations-reconciletx">reconcileTx</a></p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns an  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-response-types-addledgerentryresponse">AddLedgerEntryResponse!</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation AddLedgerEntry(
  $entry: LedgerEntryInput!,
  $ik: SafeString!
) {
  addLedgerEntry(
    entry: $entry,
    ik: $ik
  ) {
    ... on AddLedgerEntryResult {
      ...AddLedgerEntryResultFragment
    }
    ... on BadRequestError {
      ...BadRequestErrorFragment
    }
    ... on InternalError {
      ...InternalErrorFragment
    }
  }
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;entry&quot;: LedgerEntryInput, &quot;ik&quot;: &quot;some-safe-string-ik&quot;}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;data&quot;: {&quot;addLedgerEntry&quot;: AddLedgerEntryResult}}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">entry  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-ledgerentryinput">LedgerEntryInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">An object containing the  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#types-input-types-ledgerlineinput">Ledger Lines</a>  as well as an optional description and posted timestamp. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ik  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#api-overview-idempotency">Idempotency Key</a> </td></tr></tbody></table></div></div></div></section><section id="mutations-createcustomcurrency" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">createCustomCurrency</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#mutations-createcustomcurrency">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Creates a custom currency.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns a  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-response-types-createcustomcurrencyresponse">CreateCustomCurrencyResponse!</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation CreateCustomCurrency($customCurrency: CreateCustomCurrencyInput!) {
  createCustomCurrency(customCurrency: $customCurrency) {
    ... on BadRequestError {
      ...BadRequestErrorFragment
    }
    ... on CreateCustomCurrencyResult {
      ...CreateCustomCurrencyResultFragment
    }
    ... on InternalError {
      ...InternalErrorFragment
    }
  }
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;customCurrency&quot;: CreateCustomCurrencyInput}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;data&quot;: {&quot;createCustomCurrency&quot;: BadRequestError}}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">customCurrency  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-createcustomcurrencyinput">CreateCustomCurrencyInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The custom currency to be created. </td></tr></tbody></table></div></div></div></section><section id="mutations-createcustomlink" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">createCustomLink</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#mutations-createcustomlink">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Custom Links let you integrate external systems that don&#x27;t have native support. See <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#reconcile-transactions-link-any-system">Custom Links</a></p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns a  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-response-types-createcustomlinkresponse">CreateCustomLinkResponse!</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation CreateCustomLink(
  $ik: SafeString!,
  $name: String!
) {
  createCustomLink(
    ik: $ik,
    name: $name
  ) {
    ... on BadRequestError {
      ...BadRequestErrorFragment
    }
    ... on CreateCustomLinkResult {
      ...CreateCustomLinkResultFragment
    }
    ... on InternalError {
      ...InternalErrorFragment
    }
  }
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;ik&quot;: &quot;some-safe-string-ik&quot;, &quot;name&quot;: &quot;abc123&quot;}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;data&quot;: {&quot;createCustomLink&quot;: BadRequestError}}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ik  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#api-overview-idempotency">Idempotency Key</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">name  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The name of your custom link </td></tr></tbody></table></div></div></div></section><section id="mutations-createledger" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">createLedger</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#mutations-createledger">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Creates a Ledger.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns a  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-response-types-createledgerresponse">CreateLedgerResponse!</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation CreateLedger(
  $ik: SafeString!,
  $ledger: CreateLedgerInput!,
  $schema: SchemaMatchInput
) {
  createLedger(
    ik: $ik,
    ledger: $ledger,
    schema: $schema
  ) {
    ... on BadRequestError {
      ...BadRequestErrorFragment
    }
    ... on CreateLedgerResult {
      ...CreateLedgerResultFragment
    }
    ... on InternalError {
      ...InternalErrorFragment
    }
  }
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ik&quot;: &quot;some-safe-string-ik&quot;,
  &quot;ledger&quot;: CreateLedgerInput,
  &quot;schema&quot;: SchemaMatchInput
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;data&quot;: {&quot;createLedger&quot;: BadRequestError}}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ik  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#api-overview-idempotency">Idempotency Key</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledger  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-createledgerinput">CreateLedgerInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The payload representing the Ledger to be created </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">schema  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-schemamatchinput">SchemaMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Schema to create this Ledger with </td></tr></tbody></table></div></div></div></section><section id="mutations-reconciletx" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">reconcileTx</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#mutations-reconciletx">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">This mutation is used to <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#reconcile-transactions">reconcile</a> transactions from an external system into a Ledger Entry. This mutation does not require an idempotency key since a transaction can only be reconciled once per Linked Ledger Account. If you are reconciling a transfer between two Link Accounts which are both linked to the same Ledger, use a transit account in between to split the transfer into two reconcileTx calls.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns a  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-response-types-reconciletxresponse">ReconcileTxResponse!</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation ReconcileTx($entry: LedgerEntryInput!) {
  reconcileTx(entry: $entry) {
    ... on BadRequestError {
      ...BadRequestErrorFragment
    }
    ... on InternalError {
      ...InternalErrorFragment
    }
    ... on ReconcileTxResult {
      ...ReconcileTxResultFragment
    }
  }
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;entry&quot;: LedgerEntryInput}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;data&quot;: {&quot;reconcileTx&quot;: BadRequestError}}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">entry  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-ledgerentryinput">LedgerEntryInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The ledger entry containing lines that specify the transaction from a linked ledger account to reconcile, as well as the ledger account with which to offset the external transaction. </td></tr></tbody></table></div></div></div></section><section id="mutations-storeschema" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">storeSchema</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#mutations-storeschema">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Stores a Schema in your workspace. If no Schema with the same key exists in your worksapce, a new Schema is created. Else, the Schema is updated, and every Ledger associated with it is migrated to the latest version.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns a  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-response-types-storeschemaresponse">StoreSchemaResponse!</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation StoreSchema($schema: SchemaInput!) {
  storeSchema(schema: $schema) {
    ... on BadRequestError {
      ...BadRequestErrorFragment
    }
    ... on InternalError {
      ...InternalErrorFragment
    }
    ... on StoreSchemaResult {
      ...StoreSchemaResultFragment
    }
  }
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;schema&quot;: SchemaInput}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;data&quot;: {&quot;storeSchema&quot;: BadRequestError}}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">schema  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-schemainput">SchemaInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Schema to store. </td></tr></tbody></table></div></div></div></section><section id="mutations-synccustomaccounts" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">syncCustomAccounts</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#mutations-synccustomaccounts">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Once you&#x27;ve created a <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#reconcile-transactions-link-any-system">Custom Link</a>, create accounts under it using this mutation. Each Custom Account is an immutable, single-entry view of all the transactions in the external account. You can sync up to 100 Custom Accounts in one API call.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns a  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-response-types-synccustomaccountsresponse">SyncCustomAccountsResponse!</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation SyncCustomAccounts(
  $accounts: [CustomAccountInput!]!,
  $link: LinkMatchInput!
) {
  syncCustomAccounts(
    accounts: $accounts,
    link: $link
  ) {
    ... on BadRequestError {
      ...BadRequestErrorFragment
    }
    ... on InternalError {
      ...InternalErrorFragment
    }
    ... on SyncCustomAccountsResult {
      ...SyncCustomAccountsResultFragment
    }
  }
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;accounts&quot;: [CustomAccountInput],
  &quot;link&quot;: LinkMatchInput
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;data&quot;: {&quot;syncCustomAccounts&quot;: BadRequestError}}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">accounts  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-customaccountinput">[CustomAccountInput!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A list of external accounts to sync </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">link  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-linkmatchinput">LinkMatchInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">An object containing the ID of a Custom Link. </td></tr></tbody></table></div></div></div></section><section id="mutations-synccustomtxs" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">syncCustomTxs</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#mutations-synccustomtxs">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can create transactions under a Custom Account in a <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#reconcile-transactions-link-any-system">Custom Link</a> using this mutation. Once you&#x27;ve imported transactions, you can use the reconcileTx mutation to add them to a Ledger via the Linked Ledger Account. You can sync up to 100 Custom Transactions in one API call.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns a  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-response-types-synccustomtxsresponse">SyncCustomTxsResponse!</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation SyncCustomTxs(
  $link: LinkMatchInput!,
  $txs: [CustomTxInput!]!
) {
  syncCustomTxs(
    link: $link,
    txs: $txs
  ) {
    ... on BadRequestError {
      ...BadRequestErrorFragment
    }
    ... on InternalError {
      ...InternalErrorFragment
    }
    ... on SyncCustomTxsResult {
      ...SyncCustomTxsResultFragment
    }
  }
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;link&quot;: LinkMatchInput,
  &quot;txs&quot;: [CustomTxInput]
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;data&quot;: {&quot;syncCustomTxs&quot;: BadRequestError}}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">link  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-linkmatchinput">LinkMatchInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">An object containing the ID of a Custom Link. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">txs  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-customtxinput">[CustomTxInput!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A list of external transactions to sync </td></tr></tbody></table></div></div></div></section><section id="mutations-updateledger" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">updateLedger</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#mutations-updateledger">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Updates a Ledger. Currently, you can change only the Ledger &#x27;name&#x27;.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns an  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-response-types-updateledgerresponse">UpdateLedgerResponse!</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation UpdateLedger(
  $ledger: LedgerMatchInput!,
  $update: UpdateLedgerInput!
) {
  updateLedger(
    ledger: $ledger,
    update: $update
  ) {
    ... on BadRequestError {
      ...BadRequestErrorFragment
    }
    ... on InternalError {
      ...InternalErrorFragment
    }
    ... on UpdateLedgerResult {
      ...UpdateLedgerResultFragment
    }
  }
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledger&quot;: LedgerMatchInput,
  &quot;update&quot;: UpdateLedgerInput
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;data&quot;: {&quot;updateLedger&quot;: BadRequestError}}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledger  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-ledgermatchinput">LedgerMatchInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">An object containing the ID of the Ledger to update. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">update  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-updateledgerinput">UpdateLedgerInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A payload of fields to update. Currently, you can change only the Ledger &#x27;name&#x27;. </td></tr></tbody></table></div></div></div></section><section id="mutations-updateledgerentry" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">updateLedgerEntry</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#mutations-updateledgerentry">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Update a ledger entry</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Response</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returns an  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-response-types-updateledgerentryresponse">UpdateLedgerEntryResponse!</a></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation UpdateLedgerEntry(
  $ledgerEntry: LedgerEntryMatchInput!,
  $update: UpdateLedgerEntryInput!
) {
  updateLedgerEntry(
    ledgerEntry: $ledgerEntry,
    update: $update
  ) {
    ... on BadRequestError {
      ...BadRequestErrorFragment
    }
    ... on InternalError {
      ...InternalErrorFragment
    }
    ... on UpdateLedgerEntryResult {
      ...UpdateLedgerEntryResultFragment
    }
  }
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerEntry&quot;: LedgerEntryMatchInput,
  &quot;update&quot;: UpdateLedgerEntryInput
}
</code></pre></div></div></div><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;data&quot;: {&quot;updateLedgerEntry&quot;: BadRequestError}}
</code></pre></div></div></div><br/><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Arguments</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerEntry  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-ledgerentrymatchinput">LedgerEntryMatchInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Ledger Entry that is being updated </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">update  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-updateledgerentryinput">UpdateLedgerEntryInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The payload containing the fields to update. Only a Ledger Entry&#x27;s tags can be updated. </td></tr></tbody></table></div></div></div></section></div></section>
<section id="types" class="first:0 pt-f6 tablet:pt-f3 pb-[2em] scroll-mt-[90px]"><span class="TopicContainer-title group-one text-s20 tablet:text-fnormal laptop:text-s20 block mb-[1em] "><span class="text-main-500">D<!-- --> </span>API Types<span class="pl-[0.5em] phone:invisible phone:group-one-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types">#</a></span></span><div class="TopicContainer-content py-[2em] first-of-type:pt-0 ml-0 phone:ml-[1.8em] tablet:ml-[1.25em]"><section id="types-core-types" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block">Core Types</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-core-types">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><br/><section id="types-core-types-externalaccount" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">ExternalAccount</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-core-types-externalaccount">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;currency&quot;: Currency,
  &quot;currencyMode&quot;: &quot;multi&quot;,
  &quot;externalId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;ledgerAccounts&quot;: LedgerAccountsConnection,
  &quot;link&quot;: Link,
  &quot;linkId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;name&quot;: &quot;abc123&quot;,
  &quot;txs&quot;: TxsConnection
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currency  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-currency">Currency</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The currency of this external account. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currencyMode  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-currencymode">CurrencyMode!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Indicates if the account allows multiple currencies or is restricted to a single currency </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">externalId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ID used for the external account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">id  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"> <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> ID of External Account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerAccounts  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-ledgeraccountsconnection">LedgerAccountsConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Ledger Accounts linked to this External Account. Ledger Accounts are paginated and sorted in reverse-chronological order by created date. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>after - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>before - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>first - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of Ledger Accounts to return per page, when paginating forwards. Defaults to 20, maximum is 200.<br/><br/>last - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of Ledger Accounts to return per page, when paginating backwards. Defaults to 20, maximum is 200.<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">link  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-link">Link!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Link that this External Account belongs to. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">linkId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"> <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> ID of this transaction&#x27;s external link </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">name  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">txs  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-txsconnection">TxsConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">All Txs in this External Account. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>after - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>before - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>first - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of transactions to return per page, when paginating forwards. Defaults to 20, maximum is 200.<br/><br/>last - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of transactions to return per page, when paginating backwards. Defaults to 20, maximum is 200.<br/></td></tr></tbody></table></div><br/></div></section><section id="types-core-types-ledger" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Ledger</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-core-types-ledger">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Ledgers are databases designed for managing money</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;balanceUTCOffset&quot;: &quot;-08:00&quot;,
  &quot;created&quot;: &quot;2007-12-03T10:15:30Z&quot;,
  &quot;dashboardUrl&quot;: &quot;abc123&quot;,
  &quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;ik&quot;: &quot;some-safe-string-ik&quot;,
  &quot;ledgerAccounts&quot;: LedgerAccountsConnection,
  &quot;ledgerEntries&quot;: LedgerEntriesConnection,
  &quot;ledgerEntryGroup&quot;: LedgerEntryGroup,
  &quot;ledgerEntryGroups&quot;: LedgerEntryGroupsConnection,
  &quot;migrations&quot;: LedgerMigrationConnection,
  &quot;name&quot;: &quot;abc123&quot;,
  &quot;schema&quot;: Schema,
  &quot;type&quot;: &quot;double&quot;,
  &quot;workspaceId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">balanceUTCOffset  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-utcoffset">UTCOffset!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">When aggregating balances, all transactions within a 24 hour period starting at midnight UTC plus this offset are included in each day. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">created  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-datetime">DateTime!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">dashboardUrl  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">URL to the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  Dashboard for this Ledger. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">id  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ik  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The IK passed into the  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#mutations-createledger">createLedger</a>  mutation. This is treated as a unique identifier for this Ledger. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerAccounts  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-ledgeraccountsconnection">LedgerAccountsConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Query LedgerAccounts in Ledger. Ledger Accounts are paginated and returned in reverse-chronological order by their created date. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>after - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>before - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>filter - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-ledgeraccountsfilterset">LedgerAccountsFilterSet</a><br/><br/>Filter the Ledger Accounts returned. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-ledger-accounts">querying Ledger Accounts</a>.<br/><br/>first - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of Ledger Accounts to return per page, when paginating forwards. Defaults to 20, maximum is 200.<br/><br/>last - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of Ledger Accounts to return per page, when paginating backwards. Defaults to 20, maximum is 200.<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerEntries  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-ledgerentriesconnection">LedgerEntriesConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Query Ledger Entries in a Ledger. Ledger Entries are paginated and sorted in reverse-chronological order by posted date. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>after - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>before - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>filter - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-ledgerentriesfilterset">LedgerEntriesFilterSet</a><br/><br/>Filter the Ledger Entries returned. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-ledger-entries">querying Ledger Entries</a>.<br/><br/>first - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of Ledger Entries to return per page, when paginating forwards. Defaults to 20, maximum is 200.<br/><br/>last - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of Ledger Entries to return per page, when paginating backwards. Defaults to 20, maximum is 200.<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerEntryGroup  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-ledgerentrygroup">LedgerEntryGroup!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Query a Ledger Entry Group for this Ledger given its key and value. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>ledgerEntryGroup - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-entrygroupmatchinput">EntryGroupMatchInput!</a><br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerEntryGroups  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-ledgerentrygroupsconnection">LedgerEntryGroupsConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Query LedgerEntryGroups in Ledger. Ledger Entry Groups are paginated and returned in order lexigraphically key then inverse chronologically by created. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>after - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>before - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>filter - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-ledgerentrygroupsfilterset">LedgerEntryGroupsFilterSet</a><br/><br/>Filter the Ledger Entry Groups returned.<br/><br/>first - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of Ledger Entry Groups to return per page, when paginating forwards. Defaults to 20, maximum is 200.<br/><br/>last - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of Ledger Entry Groups to return per page, when paginating backwards. Defaults to 20, maximum is 200.<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">migrations  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-ledgermigrationconnection">LedgerMigrationConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Schema migrations affecting this Ledger. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">name  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The name of the Ledger. Can be updated with the  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#mutations-updateledger">updateLedger</a>  mutation. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">schema  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-schema">Schema</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Schema key associated with this Ledger. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">type  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-ledgertypes">LedgerTypes!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">workspaceId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Callers should not need to query or store this value. </td></tr></tbody></table></div><br/></div></section><section id="types-core-types-ledgeraccount" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerAccount</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-core-types-ledgeraccount">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A ledger account is a container for money</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;balance&quot;: &quot;999999999999&quot;,
  &quot;balanceChange&quot;: &quot;999999999999&quot;,
  &quot;balanceChanges&quot;: CurrencyAmountConnection,
  &quot;balances&quot;: CurrencyAmountConnection,
  &quot;childBalance&quot;: &quot;999999999999&quot;,
  &quot;childBalanceChange&quot;: &quot;999999999999&quot;,
  &quot;childBalanceChanges&quot;: CurrencyAmountConnection,
  &quot;childBalances&quot;: CurrencyAmountConnection,
  &quot;childLedgerAccounts&quot;: LedgerAccountsConnection,
  &quot;consistencyConfig&quot;: LedgerAccountConsistencyConfig,
  &quot;created&quot;: &quot;2007-12-03T10:15:30Z&quot;,
  &quot;currency&quot;: Currency,
  &quot;currencyMode&quot;: &quot;multi&quot;,
  &quot;dashboardUrl&quot;: &quot;abc123&quot;,
  &quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;ik&quot;: &quot;abc123&quot;,
  &quot;ledger&quot;: Ledger,
  &quot;ledgerId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;lines&quot;: LedgerLinesConnection,
  &quot;link&quot;: Link,
  &quot;linkedAccount&quot;: ExternalAccount,
  &quot;name&quot;: &quot;abc123&quot;,
  &quot;ownBalance&quot;: &quot;999999999999&quot;,
  &quot;ownBalanceChange&quot;: &quot;999999999999&quot;,
  &quot;ownBalanceChanges&quot;: CurrencyAmountConnection,
  &quot;ownBalances&quot;: CurrencyAmountConnection,
  &quot;parentLedgerAccount&quot;: LedgerAccount,
  &quot;parentLedgerAccountId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;path&quot;: &quot;abc123&quot;,
  &quot;type&quot;: &quot;asset&quot;,
  &quot;unreconciledTxs&quot;: TxsConnection,
  &quot;workspaceId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">balance  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int96">Int96!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Total of all lines in this ledger account and child ledger accounts of the same currency as this ledger account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>at - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-lastmoment">LastMoment</a><br/><br/>Provide a timestamp to get this balance at a specific logical time. If not specified, the latest value will be returned e.g. 1969 or 1969-07 or 1969-07-03 or 1969-07-21T02<br/><br/>currency - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-currencymatchinput">CurrencyMatchInput</a><br/><br/>The currency of the balance to query. Required if the account is a multi-currency Ledger Account or if the the Ledger Account has child Ledger Accounts with different currencies.<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">balanceChange  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int96">Int96!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">How much did the this ledger account&#x27;s balance change during the specified period. This query will include all child accounts in the same currency as this ledger account. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>currency - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-currencymatchinput">CurrencyMatchInput</a><br/><br/>The currency of the balance change to query. Required if the account is a multi-currency Ledger Account or if the the Ledger Account has child Ledger Accounts with different currencies.<br/><br/>period - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-period">Period!</a><br/><br/>Specifies the period of time over which this query will calculate the balance difference e.g. 1969 or 1969-Q3 or 1969-07 or 1969-07-21 or 1969-07-21T02<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">balanceChanges  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-currencyamountconnection">CurrencyAmountConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">How much did the this ledger account&#x27;s balances change during the specified period. This query will include all child accounts of all currencies. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>period - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-period">Period!</a><br/><br/>Specifies the period of time over which this query will calculate the balance difference e.g. 1969 or 1969-Q3 or 1969-07 or 1969-07-21 or 1969-07-21T02<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">balances  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-currencyamountconnection">CurrencyAmountConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Total of all lines in this ledger account and child ledger accounts in all currencies </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>at - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-lastmoment">LastMoment</a><br/><br/>Provide a timestamp to get this balance at a specific logical time. If not specified, the latest value will be returned e.g. 1969 or 1969-07 or 1969-07-21 or 1969-07-21T02<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">childBalance  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int96">Int96!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Total of all lines in child ledger accounts of the same currency as this ledger account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>at - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-lastmoment">LastMoment</a><br/><br/>Provide a timestamp to get this balance at a specific logical time. If not specified, the latest value will be returned e.g. 1969 or 1969-07 or 1969-07-21 or 1969-07-21T02<br/><br/>currency - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-currencymatchinput">CurrencyMatchInput</a><br/><br/>The currency of the balance to query. Required if the Ledger Account has child Ledger Accounts with different currencies.<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">childBalanceChange  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int96">Int96!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">How much did the this ledger account&#x27;s childBalance change during the specified period. This query will only include child accounts which are in the same currency as this one. See childBalanceChanges to include children of different currencies. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>currency - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-currencymatchinput">CurrencyMatchInput</a><br/><br/>The currency of the balance change to query. Required if the Ledger Account has child Ledger Accounts with different currencies.<br/><br/>period - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-period">Period!</a><br/><br/>Specifies the period of time over which this query will calculate the balance difference e.g. 1969 or 1969-Q3 or 1969-07 or 1969-07-21 or 1969-07-21T02.<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">childBalanceChanges  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-currencyamountconnection">CurrencyAmountConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">How much did the this ledger account&#x27;s child accounts&#x27; balances change during the specified period. This query will include all child accounts of all currencies. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>period - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-period">Period!</a><br/><br/>Specifies the period of time over which this query will calculate the balance difference e.g. 1969 or 1969-Q3 or 1969-07 or 1969-07-21 or 1969-07-21T02<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">childBalances  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-currencyamountconnection">CurrencyAmountConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Total of all lines in child ledger accounts of this ledger in all currencies </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>at - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-lastmoment">LastMoment</a><br/><br/>Provide a timestamp to get this balance at a specific logical time. If not specified, the latest value will be returned e.g. 1969 or 1969-07 or 1969-07-21 or 1969-07-21T02<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">childLedgerAccounts  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-ledgeraccountsconnection">LedgerAccountsConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The child Ledger Accounts of this Ledger Accountw </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>after - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>before - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>first - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of Child Ledger Accounts to return per page, when paginating forwards. Defaults to 20, maximum is 200.<br/><br/>last - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of Child Ledger Accounts to return per page, when paginating backwards. Defaults to 20, maximum is 200.<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">consistencyConfig  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-ledgeraccountconsistencyconfig">LedgerAccountConsistencyConfig!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The consistency configuration for this Ledger Account. This defines how updates to this Ledger Account&#x27;s ownBalance are handled. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">created  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-datetime">DateTime!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currency  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-currency">Currency</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Currency of this ledger account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currencyMode  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-currencymode">CurrencyMode!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Indicates if the account allows multiple currencies or is restricted to a single currency </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">dashboardUrl  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">URL to the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  Dashboard for this Ledger Account. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">id  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ik  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The idempotency key used to create this account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledger  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledger">Ledger!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Ledger this account is in </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ID of the ledger this account is in </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">lines  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-ledgerlinesconnection">LedgerLinesConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">List Ledger Lines in this account, sorted by  posted  in reverse chronological order. Does not include Ledger Lines from child Ledger Accounts. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>after - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>before - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>filter - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-ledgerlinesfilterset">LedgerLinesFilterSet</a><br/><br/>Filter the Ledger Lines returned. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-ledger-lines">querying Ledger Lines</a>.<br/><br/>first - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of Ledger Lines to return per page, when paginating forwards. Defaults to 20, maximum is 200.<br/><br/>last - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of Ledger Lines to return per page, when paginating backwards. Defaults to 20, maximum is 200.<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">link  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-link">Link</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Link for the External Account that is linked to this ledger account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">linkedAccount  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-externalaccount">ExternalAccount</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">External Account that is linked to this ledger account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">name  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The name of your Ledger Account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ownBalance  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int96">Int96!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Total of all lines in this ledger account, excluding all child ledger accounts </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>at - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-lastmoment">LastMoment</a><br/><br/>Provide a timestamp to get this balance at a specific logical time. If not specified, the latest value will be returned e.g. 1969 or 1969-07 or 1969-07-21 or 1969-07-21T02<br/><br/>consistencyMode - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-readbalanceconsistencymode">ReadBalanceConsistencyMode</a><br/><br/>*   eventual: Returns an eventually consistent balance, even if the Ledger Account&#x27;s ownBalanceUpdates in its consistencyConfig is strong (default).<br/>*   strong: Returns a strongly consistent balance or an error if the Ledger Account&#x27;s ownBalanceUpdates in its consistencyConfig is eventual.<br/>*   use_account: Returns a strongly consistent balance if the Ledger Account&#x27;s ownBalanceUpdates in its consistencyConfig is strong and an eventually consistent balance otherwise.<br/><br/>currency - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-currencymatchinput">CurrencyMatchInput</a><br/><br/>The currency of the balance to query. Required if the account is a multi-currency Ledger Account.<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ownBalanceChange  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int96">Int96!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">How much did the this ledger account&#x27;s ownBalance change during the specified period. This query will exclude all child accounts. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>currency - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-currencymatchinput">CurrencyMatchInput</a><br/><br/>The currency of the balance change to query. Required if the account is a multi-currency Ledger Account.<br/><br/>period - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-period">Period!</a><br/><br/>Specifies the period of time over which this query will calculate the balance difference e.g. 1969 or 1969-Q3 or 1969-07 or 1969-07-21 or 1969-07-21T02<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ownBalanceChanges  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-currencyamountconnection">CurrencyAmountConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">How much did the this ledger account&#x27;s ownBalance change during the specified period. This is the total of all lines in this ledger account, excluding all child ledger accounts </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>period - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-period">Period!</a><br/><br/>Specifies the period of time over which this query will calculate the balance difference e.g. 1969 or 1969-Q3 or 1969-07 or 1969-07-21 or 1969-07-21T02<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ownBalances  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-currencyamountconnection">CurrencyAmountConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Total of all lines across all currencies in this ledger account, excluding all child ledger accounts </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>at - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-lastmoment">LastMoment</a><br/><br/>Provide a timestamp to get this balance at a specific logical time. If not specified, the latest value will be returned e.g. 1969 or 1969-07 or 1969-07-21 or 1969-07-21T02<br/><br/>consistencyMode - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-readbalanceconsistencymode">ReadBalanceConsistencyMode</a><br/><br/>*   eventual: Returns an eventually consistent balance, even if the Ledger Account&#x27;s ownBalanceUpdates in its consistencyConfig is strong (default).<br/>*   strong: Returns a strongly consistent balance or an error if the Ledger Account&#x27;s ownBalanceUpdates in its consistencyConfig is eventual.<br/>*   use_account: Returns a strongly consistent balance if the Ledger Account&#x27;s ownBalanceUpdates in its consistencyConfig is strong and an eventually consistent balance otherwise.<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">parentLedgerAccount  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledgeraccount">LedgerAccount</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The parent ledger account of this ledger account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">parentLedgerAccountId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ID of the parent ledger account of this ledger account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">path  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The unique Path of the ledger account. This is a slash-delimited string containing the location of an account in its chart of accounts. For accounts created with a schema, this will be composed of account keys. Else, for accounts created with the createLedgerAccounts API, this will be composed of the IKs of an account and its ancestors. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">type  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-ledgeraccounttypes">LedgerAccountTypes!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">unreconciledTxs  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-txsconnection">TxsConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A list of external account transactions that haven&#x27;t been reconciled to this ledger account yet. Only populated for linked ledger accounts. Transactions are sorted in reverse chronological order by posted date. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>after - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>before - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>first - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of unreconciled transactions to return per page, when paginating forwards. Defaults to 20, maximum is 200.<br/><br/>last - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of unreconciled transactions to return per page, when paginating backwards. Defaults to 20, maximum is 200.<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">workspaceId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Callers should not need to query or store this value. </td></tr></tbody></table></div><br/></div></section><section id="types-core-types-ledgerentry" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerEntry</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-core-types-ledgerentry">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;conditions&quot;: [LedgerEntryCondition],
  &quot;created&quot;: &quot;2007-12-03T10:15:30Z&quot;,
  &quot;dashboardUrl&quot;: &quot;abc123&quot;,
  &quot;date&quot;: &quot;2022-03-28&quot;,
  &quot;description&quot;: &quot;abc123&quot;,
  &quot;groups&quot;: [LedgerEntryGroup],
  &quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;ik&quot;: &quot;abc123&quot;,
  &quot;ledger&quot;: Ledger,
  &quot;ledgerId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;lines&quot;: LedgerLinesConnection,
  &quot;posted&quot;: &quot;2007-12-03T10:15:30Z&quot;,
  &quot;tags&quot;: [LedgerEntryTag],
  &quot;type&quot;: &quot;some-safe-string-ik&quot;,
  &quot;workspaceId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">conditions  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-ledgerentrycondition">[LedgerEntryCondition!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The conditions that were satisfied by this Ledger Entry when it was posted. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">created  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-datetime">DateTime!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ISO-8601 timestamp this LedgerEntry was created in <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">dashboardUrl  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">URL to the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  Dashboard for this Ledger Entry. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">date  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-date">Date!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Date this LedgerEntry posted to its Ledger e.g. &quot;2021-01-01&quot;. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">description  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Description posted for this Ledger Entry. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">groups  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-ledgerentrygroup">[LedgerEntryGroup!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Ledger Entry Groups this Ledger Entry is in. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">id  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The ID of this LedgerEntry. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ik  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The idempotency key used to post this ledger entry </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledger  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledger">Ledger!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Ledger that this Ledger Entry is posted to. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The ID of the Ledger this Ledger Entry is posted to. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">lines  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-ledgerlinesconnection">LedgerLinesConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Lines posted in this Ledger Entry. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">posted  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-datetime">DateTime!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ISO-8601 timestamp this LedgerEntry posted to its Ledger. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">tags  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-ledgerentrytag">[LedgerEntryTag!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The set of tags attached to this Ledger Entry. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">type  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The type of the Ledger Entry. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">workspaceId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Callers should not need to query or store this value. </td></tr></tbody></table></div><br/></div></section><section id="types-core-types-ledgerline" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerLine</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-core-types-ledgerline">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;account&quot;: LedgerAccount,
  &quot;accountId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;amount&quot;: &quot;999999999999&quot;,
  &quot;created&quot;: &quot;2007-12-03T10:15:30Z&quot;,
  &quot;currency&quot;: Currency,
  &quot;date&quot;: &quot;2022-03-28&quot;,
  &quot;description&quot;: &quot;abc123&quot;,
  &quot;externalTransferId&quot;: &quot;abc123&quot;,
  &quot;externalTransferType&quot;: &quot;ach&quot;,
  &quot;externalTxId&quot;: &quot;abc123&quot;,
  &quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;key&quot;: &quot;abc123&quot;,
  &quot;ledger&quot;: Ledger,
  &quot;ledgerEntry&quot;: LedgerEntry,
  &quot;ledgerEntryId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;ledgerId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;otherTxExternalAccountExternalId&quot;: &quot;abc123&quot;,
  &quot;otherTxExternalAccountId&quot;: &quot;abc123&quot;,
  &quot;otherTxExternalId&quot;: &quot;abc123&quot;,
  &quot;otherTxId&quot;: &quot;abc123&quot;,
  &quot;posted&quot;: &quot;2007-12-03T10:15:30Z&quot;,
  &quot;tx&quot;: Tx,
  &quot;txId&quot;: &quot;abc123&quot;,
  &quot;type&quot;: &quot;credit&quot;,
  &quot;workspaceId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">account  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledgeraccount">LedgerAccount!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">LedgerAccount that contains this line </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">accountId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">amount  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int96">Int96!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">How much this line&#x27;s LedgerAccount&#x27;s balance changed in integer cents (i.e. in USD 100 is 1 dollar, 100 cents) </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>absolute - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-boolean">Boolean</a><br/><br/>If the absolute flag is passed, amount will always a positive integer in cents. Refer to type to see if this LedgerLine increased or decreased it&#x27;s LedgerAccount&#x27;s balance<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">created  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-datetime">DateTime</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ISO-8601 timestamp this LedgerLine was created in <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currency  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-currency">Currency</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Currency of this LedgerLine </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">date  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-date">Date</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Date this LedgerLine posted to its LedgerAccount e.g. &quot;2021-01-01&quot; </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">description  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Description of this LedgerLine </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">externalTransferId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ID in the external system of the payment or transfer that created the transaction linked to this LedgerLine </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">externalTransferType  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-externaltransfertype">ExternalTransferType</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Whether the transaction linked to this LedgerLine was a payment or transfer </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">externalTxId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ID in the external system of the transaction linked to this LedgerLine </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">id  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">key  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledger  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledger">Ledger!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerEntry  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledgerentry">LedgerEntry</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">LedgerEntry that contains this line </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerEntryId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ID of the LedgerEntry that contains this line </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Ledger that contains this line </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">otherTxExternalAccountExternalId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ID in the external system of destination or source bank account for an internal bank transfer. Only for internal bank transfers - see otherTxId </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">otherTxExternalAccountId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"> <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> ID of destination or source bank account. Only for internal bank transfers - see otherTxId </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">otherTxExternalId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ID in the external system of transaction in the destination or source bank account. Only for internal bank transfers - see otherTxId </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">otherTxId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"> <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> ID of the transaction in the destination account (if sending money from this account) or source account (if pulling money into this account). Only applicable if this line is linked to a transaction created through an internal transfer </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">posted  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-datetime">DateTime</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ISO-8601 timestamp this LedgerLine posted to its LedgerAccount </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">tx  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-tx">Tx</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The transaction linked to this LedgerLine </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">txId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"> <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> ID of the transaction linked to this LedgerLine </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">type  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-txtype">TxType!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">credit or debit </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">workspaceId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Callers should not need to query or store this value. </td></tr></tbody></table></div><br/></div></section><section id="types-core-types-ledgermigration" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerMigration</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-core-types-ledgermigration">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Represents a Schema being applied to a Ledger. It contains metadata about the Ledger, the Schema, and the status of the migration.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledger&quot;: Ledger,
  &quot;schemaVersion&quot;: SchemaVersion,
  &quot;status&quot;: &quot;completed&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledger  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledger">Ledger!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Ledger that the migration is run on. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">schemaVersion  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-schemaversion">SchemaVersion!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">status  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-ledgermigrationstatus">LedgerMigrationStatus!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The status of the Ledger Migration. </td></tr></tbody></table></div><br/></div></section><section id="types-core-types-link" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Link</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-core-types-link">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;created&quot;: &quot;abc123&quot;,
  &quot;dashboardUrl&quot;: &quot;abc123&quot;,
  &quot;externalAccounts&quot;: ExternalAccountsConnection,
  &quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;name&quot;: &quot;abc123&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">created  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ISO-8601 timestamp when the Link was created. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">dashboardUrl  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">URL to the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  Dashboard for this Link. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">externalAccounts  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-externalaccountsconnection">ExternalAccountsConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A list of External Accounts associated with this Link. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">id  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"> <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> ID of the Link. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">name  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Name of the Link as it appears in the Dashboard. </td></tr></tbody></table></div><br/></div></section><section id="types-core-types-schema" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Schema</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-core-types-schema">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;key&quot;: &quot;some-safe-string-ik&quot;,
  &quot;ledgers&quot;: LedgersConnection,
  &quot;name&quot;: &quot;abc123&quot;,
  &quot;version&quot;: SchemaVersion,
  &quot;versions&quot;: SchemaVersionConnection
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">key  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The identifier for a Schema.  key  is unique to a Workspace. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgers  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-ledgersconnection">LedgersConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The paginated list of ledgers the Schema has been applied to. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>after - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>before - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>first - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of Ledgers to return per page, when paginating forwards. Defaults to 20, maximum is 200.<br/><br/>last - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of Ledgers to return per page, when paginating backwards. Defaults to 20, maximum is 200.<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">name  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The name of a Schema. It defaults to the  key  if not provided in your SchemaInput. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">version  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-schemaversion">SchemaVersion!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The metadata for a specific SchemaVersion. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>version - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The version of the schema to retrieve. If this is not provided, the latest version will be returned.<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">versions  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-schemaversionconnection">SchemaVersionConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A paginated list of SchemaVersions. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>after - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>before - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>first - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of schema versions to return per page, when paginating forwards. Defaults to 20, maximum is 200.<br/><br/>last - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of schema versions to return per page, when paginating backwards. Defaults to 20, maximum is 200.<br/></td></tr></tbody></table></div><br/></div></section><section id="types-core-types-tx" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Tx</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-core-types-tx">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;accountId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;amount&quot;: &quot;999999999999&quot;,
  &quot;currency&quot;: Currency,
  &quot;date&quot;: &quot;2022-03-28&quot;,
  &quot;description&quot;: &quot;abc123&quot;,
  &quot;externalAccount&quot;: ExternalAccount,
  &quot;externalAccountId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;externalId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;ledgerEntries&quot;: LedgerEntriesConnection,
  &quot;ledgerEntryIds&quot;: [&quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;],
  &quot;ledgerLineIds&quot;: [&quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;],
  &quot;ledgerLines&quot;: LedgerLinesConnection,
  &quot;link&quot;: Link,
  &quot;linkId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;posted&quot;: &quot;2007-12-03T10:15:30Z&quot;,
  &quot;workspaceId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">accountId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"> <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> ID of this transaction&#x27;s external account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">amount  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int96">Int96!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Integer amount in cents. Positive indicates money entering the external account, negative indicates money leaving </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currency  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-currency">Currency</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Currency of this Tx </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">date  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-date">Date!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Date this Tx posted to the external account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">description  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Description at the external account (can be overridden within the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  Dashboard) </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">externalAccount  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-externalaccount">ExternalAccount!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The External Account that this transaction belongs to. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">externalAccountId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ID in the external system of this transaction&#x27;s external account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">externalId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ID of this transaction in the external system </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">id  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerEntries  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-ledgerentriesconnection">LedgerEntriesConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Returns ledger entries that are linked to this transaction. You can link the same external account to multiple ledgers, so there could be multipe entries associated with one transaction - one for each linked ledger account this transaction has been reconciled with </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerEntryIds  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">[ID!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Same as ledgerEntries, but returns an array of IDs instead </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerLineIds  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">[ID!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Same as ledgerLines, but returns an array of IDs instead </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerLines  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-ledgerlinesconnection">LedgerLinesConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Returns ledger lines that are linked to this transaction. You can link the same external account to multiple ledgers, so there could be multipe lines associated with one transaction - one for each linked ledger account this transaction has been reconciled with </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">link  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-link">Link!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">This transaction&#x27;s Link. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">linkId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"> <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> ID of this transaction&#x27;s Link </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">posted  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-datetime">DateTime!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ISO-8601 timestamp this Tx posted to the external account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">workspaceId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Callers should not need to query or store this value. </td></tr></tbody></table></div><br/></div></section><section id="types-core-types-workspace" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Workspace</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-core-types-workspace">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;id&quot;: &quot;abc123&quot;, &quot;name&quot;: &quot;abc123&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">id  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The ID of the Workspace </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">name  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The name of the Workspace </td></tr></tbody></table></div><br/></div></section></div></div></section><section id="types-scalars-and-enums" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block">Scalars and Enums</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><br/><section id="types-scalars-and-enums-balanceupdateconsistencymode" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">BalanceUpdateConsistencyMode</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-balanceupdateconsistencymode">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Used to configure the write-consistency of a Ledger Account&#x27;s balance. See <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#configure-consistency">Configure consistency</a>.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;eventual&quot;
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Enum Value</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">eventual </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Eventually consistent balance updates. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">strong </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Strongly consistent balance updates. </td></tr></tbody></table></div><br/></div></section><section id="types-scalars-and-enums-boolean" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Boolean</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-boolean">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The Boolean scalar type represents true or false.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">true
</code></pre></div></div></div><br/><br/></div></section><section id="types-scalars-and-enums-currency" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Currency</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-currency">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;code&quot;: &quot;AAVE&quot;,
  &quot;customCode&quot;: &quot;abc123&quot;,
  &quot;customCurrencyId&quot;: &quot;some-safe-string-ik&quot;,
  &quot;name&quot;: &quot;abc123&quot;,
  &quot;precision&quot;: 2277
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">code  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-currencycode">CurrencyCode!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The currency code. This is an  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#types-scalars-and-enums-currencycode">enum type</a>  . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">customCode  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The currency code for custom currencies. This is only set if &#x27;currency&#x27; is set to CUSTOM. It can be up to 32 characters long. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">customCurrencyId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The ID for a custom currency. This is specified when creating the custom currency using the  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#mutations-createcustomcurrency">createCustomCurrency</a>  mutation. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">name  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A human readable name for the currency (e.g. United States Dollar). This is used for display purposes. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">precision  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The number of decimal places this currency goes to. For example, United States Dollars have a precision of 2 (i.e. 100 cents in a dollar), whereas the Jordanian Dinar has a precision of 3. This is used for display purposes. </td></tr></tbody></table></div><br/></div></section><section id="types-scalars-and-enums-currencycode" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CurrencyCode</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-currencycode">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;AAVE&quot;
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Enum Value</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">AAVE </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ADA </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">AED </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">AFN </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ALL </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">AMD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ANG </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">AOA </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ARS </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">AUD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">AWG </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">AZN </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">BAM </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">BBD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">BCH </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">BDT </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">BGN </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">BHD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">BIF </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">BMD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">BND </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">BOB </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">BRL </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">BSD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">BTC </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">BTN </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">BWP </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">BYR </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">BZD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">CAD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">CDF </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">CHF </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">CLP </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">CNY </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">COP </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">CRC </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">CUC </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">CUP </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">CUSTOM </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">CVE </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">CZK </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">DAI </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">DJF </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">DKK </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">DOP </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">DZD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">EGP </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ERN </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ETB </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ETH </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">EUR </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">FJD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">FKP </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">GBP </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">GEL </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">GGP </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">GHS </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">GIP </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">GMD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">GNF </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">GTQ </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">GYD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">HKD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">HNL </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">HRK </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">HTG </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">HUF </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">IDR </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ILS </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">IMP </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">INR </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">IQD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">IRR </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ISK </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">JMD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">JOD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">JPY </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">KES </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">KGS </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">KHR </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">KMF </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">KPW </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">KRW </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">KWD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">KYD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">KZT </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">LAK </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">LBP </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">LINK </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">LKR </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">LOGICAL </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">LRD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">LSL </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">LTC </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">LYD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">MAD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">MATIC </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">MDL </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">MGA </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">MKD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">MMK </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">MNT </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">MOP </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">MUR </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">MVR </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">MWK </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">MXN </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">MYR </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">MZN </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">NAD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">NGN </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">NIO </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">NOK </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">NPR </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">NZD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">OMR </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">PAB </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">PEN </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">PGK </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">PHP </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">PKR </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">PLN </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">PTS </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">PYG </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">QAR </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">RON </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">RSD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">RUB </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">RWF </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">SAR </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">SBD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">SCR </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">SDG </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">SEK </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">SGD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">SHP </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">SLL </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">SOL </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">SOS </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">SPL </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">SRD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">STN </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">SVC </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">SYP </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">SZL </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">THB </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">TJS </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">TMT </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">TND </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">TOP </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">TRY </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">TTD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">TVD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">TWD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">TZS </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">UAH </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">UGX </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">UNI </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">USD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">USDC </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">USDT </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">UYU </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">UZS </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">VEF </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">VND </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">VUV </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">WST </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">XAF </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">XCD </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">XLM </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">XOF </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">XPF </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">YER </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ZAR </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ZMW </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-scalars-and-enums-currencymode" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CurrencyMode</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-currencymode">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Defines the currency handling of a LedgerAccount, which can either be restricted to a single currency or allow multiple currencies.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;multi&quot;
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Enum Value</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">multi </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">single </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-scalars-and-enums-date" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Date</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-date">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">ISO 8601 Date e.g. 1969-07-21</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;2022-03-28&quot;
</code></pre></div></div></div><br/><br/></div></section><section id="types-scalars-and-enums-datetime" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">DateTime</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-datetime">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">ISO 8601 DateTime e.g. 1969-07-16T13:32:00.000Z. You can also provide a date e.g. 1969-01-01 and it will be converted to 1969-01-01T00:00:00.000Z</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;2007-12-03T10:15:30Z&quot;
</code></pre></div></div></div><br/><br/></div></section><section id="types-scalars-and-enums-externaltransfertype" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">ExternalTransferType</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-externaltransfertype">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;ach&quot;
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Enum Value</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ach </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">card </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">check </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">internal </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">wire </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-scalars-and-enums-id" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">ID</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-id">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The ID scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as &quot;4&quot;) or integer (such as 4) input value will be accepted as an ID.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;
</code></pre></div></div></div><br/><br/></div></section><section id="types-scalars-and-enums-ikreplay" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">IkReplay</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-ikreplay">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;ik&quot;: &quot;some-safe-string-ik&quot;, &quot;isIkReplay&quot;: true}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ik  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">isIkReplay  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-boolean">Boolean!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-scalars-and-enums-int" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Int</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-int">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The Int scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">2277
</code></pre></div></div></div><br/><br/></div></section><section id="types-scalars-and-enums-int96" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Int96</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-int96">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A string representing integers as big as 2^96-1. The number is signed so the range is from -79,228,162,514,264,337,593,543,950,336 to 79,228,162,514,264,337,593,543,950,336.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;999999999999&quot;
</code></pre></div></div></div><br/><br/></div></section><section id="types-scalars-and-enums-json" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">JSON</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-json">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The JSON scalar type represents JSON values as specified by <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf">ECMA-404</a>.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;{&quot;key&quot;:&quot;value&quot;}&quot;
</code></pre></div></div></div><br/><br/></div></section><section id="types-scalars-and-enums-lastmoment" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LastMoment</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-lastmoment">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The last moment of a specific year, month or day or hour e.g. 1969 or 1969-12 or 1969-12-31 or 1969-12-31T23. All of the previous examples are equivalent to 1969-12-31T23:59:59.999.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;2021-07&quot;
</code></pre></div></div></div><br/><br/></div></section><section id="types-scalars-and-enums-ledgerlinesconsistencymode" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerLinesConsistencyMode</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-ledgerlinesconsistencymode">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;eventual&quot;
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Enum Value</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">eventual </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">strong </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-scalars-and-enums-ledgermigrationstatus" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerMigrationStatus</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-ledgermigrationstatus">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The status of a ledger migration.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;completed&quot;
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Enum Value</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">completed </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Ledger Migration has been successfully completed. This is a terminal state. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">failed </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Ledger Migration has failed. This can happen either due to an invalid schema or an internal error. This is a terminal state. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">queued </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Ledger Migration has been queued. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">skipped </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Ledger Migration has been skipped because a newer version is available. This is a terminal state. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">started </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Ledger Migration has been started. </td></tr></tbody></table></div><br/></div></section><section id="types-scalars-and-enums-ledgertypes" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerTypes</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-ledgertypes">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;double&quot;
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Enum Value</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">double </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-scalars-and-enums-parameterizedstring" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">ParameterizedString</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-parameterizedstring">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A string of non-zero length that can contain parameterized values via handlebars syntax. ex: &quot;Hello from {{country}}&quot;.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;assets/bank:{{bank_name}}&quot;
</code></pre></div></div></div><br/><br/></div></section><section id="types-scalars-and-enums-period" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Period</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-period">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A specific year (&quot;2021&quot;), quarter (&quot;2021-Q1&quot;), month (&quot;2021-02&quot;), day (&quot;2021-02-03&quot;) or hour (&quot;2021-02-03T04&quot;)</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;2022-Q3&quot;
</code></pre></div></div></div><br/><br/></div></section><section id="types-scalars-and-enums-readbalanceconsistencymode" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">ReadBalanceConsistencyMode</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-readbalanceconsistencymode">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The consistency configuration of a Ledger Account&#x27;s balance queries. If not provided as an argument to a balance query, the default behavior is to read eventually consistent balances. See <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#configure-consistency">Configure consistency</a>.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;eventual&quot;
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Enum Value</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">eventual </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Balance queries will read eventually consistent balances. This is the default behavior if  ReadBalanceConsistencyMode  is not provided as an argument to the balance field. Both Ledger Accounts configured with strongly and eventually consistent balance updates support this enum. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">strong </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Balance queries will read strongly consistent balances. This is only allowed if the Ledger Account&#x27;s  ownBalanceUpdates  in its  consistencyConfig  is  strong  . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">use_account </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Balance queries will use the value from the Ledger Account&#x27;s  ownBalanceUpdates  in its  consistencyConfig  . </td></tr></tbody></table></div><br/></div></section><section id="types-scalars-and-enums-safestring" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SafeString</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-safestring">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A string with delimiter characters /, #, and : disallowed, as well as parameters in {{handlebar}} syntax.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;some-safe-string-ik&quot;
</code></pre></div></div></div><br/><br/></div></section><section id="types-scalars-and-enums-sceneeventtype" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SceneEventType</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-sceneeventtype">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;entry&quot;
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Enum Value</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">entry </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-scalars-and-enums-schemaconsistencymode" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SchemaConsistencyMode</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-schemaconsistencymode">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The consistency modes available for entities created within this Schema.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;eventual&quot;
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Enum Value</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">eventual </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Eventually consistent entity updates </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">strong </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Strongly consistent entity updates </td></tr></tbody></table></div><br/></div></section><section id="types-scalars-and-enums-string" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">String</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-string">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The String scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;abc123&quot;
</code></pre></div></div></div><br/><br/></div></section><section id="types-scalars-and-enums-txtype" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">TxType</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-txtype">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;credit&quot;
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Enum Value</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">credit </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">debit </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-scalars-and-enums-utcoffset" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">UTCOffset</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-scalars-and-enums-utcoffset">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">All hour-aligned offsets from -11:00 to +12:00 are supported, e.g. &quot;-08:00&quot; (PT), &quot;-05:00&quot; (ET), &quot;+00:00&quot; (UTC)</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;-08:00&quot;
</code></pre></div></div></div><br/><br/></div></section></div></div></section><section id="types-input-types" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block">Input Types</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><br/><section id="types-input-types-chartofaccountsinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">ChartOfAccountsInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-chartofaccountsinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The input for your Chart of Accounts in a Schema.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;accounts&quot;: [SchemaLedgerAccountInput],
  &quot;defaultConsistencyConfig&quot;: LedgerAccountConsistencyConfigInput,
  &quot;defaultCurrency&quot;: CurrencyMatchInput,
  &quot;defaultCurrencyMode&quot;: &quot;multi&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">accounts  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-schemaledgeraccountinput">[SchemaLedgerAccountInput!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Ledger Accounts modeled by your Schema. Ledger Accounts may be nested up to a maximum depth of 10. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">defaultConsistencyConfig  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-ledgeraccountconsistencyconfiginput">LedgerAccountConsistencyConfigInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The default consistency configuration for all Ledger Accounts in this Schema. If a Ledger Account does not specify its own consistency configuration, it will use the default values provided here.  See <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#configure-consistency">Configure consistency</a>. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">defaultCurrency  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-currencymatchinput">CurrencyMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The default currency of each Ledger Account in the Chart Of Accounts. It must be provided if  defaultCurrencyMode  is set to  single  . Additionally,  defaultCurrency  must be omitted if  defaultCurrencyMode  is set to  multi  . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">defaultCurrencyMode  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-currencymode">CurrencyMode</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The default currency mode of each Ledger Account in the Chart Of Accounts. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-createcustomcurrencyinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CreateCustomCurrencyInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-createcustomcurrencyinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;customCode&quot;: &quot;abc123&quot;,
  &quot;customCurrencyId&quot;: &quot;some-safe-string-ik&quot;,
  &quot;name&quot;: &quot;abc123&quot;,
  &quot;precision&quot;: 2277
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">customCode  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The currency code for custom currencies. It can be up to 5 characters long. This is used for display purposes. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">customCurrencyId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The ID for a custom currency. This is specified when creating the custom currency using the  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#mutations-createcustomcurrency">createCustomCurrency</a>  mutation. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">name  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A human readable name for the currency (e.g. United States Dollar). This is used for display purposes. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">precision  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The number of decimal places this currency goes to. For example, United States Dollars have a precision of 2 (i.e. 100 cents in a dollar), whereas the Jordanian Dinar has a precision of 3. This is used for display purposes. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-createledgeraccountinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CreateLedgerAccountInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-createledgeraccountinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;consistencyConfig&quot;: LedgerAccountConsistencyConfigInput,
  &quot;currency&quot;: CurrencyMatchInput,
  &quot;currencyMode&quot;: &quot;multi&quot;,
  &quot;linkedAccount&quot;: ExternalAccountMatchInput,
  &quot;name&quot;: &quot;abc123&quot;,
  &quot;parent&quot;: LedgerAccountMatchInput,
  &quot;type&quot;: &quot;asset&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">consistencyConfig  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-ledgeraccountconsistencyconfiginput">LedgerAccountConsistencyConfigInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The consistency configuration for this Ledger Account. This defines how updates to this Ledger Account&#x27;s balance are handled. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currency  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-currencymatchinput">CurrencyMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The currency of this Ledger Account. If this is not set, and  currencyMode  is not set to  multi  , the workspace-level default is used. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currencyMode  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-currencymode">CurrencyMode</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">If set to  multi  , creates a multi-currency Ledger Account. If set to  single  , creates a single-currency Ledger Account. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">linkedAccount  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-externalaccountmatchinput">ExternalAccountMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The External Account to link to this Ledger Account. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">name  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The human-readable name of this Ledger Account. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">parent  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-ledgeraccountmatchinput">LedgerAccountMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The parent of this Ledger Account. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">type  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-ledgeraccounttypes">LedgerAccountTypes</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The type of ledger account to create. Required if this is a top-level Ledger Account. If not provided, the type will be inferred from the parent. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-createledgeraccountsinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CreateLedgerAccountsInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-createledgeraccountsinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;childLedgerAccounts&quot;: [CreateLedgerAccountsInput],
  &quot;consistencyConfig&quot;: LedgerAccountConsistencyConfigInput,
  &quot;currency&quot;: CurrencyMatchInput,
  &quot;currencyMode&quot;: &quot;multi&quot;,
  &quot;ik&quot;: &quot;some-safe-string-ik&quot;,
  &quot;linkedAccount&quot;: ExternalAccountMatchInput,
  &quot;name&quot;: &quot;abc123&quot;,
  &quot;parent&quot;: LedgerAccountMatchInput,
  &quot;type&quot;: &quot;asset&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">childLedgerAccounts  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-createledgeraccountsinput">[CreateLedgerAccountsInput!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Ledger Accounts to create as children of this Ledger Account. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">consistencyConfig  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-ledgeraccountconsistencyconfiginput">LedgerAccountConsistencyConfigInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The consistency configuration for this ledger account. See  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#configure-consistency">Configure consistency</a>  . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currency  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-currencymatchinput">CurrencyMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The currency of this Ledger Account. If this is not set, the workspace level default is used. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currencyMode  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-currencymode">CurrencyMode</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The currency mode of this Ledger Account. If this is not set, the workspace level default is used. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ik  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The idempotency key for creating this Ledger Account. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">linkedAccount  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-externalaccountmatchinput">ExternalAccountMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The External Account to link to this Ledger Account. This can only be specified on leaf Ledger Accounts. See  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#reconcile-transactions">Reconcile transactions</a>  . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">name  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The name of the Ledger Account. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">parent  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-ledgeraccountmatchinput">LedgerAccountMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The parent of this Ledger Account. This is only valid on the top level Ledger Account in the payload. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">type  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-ledgeraccounttypes">LedgerAccountTypes</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The type of this Ledger Account. This field is only required if this is a root Ledger Account. Otherwise, the type will get inherited from its parent. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-createledgerinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CreateLedgerInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-createledgerinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;balanceUTCOffset&quot;: &quot;-08:00&quot;, &quot;name&quot;: &quot;abc123&quot;, &quot;type&quot;: &quot;double&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">balanceUTCOffset  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-utcoffset">UTCOffset</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Use this field to specify a timezone for queries to your Ledger.  When aggregating balances, all transactions within a 24 hour period starting at midnight UTC are included in each day. You can specify a different starting hour for balances. For example, use &quot;-08:00&quot; to align balances with Pacific Standard Time. Balance queries would then consider the start of each local day to be at 8am UTC the next day in UTC. The default timezone is UTC. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">name  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">type  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-ledgertypes">LedgerTypes</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-input-types-customaccountinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CustomAccountInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-customaccountinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;currency&quot;: CurrencyMatchInput,
  &quot;currencyMode&quot;: &quot;multi&quot;,
  &quot;externalId&quot;: &quot;some-safe-string-ik&quot;,
  &quot;name&quot;: &quot;abc123&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currency  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-currencymatchinput">CurrencyMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The currency of this external account. If this is not set, the workspace level default is used. &#x27;currency&#x27; cannot be set if &#x27;currencyMode&#x27; is &#x27;multi&#x27;. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currencyMode  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-currencymode">CurrencyMode</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The currency mode of this external account. If set to multi, creates a multi-currency account. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">externalId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The ID of this account at the external system. This is used as the idempotency key, within the scope of its Custom Link. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">name  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The name of the account at the external system. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-customtxinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CustomTxInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-customtxinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;account&quot;: ExternalAccountMatchInput,
  &quot;amount&quot;: &quot;999999999999&quot;,
  &quot;currency&quot;: CurrencyMatchInput,
  &quot;description&quot;: &quot;abc123&quot;,
  &quot;externalId&quot;: &quot;some-safe-string-ik&quot;,
  &quot;posted&quot;: &quot;2007-12-03T10:15:30Z&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">account  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-externalaccountmatchinput">ExternalAccountMatchInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">amount  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int96">Int96!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currency  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-currencymatchinput">CurrencyMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The currency of this tx. Should be set for multi-currency accounts. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">description  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">externalId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The ID of this tx at the external system. This is used as the idempotency key, within the scope of its Custom Account. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">posted  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-datetime">DateTime!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-input-types-int96conditioninput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Int96ConditionInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-int96conditioninput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A condition that must be met on an Int96 field.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;eq&quot;: &quot;999999999999&quot;, &quot;gte&quot;: &quot;999999999999&quot;, &quot;lte&quot;: &quot;999999999999&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">eq  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int96">Int96</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Amount must exactly match this value. You may not specify this alongside  gte  or  lte  . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">gte  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int96">Int96</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Amount must be greater than or equal to this value. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">lte  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int96">Int96</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Amount must be less than or equal to this value. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-ledgeraccountconditioninput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerAccountConditionInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-ledgeraccountconditioninput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A set of conditions that a Ledger Account must meet for an operation to succeed.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;ownBalance&quot;: Int96ConditionInput}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ownBalance  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-int96conditioninput">Int96ConditionInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A condition that the ownBalance field must satisfy. Note that this condition always applies to the latest balance, not to balances at a specific date or time. See  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#read-balances">Read balances</a>  for more on the different types of Ledger Account balances. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-ledgeraccountconsistencyconfiginput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerAccountConsistencyConfigInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-ledgeraccountconsistencyconfiginput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The payload configuring the consistency for this Ledger Account. See <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#configure-consistency">Configure consistency</a>.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;groups&quot;: [LedgerAccountGroupConsistencyConfigInput],
  &quot;lines&quot;: &quot;eventual&quot;,
  &quot;ownBalanceUpdates&quot;: &quot;eventual&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">groups  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-ledgeraccountgroupconsistencyconfiginput">[LedgerAccountGroupConsistencyConfigInput!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The consistency configuration for Ledger Entry Groups affecting this account.  See <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#configure-consistency">Configure consistency</a>. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">lines  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-ledgerlinesconsistencymode">LedgerLinesConsistencyMode</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">If set to strong, then a Ledger Account&#x27;s lines updates will be strongly consistent with the API response. This Ledger Account&#x27;s balance will be updated and available for strongly consistent reads before you receive an API response.  Otherwise if unset or set to eventual, lines updates are applied asynchronously and may not be immediately reflected in queries.  See <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#configure-consistency">Configure consistency</a>. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ownBalanceUpdates  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-balanceupdateconsistencymode">BalanceUpdateConsistencyMode</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">If set to strong, then a Ledger Account&#x27;s ownBalance updates will be strongly consistent with the API response. This Ledger Account&#x27;s balance will be updated and available for strongly consistent reads before you receive an API response.  Otherwise if unset or set to eventual, ownBalance updates are applied asynchronously and may not be immediately reflected in queries.  See <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#configure-consistency">Configure consistency</a>. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-ledgeraccountgroupconsistencyconfiginput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerAccountGroupConsistencyConfigInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-ledgeraccountgroupconsistencyconfiginput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The consistency configuration for a specific Ledger Entry Group in this account.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;key&quot;: &quot;abc123&quot;, &quot;ownBalanceUpdates&quot;: &quot;eventual&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">key  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The group key for this configuration. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ownBalanceUpdates  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-balanceupdateconsistencymode">BalanceUpdateConsistencyMode!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">If set to strong, then Ledger Entry Group ownBalances updates for this account will be strongly consistent with the API response. This Ledger Account&#x27;s Ledger Entry Group balances will be updated and available for strongly consistent reads before you receive an API response.  Otherwise if unset or set to eventual, Ledger Entry Group ownBalance updates are applied asynchronously and may not be immediately reflected in queries.  See <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#configure-consistency">Configure consistency</a>. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-ledgerentryconditioninput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerEntryConditionInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-ledgerentryconditioninput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A set of pre-conditions and post-conditions that a Ledger Account balance must meet for an operation to succeed. You must specify at least one of precondition or postcondition for each condition.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;account&quot;: LedgerAccountMatchInput,
  &quot;currency&quot;: CurrencyMatchInput,
  &quot;postcondition&quot;: LedgerAccountConditionInput,
  &quot;precondition&quot;: LedgerAccountConditionInput
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">account  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-ledgeraccountmatchinput">LedgerAccountMatchInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Ledger Account that must satisfy the provided conditions. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currency  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-currencymatchinput">CurrencyMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">For Ledger Accounts in the  multi  currency mode, you must specify the currency of the balance affected by the condition. You only need to specify this field for multi-currency accounts. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">postcondition  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-ledgeraccountconditioninput">LedgerAccountConditionInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The conditions that must hold after the operation. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">precondition  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-ledgeraccountconditioninput">LedgerAccountConditionInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The conditions that must hold prior to the operation. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-ledgerentrygroupinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerEntryGroupInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-ledgerentrygroupinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;key&quot;: &quot;some-safe-string-ik&quot;, &quot;value&quot;: &quot;some-safe-string-ik&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">key  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The key of this group. Can be up to 128 characters long. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">value  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The value associated with this group&#x27;s key. Can be up to 128 characters long. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-ledgerentryinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerEntryInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-ledgerentryinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Ledger Entries are limited to 30 Ledger Lines.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;conditions&quot;: [LedgerEntryConditionInput],
  &quot;description&quot;: &quot;abc123&quot;,
  &quot;groups&quot;: [LedgerEntryGroupInput],
  &quot;ledger&quot;: LedgerMatchInput,
  &quot;lines&quot;: [LedgerLineInput],
  &quot;parameters&quot;: &quot;{&quot;key&quot;:&quot;value&quot;}&quot;,
  &quot;posted&quot;: &quot;2007-12-03T10:15:30Z&quot;,
  &quot;tags&quot;: [LedgerEntryTagInput],
  &quot;type&quot;: &quot;abc123&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">conditions  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-ledgerentryconditioninput">[LedgerEntryConditionInput!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Conditions that must be satisfied to post this Ledger Entry. The Ledger Entry will reject with a BadRequestError if any condition is not met. You can only add a condition on a Ledger Account containing a Line in this Ledger Entry. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">description  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">If specified, will also be used as the description for LedgerLines unless they specify their own description. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">groups  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-ledgerentrygroupinput">[LedgerEntryGroupInput!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Adds this Ledger Entry to this set of Ledger Entry Groups </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledger  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-ledgermatchinput">LedgerMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Ledger to which to post this Ledger Entry. Must be linked to a Schema that defines the provided Ledger Entry type. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">lines  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-ledgerlineinput">[LedgerLineInput!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Ledger Lines to create as part of this Ledger Entry. This cannot be used with Ledger Entries that have a &#x27;type&#x27; i.e. Ledger Entries defined in the Schema. This can be useful during non-routine operations such as an incident. It is not recommended to use &#x27;lines&#x27; during routine operations. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">parameters  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-json">JSON</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Parameters to be included in a templated Ledger Entry. All provided parameters must be present in the typed Ledger Entry within the Schema linked to the provided Ledger. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">posted  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-datetime">DateTime</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ISO 8601 timestamp to post this Ledger Entry e.g. &quot;2021-01-01&quot; or &quot;2021-01-01T16:45:00Z&quot;. Will error out if supplied to reconcileTx or createOrder since the transaction timestamp will be used instead </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">tags  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-ledgerentrytaginput">[LedgerEntryTagInput!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A set of tags attached to this Ledger Entry. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">type  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The type of the Ledger Entry. Must be defined in the Schema linked to the Ledger specified below. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-ledgerentrytaginput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerEntryTagInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-ledgerentrytaginput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;key&quot;: &quot;some-safe-string-ik&quot;, &quot;value&quot;: &quot;some-safe-string-ik&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">key  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The key of this tag. Can be up to 128 characters long. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">value  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The value associated with this tag&#x27;s key. Can be up to 128 characters long. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-ledgerlineinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerLineInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-ledgerlineinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;account&quot;: LedgerAccountMatchInput,
  &quot;amount&quot;: &quot;999999999999&quot;,
  &quot;currency&quot;: CurrencyMatchInput,
  &quot;description&quot;: &quot;abc123&quot;,
  &quot;key&quot;: &quot;abc123&quot;,
  &quot;tx&quot;: TxMatchInput
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">account  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-ledgeraccountmatchinput">LedgerAccountMatchInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The LedgerAccount this line is being added to </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">amount  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int96">Int96</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A positive amount increases the balance of its LedgerAccount, a negative amount reduces the balance of its LedgerAccount </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currency  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-currencymatchinput">CurrencyMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The currency the ledger line is in </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">description  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">If not specified the description from the parent LedgerEntryInput will be used </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">key  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Optional identifier for Ledger Line. You can filter lines by key using  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#types-filter-types-ledgerlinesfilterset">LedgerLinesFilterSet</a>  . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">tx  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-txmatchinput">TxMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Required for reconcileTx to specify the transaction being reconciled, you can specify either the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  ID or external ID of the transaction </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-sceneentryinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SceneEntryInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-sceneentryinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A simulated Ledger Entry posted as a part of a Scene.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;parameters&quot;: &quot;{&quot;key&quot;:&quot;value&quot;}&quot;, &quot;type&quot;: &quot;some-safe-string-ik&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">parameters  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-json">JSON</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Any parameters to be used as inputs to this simulated Ledger Entry. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">type  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The type of the simulated Ledger Entry. Must match one of the types provided in schema.ledgerEntries.types. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-sceneeventinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SceneEventInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-sceneeventinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;entry&quot;: SceneEntryInput, &quot;eventType&quot;: &quot;entry&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">entry  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-sceneentryinput">SceneEntryInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The simulated Ledger Entry. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">eventType  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-sceneeventtype">SceneEventType!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The type of the Scene Event. Currently, only entries are supported. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-sceneinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SceneInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-sceneinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;events&quot;: [SceneEventInput], &quot;name&quot;: &quot;abc123&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">events  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-sceneeventinput">[SceneEventInput!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A list of simulated ledger entries that make up the Scene. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">name  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The human-readable name of the Scene. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-schemaconditioninput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SchemaConditionInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-schemaconditioninput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A condition that must be met on a Ledger Account balance. The condition can be either a precondition or postcondition.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;ownBalance&quot;: SchemaInt96ConditionInput}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ownBalance  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-schemaint96conditioninput">SchemaInt96ConditionInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A condition on the  ownBalance  of the Ledger Account. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-schemaconsistencyconfiginput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SchemaConsistencyConfigInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-schemaconsistencyconfiginput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The consistency configuration for entities created within Ledgers created by this Schema.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;entries&quot;: &quot;eventual&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">entries  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-schemaconsistencymode">SchemaConsistencyMode</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The consistency mode for the Ledger Entries list query within Ledgers created by this Schema.  See <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#configure-consistency">Configure consistency</a>. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-schemainput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SchemaInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-schemainput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Input to the API for creating a Schema.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;chartOfAccounts&quot;: ChartOfAccountsInput,
  &quot;consistencyConfig&quot;: SchemaConsistencyConfigInput,
  &quot;key&quot;: &quot;some-safe-string-ik&quot;,
  &quot;ledgerEntries&quot;: SchemaLedgerEntriesInput,
  &quot;name&quot;: &quot;assets/bank:{{bank_name}}&quot;,
  &quot;scenes&quot;: [SceneInput]
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">chartOfAccounts  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-chartofaccountsinput">ChartOfAccountsInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Chart of Accounts for the Schema. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">consistencyConfig  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-schemaconsistencyconfiginput">SchemaConsistencyConfigInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The consistency configuration for this Schema. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">key  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The key of the Schema. This is a stable, unique identifier for the Schema. Uniqueness is enforced at the Workspace level. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerEntries  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-schemaledgerentriesinput">SchemaLedgerEntriesInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Ledger Entries to add to the Schema. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">name  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-parameterizedstring">ParameterizedString</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The human-readable name of the Schema. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">scenes  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-sceneinput">[SceneInput!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Any scenes associated with this Schema. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-schemaint96conditioninput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SchemaInt96ConditionInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-schemaint96conditioninput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A condition that must be met on a field.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;eq&quot;: &quot;assets/bank:{{bank_name}}&quot;,
  &quot;gte&quot;: &quot;assets/bank:{{bank_name}}&quot;,
  &quot;lte&quot;: &quot;assets/bank:{{bank_name}}&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">eq  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-parameterizedstring">ParameterizedString</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Amount must be exactly equal to this value. You may not specify this alongside  gte  or  lte  . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">gte  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-parameterizedstring">ParameterizedString</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Amount must be greater than or equal to this value. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">lte  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-parameterizedstring">ParameterizedString</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Amount must be less than or equal to this value. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-schemaledgeraccountinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SchemaLedgerAccountInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-schemaledgeraccountinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Models a Ledger Account in a Schema. Upon successfully storing a <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#types-core-types-schema">Schema</a>, a <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#types-core-types-ledgeraccount">LedgerAccount</a> will be created for each corresponding non-templated SchemaLedgerAccountInput in your Chart of Accounts.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;children&quot;: [SchemaLedgerAccountInput],
  &quot;consistencyConfig&quot;: LedgerAccountConsistencyConfigInput,
  &quot;currency&quot;: SchemaCurrencyMatchInput,
  &quot;currencyMode&quot;: &quot;multi&quot;,
  &quot;key&quot;: &quot;some-safe-string-ik&quot;,
  &quot;linkedAccount&quot;: SchemaExternalAccountMatchInput,
  &quot;name&quot;: &quot;assets/bank:{{bank_name}}&quot;,
  &quot;template&quot;: true,
  &quot;type&quot;: &quot;asset&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">children  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-schemaledgeraccountinput">[SchemaLedgerAccountInput!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Ledger Accounts to create as children of this Ledger Account. Ledger Accounts may be nested up to a maximum depth of 10. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">consistencyConfig  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-ledgeraccountconsistencyconfiginput">LedgerAccountConsistencyConfigInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The consistency configuration for this ledger account. See  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#configure-consistency">Configure consistency</a>  . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currency  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-schemacurrencymatchinput">SchemaCurrencyMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The currency of this Ledger Account. If this is not set, and  currencyMode  is not set to  multi  , it is derived from the Chart of Accounts&#x27; default. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currencyMode  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-currencymode">CurrencyMode</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">If set to  multi  , creates a multi-currency Ledger Account. If set to  single  , creates a single-currency Ledger Account. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">key  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The key of this Ledger Account. Keys are used to formulate the unique path of the Ledger Account in your Chart of Accounts. Siblings must have unique keys. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">linkedAccount  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-schemaexternalaccountmatchinput">SchemaExternalAccountMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The External Account to link to this Ledger Account. It must be provided of  linked  is true. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">name  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-parameterizedstring">ParameterizedString</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The human-readable name of this Ledger Account. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">template  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-boolean">Boolean</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Whether or not this Ledger Account should be templated. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">type  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-ledgeraccounttypes">LedgerAccountTypes</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The type of ledger account to create. Required if this is a top-level Ledger Account. If not provided, the type will be inferred from the parent. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-schemaledgerentriesinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SchemaLedgerEntriesInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-schemaledgerentriesinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The Ledger Entries in your Schema.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;types&quot;: [SchemaLedgerEntryInput]}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">types  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-schemaledgerentryinput">[SchemaLedgerEntryInput!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A list of Ledger Entry definitions. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-schemaledgerentryconditioninput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SchemaLedgerEntryConditionInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-schemaledgerentryconditioninput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A condition that must be met on a Ledger Account when a Ledger Entry is posted.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;account&quot;: SchemaLedgerAccountMatchInput,
  &quot;currency&quot;: SchemaCurrencyMatchInput,
  &quot;postcondition&quot;: SchemaConditionInput,
  &quot;precondition&quot;: SchemaConditionInput
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">account  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-schemaledgeraccountmatchinput">SchemaLedgerAccountMatchInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Ledger Account to apply the condition to. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currency  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-schemacurrencymatchinput">SchemaCurrencyMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The currency of the balance to apply the condition to. Required if the Ledger Account matched is a multi-currency Ledger Account. Otherwise, this field is defaults to the Ledger Account&#x27;s currency. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">postcondition  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-schemaconditioninput">SchemaConditionInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A  postcondition  must be met after the Ledger Entry updates are applied. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">precondition  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-schemaconditioninput">SchemaConditionInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A  precondition  must be met before any Ledger Entry updates are applied. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-schemaledgerentrygroupinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SchemaLedgerEntryGroupInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-schemaledgerentrygroupinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A Ledger Entry Group associated with a Ledger Entry type.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;key&quot;: &quot;some-safe-string-ik&quot;, &quot;value&quot;: &quot;assets/bank:{{bank_name}}&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">key  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The key for this Ledger Entry Group. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">value  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-parameterizedstring">ParameterizedString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The value associated with this Ledger Entry Group. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-schemaledgerentryinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SchemaLedgerEntryInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-schemaledgerentryinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A Ledger Entry in a Schema. All Ledger Entries defined in a Schema must have a unique type.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;conditions&quot;: [SchemaLedgerEntryConditionInput],
  &quot;description&quot;: &quot;assets/bank:{{bank_name}}&quot;,
  &quot;groups&quot;: [SchemaLedgerEntryGroupInput],
  &quot;lines&quot;: [SchemaLedgerLineInput],
  &quot;parameters&quot;: &quot;{&quot;key&quot;:&quot;value&quot;}&quot;,
  &quot;tags&quot;: [SchemaLedgerEntryTagInput],
  &quot;type&quot;: &quot;some-safe-string-ik&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">conditions  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-schemaledgerentryconditioninput">[SchemaLedgerEntryConditionInput!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Conditions that must be satisfied to post this Ledger Entry. The Ledger Entry will reject with a BadRequestError if any condition is not met. You can only add a condition on a Ledger Account containing a Line in this Ledger Entry. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">description  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-parameterizedstring">ParameterizedString</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Human-readable description of the Ledger Entry. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">groups  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-schemaledgerentrygroupinput">[SchemaLedgerEntryGroupInput!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Ledger Entries posted with this type will be in these Ledger Entry Groups. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">lines  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-schemaledgerlineinput">[SchemaLedgerLineInput!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Ledger Lines in the Ledger Entry. If provided, when posting a Typed Entry, a  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#types-core-types-ledgerline">LedgerEntry</a>  will be posted containing  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#types-core-types-ledgerline">LedgerLines</a>  corresponding to the values you provide here. If your lines contain parameters, you must supply values for those parameters that balance out the Ledger Entry. If not provided, lines will be required when posting a Typed Entry. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">parameters  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-json">JSON</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Fixed partial set of parameters to be included in a templated Ledger Entry. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">tags  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-schemaledgerentrytaginput">[SchemaLedgerEntryTagInput!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Ledger Entries posted with this type will be associated with these tags. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">type  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The type of this Ledger Entry. This is a stable, unique identifier for this entry. Uniqueness is enforced at the Schema level. You can filter on this field when querying for Ledger Entries. See the docs on  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#types-filter-types-ledgerentriesfilterset">LedgerEntryFilterSet</a> </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-schemaledgerentrytaginput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SchemaLedgerEntryTagInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-schemaledgerentrytaginput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A tag associated with a Ledger Entry type.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;key&quot;: &quot;some-safe-string-ik&quot;, &quot;value&quot;: &quot;assets/bank:{{bank_name}}&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">key  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The key for this tag. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">value  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-parameterizedstring">ParameterizedString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The value associated with the given key for this tag. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-schemaledgerlineinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SchemaLedgerLineInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-schemaledgerlineinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A Ledger Line in a Ledger Entry.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;account&quot;: SchemaLedgerAccountMatchInput,
  &quot;amount&quot;: &quot;assets/bank:{{bank_name}}&quot;,
  &quot;currency&quot;: SchemaCurrencyMatchInput,
  &quot;description&quot;: &quot;assets/bank:{{bank_name}}&quot;,
  &quot;key&quot;: &quot;some-safe-string-ik&quot;,
  &quot;tx&quot;: SchemaTxMatchInput
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">account  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-schemaledgeraccountmatchinput">SchemaLedgerAccountMatchInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Ledger Account this Ledger Line will be posted to. It supports parameters in its attributes via handlebars syntax. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">amount  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-parameterizedstring">ParameterizedString</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The amount of the Ledger Line. It supports parameters via the handlebars syntax and addition (+) and subtraction (-). </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currency  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-schemacurrencymatchinput">SchemaCurrencyMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The currency of the Ledger Line. This is required if the Ledger Account has currencyMode multi. It supports parameters in its attributes via handlebars syntax. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">description  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-parameterizedstring">ParameterizedString</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Human-readable description of the line. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">key  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The key for the Ledger Line. Ledger Line keys must be unique within a Ledger Entry. Key can be filtered on as part of the LedgerLinesFilterSet. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">tx  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-schematxmatchinput">SchemaTxMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The external transaction to reconcile. This field is required if the Ledger Account being posted to is a Linked Ledger Account. Otherwise, this field is disallowed. It supports parameters in its attributes via handlebars syntax.  See the docs on <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#reconcile-transactions">reconciliation and Linked Ledger Accounts</a>. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-updateledgeraccountinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">UpdateLedgerAccountInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-updateledgeraccountinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;consistencyConfig&quot;: LedgerAccountConsistencyConfigInput,
  &quot;name&quot;: &quot;abc123&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">consistencyConfig  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-ledgeraccountconsistencyconfiginput">LedgerAccountConsistencyConfigInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The consistency configuration for this ledger account. This defines how updates to this ledger account&#x27;s balance are handled. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">name  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The name to update the ledger account to </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-updateledgerentryinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">UpdateLedgerEntryInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-updateledgerentryinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;groups&quot;: [LedgerEntryGroupInput],
  &quot;tags&quot;: [LedgerEntryTagInput]
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">groups  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-ledgerentrygroupinput">[LedgerEntryGroupInput!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The list of Groups to add to this Ledger Entry. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">tags  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-input-types-ledgerentrytaginput">[LedgerEntryTagInput!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The list of Tags to add and/or update on this Ledger Entry. </td></tr></tbody></table></div><br/></div></section><section id="types-input-types-updateledgerinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">UpdateLedgerInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-input-types-updateledgerinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;name&quot;: &quot;abc123&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">name  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The new Ledger name. </td></tr></tbody></table></div><br/></div></section></div></div></section><section id="types-matchinput-types" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block">MatchInput Types</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-matchinput-types">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><br/><section id="types-matchinput-types-currencymatchinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CurrencyMatchInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-matchinput-types-currencymatchinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;code&quot;: &quot;AAVE&quot;, &quot;customCurrencyId&quot;: &quot;some-safe-string-ik&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">code  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-currencycode">CurrencyCode!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The currency code. This is an  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#types-scalars-and-enums-currencycode">enum type</a>  . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">customCurrencyId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The ID for a custom currency. This is specified when creating the custom currency using the  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#mutations-createcustomcurrency">createCustomCurrency</a>  mutation. </td></tr></tbody></table></div><br/></div></section><section id="types-matchinput-types-entrygroupmatchinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">EntryGroupMatchInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-matchinput-types-entrygroupmatchinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;key&quot;: &quot;some-safe-string-ik&quot;, &quot;value&quot;: &quot;some-safe-string-ik&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">key  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">value  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-matchinput-types-externalaccountmatchinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">ExternalAccountMatchInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-matchinput-types-externalaccountmatchinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Specify an External Account by using id, or linkId and externalId.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;externalId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;linkId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">externalId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The external system&#x27;s ID of the External Account. If this is specified,  linkId  is required.  id  is optional, but will be validated if provided. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">id  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  ID of the External Account. If this is specified, both  linkId  and  externalId  are optional, but will be validated if provided. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">linkId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  ID of the Link the External Account is in. If this is specified,  externalId  is required.  id  is optional, but will be validated if provided. </td></tr></tbody></table></div><br/></div></section><section id="types-matchinput-types-ledgeraccountmatchinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerAccountMatchInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-matchinput-types-ledgeraccountmatchinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Specify a Ledger Account by using id or path.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;ledger&quot;: LedgerMatchInput,
  &quot;path&quot;: &quot;abc123&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">id  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  ID of the ledger account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledger  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-ledgermatchinput">LedgerMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Ledger to which this Ledger Account belongs. This is required if you are specifying the Ledger Account by  path  . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">path  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The unique path of the ledger account.  This is a slash-delimited string containing the keys of an account and all its direct ancestors. </td></tr></tbody></table></div><br/></div></section><section id="types-matchinput-types-ledgerentrygroupmatchinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerEntryGroupMatchInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-matchinput-types-ledgerentrygroupmatchinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;key&quot;: &quot;some-safe-string-ik&quot;,
  &quot;ledger&quot;: LedgerMatchInput,
  &quot;value&quot;: &quot;some-safe-string-ik&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">key  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledger  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-ledgermatchinput">LedgerMatchInput!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">value  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-matchinput-types-ledgerentrymatchinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerEntryMatchInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-matchinput-types-ledgerentrymatchinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Specify a Ledger Entry by using id.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;ik&quot;: &quot;some-safe-string-ik&quot;,
  &quot;ledger&quot;: LedgerMatchInput
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">id  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  ID of the Ledger Entry </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ik  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The IK provided to the  addLedgerEntry  mutation or the  ik  field returned from a  reconcileTx  mutation. This is required if you have not provided  id  . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledger  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-ledgermatchinput">LedgerMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  ID of the Ledger to which this Ledger Entry belongs. This is required if you have not provided  id  . </td></tr></tbody></table></div><br/></div></section><section id="types-matchinput-types-ledgerlinematchinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerLineMatchInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-matchinput-types-ledgerlinematchinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Specify a Ledger Line by using id.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">id  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  ID of the ledger line </td></tr></tbody></table></div><br/></div></section><section id="types-matchinput-types-ledgermatchinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerMatchInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-matchinput-types-ledgermatchinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Specify a Ledger by using id or ik.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;, &quot;ik&quot;: &quot;some-safe-string-ik&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">id  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  ID of the ledger </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ik  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The IK passed into the  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#mutations-createledger">createLedger</a>  mutation. This is treated as a second unique identifier for this ledger. </td></tr></tbody></table></div><br/></div></section><section id="types-matchinput-types-linkmatchinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LinkMatchInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-matchinput-types-linkmatchinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">id  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-matchinput-types-schemacurrencymatchinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SchemaCurrencyMatchInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-matchinput-types-schemacurrencymatchinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Matches a Currency. Can be a built-in <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#types-scalars-and-enums-currencycode">CurrencyCode</a>, custom Currency, or a parameterized string. If you supply a parameterized string, you must pass in a valid CurrencyCode as a parameter when posting a Ledger Entry.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;code&quot;: &quot;assets/bank:{{bank_name}}&quot;,
  &quot;customCurrencyId&quot;: &quot;assets/bank:{{bank_name}}&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">code  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-parameterizedstring">ParameterizedString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The currency code. This must either be a  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#types-scalars-and-enums-currencycode">CurrencyCode</a>  or a parameterized string that resolves to a CurrencyCode . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">customCurrencyId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-parameterizedstring">ParameterizedString</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The ID for a custom currency. This is specified when creating the custom currency using the  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#mutations-createcustomcurrency">createCustomCurrency</a>  mutation. </td></tr></tbody></table></div><br/></div></section><section id="types-matchinput-types-schemaexternalaccountmatchinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SchemaExternalAccountMatchInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-matchinput-types-schemaexternalaccountmatchinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;externalId&quot;: &quot;assets/bank:{{bank_name}}&quot;,
  &quot;id&quot;: &quot;assets/bank:{{bank_name}}&quot;,
  &quot;linkId&quot;: &quot;assets/bank:{{bank_name}}&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">externalId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-parameterizedstring">ParameterizedString</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The External systems&#x27;s ID of the account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">id  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-parameterizedstring">ParameterizedString</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  ID of the external account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">linkId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-parameterizedstring">ParameterizedString</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  ID of the link </td></tr></tbody></table></div><br/></div></section><section id="types-matchinput-types-schemaledgeraccountmatchinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SchemaLedgerAccountMatchInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-matchinput-types-schemaledgeraccountmatchinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Matches a Ledger Account in a Schema.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;path&quot;: &quot;assets/bank:{{bank_name}}&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">path  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-parameterizedstring">ParameterizedString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The unique path of the Ledger Account in the Schema. This is a slash-delimited string containing the keys of a Ledger Account and all its direct ancestors. ex: expense-root/subscriptions/netflix For Templated Ledger Accounts, you must supply a parameter in the path that will be used to name an instance of the template. ex:  &quot;expense-root/subscriptions/vendor:{{vendor_name}}&quot; </td></tr></tbody></table></div><br/></div></section><section id="types-matchinput-types-schemamatchinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SchemaMatchInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-matchinput-types-schemamatchinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">An object used to retrieve a Schema.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;key&quot;: &quot;some-safe-string-ik&quot;, &quot;version&quot;: 2277}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">key  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The key to retrieve a Schema by.  key  is unique to a Workspace. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">version  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Optional parameter to specify version of requested Schema. If not provided, it defaults to 0, representing the latest available version for the provided Schema key. </td></tr></tbody></table></div><br/></div></section><section id="types-matchinput-types-schematxmatchinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SchemaTxMatchInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-matchinput-types-schematxmatchinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Matches a transaction at an external system. This is used to specify the transaction being reconciled into a Linked Ledger Account</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;externalId&quot;: &quot;assets/bank:{{bank_name}}&quot;, &quot;id&quot;: &quot;assets/bank:{{bank_name}}&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">externalId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-parameterizedstring">ParameterizedString</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The external system&#x27;s ID for the transaction. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">id  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-parameterizedstring">ParameterizedString</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  ID for the transaction. </td></tr></tbody></table></div><br/></div></section><section id="types-matchinput-types-tagmatchinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">TagMatchInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-matchinput-types-tagmatchinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Specifies a single tag that an entity is expected to have. You must specify both the key and the value.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;key&quot;: &quot;some-safe-string-ik&quot;, &quot;value&quot;: &quot;some-safe-string-ik&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">key  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The key of this tag. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">value  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The value associated with this tag&#x27;s key. </td></tr></tbody></table></div><br/></div></section><section id="types-matchinput-types-txmatchinput" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">TxMatchInput</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-matchinput-types-txmatchinput">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Specify a Tx by using id or externalId, the Link it belongs to by linkId, and the External Account it is a part of by accountId or externalAccountId.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;accountId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;externalAccountId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;externalId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;linkId&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">accountId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  ID of the external account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">externalAccountId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The external system&#x27;s ID for the account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">externalId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The external system&#x27;s ID for the transaction </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">id  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  ID of the transaction </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">linkId  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  ID of the link </td></tr></tbody></table></div><br/></div></section></div></div></section><section id="types-response-types" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block">Response Types</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-response-types">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><br/><section id="types-response-types-addledgerentryresponse" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">AddLedgerEntryResponse</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-response-types-addledgerentryresponse">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">AddLedgerEntryResult
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Union Types</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-result-types-addledgerentryresult">AddLedgerEntryResult</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-badrequesterror">BadRequestError</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-internalerror">InternalError</a> </td></tr></tbody></table></div><br/></div></section><section id="types-response-types-createcustomcurrencyresponse" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CreateCustomCurrencyResponse</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-response-types-createcustomcurrencyresponse">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">BadRequestError
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Union Types</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-badrequesterror">BadRequestError</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-result-types-createcustomcurrencyresult">CreateCustomCurrencyResult</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-internalerror">InternalError</a> </td></tr></tbody></table></div><br/></div></section><section id="types-response-types-createcustomlinkresponse" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CreateCustomLinkResponse</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-response-types-createcustomlinkresponse">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">BadRequestError
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Union Types</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-badrequesterror">BadRequestError</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-result-types-createcustomlinkresult">CreateCustomLinkResult</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-internalerror">InternalError</a> </td></tr></tbody></table></div><br/></div></section><section id="types-response-types-createledgeraccountresponse" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CreateLedgerAccountResponse</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-response-types-createledgeraccountresponse">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">BadRequestError
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Union Types</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-badrequesterror">BadRequestError</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-result-types-createledgeraccountresult">CreateLedgerAccountResult</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-internalerror">InternalError</a> </td></tr></tbody></table></div><br/></div></section><section id="types-response-types-createledgeraccountsresponse" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CreateLedgerAccountsResponse</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-response-types-createledgeraccountsresponse">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">BadRequestError
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Union Types</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-badrequesterror">BadRequestError</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-result-types-createledgeraccountsresult">CreateLedgerAccountsResult</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-internalerror">InternalError</a> </td></tr></tbody></table></div><br/></div></section><section id="types-response-types-createledgerresponse" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CreateLedgerResponse</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-response-types-createledgerresponse">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">BadRequestError
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Union Types</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-badrequesterror">BadRequestError</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-result-types-createledgerresult">CreateLedgerResult</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-internalerror">InternalError</a> </td></tr></tbody></table></div><br/></div></section><section id="types-response-types-reconciletxresponse" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">ReconcileTxResponse</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-response-types-reconciletxresponse">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">BadRequestError
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Union Types</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-badrequesterror">BadRequestError</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-internalerror">InternalError</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-result-types-reconciletxresult">ReconcileTxResult</a> </td></tr></tbody></table></div><br/></div></section><section id="types-response-types-storeschemaresponse" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">StoreSchemaResponse</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-response-types-storeschemaresponse">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Returned by the <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#mutations-storeschema">storeSchema</a> mutation.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">BadRequestError
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Union Types</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-badrequesterror">BadRequestError</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-internalerror">InternalError</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-result-types-storeschemaresult">StoreSchemaResult</a> </td></tr></tbody></table></div><br/></div></section><section id="types-response-types-synccustomaccountsresponse" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SyncCustomAccountsResponse</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-response-types-synccustomaccountsresponse">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">BadRequestError
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Union Types</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-badrequesterror">BadRequestError</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-internalerror">InternalError</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-result-types-synccustomaccountsresult">SyncCustomAccountsResult</a> </td></tr></tbody></table></div><br/></div></section><section id="types-response-types-synccustomtxsresponse" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SyncCustomTxsResponse</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-response-types-synccustomtxsresponse">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">BadRequestError
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Union Types</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-badrequesterror">BadRequestError</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-internalerror">InternalError</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-result-types-synccustomtxsresult">SyncCustomTxsResult</a> </td></tr></tbody></table></div><br/></div></section><section id="types-response-types-updateledgeraccountresponse" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">UpdateLedgerAccountResponse</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-response-types-updateledgeraccountresponse">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">BadRequestError
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Union Types</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-badrequesterror">BadRequestError</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-internalerror">InternalError</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-result-types-updateledgeraccountresult">UpdateLedgerAccountResult</a> </td></tr></tbody></table></div><br/></div></section><section id="types-response-types-updateledgerentryresponse" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">UpdateLedgerEntryResponse</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-response-types-updateledgerentryresponse">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">BadRequestError
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Union Types</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-badrequesterror">BadRequestError</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-internalerror">InternalError</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-result-types-updateledgerentryresult">UpdateLedgerEntryResult</a> </td></tr></tbody></table></div><br/></div></section><section id="types-response-types-updateledgerresponse" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">UpdateLedgerResponse</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-response-types-updateledgerresponse">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">BadRequestError
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Union Types</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-badrequesterror">BadRequestError</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-error-types-internalerror">InternalError</a> </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-result-types-updateledgerresult">UpdateLedgerResult</a> </td></tr></tbody></table></div><br/></div></section></div></div></section><section id="types-result-types" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block">Result Types</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-result-types">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><br/><section id="types-result-types-addledgerentryresult" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">AddLedgerEntryResult</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-result-types-addledgerentryresult">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;entry&quot;: LedgerEntry,
  &quot;isIkReplay&quot;: true,
  &quot;lines&quot;: [LedgerLine]
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">entry  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledgerentry">LedgerEntry!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The ledger entry that was posted </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">isIkReplay  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-boolean">Boolean!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">True if this request successfully completed before and the previous response is being returned </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">lines  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledgerline">[LedgerLine!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The ledger lines that were created in that entry </td></tr></tbody></table></div><br/></div></section><section id="types-result-types-createcustomcurrencyresult" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CreateCustomCurrencyResult</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-result-types-createcustomcurrencyresult">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;customCurrency&quot;: Currency}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">customCurrency  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-currency">Currency!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Currency that was created. </td></tr></tbody></table></div><br/></div></section><section id="types-result-types-createcustomlinkresult" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CreateCustomLinkResult</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-result-types-createcustomlinkresult">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;isIkReplay&quot;: true, &quot;link&quot;: Link}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">isIkReplay  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-boolean">Boolean!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">link  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-link">Link!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The custom link that was created. Represents an instance of an external system. </td></tr></tbody></table></div><br/></div></section><section id="types-result-types-createledgeraccountresult" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CreateLedgerAccountResult</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-result-types-createledgeraccountresult">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;isIkReplay&quot;: true, &quot;ledgerAccount&quot;: LedgerAccount}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">isIkReplay  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-boolean">Boolean!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">true if a previous request successfully created this ledger account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerAccount  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledgeraccount">LedgerAccount!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The ledger account that was created </td></tr></tbody></table></div><br/></div></section><section id="types-result-types-createledgeraccountsresult" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CreateLedgerAccountsResult</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-result-types-createledgeraccountsresult">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ikReplays&quot;: [IkReplay],
  &quot;ledgerAccounts&quot;: [LedgerAccount]
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ikReplays  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-ikreplay">[IkReplay!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Whether the ledger accounts were successfully created by a previous request </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerAccounts  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledgeraccount">[LedgerAccount!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The ledger accounts that were created </td></tr></tbody></table></div><br/></div></section><section id="types-result-types-createledgerresult" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CreateLedgerResult</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-result-types-createledgerresult">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;isIkReplay&quot;: true, &quot;ledger&quot;: Ledger}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">isIkReplay  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-boolean">Boolean!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">true if this request successfully completed before and the previous response is being returned </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledger  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledger">Ledger!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Ledger that was created </td></tr></tbody></table></div><br/></div></section><section id="types-result-types-reconciletxresult" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">ReconcileTxResult</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-result-types-reconciletxresult">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;entry&quot;: LedgerEntry,
  &quot;isIkReplay&quot;: true,
  &quot;lines&quot;: [LedgerLine]
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">entry  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledgerentry">LedgerEntry!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The ledger entry that was posted </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">isIkReplay  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-boolean">Boolean!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">True if this request successfully completed before and the previous response is being returned </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">lines  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledgerline">[LedgerLine!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The ledger lines that were created in that entry </td></tr></tbody></table></div><br/></div></section><section id="types-result-types-storeschemaresult" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">StoreSchemaResult</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-result-types-storeschemaresult">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">StoreSchemaResult represents a successful execution of storeSchema.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;schema&quot;: Schema}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">schema  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-schema">Schema!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Schema that was stored as a result of calling  storeSchema  . </td></tr></tbody></table></div><br/></div></section><section id="types-result-types-synccustomaccountsresult" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SyncCustomAccountsResult</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-result-types-synccustomaccountsresult">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;accounts&quot;: [ExternalAccount]}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">accounts  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-externalaccount">[ExternalAccount!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The external accounts that were synced. </td></tr></tbody></table></div><br/></div></section><section id="types-result-types-synccustomtxsresult" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SyncCustomTxsResult</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-result-types-synccustomtxsresult">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;txs&quot;: [Tx]}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">txs  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-tx">[Tx!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-result-types-updateledgeraccountresult" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">UpdateLedgerAccountResult</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-result-types-updateledgeraccountresult">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;ledgerAccount&quot;: LedgerAccount}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerAccount  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledgeraccount">LedgerAccount!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The ledger account that was updated </td></tr></tbody></table></div><br/></div></section><section id="types-result-types-updateledgerentryresult" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">UpdateLedgerEntryResult</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-result-types-updateledgerentryresult">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;entry&quot;: LedgerEntry}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">entry  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledgerentry">LedgerEntry!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Ledger Entry that was updated. </td></tr></tbody></table></div><br/></div></section><section id="types-result-types-updateledgerresult" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">UpdateLedgerResult</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-result-types-updateledgerresult">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;ledger&quot;: Ledger}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledger  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledger">Ledger!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The updated Ledger. </td></tr></tbody></table></div><br/></div></section></div></div></section><section id="types-error-types" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block">Error Types</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-error-types">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><br/><section id="types-error-types-badrequesterror" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">BadRequestError</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-error-types-badrequesterror">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Equivalent to an HTTP 400 - request either has missing or incorrect data</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;code&quot;: &quot;abc123&quot;, &quot;message&quot;: &quot;abc123&quot;, &quot;retryable&quot;: true}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">code  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The HTTP status code corresponding to the error </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">message  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The error message </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">retryable  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-boolean">Boolean!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Whether or not the operation is retryable </td></tr></tbody></table></div><br/></div></section><section id="types-error-types-error" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Error</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-error-types-error">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Base error interface</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;code&quot;: &quot;abc123&quot;, &quot;message&quot;: &quot;abc123&quot;, &quot;retryable&quot;: true}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">code  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The HTTP status code corresponding to the error </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">message  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The error message </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">retryable  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-boolean">Boolean!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Whether or not the operation is retryable </td></tr></tbody></table></div><br/></div></section><section id="types-error-types-internalerror" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">InternalError</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-error-types-internalerror">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Equivalent to an HTTP 5XX - something went wrong with our API.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;code&quot;: &quot;abc123&quot;, &quot;message&quot;: &quot;abc123&quot;, &quot;retryable&quot;: true}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">code  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The HTTP status code corresponding to the error </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">message  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The error message </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">retryable  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-boolean">Boolean!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Whether or not the operation is retryable </td></tr></tbody></table></div><br/></div></section></div></div></section><section id="types-connection-types" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block">Connection Types</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-connection-types">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><br/><section id="types-connection-types-currencyamountconnection" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CurrencyAmountConnection</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-connection-types-currencyamountconnection">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A paginated list of amounts with their currencies</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;nodes&quot;: [CurrencyAmount],
  &quot;pageInfo&quot;: PageInfo
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">nodes  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-currencyamount">[CurrencyAmount!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The current page of results </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">pageInfo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-pageinfo">PageInfo!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#types-connection-types-pageinfo">pagination info</a>  for this list </td></tr></tbody></table></div><br/></div></section><section id="types-connection-types-customcurrenciesconnection" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CustomCurrenciesConnection</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-connection-types-customcurrenciesconnection">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A paginated list of Custom Currencies</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;nodes&quot;: [Currency],
  &quot;pageInfo&quot;: PageInfo
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">nodes  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-currency">[Currency!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The current page of results </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">pageInfo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-pageinfo">PageInfo!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#types-connection-types-pageinfo">pagination info</a>  for this list </td></tr></tbody></table></div><br/></div></section><section id="types-connection-types-externalaccountsconnection" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">ExternalAccountsConnection</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-connection-types-externalaccountsconnection">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A paginated list of External Accounts</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;nodes&quot;: [ExternalAccount],
  &quot;pageInfo&quot;: PageInfo
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">nodes  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-externalaccount">[ExternalAccount!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The current page of results </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">pageInfo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-pageinfo">PageInfo!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#types-connection-types-pageinfo">pagination info</a>  for this list </td></tr></tbody></table></div><br/></div></section><section id="types-connection-types-ledgeraccountsconnection" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerAccountsConnection</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-connection-types-ledgeraccountsconnection">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A paginated list of Ledger Accounts</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;nodes&quot;: [LedgerAccount],
  &quot;pageInfo&quot;: PageInfo
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">nodes  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledgeraccount">[LedgerAccount!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The current page of results </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">pageInfo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-pageinfo">PageInfo!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#types-connection-types-pageinfo">pagination info</a>  for this list </td></tr></tbody></table></div><br/></div></section><section id="types-connection-types-ledgerentriesconnection" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerEntriesConnection</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-connection-types-ledgerentriesconnection">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A paginated list of Ledger Entries</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;nodes&quot;: [LedgerEntry],
  &quot;pageInfo&quot;: PageInfo
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">nodes  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledgerentry">[LedgerEntry!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The current page of results </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">pageInfo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-pageinfo">PageInfo!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#types-connection-types-pageinfo">pagination info</a>  for this list </td></tr></tbody></table></div><br/></div></section><section id="types-connection-types-ledgerentrygroupbalanceconnection" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerEntryGroupBalanceConnection</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-connection-types-ledgerentrygroupbalanceconnection">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A set of balance changes for a specific Ledger Entry Group.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;nodes&quot;: [LedgerEntryGroupBalance],
  &quot;pageInfo&quot;: PageInfo
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">nodes  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-ledgerentrygroupbalance">[LedgerEntryGroupBalance!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">pageInfo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-pageinfo">PageInfo!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-connection-types-ledgerentrygroupsconnection" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerEntryGroupsConnection</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-connection-types-ledgerentrygroupsconnection">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A paginated list of Ledger Entry Groups</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;nodes&quot;: [LedgerEntryGroup],
  &quot;pageInfo&quot;: PageInfo
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">nodes  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-ledgerentrygroup">[LedgerEntryGroup!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The current page of results </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">pageInfo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-pageinfo">PageInfo!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Pagination info for this list. </td></tr></tbody></table></div><br/></div></section><section id="types-connection-types-ledgerlinesconnection" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerLinesConnection</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-connection-types-ledgerlinesconnection">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A paginated list of Ledger Lines</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;nodes&quot;: [LedgerLine],
  &quot;pageInfo&quot;: PageInfo
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">nodes  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledgerline">[LedgerLine!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The current page of results </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">pageInfo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-pageinfo">PageInfo!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#types-connection-types-pageinfo">pagination info</a>  for this list </td></tr></tbody></table></div><br/></div></section><section id="types-connection-types-ledgermigrationconnection" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerMigrationConnection</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-connection-types-ledgermigrationconnection">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A paginated list of Ledger Migrations</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;nodes&quot;: [LedgerMigration],
  &quot;pageInfo&quot;: PageInfo
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">nodes  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledgermigration">[LedgerMigration!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The current page of results </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">pageInfo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-pageinfo">PageInfo!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Pagination info for this list. </td></tr></tbody></table></div><br/></div></section><section id="types-connection-types-ledgersconnection" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgersConnection</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-connection-types-ledgersconnection">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A paginated list of Ledgers</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;nodes&quot;: [Ledger],
  &quot;pageInfo&quot;: PageInfo
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">nodes  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledger">[Ledger!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The current page of results </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">pageInfo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-pageinfo">PageInfo!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#types-connection-types-pageinfo">pagination info</a>  for this list </td></tr></tbody></table></div><br/></div></section><section id="types-connection-types-linksconnection" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LinksConnection</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-connection-types-linksconnection">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A paginated list of Links</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;nodes&quot;: [Link],
  &quot;pageInfo&quot;: PageInfo
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">nodes  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-link">[Link!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The current page of results </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">pageInfo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-pageinfo">PageInfo!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#types-connection-types-pageinfo">pagination info</a>  for this list </td></tr></tbody></table></div><br/></div></section><section id="types-connection-types-pageinfo" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">PageInfo</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-connection-types-pageinfo">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">An object containing <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a> details.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;endCursor&quot;: &quot;abc123&quot;,
  &quot;hasNextPage&quot;: true,
  &quot;hasPreviousPage&quot;: true,
  &quot;startCursor&quot;: &quot;abc123&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">endCursor  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">hasNextPage  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-boolean">Boolean!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">hasPreviousPage  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-boolean">Boolean!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">startCursor  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-connection-types-schemaconnection" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SchemaConnection</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-connection-types-schemaconnection">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A paginated list of Schemas in a Workspace.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;nodes&quot;: [Schema],
  &quot;pageInfo&quot;: PageInfo
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">nodes  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-schema">[Schema!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The current page of results </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">pageInfo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-pageinfo">PageInfo!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Pagination info for this list. </td></tr></tbody></table></div><br/></div></section><section id="types-connection-types-schemaversionconnection" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SchemaVersionConnection</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-connection-types-schemaversionconnection">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A paginated list of SchemaVersions for a given Schema.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;nodes&quot;: [SchemaVersion],
  &quot;pageInfo&quot;: PageInfo
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">nodes  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-schemaversion">[SchemaVersion!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The current page of results </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">pageInfo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-pageinfo">PageInfo!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Pagination info for this list. </td></tr></tbody></table></div><br/></div></section><section id="types-connection-types-txsconnection" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">TxsConnection</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-connection-types-txsconnection">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A paginated list of Txs</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;nodes&quot;: [Tx],
  &quot;pageInfo&quot;: PageInfo
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">nodes  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-tx">[Tx!]!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The current page of results </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">pageInfo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-pageinfo">PageInfo!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/api-reference#types-connection-types-pageinfo">pagination info</a>  for this list </td></tr></tbody></table></div><br/></div></section></div></div></section><section id="types-filter-types" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block">Filter Types</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-filter-types">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><br/><section id="types-filter-types-currencyfilter" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CurrencyFilter</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-filter-types-currencyfilter">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;equalTo&quot;: CurrencyMatchInput,
  &quot;in&quot;: [CurrencyMatchInput]
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">equalTo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-currencymatchinput">CurrencyMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Must match the value provided </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">in  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-currencymatchinput">[CurrencyMatchInput!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Must match one of the values provided </td></tr></tbody></table></div><br/></div></section><section id="types-filter-types-datefilter" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">DateFilter</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-filter-types-datefilter">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;equalTo&quot;: &quot;2022-03-28&quot;, &quot;in&quot;: [&quot;2022-03-28&quot;]}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">equalTo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-date">Date</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">in  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-date">[Date!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-filter-types-datetimefilter" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">DateTimeFilter</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-filter-types-datetimefilter">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Filters a timestamp field between two moments in time</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;after&quot;: &quot;2007-12-03T10:15:30Z&quot;, &quot;before&quot;: &quot;2007-12-03T10:15:30Z&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">after  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-datetime">DateTime</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The timestamp value must be after this moment. Specified in ISO 8601 format e.g &quot;1968-01-01T16:45:00Z&quot; </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">before  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-datetime">DateTime</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The timestamp value must be before this moment. Specified in ISO 8601 format e.g &quot;1968-01-01T16:45:00Z&quot; </td></tr></tbody></table></div><br/></div></section><section id="types-filter-types-externalaccountfilter" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">ExternalAccountFilter</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-filter-types-externalaccountfilter">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;equalTo&quot;: ExternalAccountMatchInput,
  &quot;in&quot;: [ExternalAccountMatchInput]
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">equalTo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-externalaccountmatchinput">ExternalAccountMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Ledger Account must linked to the the specified external account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">in  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-externalaccountmatchinput">[ExternalAccountMatchInput!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Ledger Account can be linked to any of the specified external accounts </td></tr></tbody></table></div><br/></div></section><section id="types-filter-types-groupbalanceaccountfilter" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">GroupBalanceAccountFilter</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-filter-types-groupbalanceaccountfilter">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A filter to query balances of a specific subset of accounts</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;id&quot;: StringFilter,
  &quot;path&quot;: StringMatchFilter
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">id  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-stringfilter">StringFilter</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A filter that must match the account ID </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">path  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-stringmatchfilter">StringMatchFilter</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A filter that must match the account path. Wildcards (&#x27;*&#x27;) may be used only for template variables, and will only match a single variable each. </td></tr></tbody></table></div><br/></div></section><section id="types-filter-types-int96filter" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Int96Filter</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-filter-types-int96filter">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;eq&quot;: &quot;999999999999&quot;,
  &quot;gte&quot;: &quot;999999999999&quot;,
  &quot;lte&quot;: &quot;999999999999&quot;,
  &quot;ne&quot;: &quot;999999999999&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">eq  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int96">Int96</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Must exactly equal this Int96 value </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">gte  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int96">Int96</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Must be greater than or equal to this Int96 value </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">lte  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int96">Int96</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Must be less than or equal to this Int96 value </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ne  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int96">Int96</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Must not equal this Int96 value </td></tr></tbody></table></div><br/></div></section><section id="types-filter-types-ledgeraccountfilter" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerAccountFilter</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-filter-types-ledgeraccountfilter">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;equalTo&quot;: LedgerAccountMatchInput,
  &quot;in&quot;: [LedgerAccountMatchInput]
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">equalTo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-ledgeraccountmatchinput">LedgerAccountMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Result must match the specified Ledger Account </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">in  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-ledgeraccountmatchinput">[LedgerAccountMatchInput!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Results can match any of specified Ledger Accounts </td></tr></tbody></table></div><br/></div></section><section id="types-filter-types-ledgeraccounttypefilter" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerAccountTypeFilter</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-filter-types-ledgeraccounttypefilter">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;equalTo&quot;: &quot;asset&quot;, &quot;in&quot;: [&quot;asset&quot;]}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">equalTo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-ledgeraccounttypes">LedgerAccountTypes</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Results must be of the specified Ledger Account type </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">in  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-ledgeraccounttypes">[LedgerAccountTypes!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Results can have any of the specified Ledger Account types </td></tr></tbody></table></div><br/></div></section><section id="types-filter-types-ledgeraccountsfilterset" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerAccountsFilterSet</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-filter-types-ledgeraccountsfilterset">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;hasParentLedgerAccount&quot;: true,
  &quot;isLinkedAccount&quot;: true,
  &quot;ledgerAccount&quot;: LedgerAccountFilter,
  &quot;linkedAccount&quot;: ExternalAccountFilter,
  &quot;parentLedgerAccount&quot;: LedgerAccountFilter,
  &quot;path&quot;: StringMatchFilter,
  &quot;type&quot;: LedgerAccountTypeFilter
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">hasParentLedgerAccount  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-boolean">Boolean</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Use this to filter Ledger Accounts by their parent status </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">isLinkedAccount  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-boolean">Boolean</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Use this to filter Ledger Accounts by their linked status </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerAccount  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-ledgeraccountfilter">LedgerAccountFilter</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Use this to filter Ledger Accounts by their ID or path </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">linkedAccount  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-externalaccountfilter">ExternalAccountFilter</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Use this to filter Ledger Accounts by their external linked account ID </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">parentLedgerAccount  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-ledgeraccountfilter">LedgerAccountFilter</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Use this to filter Ledger Accounts by their parent account IDs </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">path  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-stringmatchfilter">StringMatchFilter</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A filter that must match the account path. Wildcards (&#x27;  <em>&#x27;) may be used only for template variables, and will only match a single variable each. For example: &#x27;assets-root/accounts-receivable/merchant:</em>  &#x27; would match: &#x27;assets-root/accounts-receivable/merchant:1&#x27; and &#x27;assets-root/accounts-receivable/merchant:1/child&#x27;. Wildcards may not be used outside of template variables. For example, passing in &#x27;assets-root/*&#x27; as a filter is invalid and would raise a GraphQL error. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">type  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-ledgeraccounttypefilter">LedgerAccountTypeFilter</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Use this to filter Ledger Accounts by their type </td></tr></tbody></table></div><br/></div></section><section id="types-filter-types-ledgerentriesfilterset" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerEntriesFilterSet</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-filter-types-ledgerentriesfilterset">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;date&quot;: DateFilter,
  &quot;ledgerEntry&quot;: LedgerEntryFilter,
  &quot;posted&quot;: DateTimeFilter,
  &quot;tag&quot;: TagFilter,
  &quot;type&quot;: StringFilter
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">date  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-datefilter">DateFilter</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerEntry  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-ledgerentryfilter">LedgerEntryFilter</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Use to filter Ledger Entries by their IDs or IKs. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">posted  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-datetimefilter">DateTimeFilter</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">tag  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-tagfilter">TagFilter</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Use this to filter Ledger Entries by tags. The response will include entries that contain tags matching the filter. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">type  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-stringfilter">StringFilter</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Use this to filter Ledger Entries by type. Ledger Entry types are defined in Schemas. </td></tr></tbody></table></div><br/></div></section><section id="types-filter-types-ledgerentryfilter" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerEntryFilter</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-filter-types-ledgerentryfilter">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;equalTo&quot;: LedgerEntryMatchInput,
  &quot;in&quot;: [LedgerEntryMatchInput]
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">equalTo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-ledgerentrymatchinput">LedgerEntryMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Result must be the specified Ledger Entry. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">in  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-ledgerentrymatchinput">[LedgerEntryMatchInput!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Result can be any of the specified Ledger Entries. </td></tr></tbody></table></div><br/></div></section><section id="types-filter-types-ledgerentrygroupbalancefilterset" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerEntryGroupBalanceFilterSet</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-filter-types-ledgerentrygroupbalancefilterset">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Optional filters for querying balances on a Ledger Entry Group.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;account&quot;: GroupBalanceAccountFilter,
  &quot;currency&quot;: CurrencyFilter,
  &quot;ownBalance&quot;: Int96Filter
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">account  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-groupbalanceaccountfilter">GroupBalanceAccountFilter</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Filter to a subset of accounts </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currency  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-currencyfilter">CurrencyFilter</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Filter to one or more currencies </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ownBalance  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-int96filter">Int96Filter</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Filter to only balances in a certain range </td></tr></tbody></table></div><br/></div></section><section id="types-filter-types-ledgerentrygroupsfilterset" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerEntryGroupsFilterSet</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-filter-types-ledgerentrygroupsfilterset">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;created&quot;: DateTimeFilter,
  &quot;key&quot;: StringFilter
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">created  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-datetimefilter">DateTimeFilter</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Use to filter ledger groups by their created timestamp </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">key  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-stringfilter">StringFilter</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Use to filter ledger groups by their type </td></tr></tbody></table></div><br/></div></section><section id="types-filter-types-ledgerlinesfilterset" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerLinesFilterSet</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-filter-types-ledgerlinesfilterset">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;date&quot;: DateFilter,
  &quot;key&quot;: StringFilter,
  &quot;posted&quot;: DateTimeFilter,
  &quot;type&quot;: TxTypeFilter
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">date  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-datefilter">DateFilter</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">key  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-stringfilter">StringFilter</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Use this to filter Ledger Lines by key. Ledger Line keys are defined in Schemas. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">posted  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-datetimefilter">DateTimeFilter</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">type  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-txtypefilter">TxTypeFilter</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-filter-types-ledgertypefilter" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerTypeFilter</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-filter-types-ledgertypefilter">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;equalTo&quot;: &quot;double&quot;, &quot;in&quot;: [&quot;double&quot;]}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">equalTo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-ledgertypes">LedgerTypes</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">in  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-ledgertypes">[LedgerTypes!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-filter-types-ledgersfilterset" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgersFilterSet</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-filter-types-ledgersfilterset">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;hasSchema&quot;: true, &quot;type&quot;: LedgerTypeFilter}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">hasSchema  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-boolean">Boolean</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">type  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-ledgertypefilter">LedgerTypeFilter</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-filter-types-stringfilter" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">StringFilter</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-filter-types-stringfilter">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;equalTo&quot;: &quot;abc123&quot;, &quot;in&quot;: [&quot;abc123&quot;]}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">equalTo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">in  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">[String!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-filter-types-stringmatchfilter" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">StringMatchFilter</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-filter-types-stringmatchfilter">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;equalTo&quot;: &quot;abc123&quot;, &quot;in&quot;: [&quot;abc123&quot;], &quot;matches&quot;: &quot;abc123&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">equalTo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Must exactly equal the provided value </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">in  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">[String!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Must exactly equal one of the provided values </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">matches  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Must match the provided pattern. Wildcards (&quot;*&quot;) will match any substring </td></tr></tbody></table></div><br/></div></section><section id="types-filter-types-tagfilter" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">TagFilter</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-filter-types-tagfilter">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Filters a result set based on the tags it contains.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;equalTo&quot;: TagMatchInput,
  &quot;in&quot;: [TagMatchInput]
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">equalTo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-tagmatchinput">TagMatchInput</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">in  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-matchinput-types-tagmatchinput">[TagMatchInput!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-filter-types-txtypefilter" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">TxTypeFilter</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-filter-types-txtypefilter">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;equalTo&quot;: &quot;credit&quot;, &quot;in&quot;: [&quot;credit&quot;]}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Input Field</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">equalTo  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-txtype">TxType</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">in  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-txtype">[TxType!]</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section></div></div></section><section id="types-utility-types" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block">Utility Types</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-utility-types">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><br/><section id="types-utility-types-currencyamount" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CurrencyAmount</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-utility-types-currencyamount">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A single amount accompanied by its currency</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;amount&quot;: &quot;999999999999&quot;, &quot;currency&quot;: Currency}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">amount  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int96">Int96!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Numerical integer value, serialized as a string </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currency  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-currency">Currency!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The currency this amount is in </td></tr></tbody></table></div><br/></div></section><section id="types-utility-types-customlink" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">CustomLink</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-utility-types-customlink">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;created&quot;: &quot;abc123&quot;,
  &quot;dashboardUrl&quot;: &quot;abc123&quot;,
  &quot;externalAccounts&quot;: ExternalAccountsConnection,
  &quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;name&quot;: &quot;abc123&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">created  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ISO-8601 timestamp when the Link was created. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">dashboardUrl  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">URL to the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  Dashboard for this Link. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">externalAccounts  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-externalaccountsconnection">ExternalAccountsConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A list of External Accounts associated with this Link. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">id  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"> <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> ID of the Custom Link. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">name  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Name of the Link as it appears in the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  Dashboard. </td></tr></tbody></table></div><br/></div></section><section id="types-utility-types-increaseenv" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">IncreaseEnv</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-utility-types-increaseenv">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;production&quot;
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Enum Value</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">production </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">sandbox </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-utility-types-increaselink" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">IncreaseLink</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-utility-types-increaselink">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;created&quot;: &quot;abc123&quot;,
  &quot;dashboardUrl&quot;: &quot;abc123&quot;,
  &quot;externalAccounts&quot;: ExternalAccountsConnection,
  &quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;increaseEnv&quot;: &quot;production&quot;,
  &quot;name&quot;: &quot;abc123&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">created  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ISO-8601 timestamp when the Link was created. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">dashboardUrl  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">URL to the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  Dashboard for this Link. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">externalAccounts  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-externalaccountsconnection">ExternalAccountsConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A list of External Accounts associated with this Link. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">id  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"> <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> ID of the Increase Link. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">increaseEnv  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-increaseenv">IncreaseEnv!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The environment of the Increase Link, either sandbox or production. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">name  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Name of the Link as it appears in the Dashboard. </td></tr></tbody></table></div><br/></div></section><section id="types-utility-types-int96condition" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Int96Condition</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-utility-types-int96condition">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A condition that must be met on an Int96 field.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;eq&quot;: &quot;999999999999&quot;, &quot;gte&quot;: &quot;999999999999&quot;, &quot;lte&quot;: &quot;999999999999&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">eq  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int96">Int96</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Amount must exactly match this value. You may not specify this alongside  gte  or  lte  . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">gte  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int96">Int96</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Amount must be greater than or equal to this value. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">lte  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int96">Int96</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Amount must be less than or equal to this value. </td></tr></tbody></table></div><br/></div></section><section id="types-utility-types-ledgeraccountcondition" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerAccountCondition</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-utility-types-ledgeraccountcondition">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A set of conditions that a Ledger Account must meet for an operation to succeed.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;ownBalance&quot;: Int96Condition}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ownBalance  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-int96condition">Int96Condition</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A condition that the  ownBalance  field must satisfy. Note that this condition always applies to the latest balance, not to balances at a specific date or time. See  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#read-balances">Read balances</a>  for more on the different types of Ledger Account balances. </td></tr></tbody></table></div><br/></div></section><section id="types-utility-types-ledgeraccountconsistencyconfig" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerAccountConsistencyConfig</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-utility-types-ledgeraccountconsistencyconfig">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The consistency configuration of a Ledger Account&#x27;s balance updates. See <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#configure-consistency">Configure consistency</a>.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;lines&quot;: &quot;eventual&quot;, &quot;ownBalanceUpdates&quot;: &quot;eventual&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">lines  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-ledgerlinesconsistencymode">LedgerLinesConsistencyMode!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ownBalanceUpdates  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-balanceupdateconsistencymode">BalanceUpdateConsistencyMode!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">If set to strong, then a Ledger Account&#x27;s ownBalance updates will be strongly consistent with the API response. This Ledger Account&#x27;s balance will be updated and available for strongly consistent reads once you receive an API response.  Otherwise if not set or set to eventual, ownBalance updates are applied asynchronously and may not be immediately reflected in queries.  See <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#configure-consistency">Configure consistency</a>. </td></tr></tbody></table></div><br/></div></section><section id="types-utility-types-ledgeraccounttypes" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerAccountTypes</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-utility-types-ledgeraccounttypes">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;asset&quot;
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Enum Value</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">asset </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">expense </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">income </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">liability </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-utility-types-ledgerentrycondition" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerEntryCondition</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-utility-types-ledgerentrycondition">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A set of pre-conditions and post-conditions that a Ledger Account must have satisfied. Each LedgerEntryCondition has at least one of precondition or postcondition.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;account&quot;: LedgerAccount,
  &quot;currency&quot;: Currency,
  &quot;postcondition&quot;: LedgerAccountCondition,
  &quot;precondition&quot;: LedgerAccountCondition
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">account  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledgeraccount">LedgerAccount!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Ledger Account that must satisfied the provided conditions. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currency  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-currency">Currency!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The currency of the balance associated with this  LedgerEntryCondition  . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">postcondition  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-ledgeraccountcondition">LedgerAccountCondition</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The conditions that must be satisfied after the operation. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">precondition  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-ledgeraccountcondition">LedgerAccountCondition</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The conditions that must be satisfied prior to the operation. </td></tr></tbody></table></div><br/></div></section><section id="types-utility-types-ledgerentrygroup" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerEntryGroup</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-utility-types-ledgerentrygroup">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A group of Ledger Entries</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;balances&quot;: LedgerEntryGroupBalanceConnection,
  &quot;created&quot;: &quot;2007-12-03T10:15:30Z&quot;,
  &quot;dashboardUrl&quot;: &quot;abc123&quot;,
  &quot;key&quot;: &quot;some-safe-string-ik&quot;,
  &quot;ledgerEntries&quot;: LedgerEntriesConnection,
  &quot;value&quot;: &quot;some-safe-string-ik&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">balances  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-ledgerentrygroupbalanceconnection">LedgerEntryGroupBalanceConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>after - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>before - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>filter - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-ledgerentrygroupbalancefilterset">LedgerEntryGroupBalanceFilterSet</a><br/><br/>first - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of group balances to return per page, when paginating forwards. Defaults to 20, maximum is 200.<br/><br/>last - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of group balances to return per page, when paginating backwards. Defaults to 20, maximum is 200.<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">created  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-datetime">DateTime</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ISO-8601 timestamp this LedgerEntryGroup was created in <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> . </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">dashboardUrl  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">URL to the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  Dashboard for this Ledger Entry Group. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">key  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The key of this Ledger Entry Group. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ledgerEntries  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-ledgerentriesconnection">LedgerEntriesConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>after - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>before - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String</a><br/><br/>Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#query-data-basics-pagination">pagination</a>.<br/><br/>filter - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-filter-types-ledgerentriesfilterset">LedgerEntriesFilterSet</a><br/><br/>first - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of Ledger Entries to return per page, when paginating forwards. Defaults to 20, maximum is 200.<br/><br/>last - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int</a><br/><br/>The number of Ledger Entries to return per page, when paginating backwards. Defaults to 20, maximum is 200.<br/></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">value  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The value associated with Ledger Entry Group. </td></tr></tbody></table></div><br/></div></section><section id="types-utility-types-ledgerentrygroupbalance" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerEntryGroupBalance</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-utility-types-ledgerentrygroupbalance">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Represents the total effect of a Ledger Entry Group on a Ledger Account balance for a single currency.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;account&quot;: LedgerAccount,
  &quot;currency&quot;: Currency,
  &quot;ownBalance&quot;: &quot;999999999999&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">account  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-core-types-ledgeraccount">LedgerAccount!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The Ledger Account whose balance is affected. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">currency  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-currency">Currency!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The currency of the affected balance. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ownBalance  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int96">Int96!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The total balance change for this Ledger Account and currency. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="2">Arguments<br/><br/>consistencyMode - <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-readbalanceconsistencymode">ReadBalanceConsistencyMode</a><br/><br/>The consistency mode to use when fetching the balance. Use &#x27;use_account&#x27; to match the configured consistency mode of the account.<br/></td></tr></tbody></table></div><br/></div></section><section id="types-utility-types-ledgerentrytag" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">LedgerEntryTag</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-utility-types-ledgerentrytag">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A tag attached to a Ledger Entry.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{&quot;key&quot;: &quot;some-safe-string-ik&quot;, &quot;value&quot;: &quot;some-safe-string-ik&quot;}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">key  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The key of this tag. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">value  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-safestring">SafeString!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The value associated with this tag&#x27;s key. </td></tr></tbody></table></div><br/></div></section><section id="types-utility-types-schemaversion" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">SchemaVersion</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-utility-types-schemaversion">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">An instance of a Schema stored in a Workspace. A new SchemaVersion is created each time a Schema is stored. It stores the Chart of Accounts and list of Ledger Entries as well as a history of its Ledger migrations.</p><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;created&quot;: &quot;2007-12-03T10:15:30Z&quot;,
  &quot;json&quot;: &quot;{&quot;key&quot;:&quot;value&quot;}&quot;,
  &quot;migrations&quot;: LedgerMigrationConnection,
  &quot;version&quot;: 2277
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">created  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-datetime">DateTime!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">json  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-json">JSON!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">migrations  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-ledgermigrationconnection">LedgerMigrationConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">version  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-int">Int!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The version of the schema. </td></tr></tbody></table></div><br/></div></section><section id="types-utility-types-stripeenv" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">StripeEnv</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-utility-types-stripeenv">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;livemode&quot;
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Enum Value</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">livemode </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">testmode </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-utility-types-stripelink" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">StripeLink</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-utility-types-stripelink">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;created&quot;: &quot;abc123&quot;,
  &quot;dashboardUrl&quot;: &quot;abc123&quot;,
  &quot;externalAccounts&quot;: ExternalAccountsConnection,
  &quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;name&quot;: &quot;abc123&quot;,
  &quot;stripeEnv&quot;: &quot;livemode&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">created  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ISO-8601 timestamp when the Link was created. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">dashboardUrl  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">URL to the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  Dashboard for this Link. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">externalAccounts  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-externalaccountsconnection">ExternalAccountsConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A list of External Accounts associated with this Link. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">id  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"> <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> ID of the Custom Link. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">name  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Name of the Link as it appears in the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  Dashboard. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">stripeEnv  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-stripeenv">StripeEnv!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The environment of the Stripe Link, either testmode or livemode. </td></tr></tbody></table></div><br/></div></section><section id="types-utility-types-unitenv" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">UnitEnv</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-utility-types-unitenv">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">&quot;production&quot;
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Enum Value</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">production </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">sandbox </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"></td></tr></tbody></table></div><br/></div></section><section id="types-utility-types-unitlink" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">UnitLink</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#types-utility-types-unitlink">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><br/><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Example</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;created&quot;: &quot;abc123&quot;,
  &quot;dashboardUrl&quot;: &quot;abc123&quot;,
  &quot;externalAccounts&quot;: ExternalAccountsConnection,
  &quot;id&quot;: &quot;3116551f-5efc-4c9e-84ac-5a36a51b09c1&quot;,
  &quot;name&quot;: &quot;abc123&quot;,
  &quot;unitEnv&quot;: &quot;production&quot;
}
</code></pre></div></div></div><br/><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Field Name</th>
<th class="text-main-500 font-normal first:mr-2 last:ml-2" align="left">Description</th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">created  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">ISO-8601 timestamp when the Link was created. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">dashboardUrl  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">URL to the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>  Dashboard for this Link. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">externalAccounts  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-connection-types-externalaccountsconnection">ExternalAccountsConnection!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">A list of External Accounts associated with this Link. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">id  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-id">ID!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1"> <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> ID of the Unit Link. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">name  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-string">String!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">Name of the Link as it appears in the Dashboard. </td></tr>
<tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">unitEnv  -  <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-utility-types-unitenv">UnitEnv!</a> </td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2" colSpan="1">The environment of the Unit Link, either sandbox or production. </td></tr></tbody></table></div></div></section></div></div></section></div></section>
<section id="cli-commands" class="first:0 pt-f6 tablet:pt-f3 pb-[2em] scroll-mt-[90px]"><span class="TopicContainer-title group-one text-s20 tablet:text-fnormal laptop:text-s20 block mb-[1em] "><span class="text-main-500">E<!-- --> </span>CLI Commands<span class="pl-[0.5em] phone:invisible phone:group-one-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#cli-commands">#</a></span></span><div class="TopicContainer-content py-[2em] first-of-type:pt-0 ml-0 phone:ml-[1.8em] tablet:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the CLI to:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Generate GraphQL queries specific to your Schema</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Embed the CLI within your CI/CD process</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Quickly store a Schema, create a Ledger, and start posting Ledger Entries</li>
</ul><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To install using <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://brew.sh/">Homebrew</a>, run:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">brew tap fragment-dev/tap &amp;&amp;\
  brew install fragment-dev/tap/fragment-cli</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><section id="cli-commands-login" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">login</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#cli-commands-login">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Authenticate with <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Authentication is scoped to one <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> Workspace. If you want to authenticate with another Workspace, you must create another API Client and follow the authentication flow again.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Credentials will be written to <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">~/.fragment/auth.json</code>.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Usage</span><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">fragment login \
  [--api-url=&lt;api-url&gt;] \
  [--client-id=&lt;client-id&gt;] \
  [--client-secret=&lt;client-secret&gt;] \
  [--oauth-scope=&lt;oauth-scope&gt;] \
  [--oauth-url=&lt;oauth-url&gt;] \
  [--test]
</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Optionally, run <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">fragment login</code> and the CLI will prompt you for the credentials.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Flags</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2"></th><th class="text-main-500 font-normal first:mr-2 last:ml-2"></th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">--api-url=&lt;api-url&gt;</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">The API URL for your <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> Workspace</td></tr><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">--client-id=&lt;client-id&gt;</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">The API Client ID</td></tr><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">--client-secret=&lt;client-secret&gt;</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">The API Client Secret</td></tr><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">--oauth-scope=&lt;oauth-scope&gt;</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">The OAuth Scope for your auth token</td></tr><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">--oauth-url=&lt;oauth-url&gt;</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">The OAuth URL from which to retrieve the auth token</td></tr><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">--test</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">If set, tests stored credentials</td></tr></tbody></table></div><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Example</span><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-bash" style="white-space:pre">fragment login \
  --api-url=&quot;&lt;api-url&gt;&quot; \
  --client-id=&quot;&lt;client-id&gt;&quot; \
  --client-secret=&quot;&lt;client-secret&gt;&quot; \
  --oauth-scope=&quot;&lt;oauth-scope&gt;&quot; \
  --oauth-url=&quot;&lt;oauth-url&gt;&quot;</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To test the stored credentials, run:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-bash" style="white-space:pre">fragment login --test</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div></div></div></section><section id="cli-commands-store-schema" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">store-schema</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#cli-commands-store-schema">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Store a Schema within your <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> workspace.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Usage</span><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">fragment store-schema [-p &lt;value&gt;] [-v]</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Flags</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2"></th><th class="text-main-500 font-normal first:mr-2 last:ml-2"></th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">-p, --path=&lt;value&gt;</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">[default: fragment.jsonc] Path for schema JSON file.</td></tr><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">-v, --verbose</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">Enable verbose mode (prints GraphQL commands)</td></tr></tbody></table></div><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Example</span><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-bash" style="white-space:pre">fragment store-schema \
  -p your-fragment-schema.jsonc</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div></div></div></section><section id="cli-commands-create-ledger" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">create-ledger</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#cli-commands-create-ledger">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Create a Ledger within your <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> workspace.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Usage</span><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">fragment create-ledger \
  --ik=&lt;ledger-ik&gt; \
  --name=&lt;ledger-name&gt; \
  --schema=&lt;schema-file&gt;</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Flags</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2"></th><th class="text-main-500 font-normal first:mr-2 last:ml-2"></th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">-i, --ik=&lt;ledger-ik&gt;</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">Idempotency key for <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">createLedger</code></td></tr><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">-n, --name=&lt;ledger-name&gt;</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">Ledger name</td></tr><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">-s, --schema=&lt;schema-key&gt;</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">[default: fragment.jsonc] Path to the schema JSON file.</td></tr><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">-v, --verbose</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">Enable verbose mode (prints GraphQL commands)</td></tr></tbody></table></div><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Example</span><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-bash" style="white-space:pre">fragment create-ledger \
  --ik=test-ledger \
  --name=&quot;Test Ledger&quot; \
  --schema=your-fragment-schema.jsonc</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div></div></div></section><section id="cli-commands-get-schema" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">get-schema</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#cli-commands-get-schema">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Retrieve a Schema from the API for local use.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Usage</span><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">fragment get-schema \
  [--key=&lt;schema-key&gt;] \
  [--version=&lt;version&gt;] \
  [--output=&lt;output-file&gt;] \
  [-v]</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Flags</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2"></th><th class="text-main-500 font-normal first:mr-2 last:ml-2"></th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">-k, --key=&lt;schema-key&gt;</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">(Optional) Key of the Schema (e.g. template-schema). If not provided, you&#x27;ll be prompted to choose a Schema.</td></tr><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">-o, --output=&lt;output-file&gt;</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">Path to the JSONC schema file. Defaults to the schema key in the current directory.</td></tr><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">--version=&lt;version&gt;</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">Schema version to retrieve. Defaults to the latest version.</td></tr><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">-v, --verbose</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">Enable verbose mode (prints GraphQL commands)</td></tr></tbody></table></div><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Example</span><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To choose the Schema from a list, run:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-bash" style="white-space:pre">fragment get-schema</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">If providing the Schema key, run:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Providing a Schema key</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-bash" style="white-space:pre">fragment get-schema \
  --key=test-schema</code></pre></div></div></div></div></div></section><section id="cli-commands-add-ledger-entry" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">add-ledger-entry</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#cli-commands-add-ledger-entry">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Post a Ledger Entry to your <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> Ledger.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Usage</span><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">fragment add-ledger-entry \
  --ik=&lt;add-ledger-entry-ik&gt; \
  --ledger.ik=&lt;ledger-ik&gt; \
  --type=&lt;entry-type&gt; \
  [--param=&lt;parameter-value&gt;] \
  [-v]</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Flags</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2"></th><th class="text-main-500 font-normal first:mr-2 last:ml-2"></th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">-i, --ik=&lt;add-ledger-entry-ik&gt;</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">Idempotency key for <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">addLedgerEntry</code></td></tr><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">-l, --ledger.ik=&lt;ledger-ik&gt;</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">Idempotency Key of the Ledger to post the Ledger Entry to</td></tr><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">-t, --type=&lt;entry-type&gt;</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">The <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">type</code> of Ledger Entry you want to post</td></tr><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">-p, --param=&lt;value&gt;...</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">The parameters for your Ledger Entry. You may specify multiple parameters by repeating the flag. <br/> (ex: --param amount=100 --param currency=USD)</td></tr><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">-v, --verbose</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">Enable verbose mode (prints GraphQL commands)</td></tr></tbody></table></div><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Example</span><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-bash" style="white-space:pre">fragment add-ledger-entry \
  --ik=your-entry-ik \
  --ledger.ik=your-ledger-ik \
  --type=user_funds_account \
  --param=&#x27;user_id=&quot;testing-user&quot;&#x27; \
  --param=&#x27;funding_amount=&quot;200&quot;&#x27;</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div></div></div></section><section id="cli-commands-create-custom-link" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">create-custom-link</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#cli-commands-create-custom-link">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Create a Custom Link.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Read the <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://fragment.dev/docs#reconcile-transactions-link-any-system">Link any system</a> section to learn more about Custom Links.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Usage</span><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">fragment create-custom-link \
  --ik=&lt;custom-link-ik&gt; \
  --name=&lt;custom-link-name&gt;</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Flags</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2"></th><th class="text-main-500 font-normal first:mr-2 last:ml-2"></th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">-i, --ik=&lt;custom-link-ik&gt;</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">The Idempotency Key for Custom Link creation</td></tr><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">--name=&lt;custom-link-name&gt;</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">The name for the Custom Link</td></tr></tbody></table></div><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Examples</span><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-bash" style="white-space:pre">fragment create-custom-link \
  --ik=&quot;example-custom-link&quot; \
  --name=&quot;Example Custom Link&quot;</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div></div></div></section><section id="cli-commands-gen-graphql" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">gen-graphql</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#cli-commands-gen-graphql">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Generate GraphQL queries to post Ledger Entries for a given Schema.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The generated GraphQL queries can be used to generate SDK code specific to your Schema. Read <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#install-the-sdk">Install the SDK</a> to learn more.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Usage</span><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">fragment gen-graphql \
  --path=&lt;path-to-schema.jsonc&gt; \
  --output=&lt;output-filename.graphql&gt;</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Flags</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2"></th><th class="text-main-500 font-normal first:mr-2 last:ml-2"></th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">-o, --output=&lt;output-filename&gt;</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">The path for the generated file. Must end with <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">.graphql</code> or <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">.gql</code></td></tr><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">-p, --path=&lt;schema-file-path&gt;</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">The path to your Schema file</td></tr><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">--output-file-per-query</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">Output a folder of queries, instead of a single file</td></tr><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">--include-standard-queries</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">Include the set of standard GraphQL queries in the output. This is required only if you are not using the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> SDKs</td></tr></tbody></table></div><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Example</span><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-bash" style="white-space:pre">fragment gen-graphql \
  --path=your-fragment-schema.jsonc \
  --output=queries.graphql</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-bash" style="white-space:pre">fragment gen-graphql \
  --path=your-fragment-schema.jsonc \
  --output=generated/queries \
  --output-file-per-query</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div></div></div></section><section id="cli-commands-update" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">update</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#cli-commands-update">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Update the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> CLI.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Usage</span><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">fragment update [-y] [--dry-run]</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Flags</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2"></th><th class="text-main-500 font-normal first:mr-2 last:ml-2"></th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">-y, --yes</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">Update without being prompted</td></tr><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">--dry-run</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">Run the update process without updating the CLI</td></tr></tbody></table></div><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Example</span><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-bash" style="white-space:pre">fragment update -y</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div></div></div></section><section id="cli-commands-token" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">token</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#cli-commands-token">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Get a <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> Authentication Token.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">This will print your auth token to standard output (stdout).</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Usage</span><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">fragment token</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div></div></div></section><section id="cli-commands-help" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">help</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#cli-commands-help">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Display help prompt for the CLI.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Usage</span><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">fragment help [COMMANDS]</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Flags</span><div class="mt-[1em]"><table class="table-fixed w-full border-separate border-spacing-y-[1em]"><thead><tr><th class="text-main-500 font-normal first:mr-2 last:ml-2"></th><th class="text-main-500 font-normal first:mr-2 last:ml-2"></th></tr></thead><tbody><tr><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">COMMANDS...</td><td class="break-words mx-3 first:mx-0 first:mr-3 only:mx-3 last:mx-0 last:ml-3 align-top mt-f2">The Command (or Commands) to show help for. Ex: <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">store-schema</code></td></tr></tbody></table></div><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Example</span><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">fragment help store-schema</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div></div></div></section><section id="cli-commands-workspace" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block">workspace</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/api-reference#cli-commands-workspace">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Get the details of the Workspace this CLI is authenticated to.</p><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none block mt-f2">Usage</span><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">fragment workspace</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div></div></div></section></div></section></div></div></div></div></div></div></div><script id="__NEXT_DATA__" type="application/json" crossorigin="">{"props":{"pageProps":{"navTree":{"Documentation":{"_type":"MultiPageSectionMDXNav","href":"/docs","contentTree":{"Introduction":[{"title":"Introduction","anchor":"introduction","label":"","id":"introduction","hideNavSubItems":true}],"Design your Ledger":[{"title":"Ledger Accounts","anchor":"design-your-ledger-ledger-accounts","label":"a","id":"design-your-ledger","hideNavSubItems":false},{"title":"Ledger Entries","anchor":"design-your-ledger-ledger-entries","label":"b","id":"design-your-ledger","hideNavSubItems":false}],"Deploy your Ledger":[{"title":"Dashboard","anchor":"deploy-your-ledger-dashboard","label":"a","id":"deploy-your-ledger","hideNavSubItems":false},{"title":"API","anchor":"deploy-your-ledger-api","label":"b","id":"deploy-your-ledger","hideNavSubItems":false},{"title":"CLI","anchor":"deploy-your-ledger-cli","label":"c","id":"deploy-your-ledger","hideNavSubItems":false}],"Install the SDK":[{"title":"Setup the CLI","anchor":"install-the-sdk-setup-the-cli","label":"a","id":"install-the-sdk","hideNavSubItems":false},{"title":"TypeScript","anchor":"install-the-sdk-typescript","label":"b","id":"install-the-sdk","hideNavSubItems":false,"children":[{"label":"haha","title":"Generate Queries","anchor":"install-the-sdk-typescript-generate-queries"},{"label":"haha","title":"Generate Client","anchor":"install-the-sdk-typescript-generate-client"}]},{"title":"Go","anchor":"install-the-sdk-go","label":"c","id":"install-the-sdk","hideNavSubItems":false,"children":[{"label":"haha","title":"Generate Queries","anchor":"install-the-sdk-go-generate-queries"},{"label":"haha","title":"Generate Code","anchor":"install-the-sdk-go-generate-code"}]},{"title":"Ruby","anchor":"install-the-sdk-ruby","label":"d","id":"install-the-sdk","hideNavSubItems":false,"children":[{"label":"haha","title":"Generate Queries","anchor":"install-the-sdk-ruby-generate-queries"},{"label":"haha","title":"Use custom queries","anchor":"install-the-sdk-ruby-use-custom-queries"}]},{"title":"Other Languages","anchor":"install-the-sdk-other-languages","label":"e","id":"install-the-sdk","hideNavSubItems":false,"children":[{"label":"haha","title":"Generate Queries","anchor":"install-the-sdk-other-languages-generate-queries"},{"label":"haha","title":"Generate SDK","anchor":"install-the-sdk-other-languages-generate-sdk"},{"label":"haha","title":"Implement logic","anchor":"install-the-sdk-other-languages-implement-logic"}]}],"Post Ledger Entries":[{"title":"Schema","anchor":"post-ledger-entries-schema","label":"a","id":"post-ledger-entries","hideNavSubItems":false},{"title":"Post to the API","anchor":"post-ledger-entries-post-to-the-api","label":"b","id":"post-ledger-entries","hideNavSubItems":false,"children":[{"label":"haha","title":"Minor Units","anchor":"post-ledger-entries-post-to-the-api-minor-units"},{"label":"haha","title":"Tags","anchor":"post-ledger-entries-post-to-the-api-tags"},{"label":"haha","title":"Idempotency","anchor":"post-ledger-entries-post-to-the-api-idempotency"},{"label":"haha","title":"Timestamps","anchor":"post-ledger-entries-post-to-the-api-timestamps"}]},{"title":"Linked Accounts","anchor":"post-ledger-entries-linked-accounts","label":"c","id":"post-ledger-entries","hideNavSubItems":false},{"title":"Currencies","anchor":"post-ledger-entries-currencies","label":"d","id":"post-ledger-entries","hideNavSubItems":false},{"title":"Using conditions","anchor":"post-ledger-entries-using-conditions","label":"e","id":"post-ledger-entries","hideNavSubItems":false},{"title":"Using Groups","anchor":"post-ledger-entries-using-groups","label":"f","id":"post-ledger-entries","hideNavSubItems":false},{"title":"Runtime Entries","anchor":"post-ledger-entries-runtime-entries","label":"g","id":"post-ledger-entries","hideNavSubItems":false}],"Reconcile transactions":[{"title":"Links","anchor":"reconcile-transactions-links","label":"a","id":"reconcile-transactions","hideNavSubItems":false},{"title":"Native Links","anchor":"reconcile-transactions-native-links","label":"b","id":"reconcile-transactions","hideNavSubItems":false,"children":[{"label":"haha","title":"Increase","anchor":"reconcile-transactions-native-links-increase"},{"label":"haha","title":"Stripe","anchor":"reconcile-transactions-native-links-stripe"},{"label":"haha","title":"Stripe Connect","anchor":"reconcile-transactions-native-links-stripe-connect"},{"label":"haha","title":"Unit","anchor":"reconcile-transactions-native-links-unit"}]},{"title":"Link any system","anchor":"reconcile-transactions-link-any-system","label":"c","id":"reconcile-transactions","hideNavSubItems":false,"children":[{"label":"haha","title":"Onboarding","anchor":"reconcile-transactions-link-any-system-onboarding"},{"label":"haha","title":"Sync accounts","anchor":"reconcile-transactions-link-any-system-sync-accounts"}]},{"title":"Linked Accounts","anchor":"reconcile-transactions-linked-accounts","label":"d","id":"reconcile-transactions","hideNavSubItems":false},{"title":"Transact externally","anchor":"reconcile-transactions-transact-externally","label":"e","id":"reconcile-transactions","hideNavSubItems":false},{"title":"Sync transactions","anchor":"reconcile-transactions-sync-transactions","label":"f","id":"reconcile-transactions","hideNavSubItems":false},{"title":"Reconcile a Tx","anchor":"reconcile-transactions-reconcile-a-tx","label":"g","id":"reconcile-transactions","hideNavSubItems":false,"children":[{"label":"haha","title":"Reconciling multiple Txs","anchor":"reconcile-transactions-reconcile-a-tx-reconciling-multiple-txs"}]},{"title":"Unreconciled Txs","anchor":"reconcile-transactions-unreconciled-txs","label":"h","id":"reconcile-transactions","hideNavSubItems":false},{"title":"Stripe Txs","anchor":"reconcile-transactions-stripe-txs","label":"i","id":"reconcile-transactions","hideNavSubItems":false}],"Store metadata":[{"title":"Schema Entry tags","anchor":"store-metadata-schema-entry-tags","label":"a","id":"store-metadata","hideNavSubItems":false},{"title":"Runtime Entry tags","anchor":"store-metadata-runtime-entry-tags","label":"b","id":"store-metadata","hideNavSubItems":false},{"title":"Updating Entry tags","anchor":"store-metadata-updating-entry-tags","label":"c","id":"store-metadata","hideNavSubItems":false}],"Read balances":[{"title":"Latest","anchor":"read-balances-latest","label":"a","id":"read-balances","hideNavSubItems":false},{"title":"Aggregated","anchor":"read-balances-aggregated","label":"b","id":"read-balances","hideNavSubItems":false},{"title":"Consistent","anchor":"read-balances-consistent","label":"c","id":"read-balances","hideNavSubItems":false},{"title":"Historical","anchor":"read-balances-historical","label":"d","id":"read-balances","hideNavSubItems":false},{"title":"Balance changes","anchor":"read-balances-balance-changes","label":"e","id":"read-balances","hideNavSubItems":false},{"title":"Multi-currency mode","anchor":"read-balances-multi-currency-mode","label":"f","id":"read-balances","hideNavSubItems":false},{"title":"Timezone offsets","anchor":"read-balances-timezone-offsets","label":"g","id":"read-balances","hideNavSubItems":false}],"Query data":[{"title":"Basics","anchor":"query-data-basics","label":"a","id":"query-data","hideNavSubItems":false,"children":[{"label":"haha","title":"GraphQL","anchor":"query-data-basics-graphql"},{"label":"haha","title":"Connection types","anchor":"query-data-basics-connection-types"},{"label":"haha","title":"Filtering","anchor":"query-data-basics-filtering"},{"label":"haha","title":"Pagination","anchor":"query-data-basics-pagination"}]},{"title":"Ledgers","anchor":"query-data-ledgers","label":"b","id":"query-data","hideNavSubItems":false,"children":[{"label":"haha","title":"Lookup","anchor":"query-data-ledgers-lookup"},{"label":"haha","title":"List","anchor":"query-data-ledgers-list"}]},{"title":"Ledger Accounts","anchor":"query-data-ledger-accounts","label":"c","id":"query-data","hideNavSubItems":false,"children":[{"label":"haha","title":"Lookup","anchor":"query-data-ledger-accounts-lookup"},{"label":"haha","title":"Lookup multiple","anchor":"query-data-ledger-accounts-lookup-multiple"},{"label":"haha","title":"List","anchor":"query-data-ledger-accounts-list"},{"label":"haha","title":"List balances","anchor":"query-data-ledger-accounts-list-balances"},{"label":"haha","title":"Filter by type","anchor":"query-data-ledger-accounts-filter-by-type"},{"label":"haha","title":"Filter by path","anchor":"query-data-ledger-accounts-filter-by-path"},{"label":"haha","title":"Filter by Link","anchor":"query-data-ledger-accounts-filter-by-link"},{"label":"haha","title":"Filter by parent","anchor":"query-data-ledger-accounts-filter-by-parent"}]},{"title":"Ledger Lines","anchor":"query-data-ledger-lines","label":"d","id":"query-data","hideNavSubItems":false,"children":[{"label":"haha","title":"Lookup","anchor":"query-data-ledger-lines-lookup"},{"label":"haha","title":"List","anchor":"query-data-ledger-lines-list"},{"label":"haha","title":"Filter by posted","anchor":"query-data-ledger-lines-filter-by-posted"},{"label":"haha","title":"Filter by key","anchor":"query-data-ledger-lines-filter-by-key"}]},{"title":"Ledger Entries","anchor":"query-data-ledger-entries","label":"e","id":"query-data","hideNavSubItems":false,"children":[{"label":"haha","title":"Lookup","anchor":"query-data-ledger-entries-lookup"},{"label":"haha","title":"Lookup multiple","anchor":"query-data-ledger-entries-lookup-multiple"},{"label":"haha","title":"List by group","anchor":"query-data-ledger-entries-list-by-group"},{"label":"haha","title":"Expand lines","anchor":"query-data-ledger-entries-expand-lines"},{"label":"haha","title":"Filter by posted","anchor":"query-data-ledger-entries-filter-by-posted"},{"label":"haha","title":"Filter by type","anchor":"query-data-ledger-entries-filter-by-type"},{"label":"haha","title":"Filter by tag","anchor":"query-data-ledger-entries-filter-by-tag"}]},{"title":"Ledger Entry Groups","anchor":"query-data-ledger-entry-groups","label":"f","id":"query-data","hideNavSubItems":false,"children":[{"label":"haha","title":"Lookup","anchor":"query-data-ledger-entry-groups-lookup"},{"label":"haha","title":"List","anchor":"query-data-ledger-entry-groups-list"},{"label":"haha","title":"Filter","anchor":"query-data-ledger-entry-groups-filter"}]},{"title":"Links","anchor":"query-data-links","label":"g","id":"query-data","hideNavSubItems":false,"children":[{"label":"haha","title":"Lookup","anchor":"query-data-links-lookup"},{"label":"haha","title":"External Accounts","anchor":"query-data-links-external-accounts"}]},{"title":"External Accounts","anchor":"query-data-external-accounts","label":"h","id":"query-data","hideNavSubItems":false,"children":[{"label":"haha","title":"Lookup","anchor":"query-data-external-accounts-lookup"},{"label":"haha","title":"Txs","anchor":"query-data-external-accounts-txs"},{"label":"haha","title":"Linked Accounts","anchor":"query-data-external-accounts-linked-accounts"}]},{"title":"Txs","anchor":"query-data-txs","label":"i","id":"query-data","hideNavSubItems":false,"children":[{"label":"haha","title":"Lookup","anchor":"query-data-txs-lookup"},{"label":"haha","title":"Unreconciled","anchor":"query-data-txs-unreconciled"}]},{"title":"Schemas","anchor":"query-data-schemas","label":"j","id":"query-data","hideNavSubItems":false,"children":[{"label":"haha","title":"Lookup","anchor":"query-data-schemas-lookup"},{"label":"haha","title":"List versions","anchor":"query-data-schemas-list-versions"},{"label":"haha","title":"List Ledgers","anchor":"query-data-schemas-list-ledgers"},{"label":"haha","title":"Migration status","anchor":"query-data-schemas-migration-status"}]}],"Generate reports":[{"title":"Balance sheet","anchor":"generate-reports-balance-sheet","label":"a","id":"generate-reports","hideNavSubItems":false},{"title":"Income statement","anchor":"generate-reports-income-statement","label":"b","id":"generate-reports","hideNavSubItems":false},{"title":"Account statement","anchor":"generate-reports-account-statement","label":"c","id":"generate-reports","hideNavSubItems":false},{"title":"Journal export","anchor":"generate-reports-journal-export","label":"d","id":"generate-reports","hideNavSubItems":false}],"Configure consistency":[{"title":"Ledger Configuration","anchor":"configure-consistency-ledger-configuration","label":"a","id":"configure-consistency","hideNavSubItems":false},{"title":"Ledger Account Configuration","anchor":"configure-consistency-ledger-account-configuration","label":"b","id":"configure-consistency","hideNavSubItems":false},{"title":"Balance queries","anchor":"configure-consistency-balance-queries","label":"c","id":"configure-consistency","hideNavSubItems":false},{"title":"Entry conditions","anchor":"configure-consistency-entry-conditions","label":"d","id":"configure-consistency","hideNavSubItems":false},{"title":"Consistent Groups","anchor":"configure-consistency-consistent-groups","label":"e","id":"configure-consistency","hideNavSubItems":false},{"title":"Query Consistent Groups","anchor":"configure-consistency-query-consistent-groups","label":"f","id":"configure-consistency","hideNavSubItems":false}],"Handle currencies":[{"title":"Track exposure","anchor":"handle-currencies-track-exposure","label":"a","id":"handle-currencies","hideNavSubItems":false},{"title":"Ledger Accounts","anchor":"handle-currencies-ledger-accounts","label":"b","id":"handle-currencies","hideNavSubItems":false},{"title":"Ledger Entries","anchor":"handle-currencies-ledger-entries","label":"c","id":"handle-currencies","hideNavSubItems":false},{"title":"Read balances","anchor":"handle-currencies-read-balances","label":"d","id":"handle-currencies","hideNavSubItems":false,"children":[{"label":"haha","title":"Latest","anchor":"handle-currencies-read-balances-latest"},{"label":"haha","title":"Aggregated","anchor":"handle-currencies-read-balances-aggregated"},{"label":"haha","title":"Consistent","anchor":"handle-currencies-read-balances-consistent"},{"label":"haha","title":"Historical","anchor":"handle-currencies-read-balances-historical"},{"label":"haha","title":"Balance changes","anchor":"handle-currencies-read-balances-balance-changes"}]},{"title":"Custom currencies","anchor":"handle-currencies-custom-currencies","label":"e","id":"handle-currencies","hideNavSubItems":false}],"Group Ledger Entries":[{"title":"Configuring Groups","anchor":"group-ledger-entries-configuring-groups","label":"a","id":"group-ledger-entries","hideNavSubItems":false},{"title":"Querying balances","anchor":"group-ledger-entries-querying-balances","label":"b","id":"group-ledger-entries","hideNavSubItems":false,"children":[{"label":"haha","title":"Consistent balances","anchor":"group-ledger-entries-querying-balances-consistent-balances"},{"label":"haha","title":"Filtering balances","anchor":"group-ledger-entries-querying-balances-filtering-balances"},{"label":"haha","title":"Filter by template","anchor":"group-ledger-entries-querying-balances-filter-by-template"}]},{"title":"Updating Entry Groups","anchor":"group-ledger-entries-updating-entry-groups","label":"c","id":"group-ledger-entries","hideNavSubItems":false}],"Export data":[{"title":"S3 Export","anchor":"export-data-s3-export","label":"a","id":"export-data","hideNavSubItems":false,"children":[{"label":"haha","title":"Export format","anchor":"export-data-s3-export-export-format"},{"label":"haha","title":"Onboarding","anchor":"export-data-s3-export-onboarding"},{"label":"haha","title":"Testing","anchor":"export-data-s3-export-testing"}]},{"title":"Retool","anchor":"export-data-retool","label":"b","id":"export-data","hideNavSubItems":false}],"Under the hood":[{"title":"Performance","anchor":"under-the-hood-performance","label":"a","id":"under-the-hood","hideNavSubItems":false},{"title":"Architecture","anchor":"under-the-hood-architecture","label":"b","id":"under-the-hood","hideNavSubItems":false},{"title":"Write path","anchor":"under-the-hood-write-path","label":"c","id":"under-the-hood","hideNavSubItems":false},{"title":"Scaling writes","anchor":"under-the-hood-scaling-writes","label":"d","id":"under-the-hood","hideNavSubItems":false},{"title":"Read path","anchor":"under-the-hood-read-path","label":"e","id":"under-the-hood","hideNavSubItems":false},{"title":"Scaling reads","anchor":"under-the-hood-scaling-reads","label":"f","id":"under-the-hood","hideNavSubItems":false}]},"topicConfig":{"Introduction":{"id":"introduction","label":"A"},"Design your Ledger":{"id":"design-your-ledger","label":"B"},"Deploy your Ledger":{"id":"deploy-your-ledger","label":"C"},"Install the SDK":{"id":"install-the-sdk","label":"D"},"Post Ledger Entries":{"id":"post-ledger-entries","label":"E"},"Reconcile transactions":{"id":"reconcile-transactions","label":"F"},"Store metadata":{"id":"store-metadata","label":"G"},"Read balances":{"id":"read-balances","label":"H"},"Query data":{"id":"query-data","label":"I"},"Generate reports":{"id":"generate-reports","label":"J"},"Configure consistency":{"id":"configure-consistency","label":"K"},"Handle currencies":{"id":"handle-currencies","label":"L"},"Group Ledger Entries":{"id":"group-ledger-entries","label":"M"},"Export data":{"id":"export-data","label":"N"},"Under the hood":{"id":"under-the-hood","label":"O"}}},"Reference":{"_type":"MultiPageSectionMDXNav","href":"/api-reference","contentTree":{"API Overview":[{"title":"Regions","anchor":"api-overview-regions","label":"a","id":"api-overview","hideNavSubItems":false},{"title":"Authentication","anchor":"api-overview-authentication","label":"b","id":"api-overview","hideNavSubItems":false},{"title":"Idempotency","anchor":"api-overview-idempotency","label":"c","id":"api-overview","hideNavSubItems":false},{"title":"Errors","anchor":"api-overview-errors","label":"d","id":"api-overview","hideNavSubItems":false}],"API Queries":[{"title":"customCurrencies","anchor":"queries-customcurrencies","label":"","id":"queries","hideNavSubItems":false},{"title":"externalAccount","anchor":"queries-externalaccount","label":"","id":"queries","hideNavSubItems":false},{"title":"ledger","anchor":"queries-ledger","label":"","id":"queries","hideNavSubItems":false},{"title":"ledgerAccount","anchor":"queries-ledgeraccount","label":"","id":"queries","hideNavSubItems":false},{"title":"ledgerEntry","anchor":"queries-ledgerentry","label":"","id":"queries","hideNavSubItems":false},{"title":"ledgerEntryGroup","anchor":"queries-ledgerentrygroup","label":"","id":"queries","hideNavSubItems":false},{"title":"ledgerLine","anchor":"queries-ledgerline","label":"","id":"queries","hideNavSubItems":false},{"title":"ledgers","anchor":"queries-ledgers","label":"","id":"queries","hideNavSubItems":false},{"title":"link","anchor":"queries-link","label":"","id":"queries","hideNavSubItems":false},{"title":"links","anchor":"queries-links","label":"","id":"queries","hideNavSubItems":false},{"title":"schema","anchor":"queries-schema","label":"","id":"queries","hideNavSubItems":false},{"title":"schemas","anchor":"queries-schemas","label":"","id":"queries","hideNavSubItems":false},{"title":"tx","anchor":"queries-tx","label":"","id":"queries","hideNavSubItems":false},{"title":"workspace","anchor":"queries-workspace","label":"","id":"queries","hideNavSubItems":false}],"API Mutations":[{"title":"addLedgerEntry","anchor":"mutations-addledgerentry","label":"","id":"mutations","hideNavSubItems":false},{"title":"createCustomCurrency","anchor":"mutations-createcustomcurrency","label":"","id":"mutations","hideNavSubItems":false},{"title":"createCustomLink","anchor":"mutations-createcustomlink","label":"","id":"mutations","hideNavSubItems":false},{"title":"createLedger","anchor":"mutations-createledger","label":"","id":"mutations","hideNavSubItems":false},{"title":"reconcileTx","anchor":"mutations-reconciletx","label":"","id":"mutations","hideNavSubItems":false},{"title":"storeSchema","anchor":"mutations-storeschema","label":"","id":"mutations","hideNavSubItems":false},{"title":"syncCustomAccounts","anchor":"mutations-synccustomaccounts","label":"","id":"mutations","hideNavSubItems":false},{"title":"syncCustomTxs","anchor":"mutations-synccustomtxs","label":"","id":"mutations","hideNavSubItems":false},{"title":"updateLedger","anchor":"mutations-updateledger","label":"","id":"mutations","hideNavSubItems":false},{"title":"updateLedgerEntry","anchor":"mutations-updateledgerentry","label":"","id":"mutations","hideNavSubItems":false}],"API Types":[{"title":"Core Types","anchor":"types-core-types","label":"","id":"types","hideNavSubItems":false,"children":[{"label":"haha","title":"ExternalAccount","anchor":"types-core-types-externalaccount"},{"label":"haha","title":"Ledger","anchor":"types-core-types-ledger"},{"label":"haha","title":"LedgerAccount","anchor":"types-core-types-ledgeraccount"},{"label":"haha","title":"LedgerEntry","anchor":"types-core-types-ledgerentry"},{"label":"haha","title":"LedgerLine","anchor":"types-core-types-ledgerline"},{"label":"haha","title":"LedgerMigration","anchor":"types-core-types-ledgermigration"},{"label":"haha","title":"Link","anchor":"types-core-types-link"},{"label":"haha","title":"Schema","anchor":"types-core-types-schema"},{"label":"haha","title":"Tx","anchor":"types-core-types-tx"},{"label":"haha","title":"Workspace","anchor":"types-core-types-workspace"}]},{"title":"Scalars and Enums","anchor":"types-scalars-and-enums","label":"","id":"types","hideNavSubItems":false,"children":[{"label":"haha","title":"BalanceUpdateConsistencyMode","anchor":"types-scalars-and-enums-balanceupdateconsistencymode"},{"label":"haha","title":"Boolean","anchor":"types-scalars-and-enums-boolean"},{"label":"haha","title":"Currency","anchor":"types-scalars-and-enums-currency"},{"label":"haha","title":"CurrencyCode","anchor":"types-scalars-and-enums-currencycode"},{"label":"haha","title":"CurrencyMode","anchor":"types-scalars-and-enums-currencymode"},{"label":"haha","title":"Date","anchor":"types-scalars-and-enums-date"},{"label":"haha","title":"DateTime","anchor":"types-scalars-and-enums-datetime"},{"label":"haha","title":"ExternalTransferType","anchor":"types-scalars-and-enums-externaltransfertype"},{"label":"haha","title":"ID","anchor":"types-scalars-and-enums-id"},{"label":"haha","title":"IkReplay","anchor":"types-scalars-and-enums-ikreplay"},{"label":"haha","title":"Int","anchor":"types-scalars-and-enums-int"},{"label":"haha","title":"Int96","anchor":"types-scalars-and-enums-int96"},{"label":"haha","title":"JSON","anchor":"types-scalars-and-enums-json"},{"label":"haha","title":"LastMoment","anchor":"types-scalars-and-enums-lastmoment"},{"label":"haha","title":"LedgerLinesConsistencyMode","anchor":"types-scalars-and-enums-ledgerlinesconsistencymode"},{"label":"haha","title":"LedgerMigrationStatus","anchor":"types-scalars-and-enums-ledgermigrationstatus"},{"label":"haha","title":"LedgerTypes","anchor":"types-scalars-and-enums-ledgertypes"},{"label":"haha","title":"ParameterizedString","anchor":"types-scalars-and-enums-parameterizedstring"},{"label":"haha","title":"Period","anchor":"types-scalars-and-enums-period"},{"label":"haha","title":"ReadBalanceConsistencyMode","anchor":"types-scalars-and-enums-readbalanceconsistencymode"},{"label":"haha","title":"SafeString","anchor":"types-scalars-and-enums-safestring"},{"label":"haha","title":"SceneEventType","anchor":"types-scalars-and-enums-sceneeventtype"},{"label":"haha","title":"SchemaConsistencyMode","anchor":"types-scalars-and-enums-schemaconsistencymode"},{"label":"haha","title":"String","anchor":"types-scalars-and-enums-string"},{"label":"haha","title":"TxType","anchor":"types-scalars-and-enums-txtype"},{"label":"haha","title":"UTCOffset","anchor":"types-scalars-and-enums-utcoffset"}]},{"title":"Input Types","anchor":"types-input-types","label":"","id":"types","hideNavSubItems":false,"children":[{"label":"haha","title":"ChartOfAccountsInput","anchor":"types-input-types-chartofaccountsinput"},{"label":"haha","title":"CreateCustomCurrencyInput","anchor":"types-input-types-createcustomcurrencyinput"},{"label":"haha","title":"CreateLedgerAccountInput","anchor":"types-input-types-createledgeraccountinput"},{"label":"haha","title":"CreateLedgerAccountsInput","anchor":"types-input-types-createledgeraccountsinput"},{"label":"haha","title":"CreateLedgerInput","anchor":"types-input-types-createledgerinput"},{"label":"haha","title":"CustomAccountInput","anchor":"types-input-types-customaccountinput"},{"label":"haha","title":"CustomTxInput","anchor":"types-input-types-customtxinput"},{"label":"haha","title":"Int96ConditionInput","anchor":"types-input-types-int96conditioninput"},{"label":"haha","title":"LedgerAccountConditionInput","anchor":"types-input-types-ledgeraccountconditioninput"},{"label":"haha","title":"LedgerAccountConsistencyConfigInput","anchor":"types-input-types-ledgeraccountconsistencyconfiginput"},{"label":"haha","title":"LedgerAccountGroupConsistencyConfigInput","anchor":"types-input-types-ledgeraccountgroupconsistencyconfiginput"},{"label":"haha","title":"LedgerEntryConditionInput","anchor":"types-input-types-ledgerentryconditioninput"},{"label":"haha","title":"LedgerEntryGroupInput","anchor":"types-input-types-ledgerentrygroupinput"},{"label":"haha","title":"LedgerEntryInput","anchor":"types-input-types-ledgerentryinput"},{"label":"haha","title":"LedgerEntryTagInput","anchor":"types-input-types-ledgerentrytaginput"},{"label":"haha","title":"LedgerLineInput","anchor":"types-input-types-ledgerlineinput"},{"label":"haha","title":"SceneEntryInput","anchor":"types-input-types-sceneentryinput"},{"label":"haha","title":"SceneEventInput","anchor":"types-input-types-sceneeventinput"},{"label":"haha","title":"SceneInput","anchor":"types-input-types-sceneinput"},{"label":"haha","title":"SchemaConditionInput","anchor":"types-input-types-schemaconditioninput"},{"label":"haha","title":"SchemaConsistencyConfigInput","anchor":"types-input-types-schemaconsistencyconfiginput"},{"label":"haha","title":"SchemaInput","anchor":"types-input-types-schemainput"},{"label":"haha","title":"SchemaInt96ConditionInput","anchor":"types-input-types-schemaint96conditioninput"},{"label":"haha","title":"SchemaLedgerAccountInput","anchor":"types-input-types-schemaledgeraccountinput"},{"label":"haha","title":"SchemaLedgerEntriesInput","anchor":"types-input-types-schemaledgerentriesinput"},{"label":"haha","title":"SchemaLedgerEntryConditionInput","anchor":"types-input-types-schemaledgerentryconditioninput"},{"label":"haha","title":"SchemaLedgerEntryGroupInput","anchor":"types-input-types-schemaledgerentrygroupinput"},{"label":"haha","title":"SchemaLedgerEntryInput","anchor":"types-input-types-schemaledgerentryinput"},{"label":"haha","title":"SchemaLedgerEntryTagInput","anchor":"types-input-types-schemaledgerentrytaginput"},{"label":"haha","title":"SchemaLedgerLineInput","anchor":"types-input-types-schemaledgerlineinput"},{"label":"haha","title":"UpdateLedgerAccountInput","anchor":"types-input-types-updateledgeraccountinput"},{"label":"haha","title":"UpdateLedgerEntryInput","anchor":"types-input-types-updateledgerentryinput"},{"label":"haha","title":"UpdateLedgerInput","anchor":"types-input-types-updateledgerinput"}]},{"title":"MatchInput Types","anchor":"types-matchinput-types","label":"","id":"types","hideNavSubItems":false,"children":[{"label":"haha","title":"CurrencyMatchInput","anchor":"types-matchinput-types-currencymatchinput"},{"label":"haha","title":"EntryGroupMatchInput","anchor":"types-matchinput-types-entrygroupmatchinput"},{"label":"haha","title":"ExternalAccountMatchInput","anchor":"types-matchinput-types-externalaccountmatchinput"},{"label":"haha","title":"LedgerAccountMatchInput","anchor":"types-matchinput-types-ledgeraccountmatchinput"},{"label":"haha","title":"LedgerEntryGroupMatchInput","anchor":"types-matchinput-types-ledgerentrygroupmatchinput"},{"label":"haha","title":"LedgerEntryMatchInput","anchor":"types-matchinput-types-ledgerentrymatchinput"},{"label":"haha","title":"LedgerLineMatchInput","anchor":"types-matchinput-types-ledgerlinematchinput"},{"label":"haha","title":"LedgerMatchInput","anchor":"types-matchinput-types-ledgermatchinput"},{"label":"haha","title":"LinkMatchInput","anchor":"types-matchinput-types-linkmatchinput"},{"label":"haha","title":"SchemaCurrencyMatchInput","anchor":"types-matchinput-types-schemacurrencymatchinput"},{"label":"haha","title":"SchemaExternalAccountMatchInput","anchor":"types-matchinput-types-schemaexternalaccountmatchinput"},{"label":"haha","title":"SchemaLedgerAccountMatchInput","anchor":"types-matchinput-types-schemaledgeraccountmatchinput"},{"label":"haha","title":"SchemaMatchInput","anchor":"types-matchinput-types-schemamatchinput"},{"label":"haha","title":"SchemaTxMatchInput","anchor":"types-matchinput-types-schematxmatchinput"},{"label":"haha","title":"TagMatchInput","anchor":"types-matchinput-types-tagmatchinput"},{"label":"haha","title":"TxMatchInput","anchor":"types-matchinput-types-txmatchinput"}]},{"title":"Response Types","anchor":"types-response-types","label":"","id":"types","hideNavSubItems":false,"children":[{"label":"haha","title":"AddLedgerEntryResponse","anchor":"types-response-types-addledgerentryresponse"},{"label":"haha","title":"CreateCustomCurrencyResponse","anchor":"types-response-types-createcustomcurrencyresponse"},{"label":"haha","title":"CreateCustomLinkResponse","anchor":"types-response-types-createcustomlinkresponse"},{"label":"haha","title":"CreateLedgerAccountResponse","anchor":"types-response-types-createledgeraccountresponse"},{"label":"haha","title":"CreateLedgerAccountsResponse","anchor":"types-response-types-createledgeraccountsresponse"},{"label":"haha","title":"CreateLedgerResponse","anchor":"types-response-types-createledgerresponse"},{"label":"haha","title":"ReconcileTxResponse","anchor":"types-response-types-reconciletxresponse"},{"label":"haha","title":"StoreSchemaResponse","anchor":"types-response-types-storeschemaresponse"},{"label":"haha","title":"SyncCustomAccountsResponse","anchor":"types-response-types-synccustomaccountsresponse"},{"label":"haha","title":"SyncCustomTxsResponse","anchor":"types-response-types-synccustomtxsresponse"},{"label":"haha","title":"UpdateLedgerAccountResponse","anchor":"types-response-types-updateledgeraccountresponse"},{"label":"haha","title":"UpdateLedgerEntryResponse","anchor":"types-response-types-updateledgerentryresponse"},{"label":"haha","title":"UpdateLedgerResponse","anchor":"types-response-types-updateledgerresponse"}]},{"title":"Result Types","anchor":"types-result-types","label":"","id":"types","hideNavSubItems":false,"children":[{"label":"haha","title":"AddLedgerEntryResult","anchor":"types-result-types-addledgerentryresult"},{"label":"haha","title":"CreateCustomCurrencyResult","anchor":"types-result-types-createcustomcurrencyresult"},{"label":"haha","title":"CreateCustomLinkResult","anchor":"types-result-types-createcustomlinkresult"},{"label":"haha","title":"CreateLedgerAccountResult","anchor":"types-result-types-createledgeraccountresult"},{"label":"haha","title":"CreateLedgerAccountsResult","anchor":"types-result-types-createledgeraccountsresult"},{"label":"haha","title":"CreateLedgerResult","anchor":"types-result-types-createledgerresult"},{"label":"haha","title":"ReconcileTxResult","anchor":"types-result-types-reconciletxresult"},{"label":"haha","title":"StoreSchemaResult","anchor":"types-result-types-storeschemaresult"},{"label":"haha","title":"SyncCustomAccountsResult","anchor":"types-result-types-synccustomaccountsresult"},{"label":"haha","title":"SyncCustomTxsResult","anchor":"types-result-types-synccustomtxsresult"},{"label":"haha","title":"UpdateLedgerAccountResult","anchor":"types-result-types-updateledgeraccountresult"},{"label":"haha","title":"UpdateLedgerEntryResult","anchor":"types-result-types-updateledgerentryresult"},{"label":"haha","title":"UpdateLedgerResult","anchor":"types-result-types-updateledgerresult"}]},{"title":"Error Types","anchor":"types-error-types","label":"","id":"types","hideNavSubItems":false,"children":[{"label":"haha","title":"BadRequestError","anchor":"types-error-types-badrequesterror"},{"label":"haha","title":"Error","anchor":"types-error-types-error"},{"label":"haha","title":"InternalError","anchor":"types-error-types-internalerror"}]},{"title":"Connection Types","anchor":"types-connection-types","label":"","id":"types","hideNavSubItems":false,"children":[{"label":"haha","title":"CurrencyAmountConnection","anchor":"types-connection-types-currencyamountconnection"},{"label":"haha","title":"CustomCurrenciesConnection","anchor":"types-connection-types-customcurrenciesconnection"},{"label":"haha","title":"ExternalAccountsConnection","anchor":"types-connection-types-externalaccountsconnection"},{"label":"haha","title":"LedgerAccountsConnection","anchor":"types-connection-types-ledgeraccountsconnection"},{"label":"haha","title":"LedgerEntriesConnection","anchor":"types-connection-types-ledgerentriesconnection"},{"label":"haha","title":"LedgerEntryGroupBalanceConnection","anchor":"types-connection-types-ledgerentrygroupbalanceconnection"},{"label":"haha","title":"LedgerEntryGroupsConnection","anchor":"types-connection-types-ledgerentrygroupsconnection"},{"label":"haha","title":"LedgerLinesConnection","anchor":"types-connection-types-ledgerlinesconnection"},{"label":"haha","title":"LedgerMigrationConnection","anchor":"types-connection-types-ledgermigrationconnection"},{"label":"haha","title":"LedgersConnection","anchor":"types-connection-types-ledgersconnection"},{"label":"haha","title":"LinksConnection","anchor":"types-connection-types-linksconnection"},{"label":"haha","title":"PageInfo","anchor":"types-connection-types-pageinfo"},{"label":"haha","title":"SchemaConnection","anchor":"types-connection-types-schemaconnection"},{"label":"haha","title":"SchemaVersionConnection","anchor":"types-connection-types-schemaversionconnection"},{"label":"haha","title":"TxsConnection","anchor":"types-connection-types-txsconnection"}]},{"title":"Filter Types","anchor":"types-filter-types","label":"","id":"types","hideNavSubItems":false,"children":[{"label":"haha","title":"CurrencyFilter","anchor":"types-filter-types-currencyfilter"},{"label":"haha","title":"DateFilter","anchor":"types-filter-types-datefilter"},{"label":"haha","title":"DateTimeFilter","anchor":"types-filter-types-datetimefilter"},{"label":"haha","title":"ExternalAccountFilter","anchor":"types-filter-types-externalaccountfilter"},{"label":"haha","title":"GroupBalanceAccountFilter","anchor":"types-filter-types-groupbalanceaccountfilter"},{"label":"haha","title":"Int96Filter","anchor":"types-filter-types-int96filter"},{"label":"haha","title":"LedgerAccountFilter","anchor":"types-filter-types-ledgeraccountfilter"},{"label":"haha","title":"LedgerAccountTypeFilter","anchor":"types-filter-types-ledgeraccounttypefilter"},{"label":"haha","title":"LedgerAccountsFilterSet","anchor":"types-filter-types-ledgeraccountsfilterset"},{"label":"haha","title":"LedgerEntriesFilterSet","anchor":"types-filter-types-ledgerentriesfilterset"},{"label":"haha","title":"LedgerEntryFilter","anchor":"types-filter-types-ledgerentryfilter"},{"label":"haha","title":"LedgerEntryGroupBalanceFilterSet","anchor":"types-filter-types-ledgerentrygroupbalancefilterset"},{"label":"haha","title":"LedgerEntryGroupsFilterSet","anchor":"types-filter-types-ledgerentrygroupsfilterset"},{"label":"haha","title":"LedgerLinesFilterSet","anchor":"types-filter-types-ledgerlinesfilterset"},{"label":"haha","title":"LedgerTypeFilter","anchor":"types-filter-types-ledgertypefilter"},{"label":"haha","title":"LedgersFilterSet","anchor":"types-filter-types-ledgersfilterset"},{"label":"haha","title":"StringFilter","anchor":"types-filter-types-stringfilter"},{"label":"haha","title":"StringMatchFilter","anchor":"types-filter-types-stringmatchfilter"},{"label":"haha","title":"TagFilter","anchor":"types-filter-types-tagfilter"},{"label":"haha","title":"TxTypeFilter","anchor":"types-filter-types-txtypefilter"}]},{"title":"Utility Types","anchor":"types-utility-types","label":"","id":"types","hideNavSubItems":false,"children":[{"label":"haha","title":"CurrencyAmount","anchor":"types-utility-types-currencyamount"},{"label":"haha","title":"CustomLink","anchor":"types-utility-types-customlink"},{"label":"haha","title":"IncreaseEnv","anchor":"types-utility-types-increaseenv"},{"label":"haha","title":"IncreaseLink","anchor":"types-utility-types-increaselink"},{"label":"haha","title":"Int96Condition","anchor":"types-utility-types-int96condition"},{"label":"haha","title":"LedgerAccountCondition","anchor":"types-utility-types-ledgeraccountcondition"},{"label":"haha","title":"LedgerAccountConsistencyConfig","anchor":"types-utility-types-ledgeraccountconsistencyconfig"},{"label":"haha","title":"LedgerAccountTypes","anchor":"types-utility-types-ledgeraccounttypes"},{"label":"haha","title":"LedgerEntryCondition","anchor":"types-utility-types-ledgerentrycondition"},{"label":"haha","title":"LedgerEntryGroup","anchor":"types-utility-types-ledgerentrygroup"},{"label":"haha","title":"LedgerEntryGroupBalance","anchor":"types-utility-types-ledgerentrygroupbalance"},{"label":"haha","title":"LedgerEntryTag","anchor":"types-utility-types-ledgerentrytag"},{"label":"haha","title":"SchemaVersion","anchor":"types-utility-types-schemaversion"},{"label":"haha","title":"StripeEnv","anchor":"types-utility-types-stripeenv"},{"label":"haha","title":"StripeLink","anchor":"types-utility-types-stripelink"},{"label":"haha","title":"UnitEnv","anchor":"types-utility-types-unitenv"},{"label":"haha","title":"UnitLink","anchor":"types-utility-types-unitlink"}]}],"CLI Commands":[{"title":"login","anchor":"cli-commands-login","label":"","id":"cli-commands","hideNavSubItems":false},{"title":"store-schema","anchor":"cli-commands-store-schema","label":"","id":"cli-commands","hideNavSubItems":false},{"title":"create-ledger","anchor":"cli-commands-create-ledger","label":"","id":"cli-commands","hideNavSubItems":false},{"title":"get-schema","anchor":"cli-commands-get-schema","label":"","id":"cli-commands","hideNavSubItems":false},{"title":"add-ledger-entry","anchor":"cli-commands-add-ledger-entry","label":"","id":"cli-commands","hideNavSubItems":false},{"title":"create-custom-link","anchor":"cli-commands-create-custom-link","label":"","id":"cli-commands","hideNavSubItems":false},{"title":"gen-graphql","anchor":"cli-commands-gen-graphql","label":"","id":"cli-commands","hideNavSubItems":false},{"title":"update","anchor":"cli-commands-update","label":"","id":"cli-commands","hideNavSubItems":false},{"title":"token","anchor":"cli-commands-token","label":"","id":"cli-commands","hideNavSubItems":false},{"title":"help","anchor":"cli-commands-help","label":"","id":"cli-commands","hideNavSubItems":false},{"title":"workspace","anchor":"cli-commands-workspace","label":"","id":"cli-commands","hideNavSubItems":false}]},"topicConfig":{"API Overview":{"id":"api-overview","label":"A"},"API Queries":{"id":"queries","label":"B"},"API Mutations":{"id":"mutations","label":"C"},"API Types":{"id":"types","label":"D"},"CLI Commands":{"id":"cli-commands","label":"E"}}},"Changelog":{"_type":"MultiPageSectionMDXNav","href":"/changelog","contentTree":{"2024-06":[{"title":"Projects","anchor":"2024-06-projects","label":"a","id":"2024-06","hideNavSubItems":false},{"title":"Small improvements","anchor":"2024-06-small-improvements","label":"b","id":"2024-06","hideNavSubItems":false}],"2024-05":[{"title":"SDKs","anchor":"2024-05-sdks","label":"a","id":"2024-05","hideNavSubItems":false},{"title":"Small improvements","anchor":"2024-05-small-improvements","label":"b","id":"2024-05","hideNavSubItems":false}],"2024-04":[{"title":"Scenes","anchor":"2024-04-scenes","label":"a","id":"2024-04","hideNavSubItems":false},{"title":"Small improvements","anchor":"2024-04-small-improvements","label":"b","id":"2024-04","hideNavSubItems":false}],"2024-03":[{"title":"AI Ledger Design","anchor":"2024-03-ai-ledger-design","label":"a","id":"2024-03","hideNavSubItems":false},{"title":"Small improvements","anchor":"2024-03-small-improvements","label":"b","id":"2024-03","hideNavSubItems":false}],"2024-02":[{"title":"Stripe Link","anchor":"2024-02-stripe-link","label":"a","id":"2024-02","hideNavSubItems":false},{"title":"Schema Flexibility","anchor":"2024-02-schema-flexibility","label":"b","id":"2024-02","hideNavSubItems":false},{"title":"Small improvements","anchor":"2024-02-small-improvements","label":"c","id":"2024-02","hideNavSubItems":false}],"2024-01":[{"title":"Entry Groups","anchor":"2024-01-entry-groups","label":"a","id":"2024-01","hideNavSubItems":false},{"title":"Ledger designer","anchor":"2024-01-ledger-designer","label":"b","id":"2024-01","hideNavSubItems":false},{"title":"Small improvements","anchor":"2024-01-small-improvements","label":"c","id":"2024-01","hideNavSubItems":false}],"2023-12-19":[{"title":"Entry Conditions on any Ledger Account","anchor":"2023-12-19-entry-conditions-on-any-ledger-account","label":"a","id":"2023-12-19","hideNavSubItems":false}],"2023-11-30":[{"title":"Ledger Entry Tags","anchor":"2023-11-30-ledger-entry-tags","label":"a","id":"2023-11-30","hideNavSubItems":false}],"2023-10-17":[{"title":"Reconciliation Queries","anchor":"2023-10-17-reconciliation-queries","label":"a","id":"2023-10-17","hideNavSubItems":false}],"2023-10-03":[{"title":"List Query Consistency","anchor":"2023-10-03-list-query-consistency","label":"a","id":"2023-10-03","hideNavSubItems":false}],"2023-09-29":[{"title":"New Docs Site","anchor":"2023-09-29-new-docs-site","label":"a","id":"2023-09-29","hideNavSubItems":false}],"2023-08-11":[{"title":"Entry Conditions","anchor":"2023-08-11-entry-conditions","label":"a","id":"2023-08-11","hideNavSubItems":false}],"2023-07-19":[{"title":"New Dashboard","anchor":"2023-07-19-new-dashboard","label":"a","id":"2023-07-19","hideNavSubItems":false}],"2023-06-28":[{"title":"Status Page","anchor":"2023-06-28-status-page","label":"a","id":"2023-06-28","hideNavSubItems":false}],"2023-03-29":[{"title":"Unit Native Links","anchor":"2023-03-29-unit-native-links","label":"a","id":"2023-03-29","hideNavSubItems":false}],"2023-03-20":[{"title":"Ledger Schemas","anchor":"2023-03-20-ledger-schemas","label":"a","id":"2023-03-20","hideNavSubItems":false}],"2022-12-20":[{"title":"multi Currency Mode","anchor":"2022-12-20-multi-currency-mode","label":"a","id":"2022-12-20","hideNavSubItems":false}],"2022-11-14":[{"title":"S3 Data Export","anchor":"2022-11-14-s3-data-export","label":"a","id":"2022-11-14","hideNavSubItems":false}]},"topicConfig":{"2024-06":{"id":"2024-06","label":"A"},"2024-05":{"id":"2024-05","label":"B"},"2024-04":{"id":"2024-04","label":"C"},"2024-03":{"id":"2024-03","label":"D"},"2024-02":{"id":"2024-02","label":"E"},"2024-01":{"id":"2024-01","label":"F"},"2023-12-19":{"id":"2023-12-19","label":"G"},"2023-11-30":{"id":"2023-11-30","label":"H"},"2023-10-17":{"id":"2023-10-17","label":"I"},"2023-10-03":{"id":"2023-10-03","label":"J"},"2023-09-29":{"id":"2023-09-29","label":"K"},"2023-08-11":{"id":"2023-08-11","label":"L"},"2023-07-19":{"id":"2023-07-19","label":"M"},"2023-06-28":{"id":"2023-06-28","label":"N"},"2023-03-29":{"id":"2023-03-29","label":"O"},"2023-03-20":{"id":"2023-03-20","label":"P"},"2022-12-20":{"id":"2022-12-20","label":"Q"},"2022-11-14":{"id":"2022-11-14","label":"R"}}}},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      div: \"div\",\n      p: \"p\",\n      ul: \"ul\",\n      li: \"li\",\n      code: \"code\",\n      a: \"a\",\n      ol: \"ol\",\n      h6: \"h6\",\n      em: \"em\",\n      table: \"table\",\n      thead: \"thead\",\n      tr: \"tr\",\n      th: \"th\",\n      tbody: \"tbody\",\n      td: \"td\"\n    }, _provideComponents(), props.components), {TopicContainer, Page, InlineLogo, AnimatedDiagram, CodeBlock, Table, TableHeader, TableRow, TableData, Fragment, Subpage} = _components;\n    if (!AnimatedDiagram) _missingMdxReference(\"AnimatedDiagram\", true);\n    if (!CodeBlock) _missingMdxReference(\"CodeBlock\", true);\n    if (!Fragment) _missingMdxReference(\"Fragment\", true);\n    if (!InlineLogo) _missingMdxReference(\"InlineLogo\", true);\n    if (!Page) _missingMdxReference(\"Page\", true);\n    if (!Subpage) _missingMdxReference(\"Subpage\", true);\n    if (!Table) _missingMdxReference(\"Table\", true);\n    if (!TableData) _missingMdxReference(\"TableData\", true);\n    if (!TableHeader) _missingMdxReference(\"TableHeader\", true);\n    if (!TableRow) _missingMdxReference(\"TableRow\", true);\n    if (!TopicContainer) _missingMdxReference(\"TopicContainer\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(TopicContainer, {\n        label: \"A\",\n        title: \"API Overview\",\n        id: \"api-overview\",\n        children: [_jsxs(Page, {\n          id: \"api-overview-regions\",\n          title: \"Regions\",\n          label: \"a\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"The \", _jsx(InlineLogo, {}), \" API is available in the following AWS regions:\"]\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsx(_components.li, {\n              children: _jsx(_components.code, {\n                children: \"us-east-1\"\n              })\n            }), \"\\n\", _jsx(_components.li, {\n              children: _jsx(_components.code, {\n                children: \"us-east-2\"\n              })\n            }), \"\\n\", _jsx(_components.li, {\n              children: _jsx(_components.code, {\n                children: \"us-west-2\"\n              })\n            }), \"\\n\", _jsx(_components.li, {\n              children: _jsx(_components.code, {\n                children: \"eu-west-1\"\n              })\n            }), \"\\n\"]\n          }), _jsxs(_components.p, {\n            children: [\"The region for a workspace can be found in the API URL in the settings tab of the \", _jsx(_components.a, {\n              href: \"https://dashboard.fragmetn.dev/go/s/workspace\",\n              children: \"dashboard\"\n            }), \". Use the top-left dropdown in the dashboard to create a new workspace.\"]\n          }), _jsxs(_components.p, {\n            children: [_jsx(_components.a, {\n              href: \"/contact\",\n              children: \"Contact us\"\n            }), \" if you don't see your desired AWS region.\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"api-overview-authentication\",\n          title: \"Authentication\",\n          label: \"b\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(AnimatedDiagram, {\n            type: \"authentication\"\n          }), _jsxs(_components.p, {\n            children: [_jsx(InlineLogo, {}), \" uses OAuth2's \", _jsx(_components.a, {\n              href: \"https://www.oauth.com/oauth2-servers/access-tokens/client-credentials/\",\n              children: \"client credentials flow\"\n            }), \" to authenticate API clients. The call requesting an access token follows the OAuth2 spec. Use an OAuth2 library that supports the client credentials grant to retrieve the token or make an HTTP request. The flow is:\"]\n          }), _jsxs(_components.ol, {\n            children: [\"\\n\", _jsxs(_components.li, {\n              children: [\"Create an API client in the \", _jsx(InlineLogo, {}), \" \", _jsx(_components.a, {\n                href: \"https://dashboard.fragment.dev/go/s/api-clients\",\n                children: \"dashboard\"\n              }), \". API Clients have complete access to the workspace.\"]\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Note the auth endpoint URL and OAuth scope for the API Client. This is specific to the AWS region for a given workspace.\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Get a fresh access token from the token endpoint. The access token expires in 1 hour. We recommend retrieving a new token for each set of calls needed to be made. Multiple tokens can be generated and use simultaneously.\"\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [\"To use the token, add the \", _jsx(_components.code, {\n                children: \"Authorization\"\n              }), \" request header with the value \", _jsx(_components.code, {\n                children: \"Bearer {{access_token}}\"\n              }), \" when calling the GraphQL API.\"]\n            }), \"\\n\"]\n          }), _jsxs(_components.p, {\n            children: [\"The token request payload should be in \", _jsx(_components.code, {\n              children: \"x-www-form-urlencoded\"\n            }), \" format, with the keys \", _jsx(_components.code, {\n              children: \"grant_type\"\n            }), \", \", _jsx(_components.code, {\n              children: \"scope\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"client_id\"\n            }), \".\"]\n          }), _jsx(CodeBlock, {\n            language: \"plaintext\",\n            title: \"Token request body\",\n            children: `grant_type=client_credentials\u0026scope={{scope}}\u0026client_id={{client_id}}`\n          }), _jsxs(_components.p, {\n            children: [\"The token request headers should contain the following items, where \", _jsx(_components.code, {\n              children: \"client_credentials\"\n            }), \" is the Base64-encoded version of: \", _jsx(_components.code, {\n              children: \"{{client_id}}:{client_secret}}\"\n            }), \".\"]\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"Token request headers\",\n            children: `{\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n    \"Authorization\": \"Basic {{client_credentials}}\",\n    \"Accept\": \"*/*\"\n}`\n          }), _jsx(_components.p, {\n            children: \"The response is a JSON object containing the access token.\"\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"Token response body\",\n            children: `{\n    \"access_token\": \"\u003caccess token\u003e\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\"\n}\n`\n          }), _jsx(_components.p, {\n            children: \"Putting it all together:\"\n          }), _jsx(CodeBlock, {\n            language: \"javascript\",\n            title: \"Javascript\",\n            expandable: \"true\",\n            children: `import axios from \"axios\";\n\nconst btoa = (str) =\u003e Buffer.from(str).toString(\"base64\");\n\n// credentials from the dashboard\nconst clientId = \"2h4t0cv7qv5c9r0qgs1o3erkuk\";\nconst secret = \"superSecretClientSecret\";\nconst scope = \"https://api.us-west-2.fragment.dev/*\";\nconst authUrl = \"https://auth.us-west-2.fragment.dev/oauth2/token\";\n\nconst getToken = async () =\u003e {\n\n  // encode the client id and secret\n  const auth = btoa(\\`\\${clientId}:\\${secret}\\`);\n\n  // create the request body\n  const data = new URLSearchParams();\n  data.append(\"grant_type\", \"client_credentials\");\n  data.append(\"scope\", scope);\n  data.append(\"client_id\", clientId);\n\n  // retrieve the token\n  const response = await axios.request({\n    method: \"POST\",\n    url: authUrl,\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Authorization: \\`Basic \\${auth}\\`,\n      Accept: \"*/*\",\n    },\n    data,\n  });\n\n  if (!response.data.access_token) {\n    throw new Error(\n      \"didn't get an access token from auth endpoint\"\n    );\n  }\n  return response.data.access_token;\n};\n`\n          })]\n        }), _jsxs(Page, {\n          id: \"api-overview-idempotency\",\n          title: \"Idempotency\",\n          label: \"c\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(AnimatedDiagram, {\n            type: \"idempotency\"\n          }), _jsxs(_components.p, {\n            children: [\"To ensure write operations are executed exactly once, all write mutations in \", _jsx(InlineLogo, {}), \" are idempotent. This enables applications to safely retry operations without risk of duplicate effects. Applications only need to guarantee that the API is called at least once.\"]\n          }), _jsxs(_components.p, {\n            children: [\"Mutations require a unique idempotency key (\", _jsx(_components.code, {\n              children: \"ik\"\n            }), \"). For calls to \", _jsx(_components.code, {\n              children: \"reconcileTx\"\n            }), \", \", _jsx(_components.code, {\n              children: \"syncCustomAccounts\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"syncCustomTxs\"\n            }), \", \", _jsx(InlineLogo, {}), \" internally uses the transaction or account ID from the request as the idempotency key.\"]\n          }), _jsxs(_components.p, {\n            children: [\"Additional requests with the same \", _jsx(_components.code, {\n              children: \"ik\"\n            }), \" are ignored and the original response is returned with \", _jsx(_components.code, {\n              children: \"isIkReplay: true\"\n            }), \" in the response.\"]\n          }), _jsxs(_components.p, {\n            children: [\"Idempotency keys are scoped per-Ledger; requests with the same \", _jsx(_components.code, {\n              children: \"IK\"\n            }), \" to different Ledgers will execute the mutation and return \", _jsx(_components.code, {\n              children: \"isIkReplay: false\"\n            }), \".\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"api-overview-errors\",\n          title: \"Errors\",\n          label: \"d\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"According to the \", _jsx(_components.a, {\n              href: \"https://spec.graphql.org/October2021/#sec-Response-Format\",\n              children: \"GraphQL spec\"\n            }), \", all responses will return an object containing \", _jsx(_components.code, {\n              children: \"data\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"errors\"\n            }), \".\"]\n          }), _jsxs(_components.p, {\n            children: [_jsx(_components.code, {\n              children: \"data\"\n            }), \": the result of a query or mutation. In the \", _jsx(InlineLogo, {}), \" API, all successful mutations return a union type that represents an application error or a successful result.\"]\n          }), _jsxs(_components.p, {\n            children: [\"For example, the response type of the \", _jsx(_components.code, {\n              children: \"addLedgerEntry\"\n            }), \" mutation is:\"]\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            title: \"API Response Union Types\",\n            children: `union AddLedgerEntryResponse =\n    AddLedgerEntryResult | BadRequestError | InternalError`\n          }), _jsxs(_components.p, {\n            children: [\"Queries can return \", _jsx(_components.code, {\n              children: \"null\"\n            }), \" if an error was raised during the request. This is accompanied by a non-empty \", _jsx(_components.code, {\n              children: \"errors\"\n            }), \" list.\"]\n          }), _jsxs(_components.p, {\n            children: [_jsx(_components.code, {\n              children: \"errors\"\n            }), \": a list of errors raised during the request. This typically gets populated when issuing a query if a required argument is missing or an invalid ID is provided.\"]\n          }), _jsx(_components.p, {\n            children: \"When calling the API, handle errors in the following order:\"\n          }), _jsxs(_components.ol, {\n            children: [\"\\n\", _jsx(_components.li, {\n              children: \"Handle retryable HTTP errors. These are 429 or 5XX.\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Handle non-retryable HTTP errors such as other 4XX status codes. This typically happens if the query does not conform to the GraphQL spec, like omitting a required variable or selecting a nonexistent field. This class of error can be avoided by using a generated, typed SDK.\"\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [\"Handle \", _jsx(_components.code, {\n                children: \"null\"\n              }), \" responses from queries by checking the \", _jsx(_components.code, {\n                children: \"errors\"\n              }), \" key. This typically happens when querying an item with an invalid ID.\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [\"Query the \", _jsx(_components.code, {\n                children: \"__typename\"\n              }), \" field. This contains \", _jsx(_components.code, {\n                children: \"BadRequestError\"\n              }), \", \", _jsx(_components.code, {\n                children: \"InternalError\"\n              }), \" or the appropriate \", _jsx(_components.code, {\n                children: \"\u003cMutation\u003eResult\"\n              }), \" type.\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [\"Handle \", _jsx(_components.code, {\n                children: \"InternalError\"\n              }), \" with retries and exponential backoff.\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [\"Handle \", _jsx(_components.code, {\n                children: \"BadRequestError\"\n              }), \" by failing the operation.\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [\"Handle \", _jsx(_components.code, {\n                children: \"\u003cMutation\u003eResult\"\n              }), \" types such as \", _jsx(_components.code, {\n                children: \"AddLedgerEntryResult\"\n              }), \".\"]\n            }), \"\\n\"]\n          }), _jsx(_components.p, {\n            children: \"An example of this written in TypeScript:\"\n          }), _jsx(CodeBlock, {\n            expandable: true,\n            language: \"typescript\",\n            title: \"Handling API Responses\",\n            children: `import assert from 'assert';\n\ntype RequestParams = {\n  query: string;\n  variables: Record\\\u003cstring, unknown\\\u003e;\n};\n\nconst makeRequest = async ({ query, variables }: RequestParams): Promise\\\u003cResponse\\\u003e =\u003e {\n  const token = await getToken();\n  return fetch('Fragment GraphQL URL', {\n    headers: {\n      Authorization: \\`Bearer \\${token}\\`,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ query, variables }),\n  });\n};\n\nconst query = '''\n  mutation addLedgerEntry($ik: SafeString, $entry: LedgerEntryInput!) {\n    addLedgerEntry(ik: $ik, entry: $entry) {\n      __typename\n      ...\n    }\n  }\n''';\nconst variables = { ik: 'sample-ik', entry: {...} };\n\nconst handleRequest = (req: Response) =\u003e {\n  if (req.status === 429 || req.status \u003e= 500) {\n    // Rate-limited or intermittent http failures. Retry the request.\n    return handleRequest(await makeRequest({ query, variables }));\n  }\n  if ((req.status \u003e= 400 || req.status \u003c 500) \u0026\u0026 req.status !== 429) {\n    // Invalid GraphQL request provided to Fragment. Handle the error.\n    throw new Error('Invalid GraphQL request');\n  }\n\n  // .json() checks that it was a 200\n  const response = await req.json();\n  if (response.data.addLedgerEntry.__typename === 'InternalError') {\n    // Retry the request in case of internal errors, with backoff.\n    return handleRequest(await makeRequest({ query, variables }));\n  }\n  if (response.data.addLedgerEntry.__typename === 'BadRequestError') {\n    // Invalid request provided to Fragment. Handle the error.\n    throw new Error('Invalid API request to Fragment');\n  }\n  return response;\n};\n\nconst response = handleRequest(await makeRequest({ query, variables }));\n// Entry successfully posted to Fragment. Handle the response.\nassert(response.data.addLedgerEntry.__typename === 'AddLedgerEntryResult');\nhandlePostedEntry(response.data.addLedgerEntry);\n`\n          }), _jsxs(_components.p, {\n            children: [\"To test how your application handles errors, use the \", _jsx(_components.code, {\n              children: \"X-Fragment-Return-Error\"\n            }), \" request header to instruct the API to return erroneous responses.\"]\n          }), _jsxs(_components.p, {\n            children: [\"Set the \", _jsx(_components.code, {\n              children: \"X-Fragment-Return-Error\"\n            }), \" header to:\"]\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"internalError\"\n              }), \" to instruct the API to return an \", _jsx(_components.code, {\n                children: \"InternalError\"\n              })]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"badRequestError\"\n              }), \" to instruct the API to return a \", _jsx(_components.code, {\n                children: \"BadRequestError\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.p, {\n            children: [\"When requesting an erroneous response, \", _jsx(InlineLogo, {}), \" will skip processing your request and return the error immediately.\"]\n          })]\n        })]\n      }), \"\\n\", _jsxs(TopicContainer, {\n        label: \"B\",\n        title: \"API Queries\",\n        id: \"queries\",\n        children: [_jsxs(Page, {\n          id: \"queries-customcurrencies\",\n          title: \"customCurrencies\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Query Custom Currencies in the workspace\"\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns a  \", _jsx(_components.a, {\n              href: \"#types-connection-types-customcurrenciesconnection\",\n              children: \"CustomCurrenciesConnection!\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `query CustomCurrencies(\n  $after: String,\n  $before: String,\n  $first: Int,\n  $last: Int\n) {\n  customCurrencies(\n    after: $after,\n    before: $before,\n    first: $first,\n    last: $last\n  ) {\n    nodes {\n      ...CurrencyFragment\n    }\n    pageInfo {\n      ...PageInfoFragment\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Variables\",\n            language: \"json\",\n            children: `{\"after\": \"abc123\", \"before\": \"abc123\", \"first\": 2277, \"last\": 2277}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\n  \"data\": {\n    \"customCurrencies\": {\n      \"nodes\": [Currency],\n      \"pageInfo\": PageInfo\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          }), _jsxs(Table, {\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Name\"\n                }), \"\\n\", _jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Description\"\n                })]\n              })\n            }), _jsxs(\"tbody\", {\n              children: [_jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"after  -  \", _jsx(_components.a, {\n                    href: \"#types-scalars-and-enums-string\",\n                    children: \"String\"\n                  }), \" \"]\n                }), _jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about  \", _jsx(_components.a, {\n                    href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                    children: \"pagination\"\n                  }), \"  . \"]\n                })]\n              }), \"\\n\", _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"before  -  \", _jsx(_components.a, {\n                    href: \"#types-scalars-and-enums-string\",\n                    children: \"String\"\n                  }), \" \"]\n                }), _jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about  \", _jsx(_components.a, {\n                    href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                    children: \"pagination\"\n                  }), \"  . \"]\n                })]\n              }), \"\\n\", _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"first  -  \", _jsx(_components.a, {\n                    href: \"#types-scalars-and-enums-int\",\n                    children: \"Int\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"The number of currencies to return per page, when paginating forwards. Defaults to 20, maximum is 200. \"\n                })]\n              }), \"\\n\", _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"last  -  \", _jsx(_components.a, {\n                    href: \"#types-scalars-and-enums-int\",\n                    children: \"Int\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"The number of currencies to return per page, when paginating backwards. Defaults to 20, maximum is 200. \"\n                })]\n              })]\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"queries-externalaccount\",\n          title: \"externalAccount\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"Get External Account by Link and External ID or \", _jsx(Fragment, {}), \"  ID.\"]\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns an  \", _jsx(_components.a, {\n              href: \"#types-core-types-externalaccount\",\n              children: \"ExternalAccount\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `query ExternalAccount($externalAccount: ExternalAccountMatchInput!) {\n  externalAccount(externalAccount: $externalAccount) {\n    currency {\n      ...CurrencyFragment\n    }\n    currencyMode\n    externalId\n    id\n    ledgerAccounts {\n      ...LedgerAccountsConnectionFragment\n    }\n    link {\n      ...LinkFragment\n    }\n    linkId\n    name\n    txs {\n      ...TxsConnectionFragment\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Variables\",\n            language: \"json\",\n            children: `{\"externalAccount\": ExternalAccountMatchInput}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\n  \"data\": {\n    \"externalAccount\": {\n      \"currency\": Currency,\n      \"currencyMode\": \"multi\",\n      \"externalId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n      \"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n      \"ledgerAccounts\": LedgerAccountsConnection,\n      \"link\": Link,\n      \"linkId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n      \"name\": \"abc123\",\n      \"txs\": TxsConnection\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          }), _jsxs(Table, {\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Name\"\n                }), \"\\n\", _jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Description\"\n                })]\n              })\n            }), _jsx(\"tbody\", {\n              children: _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"externalAccount  -  \", _jsx(_components.a, {\n                    href: \"#types-matchinput-types-externalaccountmatchinput\",\n                    children: \"ExternalAccountMatchInput!\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1\n                })]\n              })\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"queries-ledger\",\n          title: \"ledger\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Get a Ledger by ID\"\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns a  \", _jsx(_components.a, {\n              href: \"#types-core-types-ledger\",\n              children: \"Ledger\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `query Ledger($ledger: LedgerMatchInput!) {\n  ledger(ledger: $ledger) {\n    balanceUTCOffset\n    created\n    dashboardUrl\n    id\n    ik\n    ledgerAccounts {\n      ...LedgerAccountsConnectionFragment\n    }\n    ledgerEntries {\n      ...LedgerEntriesConnectionFragment\n    }\n    ledgerEntryGroup {\n      ...LedgerEntryGroupFragment\n    }\n    ledgerEntryGroups {\n      ...LedgerEntryGroupsConnectionFragment\n    }\n    migrations {\n      ...LedgerMigrationConnectionFragment\n    }\n    name\n    schema {\n      ...SchemaFragment\n    }\n    type\n    workspaceId\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Variables\",\n            language: \"json\",\n            children: `{\"ledger\": LedgerMatchInput}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\n  \"data\": {\n    \"ledger\": {\n      \"balanceUTCOffset\": \"-08:00\",\n      \"created\": \"2007-12-03T10:15:30Z\",\n      \"dashboardUrl\": \"abc123\",\n      \"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n      \"ik\": \"some-safe-string-ik\",\n      \"ledgerAccounts\": LedgerAccountsConnection,\n      \"ledgerEntries\": LedgerEntriesConnection,\n      \"ledgerEntryGroup\": LedgerEntryGroup,\n      \"ledgerEntryGroups\": LedgerEntryGroupsConnection,\n      \"migrations\": LedgerMigrationConnection,\n      \"name\": \"abc123\",\n      \"schema\": Schema,\n      \"type\": \"double\",\n      \"workspaceId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\"\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          }), _jsxs(Table, {\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Name\"\n                }), \"\\n\", _jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Description\"\n                })]\n              })\n            }), _jsx(\"tbody\", {\n              children: _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"ledger  -  \", _jsx(_components.a, {\n                    href: \"#types-matchinput-types-ledgermatchinput\",\n                    children: \"LedgerMatchInput!\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"An object specifying the ID of the ledger you want to query \"\n                })]\n              })\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"queries-ledgeraccount\",\n          title: \"ledgerAccount\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Get a Ledger Account by ID\"\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns a  \", _jsx(_components.a, {\n              href: \"#types-core-types-ledgeraccount\",\n              children: \"LedgerAccount\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `query LedgerAccount($ledgerAccount: LedgerAccountMatchInput!) {\n  ledgerAccount(ledgerAccount: $ledgerAccount) {\n    balance\n    balanceChange\n    balanceChanges {\n      ...CurrencyAmountConnectionFragment\n    }\n    balances {\n      ...CurrencyAmountConnectionFragment\n    }\n    childBalance\n    childBalanceChange\n    childBalanceChanges {\n      ...CurrencyAmountConnectionFragment\n    }\n    childBalances {\n      ...CurrencyAmountConnectionFragment\n    }\n    childLedgerAccounts {\n      ...LedgerAccountsConnectionFragment\n    }\n    consistencyConfig {\n      ...LedgerAccountConsistencyConfigFragment\n    }\n    created\n    currency {\n      ...CurrencyFragment\n    }\n    currencyMode\n    dashboardUrl\n    id\n    ik\n    ledger {\n      ...LedgerFragment\n    }\n    ledgerId\n    lines {\n      ...LedgerLinesConnectionFragment\n    }\n    link {\n      ...LinkFragment\n    }\n    linkedAccount {\n      ...ExternalAccountFragment\n    }\n    name\n    ownBalance\n    ownBalanceChange\n    ownBalanceChanges {\n      ...CurrencyAmountConnectionFragment\n    }\n    ownBalances {\n      ...CurrencyAmountConnectionFragment\n    }\n    parentLedgerAccount {\n      ...LedgerAccountFragment\n    }\n    parentLedgerAccountId\n    path\n    type\n    unreconciledTxs {\n      ...TxsConnectionFragment\n    }\n    workspaceId\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Variables\",\n            language: \"json\",\n            children: `{\"ledgerAccount\": LedgerAccountMatchInput}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\n  \"data\": {\n    \"ledgerAccount\": {\n      \"balance\": \"999999999999\",\n      \"balanceChange\": \"999999999999\",\n      \"balanceChanges\": CurrencyAmountConnection,\n      \"balances\": CurrencyAmountConnection,\n      \"childBalance\": \"999999999999\",\n      \"childBalanceChange\": \"999999999999\",\n      \"childBalanceChanges\": CurrencyAmountConnection,\n      \"childBalances\": CurrencyAmountConnection,\n      \"childLedgerAccounts\": LedgerAccountsConnection,\n      \"consistencyConfig\": LedgerAccountConsistencyConfig,\n      \"created\": \"2007-12-03T10:15:30Z\",\n      \"currency\": Currency,\n      \"currencyMode\": \"multi\",\n      \"dashboardUrl\": \"abc123\",\n      \"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n      \"ik\": \"abc123\",\n      \"ledger\": Ledger,\n      \"ledgerId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n      \"lines\": LedgerLinesConnection,\n      \"link\": Link,\n      \"linkedAccount\": ExternalAccount,\n      \"name\": \"abc123\",\n      \"ownBalance\": \"999999999999\",\n      \"ownBalanceChange\": \"999999999999\",\n      \"ownBalanceChanges\": CurrencyAmountConnection,\n      \"ownBalances\": CurrencyAmountConnection,\n      \"parentLedgerAccount\": LedgerAccount,\n      \"parentLedgerAccountId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n      \"path\": \"abc123\",\n      \"type\": \"asset\",\n      \"unreconciledTxs\": TxsConnection,\n      \"workspaceId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\"\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          }), _jsxs(Table, {\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Name\"\n                }), \"\\n\", _jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Description\"\n                })]\n              })\n            }), _jsx(\"tbody\", {\n              children: _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"ledgerAccount  -  \", _jsx(_components.a, {\n                    href: \"#types-matchinput-types-ledgeraccountmatchinput\",\n                    children: \"LedgerAccountMatchInput!\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"An object specifying the ID of the ledger account you want to query \"\n                })]\n              })\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"queries-ledgerentry\",\n          title: \"ledgerEntry\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Get Ledger Entry by ID.\"\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns a  \", _jsx(_components.a, {\n              href: \"#types-core-types-ledgerentry\",\n              children: \"LedgerEntry\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `query LedgerEntry($ledgerEntry: LedgerEntryMatchInput!) {\n  ledgerEntry(ledgerEntry: $ledgerEntry) {\n    conditions {\n      ...LedgerEntryConditionFragment\n    }\n    created\n    dashboardUrl\n    date\n    description\n    groups {\n      ...LedgerEntryGroupFragment\n    }\n    id\n    ik\n    ledger {\n      ...LedgerFragment\n    }\n    ledgerId\n    lines {\n      ...LedgerLinesConnectionFragment\n    }\n    posted\n    tags {\n      ...LedgerEntryTagFragment\n    }\n    type\n    workspaceId\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Variables\",\n            language: \"json\",\n            children: `{\"ledgerEntry\": LedgerEntryMatchInput}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\n  \"data\": {\n    \"ledgerEntry\": {\n      \"conditions\": [LedgerEntryCondition],\n      \"created\": \"2007-12-03T10:15:30Z\",\n      \"dashboardUrl\": \"abc123\",\n      \"date\": \"2022-03-28\",\n      \"description\": \"abc123\",\n      \"groups\": [LedgerEntryGroup],\n      \"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n      \"ik\": \"abc123\",\n      \"ledger\": Ledger,\n      \"ledgerId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n      \"lines\": LedgerLinesConnection,\n      \"posted\": \"2007-12-03T10:15:30Z\",\n      \"tags\": [LedgerEntryTag],\n      \"type\": \"some-safe-string-ik\",\n      \"workspaceId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\"\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          }), _jsxs(Table, {\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Name\"\n                }), \"\\n\", _jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Description\"\n                })]\n              })\n            }), _jsx(\"tbody\", {\n              children: _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"ledgerEntry  -  \", _jsx(_components.a, {\n                    href: \"#types-matchinput-types-ledgerentrymatchinput\",\n                    children: \"LedgerEntryMatchInput!\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"An object specifying the ID of the Ledger Entry you want to query. \"\n                })]\n              })\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"queries-ledgerentrygroup\",\n          title: \"ledgerEntryGroup\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Query a Ledger Entry Group given its Ledger, key, and value.\"\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns a  \", _jsx(_components.a, {\n              href: \"#types-utility-types-ledgerentrygroup\",\n              children: \"LedgerEntryGroup\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `query LedgerEntryGroup($ledgerEntryGroup: LedgerEntryGroupMatchInput!) {\n  ledgerEntryGroup(ledgerEntryGroup: $ledgerEntryGroup) {\n    balances {\n      ...LedgerEntryGroupBalanceConnectionFragment\n    }\n    created\n    dashboardUrl\n    key\n    ledgerEntries {\n      ...LedgerEntriesConnectionFragment\n    }\n    value\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Variables\",\n            language: \"json\",\n            children: `{\"ledgerEntryGroup\": LedgerEntryGroupMatchInput}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\n  \"data\": {\n    \"ledgerEntryGroup\": {\n      \"balances\": LedgerEntryGroupBalanceConnection,\n      \"created\": \"2007-12-03T10:15:30Z\",\n      \"dashboardUrl\": \"abc123\",\n      \"key\": \"some-safe-string-ik\",\n      \"ledgerEntries\": LedgerEntriesConnection,\n      \"value\": \"some-safe-string-ik\"\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          }), _jsxs(Table, {\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Name\"\n                }), \"\\n\", _jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Description\"\n                })]\n              })\n            }), _jsx(\"tbody\", {\n              children: _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"ledgerEntryGroup  -  \", _jsx(_components.a, {\n                    href: \"#types-matchinput-types-ledgerentrygroupmatchinput\",\n                    children: \"LedgerEntryGroupMatchInput!\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1\n                })]\n              })\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"queries-ledgerline\",\n          title: \"ledgerLine\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Get LedgerLine by ID\"\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns a  \", _jsx(_components.a, {\n              href: \"#types-core-types-ledgerline\",\n              children: \"LedgerLine\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `query LedgerLine($ledgerLine: LedgerLineMatchInput!) {\n  ledgerLine(ledgerLine: $ledgerLine) {\n    account {\n      ...LedgerAccountFragment\n    }\n    accountId\n    amount\n    created\n    currency {\n      ...CurrencyFragment\n    }\n    date\n    description\n    externalTransferId\n    externalTransferType\n    externalTxId\n    id\n    key\n    ledger {\n      ...LedgerFragment\n    }\n    ledgerEntry {\n      ...LedgerEntryFragment\n    }\n    ledgerEntryId\n    ledgerId\n    otherTxExternalAccountExternalId\n    otherTxExternalAccountId\n    otherTxExternalId\n    otherTxId\n    posted\n    tx {\n      ...TxFragment\n    }\n    txId\n    type\n    workspaceId\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Variables\",\n            language: \"json\",\n            children: `{\"ledgerLine\": LedgerLineMatchInput}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\n  \"data\": {\n    \"ledgerLine\": {\n      \"account\": LedgerAccount,\n      \"accountId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n      \"amount\": \"999999999999\",\n      \"created\": \"2007-12-03T10:15:30Z\",\n      \"currency\": Currency,\n      \"date\": \"2022-03-28\",\n      \"description\": \"abc123\",\n      \"externalTransferId\": \"abc123\",\n      \"externalTransferType\": \"ach\",\n      \"externalTxId\": \"abc123\",\n      \"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n      \"key\": \"abc123\",\n      \"ledger\": Ledger,\n      \"ledgerEntry\": LedgerEntry,\n      \"ledgerEntryId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n      \"ledgerId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n      \"otherTxExternalAccountExternalId\": \"abc123\",\n      \"otherTxExternalAccountId\": \"abc123\",\n      \"otherTxExternalId\": \"abc123\",\n      \"otherTxId\": \"abc123\",\n      \"posted\": \"2007-12-03T10:15:30Z\",\n      \"tx\": Tx,\n      \"txId\": \"abc123\",\n      \"type\": \"credit\",\n      \"workspaceId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\"\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          }), _jsxs(Table, {\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Name\"\n                }), \"\\n\", _jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Description\"\n                })]\n              })\n            }), _jsx(\"tbody\", {\n              children: _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"ledgerLine  -  \", _jsx(_components.a, {\n                    href: \"#types-matchinput-types-ledgerlinematchinput\",\n                    children: \"LedgerLineMatchInput!\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"An object specifying the ID of the LedgerLine you want to query \"\n                })]\n              })\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"queries-ledgers\",\n          title: \"ledgers\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Query Ledgers in workspace. Ledgers are paginated and returned in reverse-chronological order by their created date.\"\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns a  \", _jsx(_components.a, {\n              href: \"#types-connection-types-ledgersconnection\",\n              children: \"LedgersConnection!\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `query Ledgers(\n  $after: String,\n  $before: String,\n  $filter: LedgersFilterSet,\n  $first: Int,\n  $last: Int\n) {\n  ledgers(\n    after: $after,\n    before: $before,\n    filter: $filter,\n    first: $first,\n    last: $last\n  ) {\n    nodes {\n      ...LedgerFragment\n    }\n    pageInfo {\n      ...PageInfoFragment\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Variables\",\n            language: \"json\",\n            children: `{\n  \"after\": \"abc123\",\n  \"before\": \"abc123\",\n  \"filter\": LedgersFilterSet,\n  \"first\": 2277,\n  \"last\": 2277\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\n  \"data\": {\n    \"ledgers\": {\n      \"nodes\": [Ledger],\n      \"pageInfo\": PageInfo\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          }), _jsxs(Table, {\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Name\"\n                }), \"\\n\", _jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Description\"\n                })]\n              })\n            }), _jsxs(\"tbody\", {\n              children: [_jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"after  -  \", _jsx(_components.a, {\n                    href: \"#types-scalars-and-enums-string\",\n                    children: \"String\"\n                  }), \" \"]\n                }), _jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about  \", _jsx(_components.a, {\n                    href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                    children: \"pagination\"\n                  }), \"  . \"]\n                })]\n              }), \"\\n\", _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"before  -  \", _jsx(_components.a, {\n                    href: \"#types-scalars-and-enums-string\",\n                    children: \"String\"\n                  }), \" \"]\n                }), _jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about  \", _jsx(_components.a, {\n                    href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                    children: \"pagination\"\n                  }), \"  . \"]\n                })]\n              }), \"\\n\", _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"filter  -  \", _jsx(_components.a, {\n                    href: \"#types-filter-types-ledgersfilterset\",\n                    children: \"LedgersFilterSet\"\n                  }), \" \"]\n                }), _jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"Filter the Ledgers returned. Learn more about  \", _jsx(_components.a, {\n                    href: \"https://fragment.dev/docs#query-data-ledgers\",\n                    children: \"querying Ledgers\"\n                  }), \"  . \"]\n                })]\n              }), \"\\n\", _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"first  -  \", _jsx(_components.a, {\n                    href: \"#types-scalars-and-enums-int\",\n                    children: \"Int\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"The number of Ledgers to return per page, when paginating forwards. Defaults to 20, maximum is 200. \"\n                })]\n              }), \"\\n\", _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"last  -  \", _jsx(_components.a, {\n                    href: \"#types-scalars-and-enums-int\",\n                    children: \"Int\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"The number of Ledgers to return per page, when paginating backwards. Defaults to 20, maximum is 200. \"\n                })]\n              })]\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"queries-link\",\n          title: \"link\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Get a Link by ID. Returns a BadRequestError if the Link is not found.\"\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns a  \", _jsx(_components.a, {\n              href: \"#types-core-types-link\",\n              children: \"Link\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `query Link($link: LinkMatchInput!) {\n  link(link: $link) {\n    created\n    dashboardUrl\n    externalAccounts {\n      ...ExternalAccountsConnectionFragment\n    }\n    id\n    name\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Variables\",\n            language: \"json\",\n            children: `{\"link\": LinkMatchInput}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\n  \"data\": {\n    \"link\": {\n      \"created\": \"abc123\",\n      \"dashboardUrl\": \"abc123\",\n      \"externalAccounts\": ExternalAccountsConnection,\n      \"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n      \"name\": \"abc123\"\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          }), _jsxs(Table, {\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Name\"\n                }), \"\\n\", _jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Description\"\n                })]\n              })\n            }), _jsx(\"tbody\", {\n              children: _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"link  -  \", _jsx(_components.a, {\n                    href: \"#types-matchinput-types-linkmatchinput\",\n                    children: \"LinkMatchInput!\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"An object containing the ID of the Link you are querying \"\n                })]\n              })\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"queries-links\",\n          title: \"links\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Get all links in a workspace\"\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns a  \", _jsx(_components.a, {\n              href: \"#types-connection-types-linksconnection\",\n              children: \"LinksConnection!\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `query Links {\n  links {\n    nodes {\n      ...LinkFragment\n    }\n    pageInfo {\n      ...PageInfoFragment\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\n  \"data\": {\n    \"links\": {\n      \"nodes\": [Link],\n      \"pageInfo\": PageInfo\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          })]\n        }), _jsxs(Page, {\n          id: \"queries-schema\",\n          title: \"schema\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Get a Schema by key.\"\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns a  \", _jsx(_components.a, {\n              href: \"#types-core-types-schema\",\n              children: \"Schema\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `query Schema($schema: SchemaMatchInput!) {\n  schema(schema: $schema) {\n    key\n    ledgers {\n      ...LedgersConnectionFragment\n    }\n    name\n    version {\n      ...SchemaVersionFragment\n    }\n    versions {\n      ...SchemaVersionConnectionFragment\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Variables\",\n            language: \"json\",\n            children: `{\"schema\": SchemaMatchInput}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\n  \"data\": {\n    \"schema\": {\n      \"key\": \"some-safe-string-ik\",\n      \"ledgers\": LedgersConnection,\n      \"name\": \"abc123\",\n      \"version\": SchemaVersion,\n      \"versions\": SchemaVersionConnection\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          }), _jsxs(Table, {\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Name\"\n                }), \"\\n\", _jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Description\"\n                })]\n              })\n            }), _jsx(\"tbody\", {\n              children: _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"schema  -  \", _jsx(_components.a, {\n                    href: \"#types-matchinput-types-schemamatchinput\",\n                    children: \"SchemaMatchInput!\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"This contains the key of the Schema you want to retrieve. \"\n                })]\n              })\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"queries-schemas\",\n          title: \"schemas\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Retrieve all of the Schemas in the workspace.\"\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns a  \", _jsx(_components.a, {\n              href: \"#types-connection-types-schemaconnection\",\n              children: \"SchemaConnection!\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `query Schemas(\n  $after: String,\n  $before: String,\n  $first: Int,\n  $last: Int\n) {\n  schemas(\n    after: $after,\n    before: $before,\n    first: $first,\n    last: $last\n  ) {\n    nodes {\n      ...SchemaFragment\n    }\n    pageInfo {\n      ...PageInfoFragment\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Variables\",\n            language: \"json\",\n            children: `{\"after\": \"abc123\", \"before\": \"abc123\", \"first\": 2277, \"last\": 2277}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\n  \"data\": {\n    \"schemas\": {\n      \"nodes\": [Schema],\n      \"pageInfo\": PageInfo\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          }), _jsxs(Table, {\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Name\"\n                }), \"\\n\", _jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Description\"\n                })]\n              })\n            }), _jsxs(\"tbody\", {\n              children: [_jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"after  -  \", _jsx(_components.a, {\n                    href: \"#types-scalars-and-enums-string\",\n                    children: \"String\"\n                  }), \" \"]\n                }), _jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about  \", _jsx(_components.a, {\n                    href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                    children: \"pagination\"\n                  }), \"  . \"]\n                })]\n              }), \"\\n\", _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"before  -  \", _jsx(_components.a, {\n                    href: \"#types-scalars-and-enums-string\",\n                    children: \"String\"\n                  }), \" \"]\n                }), _jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about  \", _jsx(_components.a, {\n                    href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                    children: \"pagination\"\n                  }), \"  . \"]\n                })]\n              }), \"\\n\", _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"first  -  \", _jsx(_components.a, {\n                    href: \"#types-scalars-and-enums-int\",\n                    children: \"Int\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"The number of schemas to return per page, when paginating forwards. Defaults to 20, maximum is 200. \"\n                })]\n              }), \"\\n\", _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"last  -  \", _jsx(_components.a, {\n                    href: \"#types-scalars-and-enums-int\",\n                    children: \"Int\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"The number of schemas to return per page, when paginating backwards. Defaults to 20, maximum is 200. \"\n                })]\n              })]\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"queries-tx\",\n          title: \"tx\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Get a Tx by ID\"\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns a  \", _jsx(_components.a, {\n              href: \"#types-core-types-tx\",\n              children: \"Tx\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `query Tx($tx: TxMatchInput!) {\n  tx(tx: $tx) {\n    accountId\n    amount\n    currency {\n      ...CurrencyFragment\n    }\n    date\n    description\n    externalAccount {\n      ...ExternalAccountFragment\n    }\n    externalAccountId\n    externalId\n    id\n    ledgerEntries {\n      ...LedgerEntriesConnectionFragment\n    }\n    ledgerEntryIds\n    ledgerLineIds\n    ledgerLines {\n      ...LedgerLinesConnectionFragment\n    }\n    link {\n      ...LinkFragment\n    }\n    linkId\n    posted\n    workspaceId\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Variables\",\n            language: \"json\",\n            children: `{\"tx\": TxMatchInput}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\n  \"data\": {\n    \"tx\": {\n      \"accountId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n      \"amount\": \"999999999999\",\n      \"currency\": Currency,\n      \"date\": \"2022-03-28\",\n      \"description\": \"abc123\",\n      \"externalAccount\": ExternalAccount,\n      \"externalAccountId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n      \"externalId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n      \"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n      \"ledgerEntries\": LedgerEntriesConnection,\n      \"ledgerEntryIds\": [\"3116551f-5efc-4c9e-84ac-5a36a51b09c1\"],\n      \"ledgerLineIds\": [\"3116551f-5efc-4c9e-84ac-5a36a51b09c1\"],\n      \"ledgerLines\": LedgerLinesConnection,\n      \"link\": Link,\n      \"linkId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n      \"posted\": \"2007-12-03T10:15:30Z\",\n      \"workspaceId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\"\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          }), _jsxs(Table, {\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Name\"\n                }), \"\\n\", _jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Description\"\n                })]\n              })\n            }), _jsx(\"tbody\", {\n              children: _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"tx  -  \", _jsx(_components.a, {\n                    href: \"#types-matchinput-types-txmatchinput\",\n                    children: \"TxMatchInput!\"\n                  }), \" \"]\n                }), _jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"The transaction you're querying. You can specify either:  *   The \", _jsx(Fragment, {}), \"  ID of the transaction (id) *   The external system's transaction ID (externalId) and \", _jsx(Fragment, {}), \"  ID of the external account (accountId) *   The external system's transaction ID (externalId), the external system's account ID (externalAccountId) and \", _jsx(Fragment, {}), \"  ID of the Link (linkId) \"]\n                })]\n              })\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"queries-workspace\",\n          title: \"workspace\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Get the current Workspace\"\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns a  \", _jsx(_components.a, {\n              href: \"#types-core-types-workspace\",\n              children: \"Workspace!\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `query Workspace {\n  workspace {\n    id\n    name\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\"data\": {\"workspace\": {\"id\": \"abc123\", \"name\": \"abc123\"\\}\\}}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          })]\n        })]\n      }), \"\\n\", _jsxs(TopicContainer, {\n        label: \"C\",\n        title: \"API Mutations\",\n        id: \"mutations\",\n        children: [_jsxs(Page, {\n          id: \"mutations-addledgerentry\",\n          title: \"addLedgerEntry\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"Adds a Ledger Entry to a Ledger. This Ledger Entry cannot be into a Linked Ledger Account. For that, use \", _jsx(_components.a, {\n              href: \"https://fragment.dev/api-reference#mutations-reconciletx\",\n              children: \"reconcileTx\"\n            })]\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns an  \", _jsx(_components.a, {\n              href: \"#types-response-types-addledgerentryresponse\",\n              children: \"AddLedgerEntryResponse!\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `mutation AddLedgerEntry(\n  $entry: LedgerEntryInput!,\n  $ik: SafeString!\n) {\n  addLedgerEntry(\n    entry: $entry,\n    ik: $ik\n  ) {\n    ... on AddLedgerEntryResult {\n      ...AddLedgerEntryResultFragment\n    }\n    ... on BadRequestError {\n      ...BadRequestErrorFragment\n    }\n    ... on InternalError {\n      ...InternalErrorFragment\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Variables\",\n            language: \"json\",\n            children: `{\"entry\": LedgerEntryInput, \"ik\": \"some-safe-string-ik\"}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\"data\": {\"addLedgerEntry\": AddLedgerEntryResult\\}\\}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          }), _jsxs(Table, {\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Name\"\n                }), \"\\n\", _jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Description\"\n                })]\n              })\n            }), _jsxs(\"tbody\", {\n              children: [_jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"entry  -  \", _jsx(_components.a, {\n                    href: \"#types-input-types-ledgerentryinput\",\n                    children: \"LedgerEntryInput!\"\n                  }), \" \"]\n                }), _jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"An object containing the  \", _jsx(_components.a, {\n                    href: \"https://fragment.dev/api-reference#types-input-types-ledgerlineinput\",\n                    children: \"Ledger Lines\"\n                  }), \"  as well as an optional description and posted timestamp. \"]\n                })]\n              }), \"\\n\", _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"ik  -  \", _jsx(_components.a, {\n                    href: \"#types-scalars-and-enums-safestring\",\n                    children: \"SafeString!\"\n                  }), \" \"]\n                }), _jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"The  \", _jsx(_components.a, {\n                    href: \"https://fragment.dev/api-reference#api-overview-idempotency\",\n                    children: \"Idempotency Key\"\n                  }), \" \"]\n                })]\n              })]\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"mutations-createcustomcurrency\",\n          title: \"createCustomCurrency\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Creates a custom currency.\"\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns a  \", _jsx(_components.a, {\n              href: \"#types-response-types-createcustomcurrencyresponse\",\n              children: \"CreateCustomCurrencyResponse!\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `mutation CreateCustomCurrency($customCurrency: CreateCustomCurrencyInput!) {\n  createCustomCurrency(customCurrency: $customCurrency) {\n    ... on BadRequestError {\n      ...BadRequestErrorFragment\n    }\n    ... on CreateCustomCurrencyResult {\n      ...CreateCustomCurrencyResultFragment\n    }\n    ... on InternalError {\n      ...InternalErrorFragment\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Variables\",\n            language: \"json\",\n            children: `{\"customCurrency\": CreateCustomCurrencyInput}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\"data\": {\"createCustomCurrency\": BadRequestError\\}\\}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          }), _jsxs(Table, {\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Name\"\n                }), \"\\n\", _jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Description\"\n                })]\n              })\n            }), _jsx(\"tbody\", {\n              children: _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"customCurrency  -  \", _jsx(_components.a, {\n                    href: \"#types-input-types-createcustomcurrencyinput\",\n                    children: \"CreateCustomCurrencyInput!\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"The custom currency to be created. \"\n                })]\n              })\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"mutations-createcustomlink\",\n          title: \"createCustomLink\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"Custom Links let you integrate external systems that don't have native support. See \", _jsx(_components.a, {\n              href: \"https://fragment.dev/docs#reconcile-transactions-link-any-system\",\n              children: \"Custom Links\"\n            })]\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns a  \", _jsx(_components.a, {\n              href: \"#types-response-types-createcustomlinkresponse\",\n              children: \"CreateCustomLinkResponse!\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `mutation CreateCustomLink(\n  $ik: SafeString!,\n  $name: String!\n) {\n  createCustomLink(\n    ik: $ik,\n    name: $name\n  ) {\n    ... on BadRequestError {\n      ...BadRequestErrorFragment\n    }\n    ... on CreateCustomLinkResult {\n      ...CreateCustomLinkResultFragment\n    }\n    ... on InternalError {\n      ...InternalErrorFragment\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Variables\",\n            language: \"json\",\n            children: `{\"ik\": \"some-safe-string-ik\", \"name\": \"abc123\"}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\"data\": {\"createCustomLink\": BadRequestError\\}\\}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          }), _jsxs(Table, {\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Name\"\n                }), \"\\n\", _jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Description\"\n                })]\n              })\n            }), _jsxs(\"tbody\", {\n              children: [_jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"ik  -  \", _jsx(_components.a, {\n                    href: \"#types-scalars-and-enums-safestring\",\n                    children: \"SafeString!\"\n                  }), \" \"]\n                }), _jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"The  \", _jsx(_components.a, {\n                    href: \"https://fragment.dev/api-reference#api-overview-idempotency\",\n                    children: \"Idempotency Key\"\n                  }), \" \"]\n                })]\n              }), \"\\n\", _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"name  -  \", _jsx(_components.a, {\n                    href: \"#types-scalars-and-enums-string\",\n                    children: \"String!\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"The name of your custom link \"\n                })]\n              })]\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"mutations-createledger\",\n          title: \"createLedger\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Creates a Ledger.\"\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns a  \", _jsx(_components.a, {\n              href: \"#types-response-types-createledgerresponse\",\n              children: \"CreateLedgerResponse!\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `mutation CreateLedger(\n  $ik: SafeString!,\n  $ledger: CreateLedgerInput!,\n  $schema: SchemaMatchInput\n) {\n  createLedger(\n    ik: $ik,\n    ledger: $ledger,\n    schema: $schema\n  ) {\n    ... on BadRequestError {\n      ...BadRequestErrorFragment\n    }\n    ... on CreateLedgerResult {\n      ...CreateLedgerResultFragment\n    }\n    ... on InternalError {\n      ...InternalErrorFragment\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Variables\",\n            language: \"json\",\n            children: `{\n  \"ik\": \"some-safe-string-ik\",\n  \"ledger\": CreateLedgerInput,\n  \"schema\": SchemaMatchInput\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\"data\": {\"createLedger\": BadRequestError\\}\\}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          }), _jsxs(Table, {\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Name\"\n                }), \"\\n\", _jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Description\"\n                })]\n              })\n            }), _jsxs(\"tbody\", {\n              children: [_jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"ik  -  \", _jsx(_components.a, {\n                    href: \"#types-scalars-and-enums-safestring\",\n                    children: \"SafeString!\"\n                  }), \" \"]\n                }), _jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"The  \", _jsx(_components.a, {\n                    href: \"https://fragment.dev/api-reference#api-overview-idempotency\",\n                    children: \"Idempotency Key\"\n                  }), \" \"]\n                })]\n              }), \"\\n\", _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"ledger  -  \", _jsx(_components.a, {\n                    href: \"#types-input-types-createledgerinput\",\n                    children: \"CreateLedgerInput!\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"The payload representing the Ledger to be created \"\n                })]\n              }), \"\\n\", _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"schema  -  \", _jsx(_components.a, {\n                    href: \"#types-matchinput-types-schemamatchinput\",\n                    children: \"SchemaMatchInput\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"The Schema to create this Ledger with \"\n                })]\n              })]\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"mutations-reconciletx\",\n          title: \"reconcileTx\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"This mutation is used to \", _jsx(_components.a, {\n              href: \"https://fragment.dev/docs#reconcile-transactions\",\n              children: \"reconcile\"\n            }), \" transactions from an external system into a Ledger Entry. This mutation does not require an idempotency key since a transaction can only be reconciled once per Linked Ledger Account. If you are reconciling a transfer between two Link Accounts which are both linked to the same Ledger, use a transit account in between to split the transfer into two reconcileTx calls.\"]\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns a  \", _jsx(_components.a, {\n              href: \"#types-response-types-reconciletxresponse\",\n              children: \"ReconcileTxResponse!\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `mutation ReconcileTx($entry: LedgerEntryInput!) {\n  reconcileTx(entry: $entry) {\n    ... on BadRequestError {\n      ...BadRequestErrorFragment\n    }\n    ... on InternalError {\n      ...InternalErrorFragment\n    }\n    ... on ReconcileTxResult {\n      ...ReconcileTxResultFragment\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Variables\",\n            language: \"json\",\n            children: `{\"entry\": LedgerEntryInput}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\"data\": {\"reconcileTx\": BadRequestError\\}\\}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          }), _jsxs(Table, {\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Name\"\n                }), \"\\n\", _jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Description\"\n                })]\n              })\n            }), _jsx(\"tbody\", {\n              children: _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"entry  -  \", _jsx(_components.a, {\n                    href: \"#types-input-types-ledgerentryinput\",\n                    children: \"LedgerEntryInput!\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"The ledger entry containing lines that specify the transaction from a linked ledger account to reconcile, as well as the ledger account with which to offset the external transaction. \"\n                })]\n              })\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"mutations-storeschema\",\n          title: \"storeSchema\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Stores a Schema in your workspace. If no Schema with the same key exists in your worksapce, a new Schema is created. Else, the Schema is updated, and every Ledger associated with it is migrated to the latest version.\"\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns a  \", _jsx(_components.a, {\n              href: \"#types-response-types-storeschemaresponse\",\n              children: \"StoreSchemaResponse!\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `mutation StoreSchema($schema: SchemaInput!) {\n  storeSchema(schema: $schema) {\n    ... on BadRequestError {\n      ...BadRequestErrorFragment\n    }\n    ... on InternalError {\n      ...InternalErrorFragment\n    }\n    ... on StoreSchemaResult {\n      ...StoreSchemaResultFragment\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Variables\",\n            language: \"json\",\n            children: `{\"schema\": SchemaInput}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\"data\": {\"storeSchema\": BadRequestError\\}\\}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          }), _jsxs(Table, {\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Name\"\n                }), \"\\n\", _jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Description\"\n                })]\n              })\n            }), _jsx(\"tbody\", {\n              children: _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"schema  -  \", _jsx(_components.a, {\n                    href: \"#types-input-types-schemainput\",\n                    children: \"SchemaInput!\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"The Schema to store. \"\n                })]\n              })\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"mutations-synccustomaccounts\",\n          title: \"syncCustomAccounts\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"Once you've created a \", _jsx(_components.a, {\n              href: \"https://fragment.dev/docs#reconcile-transactions-link-any-system\",\n              children: \"Custom Link\"\n            }), \", create accounts under it using this mutation. Each Custom Account is an immutable, single-entry view of all the transactions in the external account. You can sync up to 100 Custom Accounts in one API call.\"]\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns a  \", _jsx(_components.a, {\n              href: \"#types-response-types-synccustomaccountsresponse\",\n              children: \"SyncCustomAccountsResponse!\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `mutation SyncCustomAccounts(\n  $accounts: [CustomAccountInput!]!,\n  $link: LinkMatchInput!\n) {\n  syncCustomAccounts(\n    accounts: $accounts,\n    link: $link\n  ) {\n    ... on BadRequestError {\n      ...BadRequestErrorFragment\n    }\n    ... on InternalError {\n      ...InternalErrorFragment\n    }\n    ... on SyncCustomAccountsResult {\n      ...SyncCustomAccountsResultFragment\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Variables\",\n            language: \"json\",\n            children: `{\n  \"accounts\": [CustomAccountInput],\n  \"link\": LinkMatchInput\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\"data\": {\"syncCustomAccounts\": BadRequestError\\}\\}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          }), _jsxs(Table, {\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Name\"\n                }), \"\\n\", _jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Description\"\n                })]\n              })\n            }), _jsxs(\"tbody\", {\n              children: [_jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"accounts  -  \", _jsx(_components.a, {\n                    href: \"#types-input-types-customaccountinput\",\n                    children: \"[CustomAccountInput!]!\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"A list of external accounts to sync \"\n                })]\n              }), \"\\n\", _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"link  -  \", _jsx(_components.a, {\n                    href: \"#types-matchinput-types-linkmatchinput\",\n                    children: \"LinkMatchInput!\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"An object containing the ID of a Custom Link. \"\n                })]\n              })]\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"mutations-synccustomtxs\",\n          title: \"syncCustomTxs\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"You can create transactions under a Custom Account in a \", _jsx(_components.a, {\n              href: \"https://fragment.dev/docs#reconcile-transactions-link-any-system\",\n              children: \"Custom Link\"\n            }), \" using this mutation. Once you've imported transactions, you can use the reconcileTx mutation to add them to a Ledger via the Linked Ledger Account. You can sync up to 100 Custom Transactions in one API call.\"]\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns a  \", _jsx(_components.a, {\n              href: \"#types-response-types-synccustomtxsresponse\",\n              children: \"SyncCustomTxsResponse!\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `mutation SyncCustomTxs(\n  $link: LinkMatchInput!,\n  $txs: [CustomTxInput!]!\n) {\n  syncCustomTxs(\n    link: $link,\n    txs: $txs\n  ) {\n    ... on BadRequestError {\n      ...BadRequestErrorFragment\n    }\n    ... on InternalError {\n      ...InternalErrorFragment\n    }\n    ... on SyncCustomTxsResult {\n      ...SyncCustomTxsResultFragment\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Variables\",\n            language: \"json\",\n            children: `{\n  \"link\": LinkMatchInput,\n  \"txs\": [CustomTxInput]\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\"data\": {\"syncCustomTxs\": BadRequestError\\}\\}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          }), _jsxs(Table, {\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Name\"\n                }), \"\\n\", _jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Description\"\n                })]\n              })\n            }), _jsxs(\"tbody\", {\n              children: [_jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"link  -  \", _jsx(_components.a, {\n                    href: \"#types-matchinput-types-linkmatchinput\",\n                    children: \"LinkMatchInput!\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"An object containing the ID of a Custom Link. \"\n                })]\n              }), \"\\n\", _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"txs  -  \", _jsx(_components.a, {\n                    href: \"#types-input-types-customtxinput\",\n                    children: \"[CustomTxInput!]!\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"A list of external transactions to sync \"\n                })]\n              })]\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"mutations-updateledger\",\n          title: \"updateLedger\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Updates a Ledger. Currently, you can change only the Ledger 'name'.\"\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns an  \", _jsx(_components.a, {\n              href: \"#types-response-types-updateledgerresponse\",\n              children: \"UpdateLedgerResponse!\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `mutation UpdateLedger(\n  $ledger: LedgerMatchInput!,\n  $update: UpdateLedgerInput!\n) {\n  updateLedger(\n    ledger: $ledger,\n    update: $update\n  ) {\n    ... on BadRequestError {\n      ...BadRequestErrorFragment\n    }\n    ... on InternalError {\n      ...InternalErrorFragment\n    }\n    ... on UpdateLedgerResult {\n      ...UpdateLedgerResultFragment\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Variables\",\n            language: \"json\",\n            children: `{\n  \"ledger\": LedgerMatchInput,\n  \"update\": UpdateLedgerInput\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\"data\": {\"updateLedger\": BadRequestError\\}\\}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          }), _jsxs(Table, {\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Name\"\n                }), \"\\n\", _jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Description\"\n                })]\n              })\n            }), _jsxs(\"tbody\", {\n              children: [_jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"ledger  -  \", _jsx(_components.a, {\n                    href: \"#types-matchinput-types-ledgermatchinput\",\n                    children: \"LedgerMatchInput!\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"An object containing the ID of the Ledger to update. \"\n                })]\n              }), \"\\n\", _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"update  -  \", _jsx(_components.a, {\n                    href: \"#types-input-types-updateledgerinput\",\n                    children: \"UpdateLedgerInput!\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"A payload of fields to update. Currently, you can change only the Ledger 'name'. \"\n                })]\n              })]\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"mutations-updateledgerentry\",\n          title: \"updateLedgerEntry\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Update a ledger entry\"\n          }), _jsx(_components.h6, {\n            children: \"Response\"\n          }), _jsxs(_components.p, {\n            children: [\"Returns an  \", _jsx(_components.a, {\n              href: \"#types-response-types-updateledgerentryresponse\",\n              children: \"UpdateLedgerEntryResponse!\"\n            })]\n          }), _jsx(CodeBlock, {\n            title: \"Query\",\n            language: \"graphql\",\n            children: `mutation UpdateLedgerEntry(\n  $ledgerEntry: LedgerEntryMatchInput!,\n  $update: UpdateLedgerEntryInput!\n) {\n  updateLedgerEntry(\n    ledgerEntry: $ledgerEntry,\n    update: $update\n  ) {\n    ... on BadRequestError {\n      ...BadRequestErrorFragment\n    }\n    ... on InternalError {\n      ...InternalErrorFragment\n    }\n    ... on UpdateLedgerEntryResult {\n      ...UpdateLedgerEntryResultFragment\n    }\n  }\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Variables\",\n            language: \"json\",\n            children: `{\n  \"ledgerEntry\": LedgerEntryMatchInput,\n  \"update\": UpdateLedgerEntryInput\n}\n`\n          }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n            title: \"Response\",\n            language: \"json\",\n            children: `{\"data\": {\"updateLedgerEntry\": BadRequestError\\}\\}\n`\n          }), _jsx(\"br\", {}), _jsx(_components.h6, {\n            children: \"Arguments\"\n          }), _jsxs(Table, {\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Name\"\n                }), \"\\n\", _jsx(TableHeader, {\n                  align: \"left\",\n                  children: \"Description\"\n                })]\n              })\n            }), _jsxs(\"tbody\", {\n              children: [_jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"ledgerEntry  -  \", _jsx(_components.a, {\n                    href: \"#types-matchinput-types-ledgerentrymatchinput\",\n                    children: \"LedgerEntryMatchInput!\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"The Ledger Entry that is being updated \"\n                })]\n              }), \"\\n\", _jsxs(TableRow, {\n                children: [_jsxs(TableData, {\n                  colSpan: 1,\n                  children: [\"update  -  \", _jsx(_components.a, {\n                    href: \"#types-input-types-updateledgerentryinput\",\n                    children: \"UpdateLedgerEntryInput!\"\n                  }), \" \"]\n                }), _jsx(TableData, {\n                  colSpan: 1,\n                  children: \"The payload containing the fields to update. Only a Ledger Entry's tags can be updated. \"\n                })]\n              })]\n            })]\n          })]\n        })]\n      }), \"\\n\", _jsxs(TopicContainer, {\n        label: \"D\",\n        title: \"API Types\",\n        id: \"types\",\n        children: [_jsxs(Page, {\n          id: \"types-core-types\",\n          title: \"Core Types\",\n          label: \"\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsx(\"br\", {}), _jsxs(Subpage, {\n            title: \"ExternalAccount\",\n            id: \"types-core-types-externalaccount\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"currency\": Currency,\n  \"currencyMode\": \"multi\",\n  \"externalId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"ledgerAccounts\": LedgerAccountsConnection,\n  \"link\": Link,\n  \"linkId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"name\": \"abc123\",\n  \"txs\": TxsConnection\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currency  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-currency\",\n                      children: \"Currency\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The currency of this external account. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currencyMode  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-currencymode\",\n                      children: \"CurrencyMode!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Indicates if the account allows multiple currencies or is restricted to a single currency \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"externalId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ID used for the external account \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"id  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\" \", _jsx(Fragment, {}), \" ID of External Account \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledgerAccounts  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-ledgeraccountsconnection\",\n                      children: \"LedgerAccountsConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Ledger Accounts linked to this External Account. Ledger Accounts are paginated and sorted in reverse-chronological order by created date. \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"after - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"before - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"first - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of Ledger Accounts to return per page, when paginating forwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"last - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of Ledger Accounts to return per page, when paginating backwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"link  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-link\",\n                      children: \"Link!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Link that this External Account belongs to. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"linkId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\" \", _jsx(Fragment, {}), \" ID of this transaction's external link \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"name  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"txs  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-txsconnection\",\n                      children: \"TxsConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"All Txs in this External Account. \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"after - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"before - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"first - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of transactions to return per page, when paginating forwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"last - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of transactions to return per page, when paginating backwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {})]\n                  })\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"Ledger\",\n            id: \"types-core-types-ledger\",\n            children: [_jsx(_components.p, {\n              children: \"Ledgers are databases designed for managing money\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"balanceUTCOffset\": \"-08:00\",\n  \"created\": \"2007-12-03T10:15:30Z\",\n  \"dashboardUrl\": \"abc123\",\n  \"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"ik\": \"some-safe-string-ik\",\n  \"ledgerAccounts\": LedgerAccountsConnection,\n  \"ledgerEntries\": LedgerEntriesConnection,\n  \"ledgerEntryGroup\": LedgerEntryGroup,\n  \"ledgerEntryGroups\": LedgerEntryGroupsConnection,\n  \"migrations\": LedgerMigrationConnection,\n  \"name\": \"abc123\",\n  \"schema\": Schema,\n  \"type\": \"double\",\n  \"workspaceId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"balanceUTCOffset  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-utcoffset\",\n                      children: \"UTCOffset!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"When aggregating balances, all transactions within a 24 hour period starting at midnight UTC plus this offset are included in each day. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"created  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-datetime\",\n                      children: \"DateTime!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"dashboardUrl  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"URL to the \", _jsx(Fragment, {}), \"  Dashboard for this Ledger. \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"id  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ik  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The IK passed into the  \", _jsx(_components.a, {\n                      href: \"/api-reference#mutations-createledger\",\n                      children: \"createLedger\"\n                    }), \"  mutation. This is treated as a unique identifier for this Ledger. \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledgerAccounts  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-ledgeraccountsconnection\",\n                      children: \"LedgerAccountsConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Query LedgerAccounts in Ledger. Ledger Accounts are paginated and returned in reverse-chronological order by their created date. \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"after - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"before - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"filter - \", _jsx(_components.a, {\n                      href: \"#types-filter-types-ledgeraccountsfilterset\",\n                      children: \"LedgerAccountsFilterSet\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Filter the Ledger Accounts returned. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-ledger-accounts\",\n                      children: \"querying Ledger Accounts\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"first - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of Ledger Accounts to return per page, when paginating forwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"last - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of Ledger Accounts to return per page, when paginating backwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledgerEntries  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-ledgerentriesconnection\",\n                      children: \"LedgerEntriesConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Query Ledger Entries in a Ledger. Ledger Entries are paginated and sorted in reverse-chronological order by posted date. \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"after - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"before - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"filter - \", _jsx(_components.a, {\n                      href: \"#types-filter-types-ledgerentriesfilterset\",\n                      children: \"LedgerEntriesFilterSet\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Filter the Ledger Entries returned. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-ledger-entries\",\n                      children: \"querying Ledger Entries\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"first - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of Ledger Entries to return per page, when paginating forwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"last - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of Ledger Entries to return per page, when paginating backwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledgerEntryGroup  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-ledgerentrygroup\",\n                      children: \"LedgerEntryGroup!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Query a Ledger Entry Group for this Ledger given its key and value. \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"ledgerEntryGroup - \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-entrygroupmatchinput\",\n                      children: \"EntryGroupMatchInput!\"\n                    }), _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledgerEntryGroups  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-ledgerentrygroupsconnection\",\n                      children: \"LedgerEntryGroupsConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Query LedgerEntryGroups in Ledger. Ledger Entry Groups are paginated and returned in order lexigraphically key then inverse chronologically by created. \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"after - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"before - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"filter - \", _jsx(_components.a, {\n                      href: \"#types-filter-types-ledgerentrygroupsfilterset\",\n                      children: \"LedgerEntryGroupsFilterSet\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Filter the Ledger Entry Groups returned.\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"first - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of Ledger Entry Groups to return per page, when paginating forwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"last - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of Ledger Entry Groups to return per page, when paginating backwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"migrations  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-ledgermigrationconnection\",\n                      children: \"LedgerMigrationConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Schema migrations affecting this Ledger. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"name  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The name of the Ledger. Can be updated with the  \", _jsx(_components.a, {\n                      href: \"/api-reference#mutations-updateledger\",\n                      children: \"updateLedger\"\n                    }), \"  mutation. \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"schema  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-schema\",\n                      children: \"Schema\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Schema key associated with this Ledger. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"type  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-ledgertypes\",\n                      children: \"LedgerTypes!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"workspaceId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Callers should not need to query or store this value. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerAccount\",\n            id: \"types-core-types-ledgeraccount\",\n            children: [_jsx(_components.p, {\n              children: \"A ledger account is a container for money\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"balance\": \"999999999999\",\n  \"balanceChange\": \"999999999999\",\n  \"balanceChanges\": CurrencyAmountConnection,\n  \"balances\": CurrencyAmountConnection,\n  \"childBalance\": \"999999999999\",\n  \"childBalanceChange\": \"999999999999\",\n  \"childBalanceChanges\": CurrencyAmountConnection,\n  \"childBalances\": CurrencyAmountConnection,\n  \"childLedgerAccounts\": LedgerAccountsConnection,\n  \"consistencyConfig\": LedgerAccountConsistencyConfig,\n  \"created\": \"2007-12-03T10:15:30Z\",\n  \"currency\": Currency,\n  \"currencyMode\": \"multi\",\n  \"dashboardUrl\": \"abc123\",\n  \"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"ik\": \"abc123\",\n  \"ledger\": Ledger,\n  \"ledgerId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"lines\": LedgerLinesConnection,\n  \"link\": Link,\n  \"linkedAccount\": ExternalAccount,\n  \"name\": \"abc123\",\n  \"ownBalance\": \"999999999999\",\n  \"ownBalanceChange\": \"999999999999\",\n  \"ownBalanceChanges\": CurrencyAmountConnection,\n  \"ownBalances\": CurrencyAmountConnection,\n  \"parentLedgerAccount\": LedgerAccount,\n  \"parentLedgerAccountId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"path\": \"abc123\",\n  \"type\": \"asset\",\n  \"unreconciledTxs\": TxsConnection,\n  \"workspaceId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"balance  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int96\",\n                      children: \"Int96!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Total of all lines in this ledger account and child ledger accounts of the same currency as this ledger account \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"at - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-lastmoment\",\n                      children: \"LastMoment\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Provide a timestamp to get this balance at a specific logical time. If not specified, the latest value will be returned e.g. 1969 or 1969-07 or 1969-07-03 or 1969-07-21T02\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"currency - \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-currencymatchinput\",\n                      children: \"CurrencyMatchInput\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The currency of the balance to query. Required if the account is a multi-currency Ledger Account or if the the Ledger Account has child Ledger Accounts with different currencies.\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"balanceChange  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int96\",\n                      children: \"Int96!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"How much did the this ledger account's balance change during the specified period. This query will include all child accounts in the same currency as this ledger account. \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"currency - \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-currencymatchinput\",\n                      children: \"CurrencyMatchInput\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The currency of the balance change to query. Required if the account is a multi-currency Ledger Account or if the the Ledger Account has child Ledger Accounts with different currencies.\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"period - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-period\",\n                      children: \"Period!\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Specifies the period of time over which this query will calculate the balance difference e.g. 1969 or 1969-Q3 or 1969-07 or 1969-07-21 or 1969-07-21T02\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"balanceChanges  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-currencyamountconnection\",\n                      children: \"CurrencyAmountConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"How much did the this ledger account's balances change during the specified period. This query will include all child accounts of all currencies. \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"period - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-period\",\n                      children: \"Period!\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Specifies the period of time over which this query will calculate the balance difference e.g. 1969 or 1969-Q3 or 1969-07 or 1969-07-21 or 1969-07-21T02\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"balances  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-currencyamountconnection\",\n                      children: \"CurrencyAmountConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Total of all lines in this ledger account and child ledger accounts in all currencies \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"at - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-lastmoment\",\n                      children: \"LastMoment\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Provide a timestamp to get this balance at a specific logical time. If not specified, the latest value will be returned e.g. 1969 or 1969-07 or 1969-07-21 or 1969-07-21T02\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"childBalance  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int96\",\n                      children: \"Int96!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Total of all lines in child ledger accounts of the same currency as this ledger account \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"at - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-lastmoment\",\n                      children: \"LastMoment\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Provide a timestamp to get this balance at a specific logical time. If not specified, the latest value will be returned e.g. 1969 or 1969-07 or 1969-07-21 or 1969-07-21T02\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"currency - \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-currencymatchinput\",\n                      children: \"CurrencyMatchInput\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The currency of the balance to query. Required if the Ledger Account has child Ledger Accounts with different currencies.\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"childBalanceChange  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int96\",\n                      children: \"Int96!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"How much did the this ledger account's childBalance change during the specified period. This query will only include child accounts which are in the same currency as this one. See childBalanceChanges to include children of different currencies. \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"currency - \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-currencymatchinput\",\n                      children: \"CurrencyMatchInput\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The currency of the balance change to query. Required if the Ledger Account has child Ledger Accounts with different currencies.\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"period - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-period\",\n                      children: \"Period!\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Specifies the period of time over which this query will calculate the balance difference e.g. 1969 or 1969-Q3 or 1969-07 or 1969-07-21 or 1969-07-21T02.\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"childBalanceChanges  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-currencyamountconnection\",\n                      children: \"CurrencyAmountConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"How much did the this ledger account's child accounts' balances change during the specified period. This query will include all child accounts of all currencies. \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"period - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-period\",\n                      children: \"Period!\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Specifies the period of time over which this query will calculate the balance difference e.g. 1969 or 1969-Q3 or 1969-07 or 1969-07-21 or 1969-07-21T02\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"childBalances  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-currencyamountconnection\",\n                      children: \"CurrencyAmountConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Total of all lines in child ledger accounts of this ledger in all currencies \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"at - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-lastmoment\",\n                      children: \"LastMoment\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Provide a timestamp to get this balance at a specific logical time. If not specified, the latest value will be returned e.g. 1969 or 1969-07 or 1969-07-21 or 1969-07-21T02\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"childLedgerAccounts  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-ledgeraccountsconnection\",\n                      children: \"LedgerAccountsConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The child Ledger Accounts of this Ledger Accountw \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"after - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"before - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"first - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of Child Ledger Accounts to return per page, when paginating forwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"last - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of Child Ledger Accounts to return per page, when paginating backwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"consistencyConfig  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-ledgeraccountconsistencyconfig\",\n                      children: \"LedgerAccountConsistencyConfig!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The consistency configuration for this Ledger Account. This defines how updates to this Ledger Account's ownBalance are handled. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"created  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-datetime\",\n                      children: \"DateTime!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currency  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-currency\",\n                      children: \"Currency\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Currency of this ledger account \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currencyMode  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-currencymode\",\n                      children: \"CurrencyMode!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Indicates if the account allows multiple currencies or is restricted to a single currency \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"dashboardUrl  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"URL to the \", _jsx(Fragment, {}), \"  Dashboard for this Ledger Account. \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"id  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ik  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The idempotency key used to create this account \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledger  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledger\",\n                      children: \"Ledger!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Ledger this account is in \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledgerId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ID of the ledger this account is in \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"lines  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-ledgerlinesconnection\",\n                      children: \"LedgerLinesConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"List Ledger Lines in this account, sorted by  posted  in reverse chronological order. Does not include Ledger Lines from child Ledger Accounts. \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"after - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"before - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"filter - \", _jsx(_components.a, {\n                      href: \"#types-filter-types-ledgerlinesfilterset\",\n                      children: \"LedgerLinesFilterSet\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Filter the Ledger Lines returned. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-ledger-lines\",\n                      children: \"querying Ledger Lines\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"first - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of Ledger Lines to return per page, when paginating forwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"last - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of Ledger Lines to return per page, when paginating backwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"link  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-link\",\n                      children: \"Link\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Link for the External Account that is linked to this ledger account \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"linkedAccount  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-externalaccount\",\n                      children: \"ExternalAccount\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"External Account that is linked to this ledger account \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"name  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The name of your Ledger Account \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ownBalance  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int96\",\n                      children: \"Int96!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Total of all lines in this ledger account, excluding all child ledger accounts \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"at - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-lastmoment\",\n                      children: \"LastMoment\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Provide a timestamp to get this balance at a specific logical time. If not specified, the latest value will be returned e.g. 1969 or 1969-07 or 1969-07-21 or 1969-07-21T02\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"consistencyMode - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-readbalanceconsistencymode\",\n                      children: \"ReadBalanceConsistencyMode\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"*   eventual: Returns an eventually consistent balance, even if the Ledger Account's ownBalanceUpdates in its consistencyConfig is strong (default).\", _jsx(\"br\", {}), \"*   strong: Returns a strongly consistent balance or an error if the Ledger Account's ownBalanceUpdates in its consistencyConfig is eventual.\", _jsx(\"br\", {}), \"*   use_account: Returns a strongly consistent balance if the Ledger Account's ownBalanceUpdates in its consistencyConfig is strong and an eventually consistent balance otherwise.\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"currency - \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-currencymatchinput\",\n                      children: \"CurrencyMatchInput\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The currency of the balance to query. Required if the account is a multi-currency Ledger Account.\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ownBalanceChange  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int96\",\n                      children: \"Int96!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"How much did the this ledger account's ownBalance change during the specified period. This query will exclude all child accounts. \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"currency - \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-currencymatchinput\",\n                      children: \"CurrencyMatchInput\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The currency of the balance change to query. Required if the account is a multi-currency Ledger Account.\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"period - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-period\",\n                      children: \"Period!\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Specifies the period of time over which this query will calculate the balance difference e.g. 1969 or 1969-Q3 or 1969-07 or 1969-07-21 or 1969-07-21T02\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ownBalanceChanges  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-currencyamountconnection\",\n                      children: \"CurrencyAmountConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"How much did the this ledger account's ownBalance change during the specified period. This is the total of all lines in this ledger account, excluding all child ledger accounts \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"period - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-period\",\n                      children: \"Period!\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Specifies the period of time over which this query will calculate the balance difference e.g. 1969 or 1969-Q3 or 1969-07 or 1969-07-21 or 1969-07-21T02\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ownBalances  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-currencyamountconnection\",\n                      children: \"CurrencyAmountConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Total of all lines across all currencies in this ledger account, excluding all child ledger accounts \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"at - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-lastmoment\",\n                      children: \"LastMoment\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Provide a timestamp to get this balance at a specific logical time. If not specified, the latest value will be returned e.g. 1969 or 1969-07 or 1969-07-21 or 1969-07-21T02\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"consistencyMode - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-readbalanceconsistencymode\",\n                      children: \"ReadBalanceConsistencyMode\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"*   eventual: Returns an eventually consistent balance, even if the Ledger Account's ownBalanceUpdates in its consistencyConfig is strong (default).\", _jsx(\"br\", {}), \"*   strong: Returns a strongly consistent balance or an error if the Ledger Account's ownBalanceUpdates in its consistencyConfig is eventual.\", _jsx(\"br\", {}), \"*   use_account: Returns a strongly consistent balance if the Ledger Account's ownBalanceUpdates in its consistencyConfig is strong and an eventually consistent balance otherwise.\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"parentLedgerAccount  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledgeraccount\",\n                      children: \"LedgerAccount\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The parent ledger account of this ledger account \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"parentLedgerAccountId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ID of the parent ledger account of this ledger account \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"path  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The unique Path of the ledger account. This is a slash-delimited string containing the location of an account in its chart of accounts. For accounts created with a schema, this will be composed of account keys. Else, for accounts created with the createLedgerAccounts API, this will be composed of the IKs of an account and its ancestors. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"type  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-ledgeraccounttypes\",\n                      children: \"LedgerAccountTypes!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"unreconciledTxs  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-txsconnection\",\n                      children: \"TxsConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"A list of external account transactions that haven't been reconciled to this ledger account yet. Only populated for linked ledger accounts. Transactions are sorted in reverse chronological order by posted date. \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"after - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"before - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"first - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of unreconciled transactions to return per page, when paginating forwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"last - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of unreconciled transactions to return per page, when paginating backwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"workspaceId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Callers should not need to query or store this value. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerEntry\",\n            id: \"types-core-types-ledgerentry\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"conditions\": [LedgerEntryCondition],\n  \"created\": \"2007-12-03T10:15:30Z\",\n  \"dashboardUrl\": \"abc123\",\n  \"date\": \"2022-03-28\",\n  \"description\": \"abc123\",\n  \"groups\": [LedgerEntryGroup],\n  \"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"ik\": \"abc123\",\n  \"ledger\": Ledger,\n  \"ledgerId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"lines\": LedgerLinesConnection,\n  \"posted\": \"2007-12-03T10:15:30Z\",\n  \"tags\": [LedgerEntryTag],\n  \"type\": \"some-safe-string-ik\",\n  \"workspaceId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"conditions  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-ledgerentrycondition\",\n                      children: \"[LedgerEntryCondition!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The conditions that were satisfied by this Ledger Entry when it was posted. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"created  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-datetime\",\n                      children: \"DateTime!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ISO-8601 timestamp this LedgerEntry was created in \", _jsx(Fragment, {}), \" . \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"dashboardUrl  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"URL to the \", _jsx(Fragment, {}), \"  Dashboard for this Ledger Entry. \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"date  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-date\",\n                      children: \"Date!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Date this LedgerEntry posted to its Ledger e.g. \\\"2021-01-01\\\". \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"description  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Description posted for this Ledger Entry. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"groups  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-ledgerentrygroup\",\n                      children: \"[LedgerEntryGroup!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Ledger Entry Groups this Ledger Entry is in. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"id  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The ID of this LedgerEntry. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ik  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The idempotency key used to post this ledger entry \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledger  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledger\",\n                      children: \"Ledger!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Ledger that this Ledger Entry is posted to. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledgerId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The ID of the Ledger this Ledger Entry is posted to. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"lines  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-ledgerlinesconnection\",\n                      children: \"LedgerLinesConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Lines posted in this Ledger Entry. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"posted  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-datetime\",\n                      children: \"DateTime!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ISO-8601 timestamp this LedgerEntry posted to its Ledger. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"tags  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-ledgerentrytag\",\n                      children: \"[LedgerEntryTag!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The set of tags attached to this Ledger Entry. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"type  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The type of the Ledger Entry. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"workspaceId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Callers should not need to query or store this value. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerLine\",\n            id: \"types-core-types-ledgerline\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"account\": LedgerAccount,\n  \"accountId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"amount\": \"999999999999\",\n  \"created\": \"2007-12-03T10:15:30Z\",\n  \"currency\": Currency,\n  \"date\": \"2022-03-28\",\n  \"description\": \"abc123\",\n  \"externalTransferId\": \"abc123\",\n  \"externalTransferType\": \"ach\",\n  \"externalTxId\": \"abc123\",\n  \"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"key\": \"abc123\",\n  \"ledger\": Ledger,\n  \"ledgerEntry\": LedgerEntry,\n  \"ledgerEntryId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"ledgerId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"otherTxExternalAccountExternalId\": \"abc123\",\n  \"otherTxExternalAccountId\": \"abc123\",\n  \"otherTxExternalId\": \"abc123\",\n  \"otherTxId\": \"abc123\",\n  \"posted\": \"2007-12-03T10:15:30Z\",\n  \"tx\": Tx,\n  \"txId\": \"abc123\",\n  \"type\": \"credit\",\n  \"workspaceId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"account  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledgeraccount\",\n                      children: \"LedgerAccount!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"LedgerAccount that contains this line \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"accountId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"amount  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int96\",\n                      children: \"Int96!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"How much this line's LedgerAccount's balance changed in integer cents (i.e. in USD 100 is 1 dollar, 100 cents) \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"absolute - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-boolean\",\n                      children: \"Boolean\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"If the absolute flag is passed, amount will always a positive integer in cents. Refer to type to see if this LedgerLine increased or decreased it's LedgerAccount's balance\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"created  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-datetime\",\n                      children: \"DateTime\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ISO-8601 timestamp this LedgerLine was created in \", _jsx(Fragment, {}), \"  \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currency  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-currency\",\n                      children: \"Currency\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Currency of this LedgerLine \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"date  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-date\",\n                      children: \"Date\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Date this LedgerLine posted to its LedgerAccount e.g. \\\"2021-01-01\\\" \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"description  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Description of this LedgerLine \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"externalTransferId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ID in the external system of the payment or transfer that created the transaction linked to this LedgerLine \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"externalTransferType  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-externaltransfertype\",\n                      children: \"ExternalTransferType\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Whether the transaction linked to this LedgerLine was a payment or transfer \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"externalTxId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ID in the external system of the transaction linked to this LedgerLine \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"id  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"key  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledger  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledger\",\n                      children: \"Ledger!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledgerEntry  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledgerentry\",\n                      children: \"LedgerEntry\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"LedgerEntry that contains this line \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledgerEntryId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ID of the LedgerEntry that contains this line \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledgerId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Ledger that contains this line \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"otherTxExternalAccountExternalId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ID in the external system of destination or source bank account for an internal bank transfer. Only for internal bank transfers - see otherTxId \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"otherTxExternalAccountId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\" \", _jsx(Fragment, {}), \" ID of destination or source bank account. Only for internal bank transfers - see otherTxId \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"otherTxExternalId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ID in the external system of transaction in the destination or source bank account. Only for internal bank transfers - see otherTxId \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"otherTxId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\" \", _jsx(Fragment, {}), \" ID of the transaction in the destination account (if sending money from this account) or source account (if pulling money into this account). Only applicable if this line is linked to a transaction created through an internal transfer \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"posted  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-datetime\",\n                      children: \"DateTime\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ISO-8601 timestamp this LedgerLine posted to its LedgerAccount \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"tx  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-tx\",\n                      children: \"Tx\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The transaction linked to this LedgerLine \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"txId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\" \", _jsx(Fragment, {}), \" ID of the transaction linked to this LedgerLine \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"type  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-txtype\",\n                      children: \"TxType!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"credit or debit \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"workspaceId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Callers should not need to query or store this value. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerMigration\",\n            id: \"types-core-types-ledgermigration\",\n            children: [_jsx(_components.p, {\n              children: \"Represents a Schema being applied to a Ledger. It contains metadata about the Ledger, the Schema, and the status of the migration.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"ledger\": Ledger,\n  \"schemaVersion\": SchemaVersion,\n  \"status\": \"completed\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledger  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledger\",\n                      children: \"Ledger!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Ledger that the migration is run on. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"schemaVersion  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-schemaversion\",\n                      children: \"SchemaVersion!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"status  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-ledgermigrationstatus\",\n                      children: \"LedgerMigrationStatus!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The status of the Ledger Migration. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"Link\",\n            id: \"types-core-types-link\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"created\": \"abc123\",\n  \"dashboardUrl\": \"abc123\",\n  \"externalAccounts\": ExternalAccountsConnection,\n  \"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"name\": \"abc123\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"created  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ISO-8601 timestamp when the Link was created. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"dashboardUrl  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"URL to the \", _jsx(Fragment, {}), \"  Dashboard for this Link. \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"externalAccounts  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-externalaccountsconnection\",\n                      children: \"ExternalAccountsConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"A list of External Accounts associated with this Link. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"id  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\" \", _jsx(Fragment, {}), \" ID of the Link. \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"name  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Name of the Link as it appears in the Dashboard. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"Schema\",\n            id: \"types-core-types-schema\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"key\": \"some-safe-string-ik\",\n  \"ledgers\": LedgersConnection,\n  \"name\": \"abc123\",\n  \"version\": SchemaVersion,\n  \"versions\": SchemaVersionConnection\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"key  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The identifier for a Schema.  key  is unique to a Workspace. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledgers  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-ledgersconnection\",\n                      children: \"LedgersConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The paginated list of ledgers the Schema has been applied to. \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"after - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"before - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"first - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of Ledgers to return per page, when paginating forwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"last - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of Ledgers to return per page, when paginating backwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"name  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The name of a Schema. It defaults to the  key  if not provided in your SchemaInput. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"version  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-schemaversion\",\n                      children: \"SchemaVersion!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The metadata for a specific SchemaVersion. \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"version - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The version of the schema to retrieve. If this is not provided, the latest version will be returned.\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"versions  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-schemaversionconnection\",\n                      children: \"SchemaVersionConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"A paginated list of SchemaVersions. \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"after - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"before - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"first - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of schema versions to return per page, when paginating forwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"last - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of schema versions to return per page, when paginating backwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {})]\n                  })\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"Tx\",\n            id: \"types-core-types-tx\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"accountId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"amount\": \"999999999999\",\n  \"currency\": Currency,\n  \"date\": \"2022-03-28\",\n  \"description\": \"abc123\",\n  \"externalAccount\": ExternalAccount,\n  \"externalAccountId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"externalId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"ledgerEntries\": LedgerEntriesConnection,\n  \"ledgerEntryIds\": [\"3116551f-5efc-4c9e-84ac-5a36a51b09c1\"],\n  \"ledgerLineIds\": [\"3116551f-5efc-4c9e-84ac-5a36a51b09c1\"],\n  \"ledgerLines\": LedgerLinesConnection,\n  \"link\": Link,\n  \"linkId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"posted\": \"2007-12-03T10:15:30Z\",\n  \"workspaceId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"accountId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\" \", _jsx(Fragment, {}), \" ID of this transaction's external account \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"amount  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int96\",\n                      children: \"Int96!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Integer amount in cents. Positive indicates money entering the external account, negative indicates money leaving \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currency  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-currency\",\n                      children: \"Currency\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Currency of this Tx \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"date  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-date\",\n                      children: \"Date!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Date this Tx posted to the external account \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"description  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"Description at the external account (can be overridden within the \", _jsx(Fragment, {}), \"  Dashboard) \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"externalAccount  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-externalaccount\",\n                      children: \"ExternalAccount!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The External Account that this transaction belongs to. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"externalAccountId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ID in the external system of this transaction's external account \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"externalId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ID of this transaction in the external system \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"id  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledgerEntries  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-ledgerentriesconnection\",\n                      children: \"LedgerEntriesConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Returns ledger entries that are linked to this transaction. You can link the same external account to multiple ledgers, so there could be multipe entries associated with one transaction - one for each linked ledger account this transaction has been reconciled with \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledgerEntryIds  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"[ID!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Same as ledgerEntries, but returns an array of IDs instead \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledgerLineIds  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"[ID!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Same as ledgerLines, but returns an array of IDs instead \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledgerLines  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-ledgerlinesconnection\",\n                      children: \"LedgerLinesConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Returns ledger lines that are linked to this transaction. You can link the same external account to multiple ledgers, so there could be multipe lines associated with one transaction - one for each linked ledger account this transaction has been reconciled with \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"link  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-link\",\n                      children: \"Link!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"This transaction's Link. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"linkId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\" \", _jsx(Fragment, {}), \" ID of this transaction's Link \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"posted  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-datetime\",\n                      children: \"DateTime!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ISO-8601 timestamp this Tx posted to the external account \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"workspaceId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Callers should not need to query or store this value. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"Workspace\",\n            id: \"types-core-types-workspace\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"id\": \"abc123\", \"name\": \"abc123\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"id  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The ID of the Workspace \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"name  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The name of the Workspace \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          })]\n        }), _jsxs(Page, {\n          id: \"types-scalars-and-enums\",\n          title: \"Scalars and Enums\",\n          label: \"\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsx(\"br\", {}), _jsxs(Subpage, {\n            title: \"BalanceUpdateConsistencyMode\",\n            id: \"types-scalars-and-enums-balanceupdateconsistencymode\",\n            children: [_jsxs(_components.p, {\n              children: [\"Used to configure the write-consistency of a Ledger Account's balance. See \", _jsx(_components.a, {\n                href: \"https://fragment.dev/docs#configure-consistency\",\n                children: \"Configure consistency\"\n              }), \".\"]\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"eventual\"\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Enum Value\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"eventual \"\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Eventually consistent balance updates. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"strong \"\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Strongly consistent balance updates. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"Boolean\",\n            id: \"types-scalars-and-enums-boolean\",\n            children: [_jsx(_components.p, {\n              children: \"The Boolean scalar type represents true or false.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `true\n`\n            }), _jsx(\"br\", {}), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"Currency\",\n            id: \"types-scalars-and-enums-currency\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"code\": \"AAVE\",\n  \"customCode\": \"abc123\",\n  \"customCurrencyId\": \"some-safe-string-ik\",\n  \"name\": \"abc123\",\n  \"precision\": 2277\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"code  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-currencycode\",\n                      children: \"CurrencyCode!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The currency code. This is an  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/api-reference#types-scalars-and-enums-currencycode\",\n                      children: \"enum type\"\n                    }), \"  . \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"customCode  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The currency code for custom currencies. This is only set if 'currency' is set to CUSTOM. It can be up to 32 characters long. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"customCurrencyId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The ID for a custom currency. This is specified when creating the custom currency using the  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/api-reference#mutations-createcustomcurrency\",\n                      children: \"createCustomCurrency\"\n                    }), \"  mutation. \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"name  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"A human readable name for the currency (e.g. United States Dollar). This is used for display purposes. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"precision  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The number of decimal places this currency goes to. For example, United States Dollars have a precision of 2 (i.e. 100 cents in a dollar), whereas the Jordanian Dinar has a precision of 3. This is used for display purposes. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"CurrencyCode\",\n            id: \"types-scalars-and-enums-currencycode\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"AAVE\"\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Enum Value\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"AAVE \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ADA \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"AED \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"AFN \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ALL \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"AMD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ANG \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"AOA \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ARS \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"AUD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"AWG \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"AZN \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"BAM \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"BBD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"BCH \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"BDT \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"BGN \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"BHD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"BIF \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"BMD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"BND \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"BOB \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"BRL \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"BSD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"BTC \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"BTN \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"BWP \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"BYR \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"BZD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"CAD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"CDF \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"CHF \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"CLP \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"CNY \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"COP \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"CRC \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"CUC \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"CUP \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"CUSTOM \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"CVE \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"CZK \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"DAI \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"DJF \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"DKK \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"DOP \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"DZD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"EGP \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ERN \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ETB \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ETH \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"EUR \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"FJD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"FKP \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"GBP \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"GEL \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"GGP \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"GHS \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"GIP \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"GMD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"GNF \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"GTQ \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"GYD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"HKD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"HNL \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"HRK \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"HTG \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"HUF \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"IDR \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ILS \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"IMP \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"INR \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"IQD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"IRR \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ISK \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"JMD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"JOD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"JPY \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"KES \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"KGS \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"KHR \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"KMF \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"KPW \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"KRW \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"KWD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"KYD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"KZT \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"LAK \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"LBP \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"LINK \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"LKR \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"LOGICAL \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"LRD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"LSL \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"LTC \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"LYD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"MAD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"MATIC \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"MDL \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"MGA \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"MKD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"MMK \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"MNT \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"MOP \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"MUR \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"MVR \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"MWK \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"MXN \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"MYR \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"MZN \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"NAD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"NGN \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"NIO \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"NOK \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"NPR \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"NZD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"OMR \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"PAB \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"PEN \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"PGK \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"PHP \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"PKR \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"PLN \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"PTS \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"PYG \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"QAR \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"RON \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"RSD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"RUB \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"RWF \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"SAR \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"SBD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"SCR \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"SDG \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"SEK \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"SGD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"SHP \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"SLL \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"SOL \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"SOS \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"SPL \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"SRD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"STN \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"SVC \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"SYP \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"SZL \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"THB \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"TJS \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"TMT \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"TND \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"TOP \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"TRY \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"TTD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"TVD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"TWD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"TZS \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"UAH \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"UGX \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"UNI \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"USD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"USDC \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"USDT \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"UYU \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"UZS \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"VEF \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"VND \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"VUV \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"WST \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"XAF \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"XCD \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"XLM \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"XOF \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"XPF \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"YER \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ZAR \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ZMW \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"CurrencyMode\",\n            id: \"types-scalars-and-enums-currencymode\",\n            children: [_jsx(_components.p, {\n              children: \"Defines the currency handling of a LedgerAccount, which can either be restricted to a single currency or allow multiple currencies.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"multi\"\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Enum Value\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"multi \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"single \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"Date\",\n            id: \"types-scalars-and-enums-date\",\n            children: [_jsx(_components.p, {\n              children: \"ISO 8601 Date e.g. 1969-07-21\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"2022-03-28\"\n`\n            }), _jsx(\"br\", {}), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"DateTime\",\n            id: \"types-scalars-and-enums-datetime\",\n            children: [_jsx(_components.p, {\n              children: \"ISO 8601 DateTime e.g. 1969-07-16T13:32:00.000Z. You can also provide a date e.g. 1969-01-01 and it will be converted to 1969-01-01T00:00:00.000Z\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"2007-12-03T10:15:30Z\"\n`\n            }), _jsx(\"br\", {}), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"ExternalTransferType\",\n            id: \"types-scalars-and-enums-externaltransfertype\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"ach\"\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Enum Value\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ach \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"card \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"check \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"internal \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"wire \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"ID\",\n            id: \"types-scalars-and-enums-id\",\n            children: [_jsx(_components.p, {\n              children: \"The ID scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as \\\"4\\\") or integer (such as 4) input value will be accepted as an ID.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"3116551f-5efc-4c9e-84ac-5a36a51b09c1\"\n`\n            }), _jsx(\"br\", {}), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"IkReplay\",\n            id: \"types-scalars-and-enums-ikreplay\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"ik\": \"some-safe-string-ik\", \"isIkReplay\": true}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ik  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"isIkReplay  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-boolean\",\n                      children: \"Boolean!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"Int\",\n            id: \"types-scalars-and-enums-int\",\n            children: [_jsx(_components.p, {\n              children: \"The Int scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `2277\n`\n            }), _jsx(\"br\", {}), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"Int96\",\n            id: \"types-scalars-and-enums-int96\",\n            children: [_jsx(_components.p, {\n              children: \"A string representing integers as big as 2^96-1. The number is signed so the range is from -79,228,162,514,264,337,593,543,950,336 to 79,228,162,514,264,337,593,543,950,336.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"999999999999\"\n`\n            }), _jsx(\"br\", {}), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"JSON\",\n            id: \"types-scalars-and-enums-json\",\n            children: [_jsxs(_components.p, {\n              children: [\"The JSON scalar type represents JSON values as specified by \", _jsx(_components.a, {\n                href: \"http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf\",\n                children: \"ECMA-404\"\n              }), \".\"]\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"{\"key\":\"value\"}\"\n`\n            }), _jsx(\"br\", {}), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LastMoment\",\n            id: \"types-scalars-and-enums-lastmoment\",\n            children: [_jsx(_components.p, {\n              children: \"The last moment of a specific year, month or day or hour e.g. 1969 or 1969-12 or 1969-12-31 or 1969-12-31T23. All of the previous examples are equivalent to 1969-12-31T23:59:59.999.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"2021-07\"\n`\n            }), _jsx(\"br\", {}), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerLinesConsistencyMode\",\n            id: \"types-scalars-and-enums-ledgerlinesconsistencymode\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"eventual\"\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Enum Value\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"eventual \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"strong \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerMigrationStatus\",\n            id: \"types-scalars-and-enums-ledgermigrationstatus\",\n            children: [_jsx(_components.p, {\n              children: \"The status of a ledger migration.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"completed\"\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Enum Value\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"completed \"\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Ledger Migration has been successfully completed. This is a terminal state. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"failed \"\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Ledger Migration has failed. This can happen either due to an invalid schema or an internal error. This is a terminal state. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"queued \"\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Ledger Migration has been queued. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"skipped \"\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Ledger Migration has been skipped because a newer version is available. This is a terminal state. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"started \"\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Ledger Migration has been started. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerTypes\",\n            id: \"types-scalars-and-enums-ledgertypes\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"double\"\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Enum Value\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsx(\"tbody\", {\n                children: _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"double \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"ParameterizedString\",\n            id: \"types-scalars-and-enums-parameterizedstring\",\n            children: [_jsx(_components.p, {\n              children: \"A string of non-zero length that can contain parameterized values via handlebars syntax. ex: \\\"Hello from {{country}}\\\".\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"assets/bank:\\{\\{bank_name\\}\\}\"\n`\n            }), _jsx(\"br\", {}), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"Period\",\n            id: \"types-scalars-and-enums-period\",\n            children: [_jsx(_components.p, {\n              children: \"A specific year (\\\"2021\\\"), quarter (\\\"2021-Q1\\\"), month (\\\"2021-02\\\"), day (\\\"2021-02-03\\\") or hour (\\\"2021-02-03T04\\\")\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"2022-Q3\"\n`\n            }), _jsx(\"br\", {}), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"ReadBalanceConsistencyMode\",\n            id: \"types-scalars-and-enums-readbalanceconsistencymode\",\n            children: [_jsxs(_components.p, {\n              children: [\"The consistency configuration of a Ledger Account's balance queries. If not provided as an argument to a balance query, the default behavior is to read eventually consistent balances. See \", _jsx(_components.a, {\n                href: \"https://fragment.dev/docs#configure-consistency\",\n                children: \"Configure consistency\"\n              }), \".\"]\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"eventual\"\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Enum Value\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"eventual \"\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Balance queries will read eventually consistent balances. This is the default behavior if  ReadBalanceConsistencyMode  is not provided as an argument to the balance field. Both Ledger Accounts configured with strongly and eventually consistent balance updates support this enum. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"strong \"\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Balance queries will read strongly consistent balances. This is only allowed if the Ledger Account's  ownBalanceUpdates  in its  consistencyConfig  is  strong  . \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"use_account \"\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Balance queries will use the value from the Ledger Account's  ownBalanceUpdates  in its  consistencyConfig  . \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SafeString\",\n            id: \"types-scalars-and-enums-safestring\",\n            children: [_jsx(_components.p, {\n              children: \"A string with delimiter characters /, #, and : disallowed, as well as parameters in {{handlebar}} syntax.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"some-safe-string-ik\"\n`\n            }), _jsx(\"br\", {}), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SceneEventType\",\n            id: \"types-scalars-and-enums-sceneeventtype\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"entry\"\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Enum Value\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsx(\"tbody\", {\n                children: _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"entry \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SchemaConsistencyMode\",\n            id: \"types-scalars-and-enums-schemaconsistencymode\",\n            children: [_jsx(_components.p, {\n              children: \"The consistency modes available for entities created within this Schema.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"eventual\"\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Enum Value\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"eventual \"\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Eventually consistent entity updates \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"strong \"\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Strongly consistent entity updates \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"String\",\n            id: \"types-scalars-and-enums-string\",\n            children: [_jsx(_components.p, {\n              children: \"The String scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"abc123\"\n`\n            }), _jsx(\"br\", {}), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"TxType\",\n            id: \"types-scalars-and-enums-txtype\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"credit\"\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Enum Value\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"credit \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"debit \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"UTCOffset\",\n            id: \"types-scalars-and-enums-utcoffset\",\n            children: [_jsx(_components.p, {\n              children: \"All hour-aligned offsets from -11:00 to +12:00 are supported, e.g. \\\"-08:00\\\" (PT), \\\"-05:00\\\" (ET), \\\"+00:00\\\" (UTC)\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"-08:00\"\n`\n            }), _jsx(\"br\", {}), _jsx(\"br\", {})]\n          })]\n        }), _jsxs(Page, {\n          id: \"types-input-types\",\n          title: \"Input Types\",\n          label: \"\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsx(\"br\", {}), _jsxs(Subpage, {\n            title: \"ChartOfAccountsInput\",\n            id: \"types-input-types-chartofaccountsinput\",\n            children: [_jsx(_components.p, {\n              children: \"The input for your Chart of Accounts in a Schema.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"accounts\": [SchemaLedgerAccountInput],\n  \"defaultConsistencyConfig\": LedgerAccountConsistencyConfigInput,\n  \"defaultCurrency\": CurrencyMatchInput,\n  \"defaultCurrencyMode\": \"multi\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"accounts  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-schemaledgeraccountinput\",\n                      children: \"[SchemaLedgerAccountInput!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Ledger Accounts modeled by your Schema. Ledger Accounts may be nested up to a maximum depth of 10. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"defaultConsistencyConfig  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-ledgeraccountconsistencyconfiginput\",\n                      children: \"LedgerAccountConsistencyConfigInput\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The default consistency configuration for all Ledger Accounts in this Schema. If a Ledger Account does not specify its own consistency configuration, it will use the default values provided here.  See \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#configure-consistency\",\n                      children: \"Configure consistency\"\n                    }), \". \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"defaultCurrency  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-currencymatchinput\",\n                      children: \"CurrencyMatchInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The default currency of each Ledger Account in the Chart Of Accounts. It must be provided if  defaultCurrencyMode  is set to  single  . Additionally,  defaultCurrency  must be omitted if  defaultCurrencyMode  is set to  multi  . \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"defaultCurrencyMode  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-currencymode\",\n                      children: \"CurrencyMode\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The default currency mode of each Ledger Account in the Chart Of Accounts. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"CreateCustomCurrencyInput\",\n            id: \"types-input-types-createcustomcurrencyinput\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"customCode\": \"abc123\",\n  \"customCurrencyId\": \"some-safe-string-ik\",\n  \"name\": \"abc123\",\n  \"precision\": 2277\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"customCode  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The currency code for custom currencies. It can be up to 5 characters long. This is used for display purposes. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"customCurrencyId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The ID for a custom currency. This is specified when creating the custom currency using the  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/api-reference#mutations-createcustomcurrency\",\n                      children: \"createCustomCurrency\"\n                    }), \"  mutation. \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"name  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"A human readable name for the currency (e.g. United States Dollar). This is used for display purposes. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"precision  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The number of decimal places this currency goes to. For example, United States Dollars have a precision of 2 (i.e. 100 cents in a dollar), whereas the Jordanian Dinar has a precision of 3. This is used for display purposes. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"CreateLedgerAccountInput\",\n            id: \"types-input-types-createledgeraccountinput\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"consistencyConfig\": LedgerAccountConsistencyConfigInput,\n  \"currency\": CurrencyMatchInput,\n  \"currencyMode\": \"multi\",\n  \"linkedAccount\": ExternalAccountMatchInput,\n  \"name\": \"abc123\",\n  \"parent\": LedgerAccountMatchInput,\n  \"type\": \"asset\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"consistencyConfig  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-ledgeraccountconsistencyconfiginput\",\n                      children: \"LedgerAccountConsistencyConfigInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The consistency configuration for this Ledger Account. This defines how updates to this Ledger Account's balance are handled. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currency  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-currencymatchinput\",\n                      children: \"CurrencyMatchInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The currency of this Ledger Account. If this is not set, and  currencyMode  is not set to  multi  , the workspace-level default is used. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currencyMode  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-currencymode\",\n                      children: \"CurrencyMode\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"If set to  multi  , creates a multi-currency Ledger Account. If set to  single  , creates a single-currency Ledger Account. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"linkedAccount  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-externalaccountmatchinput\",\n                      children: \"ExternalAccountMatchInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The External Account to link to this Ledger Account. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"name  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The human-readable name of this Ledger Account. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"parent  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-ledgeraccountmatchinput\",\n                      children: \"LedgerAccountMatchInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The parent of this Ledger Account. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"type  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-ledgeraccounttypes\",\n                      children: \"LedgerAccountTypes\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The type of ledger account to create. Required if this is a top-level Ledger Account. If not provided, the type will be inferred from the parent. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"CreateLedgerAccountsInput\",\n            id: \"types-input-types-createledgeraccountsinput\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"childLedgerAccounts\": [CreateLedgerAccountsInput],\n  \"consistencyConfig\": LedgerAccountConsistencyConfigInput,\n  \"currency\": CurrencyMatchInput,\n  \"currencyMode\": \"multi\",\n  \"ik\": \"some-safe-string-ik\",\n  \"linkedAccount\": ExternalAccountMatchInput,\n  \"name\": \"abc123\",\n  \"parent\": LedgerAccountMatchInput,\n  \"type\": \"asset\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"childLedgerAccounts  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-createledgeraccountsinput\",\n                      children: \"[CreateLedgerAccountsInput!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Ledger Accounts to create as children of this Ledger Account. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"consistencyConfig  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-ledgeraccountconsistencyconfiginput\",\n                      children: \"LedgerAccountConsistencyConfigInput\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The consistency configuration for this ledger account. See  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#configure-consistency\",\n                      children: \"Configure consistency\"\n                    }), \"  . \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currency  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-currencymatchinput\",\n                      children: \"CurrencyMatchInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The currency of this Ledger Account. If this is not set, the workspace level default is used. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currencyMode  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-currencymode\",\n                      children: \"CurrencyMode\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The currency mode of this Ledger Account. If this is not set, the workspace level default is used. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ik  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The idempotency key for creating this Ledger Account. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"linkedAccount  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-externalaccountmatchinput\",\n                      children: \"ExternalAccountMatchInput\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The External Account to link to this Ledger Account. This can only be specified on leaf Ledger Accounts. See  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#reconcile-transactions\",\n                      children: \"Reconcile transactions\"\n                    }), \"  . \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"name  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The name of the Ledger Account. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"parent  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-ledgeraccountmatchinput\",\n                      children: \"LedgerAccountMatchInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The parent of this Ledger Account. This is only valid on the top level Ledger Account in the payload. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"type  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-ledgeraccounttypes\",\n                      children: \"LedgerAccountTypes\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The type of this Ledger Account. This field is only required if this is a root Ledger Account. Otherwise, the type will get inherited from its parent. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"CreateLedgerInput\",\n            id: \"types-input-types-createledgerinput\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"balanceUTCOffset\": \"-08:00\", \"name\": \"abc123\", \"type\": \"double\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"balanceUTCOffset  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-utcoffset\",\n                      children: \"UTCOffset\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Use this field to specify a timezone for queries to your Ledger.  When aggregating balances, all transactions within a 24 hour period starting at midnight UTC are included in each day. You can specify a different starting hour for balances. For example, use \\\"-08:00\\\" to align balances with Pacific Standard Time. Balance queries would then consider the start of each local day to be at 8am UTC the next day in UTC. The default timezone is UTC. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"name  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"type  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-ledgertypes\",\n                      children: \"LedgerTypes\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"CustomAccountInput\",\n            id: \"types-input-types-customaccountinput\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"currency\": CurrencyMatchInput,\n  \"currencyMode\": \"multi\",\n  \"externalId\": \"some-safe-string-ik\",\n  \"name\": \"abc123\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currency  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-currencymatchinput\",\n                      children: \"CurrencyMatchInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The currency of this external account. If this is not set, the workspace level default is used. 'currency' cannot be set if 'currencyMode' is 'multi'. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currencyMode  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-currencymode\",\n                      children: \"CurrencyMode\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The currency mode of this external account. If set to multi, creates a multi-currency account. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"externalId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The ID of this account at the external system. This is used as the idempotency key, within the scope of its Custom Link. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"name  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The name of the account at the external system. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"CustomTxInput\",\n            id: \"types-input-types-customtxinput\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"account\": ExternalAccountMatchInput,\n  \"amount\": \"999999999999\",\n  \"currency\": CurrencyMatchInput,\n  \"description\": \"abc123\",\n  \"externalId\": \"some-safe-string-ik\",\n  \"posted\": \"2007-12-03T10:15:30Z\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"account  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-externalaccountmatchinput\",\n                      children: \"ExternalAccountMatchInput!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"amount  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int96\",\n                      children: \"Int96!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currency  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-currencymatchinput\",\n                      children: \"CurrencyMatchInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The currency of this tx. Should be set for multi-currency accounts. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"description  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"externalId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The ID of this tx at the external system. This is used as the idempotency key, within the scope of its Custom Account. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"posted  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-datetime\",\n                      children: \"DateTime!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"Int96ConditionInput\",\n            id: \"types-input-types-int96conditioninput\",\n            children: [_jsx(_components.p, {\n              children: \"A condition that must be met on an Int96 field.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"eq\": \"999999999999\", \"gte\": \"999999999999\", \"lte\": \"999999999999\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"eq  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int96\",\n                      children: \"Int96\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Amount must exactly match this value. You may not specify this alongside  gte  or  lte  . \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"gte  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int96\",\n                      children: \"Int96\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Amount must be greater than or equal to this value. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"lte  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int96\",\n                      children: \"Int96\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Amount must be less than or equal to this value. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerAccountConditionInput\",\n            id: \"types-input-types-ledgeraccountconditioninput\",\n            children: [_jsx(_components.p, {\n              children: \"A set of conditions that a Ledger Account must meet for an operation to succeed.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"ownBalance\": Int96ConditionInput}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsx(\"tbody\", {\n                children: _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ownBalance  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-int96conditioninput\",\n                      children: \"Int96ConditionInput!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"A condition that the ownBalance field must satisfy. Note that this condition always applies to the latest balance, not to balances at a specific date or time. See  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#read-balances\",\n                      children: \"Read balances\"\n                    }), \"  for more on the different types of Ledger Account balances. \"]\n                  })]\n                })\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerAccountConsistencyConfigInput\",\n            id: \"types-input-types-ledgeraccountconsistencyconfiginput\",\n            children: [_jsxs(_components.p, {\n              children: [\"The payload configuring the consistency for this Ledger Account. See \", _jsx(_components.a, {\n                href: \"https://fragment.dev/docs#configure-consistency\",\n                children: \"Configure consistency\"\n              }), \".\"]\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"groups\": [LedgerAccountGroupConsistencyConfigInput],\n  \"lines\": \"eventual\",\n  \"ownBalanceUpdates\": \"eventual\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"groups  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-ledgeraccountgroupconsistencyconfiginput\",\n                      children: \"[LedgerAccountGroupConsistencyConfigInput!]\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The consistency configuration for Ledger Entry Groups affecting this account.  See \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#configure-consistency\",\n                      children: \"Configure consistency\"\n                    }), \". \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"lines  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-ledgerlinesconsistencymode\",\n                      children: \"LedgerLinesConsistencyMode\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"If set to strong, then a Ledger Account's lines updates will be strongly consistent with the API response. This Ledger Account's balance will be updated and available for strongly consistent reads before you receive an API response.  Otherwise if unset or set to eventual, lines updates are applied asynchronously and may not be immediately reflected in queries.  See \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#configure-consistency\",\n                      children: \"Configure consistency\"\n                    }), \". \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ownBalanceUpdates  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-balanceupdateconsistencymode\",\n                      children: \"BalanceUpdateConsistencyMode\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"If set to strong, then a Ledger Account's ownBalance updates will be strongly consistent with the API response. This Ledger Account's balance will be updated and available for strongly consistent reads before you receive an API response.  Otherwise if unset or set to eventual, ownBalance updates are applied asynchronously and may not be immediately reflected in queries.  See \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#configure-consistency\",\n                      children: \"Configure consistency\"\n                    }), \". \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerAccountGroupConsistencyConfigInput\",\n            id: \"types-input-types-ledgeraccountgroupconsistencyconfiginput\",\n            children: [_jsx(_components.p, {\n              children: \"The consistency configuration for a specific Ledger Entry Group in this account.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"key\": \"abc123\", \"ownBalanceUpdates\": \"eventual\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"key  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The group key for this configuration. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ownBalanceUpdates  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-balanceupdateconsistencymode\",\n                      children: \"BalanceUpdateConsistencyMode!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"If set to strong, then Ledger Entry Group ownBalances updates for this account will be strongly consistent with the API response. This Ledger Account's Ledger Entry Group balances will be updated and available for strongly consistent reads before you receive an API response.  Otherwise if unset or set to eventual, Ledger Entry Group ownBalance updates are applied asynchronously and may not be immediately reflected in queries.  See \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#configure-consistency\",\n                      children: \"Configure consistency\"\n                    }), \". \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerEntryConditionInput\",\n            id: \"types-input-types-ledgerentryconditioninput\",\n            children: [_jsx(_components.p, {\n              children: \"A set of pre-conditions and post-conditions that a Ledger Account balance must meet for an operation to succeed. You must specify at least one of precondition or postcondition for each condition.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"account\": LedgerAccountMatchInput,\n  \"currency\": CurrencyMatchInput,\n  \"postcondition\": LedgerAccountConditionInput,\n  \"precondition\": LedgerAccountConditionInput\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"account  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-ledgeraccountmatchinput\",\n                      children: \"LedgerAccountMatchInput!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Ledger Account that must satisfy the provided conditions. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currency  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-currencymatchinput\",\n                      children: \"CurrencyMatchInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"For Ledger Accounts in the  multi  currency mode, you must specify the currency of the balance affected by the condition. You only need to specify this field for multi-currency accounts. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"postcondition  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-ledgeraccountconditioninput\",\n                      children: \"LedgerAccountConditionInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The conditions that must hold after the operation. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"precondition  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-ledgeraccountconditioninput\",\n                      children: \"LedgerAccountConditionInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The conditions that must hold prior to the operation. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerEntryGroupInput\",\n            id: \"types-input-types-ledgerentrygroupinput\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"key\": \"some-safe-string-ik\", \"value\": \"some-safe-string-ik\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"key  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The key of this group. Can be up to 128 characters long. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"value  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The value associated with this group's key. Can be up to 128 characters long. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerEntryInput\",\n            id: \"types-input-types-ledgerentryinput\",\n            children: [_jsx(_components.p, {\n              children: \"Ledger Entries are limited to 30 Ledger Lines.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"conditions\": [LedgerEntryConditionInput],\n  \"description\": \"abc123\",\n  \"groups\": [LedgerEntryGroupInput],\n  \"ledger\": LedgerMatchInput,\n  \"lines\": [LedgerLineInput],\n  \"parameters\": \"{\\\"key\\\":\\\"value\\\"}\",\n  \"posted\": \"2007-12-03T10:15:30Z\",\n  \"tags\": [LedgerEntryTagInput],\n  \"type\": \"abc123\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"conditions  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-ledgerentryconditioninput\",\n                      children: \"[LedgerEntryConditionInput!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Conditions that must be satisfied to post this Ledger Entry. The Ledger Entry will reject with a BadRequestError if any condition is not met. You can only add a condition on a Ledger Account containing a Line in this Ledger Entry. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"description  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"If specified, will also be used as the description for LedgerLines unless they specify their own description. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"groups  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-ledgerentrygroupinput\",\n                      children: \"[LedgerEntryGroupInput!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Adds this Ledger Entry to this set of Ledger Entry Groups \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledger  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-ledgermatchinput\",\n                      children: \"LedgerMatchInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Ledger to which to post this Ledger Entry. Must be linked to a Schema that defines the provided Ledger Entry type. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"lines  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-ledgerlineinput\",\n                      children: \"[LedgerLineInput!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Ledger Lines to create as part of this Ledger Entry. This cannot be used with Ledger Entries that have a 'type' i.e. Ledger Entries defined in the Schema. This can be useful during non-routine operations such as an incident. It is not recommended to use 'lines' during routine operations. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"parameters  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-json\",\n                      children: \"JSON\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Parameters to be included in a templated Ledger Entry. All provided parameters must be present in the typed Ledger Entry within the Schema linked to the provided Ledger. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"posted  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-datetime\",\n                      children: \"DateTime\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ISO 8601 timestamp to post this Ledger Entry e.g. \\\"2021-01-01\\\" or \\\"2021-01-01T16:45:00Z\\\". Will error out if supplied to reconcileTx or createOrder since the transaction timestamp will be used instead \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"tags  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-ledgerentrytaginput\",\n                      children: \"[LedgerEntryTagInput!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"A set of tags attached to this Ledger Entry. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"type  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The type of the Ledger Entry. Must be defined in the Schema linked to the Ledger specified below. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerEntryTagInput\",\n            id: \"types-input-types-ledgerentrytaginput\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"key\": \"some-safe-string-ik\", \"value\": \"some-safe-string-ik\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"key  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The key of this tag. Can be up to 128 characters long. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"value  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The value associated with this tag's key. Can be up to 128 characters long. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerLineInput\",\n            id: \"types-input-types-ledgerlineinput\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"account\": LedgerAccountMatchInput,\n  \"amount\": \"999999999999\",\n  \"currency\": CurrencyMatchInput,\n  \"description\": \"abc123\",\n  \"key\": \"abc123\",\n  \"tx\": TxMatchInput\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"account  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-ledgeraccountmatchinput\",\n                      children: \"LedgerAccountMatchInput!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The LedgerAccount this line is being added to \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"amount  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int96\",\n                      children: \"Int96\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"A positive amount increases the balance of its LedgerAccount, a negative amount reduces the balance of its LedgerAccount \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currency  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-currencymatchinput\",\n                      children: \"CurrencyMatchInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The currency the ledger line is in \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"description  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"If not specified the description from the parent LedgerEntryInput will be used \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"key  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"Optional identifier for Ledger Line. You can filter lines by key using  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/api-reference#types-filter-types-ledgerlinesfilterset\",\n                      children: \"LedgerLinesFilterSet\"\n                    }), \"  . \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"tx  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-txmatchinput\",\n                      children: \"TxMatchInput\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"Required for reconcileTx to specify the transaction being reconciled, you can specify either the \", _jsx(Fragment, {}), \"  ID or external ID of the transaction \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SceneEntryInput\",\n            id: \"types-input-types-sceneentryinput\",\n            children: [_jsx(_components.p, {\n              children: \"A simulated Ledger Entry posted as a part of a Scene.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"parameters\": \"{\\\"key\\\":\\\"value\\\"}\", \"type\": \"some-safe-string-ik\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"parameters  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-json\",\n                      children: \"JSON\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Any parameters to be used as inputs to this simulated Ledger Entry. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"type  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The type of the simulated Ledger Entry. Must match one of the types provided in schema.ledgerEntries.types. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SceneEventInput\",\n            id: \"types-input-types-sceneeventinput\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"entry\": SceneEntryInput, \"eventType\": \"entry\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"entry  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-sceneentryinput\",\n                      children: \"SceneEntryInput!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The simulated Ledger Entry. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"eventType  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-sceneeventtype\",\n                      children: \"SceneEventType!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The type of the Scene Event. Currently, only entries are supported. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SceneInput\",\n            id: \"types-input-types-sceneinput\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"events\": [SceneEventInput], \"name\": \"abc123\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"events  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-sceneeventinput\",\n                      children: \"[SceneEventInput!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"A list of simulated ledger entries that make up the Scene. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"name  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The human-readable name of the Scene. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SchemaConditionInput\",\n            id: \"types-input-types-schemaconditioninput\",\n            children: [_jsx(_components.p, {\n              children: \"A condition that must be met on a Ledger Account balance. The condition can be either a precondition or postcondition.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"ownBalance\": SchemaInt96ConditionInput}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsx(\"tbody\", {\n                children: _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ownBalance  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-schemaint96conditioninput\",\n                      children: \"SchemaInt96ConditionInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"A condition on the  ownBalance  of the Ledger Account. \"\n                  })]\n                })\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SchemaConsistencyConfigInput\",\n            id: \"types-input-types-schemaconsistencyconfiginput\",\n            children: [_jsx(_components.p, {\n              children: \"The consistency configuration for entities created within Ledgers created by this Schema.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"entries\": \"eventual\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsx(\"tbody\", {\n                children: _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"entries  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-schemaconsistencymode\",\n                      children: \"SchemaConsistencyMode\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The consistency mode for the Ledger Entries list query within Ledgers created by this Schema.  See \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#configure-consistency\",\n                      children: \"Configure consistency\"\n                    }), \". \"]\n                  })]\n                })\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SchemaInput\",\n            id: \"types-input-types-schemainput\",\n            children: [_jsx(_components.p, {\n              children: \"Input to the API for creating a Schema.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"chartOfAccounts\": ChartOfAccountsInput,\n  \"consistencyConfig\": SchemaConsistencyConfigInput,\n  \"key\": \"some-safe-string-ik\",\n  \"ledgerEntries\": SchemaLedgerEntriesInput,\n  \"name\": \"assets/bank:\\{\\{bank_name\\}\\}\",\n  \"scenes\": [SceneInput]\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"chartOfAccounts  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-chartofaccountsinput\",\n                      children: \"ChartOfAccountsInput!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Chart of Accounts for the Schema. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"consistencyConfig  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-schemaconsistencyconfiginput\",\n                      children: \"SchemaConsistencyConfigInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The consistency configuration for this Schema. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"key  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The key of the Schema. This is a stable, unique identifier for the Schema. Uniqueness is enforced at the Workspace level. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledgerEntries  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-schemaledgerentriesinput\",\n                      children: \"SchemaLedgerEntriesInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Ledger Entries to add to the Schema. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"name  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-parameterizedstring\",\n                      children: \"ParameterizedString\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The human-readable name of the Schema. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"scenes  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-sceneinput\",\n                      children: \"[SceneInput!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Any scenes associated with this Schema. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SchemaInt96ConditionInput\",\n            id: \"types-input-types-schemaint96conditioninput\",\n            children: [_jsx(_components.p, {\n              children: \"A condition that must be met on a field.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"eq\": \"assets/bank:\\{\\{bank_name\\}\\}\",\n  \"gte\": \"assets/bank:\\{\\{bank_name\\}\\}\",\n  \"lte\": \"assets/bank:\\{\\{bank_name\\}\\}\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"eq  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-parameterizedstring\",\n                      children: \"ParameterizedString\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Amount must be exactly equal to this value. You may not specify this alongside  gte  or  lte  . \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"gte  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-parameterizedstring\",\n                      children: \"ParameterizedString\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Amount must be greater than or equal to this value. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"lte  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-parameterizedstring\",\n                      children: \"ParameterizedString\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Amount must be less than or equal to this value. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SchemaLedgerAccountInput\",\n            id: \"types-input-types-schemaledgeraccountinput\",\n            children: [_jsxs(_components.p, {\n              children: [\"Models a Ledger Account in a Schema. Upon successfully storing a \", _jsx(_components.a, {\n                href: \"https://fragment.dev/api-reference#types-core-types-schema\",\n                children: \"Schema\"\n              }), \", a \", _jsx(_components.a, {\n                href: \"https://fragment.dev/api-reference#types-core-types-ledgeraccount\",\n                children: \"LedgerAccount\"\n              }), \" will be created for each corresponding non-templated SchemaLedgerAccountInput in your Chart of Accounts.\"]\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"children\": [SchemaLedgerAccountInput],\n  \"consistencyConfig\": LedgerAccountConsistencyConfigInput,\n  \"currency\": SchemaCurrencyMatchInput,\n  \"currencyMode\": \"multi\",\n  \"key\": \"some-safe-string-ik\",\n  \"linkedAccount\": SchemaExternalAccountMatchInput,\n  \"name\": \"assets/bank:\\{\\{bank_name\\}\\}\",\n  \"template\": true,\n  \"type\": \"asset\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"children  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-schemaledgeraccountinput\",\n                      children: \"[SchemaLedgerAccountInput!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Ledger Accounts to create as children of this Ledger Account. Ledger Accounts may be nested up to a maximum depth of 10. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"consistencyConfig  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-ledgeraccountconsistencyconfiginput\",\n                      children: \"LedgerAccountConsistencyConfigInput\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The consistency configuration for this ledger account. See  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#configure-consistency\",\n                      children: \"Configure consistency\"\n                    }), \"  . \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currency  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-schemacurrencymatchinput\",\n                      children: \"SchemaCurrencyMatchInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The currency of this Ledger Account. If this is not set, and  currencyMode  is not set to  multi  , it is derived from the Chart of Accounts' default. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currencyMode  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-currencymode\",\n                      children: \"CurrencyMode\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"If set to  multi  , creates a multi-currency Ledger Account. If set to  single  , creates a single-currency Ledger Account. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"key  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The key of this Ledger Account. Keys are used to formulate the unique path of the Ledger Account in your Chart of Accounts. Siblings must have unique keys. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"linkedAccount  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-schemaexternalaccountmatchinput\",\n                      children: \"SchemaExternalAccountMatchInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The External Account to link to this Ledger Account. It must be provided of  linked  is true. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"name  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-parameterizedstring\",\n                      children: \"ParameterizedString\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The human-readable name of this Ledger Account. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"template  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-boolean\",\n                      children: \"Boolean\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Whether or not this Ledger Account should be templated. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"type  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-ledgeraccounttypes\",\n                      children: \"LedgerAccountTypes\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The type of ledger account to create. Required if this is a top-level Ledger Account. If not provided, the type will be inferred from the parent. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SchemaLedgerEntriesInput\",\n            id: \"types-input-types-schemaledgerentriesinput\",\n            children: [_jsx(_components.p, {\n              children: \"The Ledger Entries in your Schema.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"types\": [SchemaLedgerEntryInput]}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsx(\"tbody\", {\n                children: _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"types  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-schemaledgerentryinput\",\n                      children: \"[SchemaLedgerEntryInput!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"A list of Ledger Entry definitions. \"\n                  })]\n                })\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SchemaLedgerEntryConditionInput\",\n            id: \"types-input-types-schemaledgerentryconditioninput\",\n            children: [_jsx(_components.p, {\n              children: \"A condition that must be met on a Ledger Account when a Ledger Entry is posted.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"account\": SchemaLedgerAccountMatchInput,\n  \"currency\": SchemaCurrencyMatchInput,\n  \"postcondition\": SchemaConditionInput,\n  \"precondition\": SchemaConditionInput\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"account  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-schemaledgeraccountmatchinput\",\n                      children: \"SchemaLedgerAccountMatchInput!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Ledger Account to apply the condition to. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currency  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-schemacurrencymatchinput\",\n                      children: \"SchemaCurrencyMatchInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The currency of the balance to apply the condition to. Required if the Ledger Account matched is a multi-currency Ledger Account. Otherwise, this field is defaults to the Ledger Account's currency. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"postcondition  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-schemaconditioninput\",\n                      children: \"SchemaConditionInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"A  postcondition  must be met after the Ledger Entry updates are applied. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"precondition  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-schemaconditioninput\",\n                      children: \"SchemaConditionInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"A  precondition  must be met before any Ledger Entry updates are applied. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SchemaLedgerEntryGroupInput\",\n            id: \"types-input-types-schemaledgerentrygroupinput\",\n            children: [_jsx(_components.p, {\n              children: \"A Ledger Entry Group associated with a Ledger Entry type.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"key\": \"some-safe-string-ik\", \"value\": \"assets/bank:\\{\\{bank_name\\}\\}\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"key  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The key for this Ledger Entry Group. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"value  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-parameterizedstring\",\n                      children: \"ParameterizedString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The value associated with this Ledger Entry Group. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SchemaLedgerEntryInput\",\n            id: \"types-input-types-schemaledgerentryinput\",\n            children: [_jsx(_components.p, {\n              children: \"A Ledger Entry in a Schema. All Ledger Entries defined in a Schema must have a unique type.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"conditions\": [SchemaLedgerEntryConditionInput],\n  \"description\": \"assets/bank:\\{\\{bank_name\\}\\}\",\n  \"groups\": [SchemaLedgerEntryGroupInput],\n  \"lines\": [SchemaLedgerLineInput],\n  \"parameters\": \"{\\\"key\\\":\\\"value\\\"}\",\n  \"tags\": [SchemaLedgerEntryTagInput],\n  \"type\": \"some-safe-string-ik\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"conditions  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-schemaledgerentryconditioninput\",\n                      children: \"[SchemaLedgerEntryConditionInput!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Conditions that must be satisfied to post this Ledger Entry. The Ledger Entry will reject with a BadRequestError if any condition is not met. You can only add a condition on a Ledger Account containing a Line in this Ledger Entry. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"description  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-parameterizedstring\",\n                      children: \"ParameterizedString\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Human-readable description of the Ledger Entry. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"groups  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-schemaledgerentrygroupinput\",\n                      children: \"[SchemaLedgerEntryGroupInput!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Ledger Entries posted with this type will be in these Ledger Entry Groups. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"lines  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-schemaledgerlineinput\",\n                      children: \"[SchemaLedgerLineInput!]\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The Ledger Lines in the Ledger Entry. If provided, when posting a Typed Entry, a  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/api-reference#types-core-types-ledgerline\",\n                      children: \"LedgerEntry\"\n                    }), \"  will be posted containing  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/api-reference#types-core-types-ledgerline\",\n                      children: \"LedgerLines\"\n                    }), \"  corresponding to the values you provide here. If your lines contain parameters, you must supply values for those parameters that balance out the Ledger Entry. If not provided, lines will be required when posting a Typed Entry. \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"parameters  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-json\",\n                      children: \"JSON\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Fixed partial set of parameters to be included in a templated Ledger Entry. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"tags  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-schemaledgerentrytaginput\",\n                      children: \"[SchemaLedgerEntryTagInput!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Ledger Entries posted with this type will be associated with these tags. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"type  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The type of this Ledger Entry. This is a stable, unique identifier for this entry. Uniqueness is enforced at the Schema level. You can filter on this field when querying for Ledger Entries. See the docs on  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/api-reference#types-filter-types-ledgerentriesfilterset\",\n                      children: \"LedgerEntryFilterSet\"\n                    }), \" \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SchemaLedgerEntryTagInput\",\n            id: \"types-input-types-schemaledgerentrytaginput\",\n            children: [_jsx(_components.p, {\n              children: \"A tag associated with a Ledger Entry type.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"key\": \"some-safe-string-ik\", \"value\": \"assets/bank:\\{\\{bank_name\\}\\}\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"key  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The key for this tag. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"value  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-parameterizedstring\",\n                      children: \"ParameterizedString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The value associated with the given key for this tag. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SchemaLedgerLineInput\",\n            id: \"types-input-types-schemaledgerlineinput\",\n            children: [_jsx(_components.p, {\n              children: \"A Ledger Line in a Ledger Entry.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"account\": SchemaLedgerAccountMatchInput,\n  \"amount\": \"assets/bank:\\{\\{bank_name\\}\\}\",\n  \"currency\": SchemaCurrencyMatchInput,\n  \"description\": \"assets/bank:\\{\\{bank_name\\}\\}\",\n  \"key\": \"some-safe-string-ik\",\n  \"tx\": SchemaTxMatchInput\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"account  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-schemaledgeraccountmatchinput\",\n                      children: \"SchemaLedgerAccountMatchInput!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Ledger Account this Ledger Line will be posted to. It supports parameters in its attributes via handlebars syntax. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"amount  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-parameterizedstring\",\n                      children: \"ParameterizedString\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The amount of the Ledger Line. It supports parameters via the handlebars syntax and addition (+) and subtraction (-). \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currency  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-schemacurrencymatchinput\",\n                      children: \"SchemaCurrencyMatchInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The currency of the Ledger Line. This is required if the Ledger Account has currencyMode multi. It supports parameters in its attributes via handlebars syntax. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"description  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-parameterizedstring\",\n                      children: \"ParameterizedString\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Human-readable description of the line. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"key  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The key for the Ledger Line. Ledger Line keys must be unique within a Ledger Entry. Key can be filtered on as part of the LedgerLinesFilterSet. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"tx  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-schematxmatchinput\",\n                      children: \"SchemaTxMatchInput\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The external transaction to reconcile. This field is required if the Ledger Account being posted to is a Linked Ledger Account. Otherwise, this field is disallowed. It supports parameters in its attributes via handlebars syntax.  See the docs on \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#reconcile-transactions\",\n                      children: \"reconciliation and Linked Ledger Accounts\"\n                    }), \". \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"UpdateLedgerAccountInput\",\n            id: \"types-input-types-updateledgeraccountinput\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"consistencyConfig\": LedgerAccountConsistencyConfigInput,\n  \"name\": \"abc123\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"consistencyConfig  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-ledgeraccountconsistencyconfiginput\",\n                      children: \"LedgerAccountConsistencyConfigInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The consistency configuration for this ledger account. This defines how updates to this ledger account's balance are handled. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"name  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The name to update the ledger account to \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"UpdateLedgerEntryInput\",\n            id: \"types-input-types-updateledgerentryinput\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"groups\": [LedgerEntryGroupInput],\n  \"tags\": [LedgerEntryTagInput]\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"groups  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-ledgerentrygroupinput\",\n                      children: \"[LedgerEntryGroupInput!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The list of Groups to add to this Ledger Entry. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"tags  -  \", _jsx(_components.a, {\n                      href: \"#types-input-types-ledgerentrytaginput\",\n                      children: \"[LedgerEntryTagInput!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The list of Tags to add and/or update on this Ledger Entry. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"UpdateLedgerInput\",\n            id: \"types-input-types-updateledgerinput\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"name\": \"abc123\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsx(\"tbody\", {\n                children: _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"name  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The new Ledger name. \"\n                  })]\n                })\n              })]\n            }), _jsx(\"br\", {})]\n          })]\n        }), _jsxs(Page, {\n          id: \"types-matchinput-types\",\n          title: \"MatchInput Types\",\n          label: \"\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsx(\"br\", {}), _jsxs(Subpage, {\n            title: \"CurrencyMatchInput\",\n            id: \"types-matchinput-types-currencymatchinput\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"code\": \"AAVE\", \"customCurrencyId\": \"some-safe-string-ik\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"code  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-currencycode\",\n                      children: \"CurrencyCode!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The currency code. This is an  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/api-reference#types-scalars-and-enums-currencycode\",\n                      children: \"enum type\"\n                    }), \"  . \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"customCurrencyId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The ID for a custom currency. This is specified when creating the custom currency using the  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/api-reference#mutations-createcustomcurrency\",\n                      children: \"createCustomCurrency\"\n                    }), \"  mutation. \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"EntryGroupMatchInput\",\n            id: \"types-matchinput-types-entrygroupmatchinput\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"key\": \"some-safe-string-ik\", \"value\": \"some-safe-string-ik\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"key  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"value  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"ExternalAccountMatchInput\",\n            id: \"types-matchinput-types-externalaccountmatchinput\",\n            children: [_jsx(_components.p, {\n              children: \"Specify an External Account by using id, or linkId and externalId.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"externalId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"linkId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"externalId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The external system's ID of the External Account. If this is specified,  linkId  is required.  id  is optional, but will be validated if provided. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"id  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The \", _jsx(Fragment, {}), \"  ID of the External Account. If this is specified, both  linkId  and  externalId  are optional, but will be validated if provided. \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"linkId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The \", _jsx(Fragment, {}), \"  ID of the Link the External Account is in. If this is specified,  externalId  is required.  id  is optional, but will be validated if provided. \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerAccountMatchInput\",\n            id: \"types-matchinput-types-ledgeraccountmatchinput\",\n            children: [_jsx(_components.p, {\n              children: \"Specify a Ledger Account by using id or path.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"ledger\": LedgerMatchInput,\n  \"path\": \"abc123\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"id  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The \", _jsx(Fragment, {}), \"  ID of the ledger account \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledger  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-ledgermatchinput\",\n                      children: \"LedgerMatchInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Ledger to which this Ledger Account belongs. This is required if you are specifying the Ledger Account by  path  . \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"path  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The unique path of the ledger account.  This is a slash-delimited string containing the keys of an account and all its direct ancestors. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerEntryGroupMatchInput\",\n            id: \"types-matchinput-types-ledgerentrygroupmatchinput\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"key\": \"some-safe-string-ik\",\n  \"ledger\": LedgerMatchInput,\n  \"value\": \"some-safe-string-ik\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"key  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledger  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-ledgermatchinput\",\n                      children: \"LedgerMatchInput!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"value  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerEntryMatchInput\",\n            id: \"types-matchinput-types-ledgerentrymatchinput\",\n            children: [_jsx(_components.p, {\n              children: \"Specify a Ledger Entry by using id.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"ik\": \"some-safe-string-ik\",\n  \"ledger\": LedgerMatchInput\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"id  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The \", _jsx(Fragment, {}), \"  ID of the Ledger Entry \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ik  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The IK provided to the  addLedgerEntry  mutation or the  ik  field returned from a  reconcileTx  mutation. This is required if you have not provided  id  . \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledger  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-ledgermatchinput\",\n                      children: \"LedgerMatchInput\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The \", _jsx(Fragment, {}), \"  ID of the Ledger to which this Ledger Entry belongs. This is required if you have not provided  id  . \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerLineMatchInput\",\n            id: \"types-matchinput-types-ledgerlinematchinput\",\n            children: [_jsx(_components.p, {\n              children: \"Specify a Ledger Line by using id.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsx(\"tbody\", {\n                children: _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"id  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The \", _jsx(Fragment, {}), \"  ID of the ledger line \"]\n                  })]\n                })\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerMatchInput\",\n            id: \"types-matchinput-types-ledgermatchinput\",\n            children: [_jsx(_components.p, {\n              children: \"Specify a Ledger by using id or ik.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\", \"ik\": \"some-safe-string-ik\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"id  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The \", _jsx(Fragment, {}), \"  ID of the ledger \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ik  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The IK passed into the  \", _jsx(_components.a, {\n                      href: \"/api-reference#mutations-createledger\",\n                      children: \"createLedger\"\n                    }), \"  mutation. This is treated as a second unique identifier for this ledger. \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LinkMatchInput\",\n            id: \"types-matchinput-types-linkmatchinput\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsx(\"tbody\", {\n                children: _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"id  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SchemaCurrencyMatchInput\",\n            id: \"types-matchinput-types-schemacurrencymatchinput\",\n            children: [_jsxs(_components.p, {\n              children: [\"Matches a Currency. Can be a built-in \", _jsx(_components.a, {\n                href: \"https://fragment.dev/api-reference#types-scalars-and-enums-currencycode\",\n                children: \"CurrencyCode\"\n              }), \", custom Currency, or a parameterized string. If you supply a parameterized string, you must pass in a valid CurrencyCode as a parameter when posting a Ledger Entry.\"]\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"code\": \"assets/bank:\\{\\{bank_name\\}\\}\",\n  \"customCurrencyId\": \"assets/bank:\\{\\{bank_name\\}\\}\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"code  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-parameterizedstring\",\n                      children: \"ParameterizedString!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The currency code. This must either be a  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/api-reference#types-scalars-and-enums-currencycode\",\n                      children: \"CurrencyCode\"\n                    }), \"  or a parameterized string that resolves to a CurrencyCode . \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"customCurrencyId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-parameterizedstring\",\n                      children: \"ParameterizedString\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The ID for a custom currency. This is specified when creating the custom currency using the  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/api-reference#mutations-createcustomcurrency\",\n                      children: \"createCustomCurrency\"\n                    }), \"  mutation. \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SchemaExternalAccountMatchInput\",\n            id: \"types-matchinput-types-schemaexternalaccountmatchinput\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"externalId\": \"assets/bank:\\{\\{bank_name\\}\\}\",\n  \"id\": \"assets/bank:\\{\\{bank_name\\}\\}\",\n  \"linkId\": \"assets/bank:\\{\\{bank_name\\}\\}\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"externalId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-parameterizedstring\",\n                      children: \"ParameterizedString\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The External systems's ID of the account \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"id  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-parameterizedstring\",\n                      children: \"ParameterizedString\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The \", _jsx(Fragment, {}), \"  ID of the external account \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"linkId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-parameterizedstring\",\n                      children: \"ParameterizedString\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The \", _jsx(Fragment, {}), \"  ID of the link \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SchemaLedgerAccountMatchInput\",\n            id: \"types-matchinput-types-schemaledgeraccountmatchinput\",\n            children: [_jsx(_components.p, {\n              children: \"Matches a Ledger Account in a Schema.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"path\": \"assets/bank:\\{\\{bank_name\\}\\}\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsx(\"tbody\", {\n                children: _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"path  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-parameterizedstring\",\n                      children: \"ParameterizedString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The unique path of the Ledger Account in the Schema. This is a slash-delimited string containing the keys of a Ledger Account and all its direct ancestors. ex: expense-root/subscriptions/netflix For Templated Ledger Accounts, you must supply a parameter in the path that will be used to name an instance of the template. ex:  \\\"expense-root/subscriptions/vendor:{{vendor_name}}\\\" \"\n                  })]\n                })\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SchemaMatchInput\",\n            id: \"types-matchinput-types-schemamatchinput\",\n            children: [_jsx(_components.p, {\n              children: \"An object used to retrieve a Schema.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"key\": \"some-safe-string-ik\", \"version\": 2277}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"key  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The key to retrieve a Schema by.  key  is unique to a Workspace. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"version  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Optional parameter to specify version of requested Schema. If not provided, it defaults to 0, representing the latest available version for the provided Schema key. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SchemaTxMatchInput\",\n            id: \"types-matchinput-types-schematxmatchinput\",\n            children: [_jsx(_components.p, {\n              children: \"Matches a transaction at an external system. This is used to specify the transaction being reconciled into a Linked Ledger Account\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"externalId\": \"assets/bank:\\{\\{bank_name\\}\\}\", \"id\": \"assets/bank:\\{\\{bank_name\\}\\}\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"externalId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-parameterizedstring\",\n                      children: \"ParameterizedString\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The external system's ID for the transaction. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"id  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-parameterizedstring\",\n                      children: \"ParameterizedString\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The \", _jsx(Fragment, {}), \"  ID for the transaction. \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"TagMatchInput\",\n            id: \"types-matchinput-types-tagmatchinput\",\n            children: [_jsx(_components.p, {\n              children: \"Specifies a single tag that an entity is expected to have. You must specify both the key and the value.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"key\": \"some-safe-string-ik\", \"value\": \"some-safe-string-ik\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"key  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The key of this tag. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"value  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The value associated with this tag's key. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"TxMatchInput\",\n            id: \"types-matchinput-types-txmatchinput\",\n            children: [_jsx(_components.p, {\n              children: \"Specify a Tx by using id or externalId, the Link it belongs to by linkId, and the External Account it is a part of by accountId or externalAccountId.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"accountId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"externalAccountId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"externalId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"linkId\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"accountId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The \", _jsx(Fragment, {}), \"  ID of the external account \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"externalAccountId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The external system's ID for the account \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"externalId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The external system's ID for the transaction \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"id  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The \", _jsx(Fragment, {}), \"  ID of the transaction \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"linkId  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The \", _jsx(Fragment, {}), \"  ID of the link \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          })]\n        }), _jsxs(Page, {\n          id: \"types-response-types\",\n          title: \"Response Types\",\n          label: \"\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsx(\"br\", {}), _jsxs(Subpage, {\n            title: \"AddLedgerEntryResponse\",\n            id: \"types-response-types-addledgerentryresponse\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `AddLedgerEntryResult\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsx(\"tr\", {\n                  children: _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Union Types\"\n                  })\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-result-types-addledgerentryresult\",\n                      children: \"AddLedgerEntryResult\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-badrequesterror\",\n                      children: \"BadRequestError\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-internalerror\",\n                      children: \"InternalError\"\n                    }), \" \"]\n                  })\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"CreateCustomCurrencyResponse\",\n            id: \"types-response-types-createcustomcurrencyresponse\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `BadRequestError\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsx(\"tr\", {\n                  children: _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Union Types\"\n                  })\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-badrequesterror\",\n                      children: \"BadRequestError\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-result-types-createcustomcurrencyresult\",\n                      children: \"CreateCustomCurrencyResult\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-internalerror\",\n                      children: \"InternalError\"\n                    }), \" \"]\n                  })\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"CreateCustomLinkResponse\",\n            id: \"types-response-types-createcustomlinkresponse\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `BadRequestError\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsx(\"tr\", {\n                  children: _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Union Types\"\n                  })\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-badrequesterror\",\n                      children: \"BadRequestError\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-result-types-createcustomlinkresult\",\n                      children: \"CreateCustomLinkResult\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-internalerror\",\n                      children: \"InternalError\"\n                    }), \" \"]\n                  })\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"CreateLedgerAccountResponse\",\n            id: \"types-response-types-createledgeraccountresponse\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `BadRequestError\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsx(\"tr\", {\n                  children: _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Union Types\"\n                  })\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-badrequesterror\",\n                      children: \"BadRequestError\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-result-types-createledgeraccountresult\",\n                      children: \"CreateLedgerAccountResult\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-internalerror\",\n                      children: \"InternalError\"\n                    }), \" \"]\n                  })\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"CreateLedgerAccountsResponse\",\n            id: \"types-response-types-createledgeraccountsresponse\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `BadRequestError\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsx(\"tr\", {\n                  children: _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Union Types\"\n                  })\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-badrequesterror\",\n                      children: \"BadRequestError\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-result-types-createledgeraccountsresult\",\n                      children: \"CreateLedgerAccountsResult\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-internalerror\",\n                      children: \"InternalError\"\n                    }), \" \"]\n                  })\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"CreateLedgerResponse\",\n            id: \"types-response-types-createledgerresponse\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `BadRequestError\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsx(\"tr\", {\n                  children: _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Union Types\"\n                  })\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-badrequesterror\",\n                      children: \"BadRequestError\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-result-types-createledgerresult\",\n                      children: \"CreateLedgerResult\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-internalerror\",\n                      children: \"InternalError\"\n                    }), \" \"]\n                  })\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"ReconcileTxResponse\",\n            id: \"types-response-types-reconciletxresponse\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `BadRequestError\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsx(\"tr\", {\n                  children: _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Union Types\"\n                  })\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-badrequesterror\",\n                      children: \"BadRequestError\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-internalerror\",\n                      children: \"InternalError\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-result-types-reconciletxresult\",\n                      children: \"ReconcileTxResult\"\n                    }), \" \"]\n                  })\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"StoreSchemaResponse\",\n            id: \"types-response-types-storeschemaresponse\",\n            children: [_jsxs(_components.p, {\n              children: [\"Returned by the \", _jsx(_components.a, {\n                href: \"https://fragment.dev/api-reference#mutations-storeschema\",\n                children: \"storeSchema\"\n              }), \" mutation.\"]\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `BadRequestError\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsx(\"tr\", {\n                  children: _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Union Types\"\n                  })\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-badrequesterror\",\n                      children: \"BadRequestError\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-internalerror\",\n                      children: \"InternalError\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-result-types-storeschemaresult\",\n                      children: \"StoreSchemaResult\"\n                    }), \" \"]\n                  })\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SyncCustomAccountsResponse\",\n            id: \"types-response-types-synccustomaccountsresponse\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `BadRequestError\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsx(\"tr\", {\n                  children: _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Union Types\"\n                  })\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-badrequesterror\",\n                      children: \"BadRequestError\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-internalerror\",\n                      children: \"InternalError\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-result-types-synccustomaccountsresult\",\n                      children: \"SyncCustomAccountsResult\"\n                    }), \" \"]\n                  })\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SyncCustomTxsResponse\",\n            id: \"types-response-types-synccustomtxsresponse\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `BadRequestError\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsx(\"tr\", {\n                  children: _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Union Types\"\n                  })\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-badrequesterror\",\n                      children: \"BadRequestError\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-internalerror\",\n                      children: \"InternalError\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-result-types-synccustomtxsresult\",\n                      children: \"SyncCustomTxsResult\"\n                    }), \" \"]\n                  })\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"UpdateLedgerAccountResponse\",\n            id: \"types-response-types-updateledgeraccountresponse\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `BadRequestError\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsx(\"tr\", {\n                  children: _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Union Types\"\n                  })\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-badrequesterror\",\n                      children: \"BadRequestError\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-internalerror\",\n                      children: \"InternalError\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-result-types-updateledgeraccountresult\",\n                      children: \"UpdateLedgerAccountResult\"\n                    }), \" \"]\n                  })\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"UpdateLedgerEntryResponse\",\n            id: \"types-response-types-updateledgerentryresponse\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `BadRequestError\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsx(\"tr\", {\n                  children: _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Union Types\"\n                  })\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-badrequesterror\",\n                      children: \"BadRequestError\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-internalerror\",\n                      children: \"InternalError\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-result-types-updateledgerentryresult\",\n                      children: \"UpdateLedgerEntryResult\"\n                    }), \" \"]\n                  })\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"UpdateLedgerResponse\",\n            id: \"types-response-types-updateledgerresponse\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `BadRequestError\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsx(\"tr\", {\n                  children: _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Union Types\"\n                  })\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-badrequesterror\",\n                      children: \"BadRequestError\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-error-types-internalerror\",\n                      children: \"InternalError\"\n                    }), \" \"]\n                  })\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [_jsx(_components.a, {\n                      href: \"#types-result-types-updateledgerresult\",\n                      children: \"UpdateLedgerResult\"\n                    }), \" \"]\n                  })\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          })]\n        }), _jsxs(Page, {\n          id: \"types-result-types\",\n          title: \"Result Types\",\n          label: \"\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsx(\"br\", {}), _jsxs(Subpage, {\n            title: \"AddLedgerEntryResult\",\n            id: \"types-result-types-addledgerentryresult\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"entry\": LedgerEntry,\n  \"isIkReplay\": true,\n  \"lines\": [LedgerLine]\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"entry  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledgerentry\",\n                      children: \"LedgerEntry!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The ledger entry that was posted \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"isIkReplay  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-boolean\",\n                      children: \"Boolean!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"True if this request successfully completed before and the previous response is being returned \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"lines  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledgerline\",\n                      children: \"[LedgerLine!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The ledger lines that were created in that entry \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"CreateCustomCurrencyResult\",\n            id: \"types-result-types-createcustomcurrencyresult\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"customCurrency\": Currency}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsx(\"tbody\", {\n                children: _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"customCurrency  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-currency\",\n                      children: \"Currency!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Currency that was created. \"\n                  })]\n                })\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"CreateCustomLinkResult\",\n            id: \"types-result-types-createcustomlinkresult\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"isIkReplay\": true, \"link\": Link}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"isIkReplay  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-boolean\",\n                      children: \"Boolean!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"link  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-link\",\n                      children: \"Link!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The custom link that was created. Represents an instance of an external system. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"CreateLedgerAccountResult\",\n            id: \"types-result-types-createledgeraccountresult\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"isIkReplay\": true, \"ledgerAccount\": LedgerAccount}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"isIkReplay  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-boolean\",\n                      children: \"Boolean!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"true if a previous request successfully created this ledger account \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledgerAccount  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledgeraccount\",\n                      children: \"LedgerAccount!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The ledger account that was created \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"CreateLedgerAccountsResult\",\n            id: \"types-result-types-createledgeraccountsresult\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"ikReplays\": [IkReplay],\n  \"ledgerAccounts\": [LedgerAccount]\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ikReplays  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-ikreplay\",\n                      children: \"[IkReplay!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Whether the ledger accounts were successfully created by a previous request \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledgerAccounts  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledgeraccount\",\n                      children: \"[LedgerAccount!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The ledger accounts that were created \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"CreateLedgerResult\",\n            id: \"types-result-types-createledgerresult\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"isIkReplay\": true, \"ledger\": Ledger}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"isIkReplay  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-boolean\",\n                      children: \"Boolean!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"true if this request successfully completed before and the previous response is being returned \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledger  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledger\",\n                      children: \"Ledger!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Ledger that was created \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"ReconcileTxResult\",\n            id: \"types-result-types-reconciletxresult\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"entry\": LedgerEntry,\n  \"isIkReplay\": true,\n  \"lines\": [LedgerLine]\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"entry  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledgerentry\",\n                      children: \"LedgerEntry!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The ledger entry that was posted \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"isIkReplay  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-boolean\",\n                      children: \"Boolean!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"True if this request successfully completed before and the previous response is being returned \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"lines  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledgerline\",\n                      children: \"[LedgerLine!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The ledger lines that were created in that entry \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"StoreSchemaResult\",\n            id: \"types-result-types-storeschemaresult\",\n            children: [_jsx(_components.p, {\n              children: \"StoreSchemaResult represents a successful execution of storeSchema.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"schema\": Schema}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsx(\"tbody\", {\n                children: _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"schema  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-schema\",\n                      children: \"Schema!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Schema that was stored as a result of calling  storeSchema  . \"\n                  })]\n                })\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SyncCustomAccountsResult\",\n            id: \"types-result-types-synccustomaccountsresult\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"accounts\": [ExternalAccount]}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsx(\"tbody\", {\n                children: _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"accounts  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-externalaccount\",\n                      children: \"[ExternalAccount!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The external accounts that were synced. \"\n                  })]\n                })\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SyncCustomTxsResult\",\n            id: \"types-result-types-synccustomtxsresult\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"txs\": [Tx]}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsx(\"tbody\", {\n                children: _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"txs  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-tx\",\n                      children: \"[Tx!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"UpdateLedgerAccountResult\",\n            id: \"types-result-types-updateledgeraccountresult\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"ledgerAccount\": LedgerAccount}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsx(\"tbody\", {\n                children: _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledgerAccount  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledgeraccount\",\n                      children: \"LedgerAccount!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The ledger account that was updated \"\n                  })]\n                })\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"UpdateLedgerEntryResult\",\n            id: \"types-result-types-updateledgerentryresult\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"entry\": LedgerEntry}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsx(\"tbody\", {\n                children: _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"entry  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledgerentry\",\n                      children: \"LedgerEntry!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Ledger Entry that was updated. \"\n                  })]\n                })\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"UpdateLedgerResult\",\n            id: \"types-result-types-updateledgerresult\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"ledger\": Ledger}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsx(\"tbody\", {\n                children: _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledger  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledger\",\n                      children: \"Ledger!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The updated Ledger. \"\n                  })]\n                })\n              })]\n            }), _jsx(\"br\", {})]\n          })]\n        }), _jsxs(Page, {\n          id: \"types-error-types\",\n          title: \"Error Types\",\n          label: \"\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsx(\"br\", {}), _jsxs(Subpage, {\n            title: \"BadRequestError\",\n            id: \"types-error-types-badrequesterror\",\n            children: [_jsx(_components.p, {\n              children: \"Equivalent to an HTTP 400 - request either has missing or incorrect data\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"code\": \"abc123\", \"message\": \"abc123\", \"retryable\": true}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"code  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The HTTP status code corresponding to the error \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"message  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The error message \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"retryable  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-boolean\",\n                      children: \"Boolean!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Whether or not the operation is retryable \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"Error\",\n            id: \"types-error-types-error\",\n            children: [_jsx(_components.p, {\n              children: \"Base error interface\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"code\": \"abc123\", \"message\": \"abc123\", \"retryable\": true}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"code  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The HTTP status code corresponding to the error \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"message  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The error message \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"retryable  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-boolean\",\n                      children: \"Boolean!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Whether or not the operation is retryable \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"InternalError\",\n            id: \"types-error-types-internalerror\",\n            children: [_jsx(_components.p, {\n              children: \"Equivalent to an HTTP 5XX - something went wrong with our API.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"code\": \"abc123\", \"message\": \"abc123\", \"retryable\": true}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"code  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The HTTP status code corresponding to the error \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"message  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The error message \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"retryable  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-boolean\",\n                      children: \"Boolean!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Whether or not the operation is retryable \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          })]\n        }), _jsxs(Page, {\n          id: \"types-connection-types\",\n          title: \"Connection Types\",\n          label: \"\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsx(\"br\", {}), _jsxs(Subpage, {\n            title: \"CurrencyAmountConnection\",\n            id: \"types-connection-types-currencyamountconnection\",\n            children: [_jsx(_components.p, {\n              children: \"A paginated list of amounts with their currencies\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"nodes\": [CurrencyAmount],\n  \"pageInfo\": PageInfo\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"nodes  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-currencyamount\",\n                      children: \"[CurrencyAmount!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The current page of results \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"pageInfo  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-pageinfo\",\n                      children: \"PageInfo!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/api-reference#types-connection-types-pageinfo\",\n                      children: \"pagination info\"\n                    }), \"  for this list \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"CustomCurrenciesConnection\",\n            id: \"types-connection-types-customcurrenciesconnection\",\n            children: [_jsx(_components.p, {\n              children: \"A paginated list of Custom Currencies\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"nodes\": [Currency],\n  \"pageInfo\": PageInfo\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"nodes  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-currency\",\n                      children: \"[Currency!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The current page of results \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"pageInfo  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-pageinfo\",\n                      children: \"PageInfo!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/api-reference#types-connection-types-pageinfo\",\n                      children: \"pagination info\"\n                    }), \"  for this list \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"ExternalAccountsConnection\",\n            id: \"types-connection-types-externalaccountsconnection\",\n            children: [_jsx(_components.p, {\n              children: \"A paginated list of External Accounts\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"nodes\": [ExternalAccount],\n  \"pageInfo\": PageInfo\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"nodes  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-externalaccount\",\n                      children: \"[ExternalAccount!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The current page of results \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"pageInfo  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-pageinfo\",\n                      children: \"PageInfo!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/api-reference#types-connection-types-pageinfo\",\n                      children: \"pagination info\"\n                    }), \"  for this list \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerAccountsConnection\",\n            id: \"types-connection-types-ledgeraccountsconnection\",\n            children: [_jsx(_components.p, {\n              children: \"A paginated list of Ledger Accounts\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"nodes\": [LedgerAccount],\n  \"pageInfo\": PageInfo\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"nodes  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledgeraccount\",\n                      children: \"[LedgerAccount!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The current page of results \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"pageInfo  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-pageinfo\",\n                      children: \"PageInfo!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/api-reference#types-connection-types-pageinfo\",\n                      children: \"pagination info\"\n                    }), \"  for this list \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerEntriesConnection\",\n            id: \"types-connection-types-ledgerentriesconnection\",\n            children: [_jsx(_components.p, {\n              children: \"A paginated list of Ledger Entries\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"nodes\": [LedgerEntry],\n  \"pageInfo\": PageInfo\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"nodes  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledgerentry\",\n                      children: \"[LedgerEntry!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The current page of results \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"pageInfo  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-pageinfo\",\n                      children: \"PageInfo!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/api-reference#types-connection-types-pageinfo\",\n                      children: \"pagination info\"\n                    }), \"  for this list \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerEntryGroupBalanceConnection\",\n            id: \"types-connection-types-ledgerentrygroupbalanceconnection\",\n            children: [_jsx(_components.p, {\n              children: \"A set of balance changes for a specific Ledger Entry Group.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"nodes\": [LedgerEntryGroupBalance],\n  \"pageInfo\": PageInfo\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"nodes  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-ledgerentrygroupbalance\",\n                      children: \"[LedgerEntryGroupBalance!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"pageInfo  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-pageinfo\",\n                      children: \"PageInfo!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerEntryGroupsConnection\",\n            id: \"types-connection-types-ledgerentrygroupsconnection\",\n            children: [_jsx(_components.p, {\n              children: \"A paginated list of Ledger Entry Groups\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"nodes\": [LedgerEntryGroup],\n  \"pageInfo\": PageInfo\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"nodes  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-ledgerentrygroup\",\n                      children: \"[LedgerEntryGroup!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The current page of results \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"pageInfo  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-pageinfo\",\n                      children: \"PageInfo!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Pagination info for this list. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerLinesConnection\",\n            id: \"types-connection-types-ledgerlinesconnection\",\n            children: [_jsx(_components.p, {\n              children: \"A paginated list of Ledger Lines\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"nodes\": [LedgerLine],\n  \"pageInfo\": PageInfo\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"nodes  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledgerline\",\n                      children: \"[LedgerLine!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The current page of results \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"pageInfo  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-pageinfo\",\n                      children: \"PageInfo!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/api-reference#types-connection-types-pageinfo\",\n                      children: \"pagination info\"\n                    }), \"  for this list \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerMigrationConnection\",\n            id: \"types-connection-types-ledgermigrationconnection\",\n            children: [_jsx(_components.p, {\n              children: \"A paginated list of Ledger Migrations\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"nodes\": [LedgerMigration],\n  \"pageInfo\": PageInfo\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"nodes  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledgermigration\",\n                      children: \"[LedgerMigration!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The current page of results \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"pageInfo  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-pageinfo\",\n                      children: \"PageInfo!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Pagination info for this list. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgersConnection\",\n            id: \"types-connection-types-ledgersconnection\",\n            children: [_jsx(_components.p, {\n              children: \"A paginated list of Ledgers\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"nodes\": [Ledger],\n  \"pageInfo\": PageInfo\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"nodes  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledger\",\n                      children: \"[Ledger!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The current page of results \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"pageInfo  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-pageinfo\",\n                      children: \"PageInfo!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/api-reference#types-connection-types-pageinfo\",\n                      children: \"pagination info\"\n                    }), \"  for this list \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LinksConnection\",\n            id: \"types-connection-types-linksconnection\",\n            children: [_jsx(_components.p, {\n              children: \"A paginated list of Links\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"nodes\": [Link],\n  \"pageInfo\": PageInfo\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"nodes  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-link\",\n                      children: \"[Link!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The current page of results \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"pageInfo  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-pageinfo\",\n                      children: \"PageInfo!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/api-reference#types-connection-types-pageinfo\",\n                      children: \"pagination info\"\n                    }), \"  for this list \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"PageInfo\",\n            id: \"types-connection-types-pageinfo\",\n            children: [_jsxs(_components.p, {\n              children: [\"An object containing \", _jsx(_components.a, {\n                href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                children: \"pagination\"\n              }), \" details.\"]\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"endCursor\": \"abc123\",\n  \"hasNextPage\": true,\n  \"hasPreviousPage\": true,\n  \"startCursor\": \"abc123\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"endCursor  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"hasNextPage  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-boolean\",\n                      children: \"Boolean!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"hasPreviousPage  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-boolean\",\n                      children: \"Boolean!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"startCursor  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SchemaConnection\",\n            id: \"types-connection-types-schemaconnection\",\n            children: [_jsx(_components.p, {\n              children: \"A paginated list of Schemas in a Workspace.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"nodes\": [Schema],\n  \"pageInfo\": PageInfo\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"nodes  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-schema\",\n                      children: \"[Schema!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The current page of results \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"pageInfo  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-pageinfo\",\n                      children: \"PageInfo!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Pagination info for this list. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SchemaVersionConnection\",\n            id: \"types-connection-types-schemaversionconnection\",\n            children: [_jsx(_components.p, {\n              children: \"A paginated list of SchemaVersions for a given Schema.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"nodes\": [SchemaVersion],\n  \"pageInfo\": PageInfo\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"nodes  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-schemaversion\",\n                      children: \"[SchemaVersion!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The current page of results \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"pageInfo  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-pageinfo\",\n                      children: \"PageInfo!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Pagination info for this list. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"TxsConnection\",\n            id: \"types-connection-types-txsconnection\",\n            children: [_jsx(_components.p, {\n              children: \"A paginated list of Txs\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"nodes\": [Tx],\n  \"pageInfo\": PageInfo\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"nodes  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-tx\",\n                      children: \"[Tx!]!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The current page of results \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"pageInfo  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-pageinfo\",\n                      children: \"PageInfo!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"The  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/api-reference#types-connection-types-pageinfo\",\n                      children: \"pagination info\"\n                    }), \"  for this list \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          })]\n        }), _jsxs(Page, {\n          id: \"types-filter-types\",\n          title: \"Filter Types\",\n          label: \"\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsx(\"br\", {}), _jsxs(Subpage, {\n            title: \"CurrencyFilter\",\n            id: \"types-filter-types-currencyfilter\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"equalTo\": CurrencyMatchInput,\n  \"in\": [CurrencyMatchInput]\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"equalTo  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-currencymatchinput\",\n                      children: \"CurrencyMatchInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Must match the value provided \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"in  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-currencymatchinput\",\n                      children: \"[CurrencyMatchInput!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Must match one of the values provided \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"DateFilter\",\n            id: \"types-filter-types-datefilter\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"equalTo\": \"2022-03-28\", \"in\": [\"2022-03-28\"]}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"equalTo  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-date\",\n                      children: \"Date\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"in  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-date\",\n                      children: \"[Date!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"DateTimeFilter\",\n            id: \"types-filter-types-datetimefilter\",\n            children: [_jsx(_components.p, {\n              children: \"Filters a timestamp field between two moments in time\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"after\": \"2007-12-03T10:15:30Z\", \"before\": \"2007-12-03T10:15:30Z\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"after  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-datetime\",\n                      children: \"DateTime\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The timestamp value must be after this moment. Specified in ISO 8601 format e.g \\\"1968-01-01T16:45:00Z\\\" \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"before  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-datetime\",\n                      children: \"DateTime\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The timestamp value must be before this moment. Specified in ISO 8601 format e.g \\\"1968-01-01T16:45:00Z\\\" \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"ExternalAccountFilter\",\n            id: \"types-filter-types-externalaccountfilter\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"equalTo\": ExternalAccountMatchInput,\n  \"in\": [ExternalAccountMatchInput]\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"equalTo  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-externalaccountmatchinput\",\n                      children: \"ExternalAccountMatchInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Ledger Account must linked to the the specified external account \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"in  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-externalaccountmatchinput\",\n                      children: \"[ExternalAccountMatchInput!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Ledger Account can be linked to any of the specified external accounts \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"GroupBalanceAccountFilter\",\n            id: \"types-filter-types-groupbalanceaccountfilter\",\n            children: [_jsx(_components.p, {\n              children: \"A filter to query balances of a specific subset of accounts\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"id\": StringFilter,\n  \"path\": StringMatchFilter\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"id  -  \", _jsx(_components.a, {\n                      href: \"#types-filter-types-stringfilter\",\n                      children: \"StringFilter\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"A filter that must match the account ID \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"path  -  \", _jsx(_components.a, {\n                      href: \"#types-filter-types-stringmatchfilter\",\n                      children: \"StringMatchFilter\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"A filter that must match the account path. Wildcards ('*') may be used only for template variables, and will only match a single variable each. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"Int96Filter\",\n            id: \"types-filter-types-int96filter\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"eq\": \"999999999999\",\n  \"gte\": \"999999999999\",\n  \"lte\": \"999999999999\",\n  \"ne\": \"999999999999\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"eq  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int96\",\n                      children: \"Int96\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Must exactly equal this Int96 value \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"gte  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int96\",\n                      children: \"Int96\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Must be greater than or equal to this Int96 value \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"lte  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int96\",\n                      children: \"Int96\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Must be less than or equal to this Int96 value \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ne  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int96\",\n                      children: \"Int96\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Must not equal this Int96 value \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerAccountFilter\",\n            id: \"types-filter-types-ledgeraccountfilter\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"equalTo\": LedgerAccountMatchInput,\n  \"in\": [LedgerAccountMatchInput]\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"equalTo  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-ledgeraccountmatchinput\",\n                      children: \"LedgerAccountMatchInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Result must match the specified Ledger Account \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"in  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-ledgeraccountmatchinput\",\n                      children: \"[LedgerAccountMatchInput!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Results can match any of specified Ledger Accounts \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerAccountTypeFilter\",\n            id: \"types-filter-types-ledgeraccounttypefilter\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"equalTo\": \"asset\", \"in\": [\"asset\"]}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"equalTo  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-ledgeraccounttypes\",\n                      children: \"LedgerAccountTypes\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Results must be of the specified Ledger Account type \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"in  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-ledgeraccounttypes\",\n                      children: \"[LedgerAccountTypes!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Results can have any of the specified Ledger Account types \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerAccountsFilterSet\",\n            id: \"types-filter-types-ledgeraccountsfilterset\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"hasParentLedgerAccount\": true,\n  \"isLinkedAccount\": true,\n  \"ledgerAccount\": LedgerAccountFilter,\n  \"linkedAccount\": ExternalAccountFilter,\n  \"parentLedgerAccount\": LedgerAccountFilter,\n  \"path\": StringMatchFilter,\n  \"type\": LedgerAccountTypeFilter\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"hasParentLedgerAccount  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-boolean\",\n                      children: \"Boolean\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Use this to filter Ledger Accounts by their parent status \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"isLinkedAccount  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-boolean\",\n                      children: \"Boolean\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Use this to filter Ledger Accounts by their linked status \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledgerAccount  -  \", _jsx(_components.a, {\n                      href: \"#types-filter-types-ledgeraccountfilter\",\n                      children: \"LedgerAccountFilter\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Use this to filter Ledger Accounts by their ID or path \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"linkedAccount  -  \", _jsx(_components.a, {\n                      href: \"#types-filter-types-externalaccountfilter\",\n                      children: \"ExternalAccountFilter\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Use this to filter Ledger Accounts by their external linked account ID \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"parentLedgerAccount  -  \", _jsx(_components.a, {\n                      href: \"#types-filter-types-ledgeraccountfilter\",\n                      children: \"LedgerAccountFilter\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Use this to filter Ledger Accounts by their parent account IDs \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"path  -  \", _jsx(_components.a, {\n                      href: \"#types-filter-types-stringmatchfilter\",\n                      children: \"StringMatchFilter\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"A filter that must match the account path. Wildcards ('  \", _jsx(_components.em, {\n                      children: \"') may be used only for template variables, and will only match a single variable each. For example: 'assets-root/accounts-receivable/merchant:\"\n                    }), \"  ' would match: 'assets-root/accounts-receivable/merchant:1' and 'assets-root/accounts-receivable/merchant:1/child'. Wildcards may not be used outside of template variables. For example, passing in 'assets-root/*' as a filter is invalid and would raise a GraphQL error. \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"type  -  \", _jsx(_components.a, {\n                      href: \"#types-filter-types-ledgeraccounttypefilter\",\n                      children: \"LedgerAccountTypeFilter\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Use this to filter Ledger Accounts by their type \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerEntriesFilterSet\",\n            id: \"types-filter-types-ledgerentriesfilterset\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"date\": DateFilter,\n  \"ledgerEntry\": LedgerEntryFilter,\n  \"posted\": DateTimeFilter,\n  \"tag\": TagFilter,\n  \"type\": StringFilter\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"date  -  \", _jsx(_components.a, {\n                      href: \"#types-filter-types-datefilter\",\n                      children: \"DateFilter\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledgerEntry  -  \", _jsx(_components.a, {\n                      href: \"#types-filter-types-ledgerentryfilter\",\n                      children: \"LedgerEntryFilter\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Use to filter Ledger Entries by their IDs or IKs. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"posted  -  \", _jsx(_components.a, {\n                      href: \"#types-filter-types-datetimefilter\",\n                      children: \"DateTimeFilter\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"tag  -  \", _jsx(_components.a, {\n                      href: \"#types-filter-types-tagfilter\",\n                      children: \"TagFilter\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Use this to filter Ledger Entries by tags. The response will include entries that contain tags matching the filter. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"type  -  \", _jsx(_components.a, {\n                      href: \"#types-filter-types-stringfilter\",\n                      children: \"StringFilter\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Use this to filter Ledger Entries by type. Ledger Entry types are defined in Schemas. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerEntryFilter\",\n            id: \"types-filter-types-ledgerentryfilter\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"equalTo\": LedgerEntryMatchInput,\n  \"in\": [LedgerEntryMatchInput]\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"equalTo  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-ledgerentrymatchinput\",\n                      children: \"LedgerEntryMatchInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Result must be the specified Ledger Entry. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"in  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-ledgerentrymatchinput\",\n                      children: \"[LedgerEntryMatchInput!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Result can be any of the specified Ledger Entries. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerEntryGroupBalanceFilterSet\",\n            id: \"types-filter-types-ledgerentrygroupbalancefilterset\",\n            children: [_jsx(_components.p, {\n              children: \"Optional filters for querying balances on a Ledger Entry Group.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"account\": GroupBalanceAccountFilter,\n  \"currency\": CurrencyFilter,\n  \"ownBalance\": Int96Filter\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"account  -  \", _jsx(_components.a, {\n                      href: \"#types-filter-types-groupbalanceaccountfilter\",\n                      children: \"GroupBalanceAccountFilter\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Filter to a subset of accounts \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currency  -  \", _jsx(_components.a, {\n                      href: \"#types-filter-types-currencyfilter\",\n                      children: \"CurrencyFilter\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Filter to one or more currencies \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ownBalance  -  \", _jsx(_components.a, {\n                      href: \"#types-filter-types-int96filter\",\n                      children: \"Int96Filter\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Filter to only balances in a certain range \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerEntryGroupsFilterSet\",\n            id: \"types-filter-types-ledgerentrygroupsfilterset\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"created\": DateTimeFilter,\n  \"key\": StringFilter\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"created  -  \", _jsx(_components.a, {\n                      href: \"#types-filter-types-datetimefilter\",\n                      children: \"DateTimeFilter\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Use to filter ledger groups by their created timestamp \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"key  -  \", _jsx(_components.a, {\n                      href: \"#types-filter-types-stringfilter\",\n                      children: \"StringFilter\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Use to filter ledger groups by their type \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerLinesFilterSet\",\n            id: \"types-filter-types-ledgerlinesfilterset\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"date\": DateFilter,\n  \"key\": StringFilter,\n  \"posted\": DateTimeFilter,\n  \"type\": TxTypeFilter\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"date  -  \", _jsx(_components.a, {\n                      href: \"#types-filter-types-datefilter\",\n                      children: \"DateFilter\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"key  -  \", _jsx(_components.a, {\n                      href: \"#types-filter-types-stringfilter\",\n                      children: \"StringFilter\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Use this to filter Ledger Lines by key. Ledger Line keys are defined in Schemas. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"posted  -  \", _jsx(_components.a, {\n                      href: \"#types-filter-types-datetimefilter\",\n                      children: \"DateTimeFilter\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"type  -  \", _jsx(_components.a, {\n                      href: \"#types-filter-types-txtypefilter\",\n                      children: \"TxTypeFilter\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerTypeFilter\",\n            id: \"types-filter-types-ledgertypefilter\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"equalTo\": \"double\", \"in\": [\"double\"]}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"equalTo  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-ledgertypes\",\n                      children: \"LedgerTypes\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"in  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-ledgertypes\",\n                      children: \"[LedgerTypes!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgersFilterSet\",\n            id: \"types-filter-types-ledgersfilterset\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"hasSchema\": true, \"type\": LedgerTypeFilter}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"hasSchema  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-boolean\",\n                      children: \"Boolean\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"type  -  \", _jsx(_components.a, {\n                      href: \"#types-filter-types-ledgertypefilter\",\n                      children: \"LedgerTypeFilter\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"StringFilter\",\n            id: \"types-filter-types-stringfilter\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"equalTo\": \"abc123\", \"in\": [\"abc123\"]}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"equalTo  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"in  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"[String!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"StringMatchFilter\",\n            id: \"types-filter-types-stringmatchfilter\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"equalTo\": \"abc123\", \"in\": [\"abc123\"], \"matches\": \"abc123\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"equalTo  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Must exactly equal the provided value \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"in  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"[String!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Must exactly equal one of the provided values \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"matches  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Must match the provided pattern. Wildcards (\\\"*\\\") will match any substring \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"TagFilter\",\n            id: \"types-filter-types-tagfilter\",\n            children: [_jsx(_components.p, {\n              children: \"Filters a result set based on the tags it contains.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"equalTo\": TagMatchInput,\n  \"in\": [TagMatchInput]\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"equalTo  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-tagmatchinput\",\n                      children: \"TagMatchInput\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"in  -  \", _jsx(_components.a, {\n                      href: \"#types-matchinput-types-tagmatchinput\",\n                      children: \"[TagMatchInput!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"TxTypeFilter\",\n            id: \"types-filter-types-txtypefilter\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"equalTo\": \"credit\", \"in\": [\"credit\"]}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Input Field\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"equalTo  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-txtype\",\n                      children: \"TxType\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"in  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-txtype\",\n                      children: \"[TxType!]\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          })]\n        }), _jsxs(Page, {\n          id: \"types-utility-types\",\n          title: \"Utility Types\",\n          label: \"\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsx(\"br\", {}), _jsxs(Subpage, {\n            title: \"CurrencyAmount\",\n            id: \"types-utility-types-currencyamount\",\n            children: [_jsx(_components.p, {\n              children: \"A single amount accompanied by its currency\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"amount\": \"999999999999\", \"currency\": Currency}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"amount  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int96\",\n                      children: \"Int96!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Numerical integer value, serialized as a string \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currency  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-currency\",\n                      children: \"Currency!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The currency this amount is in \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"CustomLink\",\n            id: \"types-utility-types-customlink\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"created\": \"abc123\",\n  \"dashboardUrl\": \"abc123\",\n  \"externalAccounts\": ExternalAccountsConnection,\n  \"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"name\": \"abc123\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"created  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ISO-8601 timestamp when the Link was created. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"dashboardUrl  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"URL to the \", _jsx(Fragment, {}), \"  Dashboard for this Link. \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"externalAccounts  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-externalaccountsconnection\",\n                      children: \"ExternalAccountsConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"A list of External Accounts associated with this Link. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"id  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\" \", _jsx(Fragment, {}), \" ID of the Custom Link. \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"name  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"Name of the Link as it appears in the \", _jsx(Fragment, {}), \"  Dashboard. \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"IncreaseEnv\",\n            id: \"types-utility-types-increaseenv\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"production\"\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Enum Value\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"production \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"sandbox \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"IncreaseLink\",\n            id: \"types-utility-types-increaselink\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"created\": \"abc123\",\n  \"dashboardUrl\": \"abc123\",\n  \"externalAccounts\": ExternalAccountsConnection,\n  \"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"increaseEnv\": \"production\",\n  \"name\": \"abc123\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"created  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ISO-8601 timestamp when the Link was created. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"dashboardUrl  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"URL to the \", _jsx(Fragment, {}), \"  Dashboard for this Link. \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"externalAccounts  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-externalaccountsconnection\",\n                      children: \"ExternalAccountsConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"A list of External Accounts associated with this Link. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"id  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\" \", _jsx(Fragment, {}), \" ID of the Increase Link. \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"increaseEnv  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-increaseenv\",\n                      children: \"IncreaseEnv!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The environment of the Increase Link, either sandbox or production. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"name  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Name of the Link as it appears in the Dashboard. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"Int96Condition\",\n            id: \"types-utility-types-int96condition\",\n            children: [_jsx(_components.p, {\n              children: \"A condition that must be met on an Int96 field.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"eq\": \"999999999999\", \"gte\": \"999999999999\", \"lte\": \"999999999999\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"eq  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int96\",\n                      children: \"Int96\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Amount must exactly match this value. You may not specify this alongside  gte  or  lte  . \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"gte  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int96\",\n                      children: \"Int96\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Amount must be greater than or equal to this value. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"lte  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int96\",\n                      children: \"Int96\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Amount must be less than or equal to this value. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerAccountCondition\",\n            id: \"types-utility-types-ledgeraccountcondition\",\n            children: [_jsx(_components.p, {\n              children: \"A set of conditions that a Ledger Account must meet for an operation to succeed.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"ownBalance\": Int96Condition}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsx(\"tbody\", {\n                children: _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ownBalance  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-int96condition\",\n                      children: \"Int96Condition\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"A condition that the  ownBalance  field must satisfy. Note that this condition always applies to the latest balance, not to balances at a specific date or time. See  \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#read-balances\",\n                      children: \"Read balances\"\n                    }), \"  for more on the different types of Ledger Account balances. \"]\n                  })]\n                })\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerAccountConsistencyConfig\",\n            id: \"types-utility-types-ledgeraccountconsistencyconfig\",\n            children: [_jsxs(_components.p, {\n              children: [\"The consistency configuration of a Ledger Account's balance updates. See \", _jsx(_components.a, {\n                href: \"https://fragment.dev/docs#configure-consistency\",\n                children: \"Configure consistency\"\n              }), \".\"]\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"lines\": \"eventual\", \"ownBalanceUpdates\": \"eventual\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"lines  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-ledgerlinesconsistencymode\",\n                      children: \"LedgerLinesConsistencyMode!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ownBalanceUpdates  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-balanceupdateconsistencymode\",\n                      children: \"BalanceUpdateConsistencyMode!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"If set to strong, then a Ledger Account's ownBalance updates will be strongly consistent with the API response. This Ledger Account's balance will be updated and available for strongly consistent reads once you receive an API response.  Otherwise if not set or set to eventual, ownBalance updates are applied asynchronously and may not be immediately reflected in queries.  See \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#configure-consistency\",\n                      children: \"Configure consistency\"\n                    }), \". \"]\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerAccountTypes\",\n            id: \"types-utility-types-ledgeraccounttypes\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"asset\"\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Enum Value\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"asset \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"expense \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"income \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"liability \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerEntryCondition\",\n            id: \"types-utility-types-ledgerentrycondition\",\n            children: [_jsx(_components.p, {\n              children: \"A set of pre-conditions and post-conditions that a Ledger Account must have satisfied. Each LedgerEntryCondition has at least one of precondition or postcondition.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"account\": LedgerAccount,\n  \"currency\": Currency,\n  \"postcondition\": LedgerAccountCondition,\n  \"precondition\": LedgerAccountCondition\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"account  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledgeraccount\",\n                      children: \"LedgerAccount!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Ledger Account that must satisfied the provided conditions. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currency  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-currency\",\n                      children: \"Currency!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The currency of the balance associated with this  LedgerEntryCondition  . \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"postcondition  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-ledgeraccountcondition\",\n                      children: \"LedgerAccountCondition\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The conditions that must be satisfied after the operation. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"precondition  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-ledgeraccountcondition\",\n                      children: \"LedgerAccountCondition\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The conditions that must be satisfied prior to the operation. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerEntryGroup\",\n            id: \"types-utility-types-ledgerentrygroup\",\n            children: [_jsx(_components.p, {\n              children: \"A group of Ledger Entries\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"balances\": LedgerEntryGroupBalanceConnection,\n  \"created\": \"2007-12-03T10:15:30Z\",\n  \"dashboardUrl\": \"abc123\",\n  \"key\": \"some-safe-string-ik\",\n  \"ledgerEntries\": LedgerEntriesConnection,\n  \"value\": \"some-safe-string-ik\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"balances  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-ledgerentrygroupbalanceconnection\",\n                      children: \"LedgerEntryGroupBalanceConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"after - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"before - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"filter - \", _jsx(_components.a, {\n                      href: \"#types-filter-types-ledgerentrygroupbalancefilterset\",\n                      children: \"LedgerEntryGroupBalanceFilterSet\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"first - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of group balances to return per page, when paginating forwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"last - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of group balances to return per page, when paginating backwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"created  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-datetime\",\n                      children: \"DateTime\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ISO-8601 timestamp this LedgerEntryGroup was created in \", _jsx(Fragment, {}), \" . \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"dashboardUrl  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"URL to the \", _jsx(Fragment, {}), \"  Dashboard for this Ledger Entry Group. \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"key  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The key of this Ledger Entry Group. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ledgerEntries  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-ledgerentriesconnection\",\n                      children: \"LedgerEntriesConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"after - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating forwards. Send endCursor from a response to get its next page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"before - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"Where to start paginating from, when paginating backwards. Send startCursor from a response to get the previous page. Learn more about \", _jsx(_components.a, {\n                      href: \"https://fragment.dev/docs#query-data-basics-pagination\",\n                      children: \"pagination\"\n                    }), \".\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"filter - \", _jsx(_components.a, {\n                      href: \"#types-filter-types-ledgerentriesfilterset\",\n                      children: \"LedgerEntriesFilterSet\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"first - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of Ledger Entries to return per page, when paginating forwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"last - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The number of Ledger Entries to return per page, when paginating backwards. Defaults to 20, maximum is 200.\", _jsx(\"br\", {})]\n                  })\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"value  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The value associated with Ledger Entry Group. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerEntryGroupBalance\",\n            id: \"types-utility-types-ledgerentrygroupbalance\",\n            children: [_jsx(_components.p, {\n              children: \"Represents the total effect of a Ledger Entry Group on a Ledger Account balance for a single currency.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"account\": LedgerAccount,\n  \"currency\": Currency,\n  \"ownBalance\": \"999999999999\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"account  -  \", _jsx(_components.a, {\n                      href: \"#types-core-types-ledgeraccount\",\n                      children: \"LedgerAccount!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The Ledger Account whose balance is affected. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"currency  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-currency\",\n                      children: \"Currency!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The currency of the affected balance. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"ownBalance  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int96\",\n                      children: \"Int96!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The total balance change for this Ledger Account and currency. \"\n                  })]\n                }), \"\\n\", _jsx(TableRow, {\n                  children: _jsxs(TableData, {\n                    colSpan: 2,\n                    children: [\"Arguments\", _jsx(\"br\", {}), _jsx(\"br\", {}), \"consistencyMode - \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-readbalanceconsistencymode\",\n                      children: \"ReadBalanceConsistencyMode\"\n                    }), _jsx(\"br\", {}), _jsx(\"br\", {}), \"The consistency mode to use when fetching the balance. Use 'use_account' to match the configured consistency mode of the account.\", _jsx(\"br\", {})]\n                  })\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"LedgerEntryTag\",\n            id: \"types-utility-types-ledgerentrytag\",\n            children: [_jsx(_components.p, {\n              children: \"A tag attached to a Ledger Entry.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\"key\": \"some-safe-string-ik\", \"value\": \"some-safe-string-ik\"}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"key  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The key of this tag. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"value  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-safestring\",\n                      children: \"SafeString!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The value associated with this tag's key. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"SchemaVersion\",\n            id: \"types-utility-types-schemaversion\",\n            children: [_jsx(_components.p, {\n              children: \"An instance of a Schema stored in a Workspace. A new SchemaVersion is created each time a Schema is stored. It stores the Chart of Accounts and list of Ledger Entries as well as a history of its Ledger migrations.\"\n            }), _jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"created\": \"2007-12-03T10:15:30Z\",\n  \"json\": \"{\\\"key\\\":\\\"value\\\"}\",\n  \"migrations\": LedgerMigrationConnection,\n  \"version\": 2277\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"created  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-datetime\",\n                      children: \"DateTime!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"json  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-json\",\n                      children: \"JSON!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"migrations  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-ledgermigrationconnection\",\n                      children: \"LedgerMigrationConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"version  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-int\",\n                      children: \"Int!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The version of the schema. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"StripeEnv\",\n            id: \"types-utility-types-stripeenv\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"livemode\"\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Enum Value\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"livemode \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"testmode \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"StripeLink\",\n            id: \"types-utility-types-stripelink\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"created\": \"abc123\",\n  \"dashboardUrl\": \"abc123\",\n  \"externalAccounts\": ExternalAccountsConnection,\n  \"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"name\": \"abc123\",\n  \"stripeEnv\": \"livemode\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"created  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ISO-8601 timestamp when the Link was created. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"dashboardUrl  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"URL to the \", _jsx(Fragment, {}), \"  Dashboard for this Link. \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"externalAccounts  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-externalaccountsconnection\",\n                      children: \"ExternalAccountsConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"A list of External Accounts associated with this Link. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"id  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\" \", _jsx(Fragment, {}), \" ID of the Custom Link. \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"name  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"Name of the Link as it appears in the \", _jsx(Fragment, {}), \"  Dashboard. \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"stripeEnv  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-stripeenv\",\n                      children: \"StripeEnv!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The environment of the Stripe Link, either testmode or livemode. \"\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"UnitEnv\",\n            id: \"types-utility-types-unitenv\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `\"production\"\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Enum Value\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"production \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsx(TableData, {\n                    colSpan: 1,\n                    children: \"sandbox \"\n                  }), _jsx(TableData, {\n                    colSpan: 1\n                  })]\n                })]\n              })]\n            }), _jsx(\"br\", {})]\n          }), _jsxs(Subpage, {\n            title: \"UnitLink\",\n            id: \"types-utility-types-unitlink\",\n            children: [_jsx(\"br\", {}), _jsx(CodeBlock, {\n              title: \"Example\",\n              language: \"json\",\n              children: `{\n  \"created\": \"abc123\",\n  \"dashboardUrl\": \"abc123\",\n  \"externalAccounts\": ExternalAccountsConnection,\n  \"id\": \"3116551f-5efc-4c9e-84ac-5a36a51b09c1\",\n  \"name\": \"abc123\",\n  \"unitEnv\": \"production\"\n}\n`\n            }), _jsx(\"br\", {}), _jsxs(Table, {\n              children: [_jsx(\"thead\", {\n                children: _jsxs(\"tr\", {\n                  children: [_jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Field Name\"\n                  }), \"\\n\", _jsx(TableHeader, {\n                    align: \"left\",\n                    children: \"Description\"\n                  })]\n                })\n              }), _jsxs(\"tbody\", {\n                children: [_jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"created  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"ISO-8601 timestamp when the Link was created. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"dashboardUrl  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"URL to the \", _jsx(Fragment, {}), \"  Dashboard for this Link. \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"externalAccounts  -  \", _jsx(_components.a, {\n                      href: \"#types-connection-types-externalaccountsconnection\",\n                      children: \"ExternalAccountsConnection!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"A list of External Accounts associated with this Link. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"id  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-id\",\n                      children: \"ID!\"\n                    }), \" \"]\n                  }), _jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\" \", _jsx(Fragment, {}), \" ID of the Unit Link. \"]\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"name  -  \", _jsx(_components.a, {\n                      href: \"#types-scalars-and-enums-string\",\n                      children: \"String!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"Name of the Link as it appears in the Dashboard. \"\n                  })]\n                }), \"\\n\", _jsxs(TableRow, {\n                  children: [_jsxs(TableData, {\n                    colSpan: 1,\n                    children: [\"unitEnv  -  \", _jsx(_components.a, {\n                      href: \"#types-utility-types-unitenv\",\n                      children: \"UnitEnv!\"\n                    }), \" \"]\n                  }), _jsx(TableData, {\n                    colSpan: 1,\n                    children: \"The environment of the Unit Link, either sandbox or production. \"\n                  })]\n                })]\n              })]\n            })]\n          })]\n        })]\n      }), \"\\n\", _jsxs(TopicContainer, {\n        label: \"E\",\n        title: \"CLI Commands\",\n        id: \"cli-commands\",\n        children: [_jsx(_components.p, {\n          children: \"Use the CLI to:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Generate GraphQL queries specific to your Schema\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Embed the CLI within your CI/CD process\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Quickly store a Schema, create a Ledger, and start posting Ledger Entries\"\n          }), \"\\n\"]\n        }), _jsxs(_components.p, {\n          children: [\"To install using \", _jsx(_components.a, {\n            href: \"https://brew.sh/\",\n            children: \"Homebrew\"\n          }), \", run:\"]\n        }), _jsx(CodeBlock, {\n          language: \"plaintext\",\n          children: `brew tap fragment-dev/tap \u0026\u0026\\\\\n  brew install fragment-dev/tap/fragment-cli`\n        }), _jsxs(Page, {\n          id: \"cli-commands-login\",\n          title: \"login\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"Authenticate with \", _jsx(InlineLogo, {}), \".\"]\n          }), _jsxs(_components.p, {\n            children: [\"Authentication is scoped to one \", _jsx(InlineLogo, {}), \" Workspace. If you want to authenticate with another Workspace, you must create another API Client and follow the authentication flow again.\"]\n          }), _jsxs(_components.p, {\n            children: [\"Credentials will be written to \", _jsx(_components.code, {\n              children: \"~/.fragment/auth.json\"\n            }), \".\"]\n          }), _jsx(_components.h6, {\n            children: \"Usage\"\n          }), _jsx(CodeBlock, {\n            language: \"plaintext\",\n            children: `fragment login \\\\\n  [--api-url=\u003capi-url\u003e] \\\\\n  [--client-id=\u003cclient-id\u003e] \\\\\n  [--client-secret=\u003cclient-secret\u003e] \\\\\n  [--oauth-scope=\u003coauth-scope\u003e] \\\\\n  [--oauth-url=\u003coauth-url\u003e] \\\\\n  [--test]\n`\n          }), _jsxs(_components.p, {\n            children: [\"Optionally, run \", _jsx(_components.code, {\n              children: \"fragment login\"\n            }), \" and the CLI will prompt you for the credentials.\"]\n          }), _jsx(_components.h6, {\n            children: \"Flags\"\n          }), _jsxs(_components.table, {\n            children: [_jsx(_components.thead, {\n              children: _jsxs(_components.tr, {\n                children: [_jsx(_components.th, {}), _jsx(_components.th, {})]\n              })\n            }), _jsxs(_components.tbody, {\n              children: [_jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"--api-url=\u003capi-url\u003e\"\n                }), _jsxs(_components.td, {\n                  children: [\"The API URL for your \", _jsx(InlineLogo, {}), \" Workspace\"]\n                })]\n              }), _jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"--client-id=\u003cclient-id\u003e\"\n                }), _jsx(_components.td, {\n                  children: \"The API Client ID\"\n                })]\n              }), _jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"--client-secret=\u003cclient-secret\u003e\"\n                }), _jsx(_components.td, {\n                  children: \"The API Client Secret\"\n                })]\n              }), _jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"--oauth-scope=\u003coauth-scope\u003e\"\n                }), _jsx(_components.td, {\n                  children: \"The OAuth Scope for your auth token\"\n                })]\n              }), _jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"--oauth-url=\u003coauth-url\u003e\"\n                }), _jsx(_components.td, {\n                  children: \"The OAuth URL from which to retrieve the auth token\"\n                })]\n              }), _jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"--test\"\n                }), _jsx(_components.td, {\n                  children: \"If set, tests stored credentials\"\n                })]\n              })]\n            })]\n          }), _jsx(_components.h6, {\n            children: \"Example\"\n          }), _jsx(CodeBlock, {\n            language: \"bash\",\n            children: `fragment login \\\\\n  --api-url=\"\\\u003capi-url\\\u003e\" \\\\\n  --client-id=\"\\\u003cclient-id\\\u003e\" \\\\\n  --client-secret=\"\\\u003cclient-secret\\\u003e\" \\\\\n  --oauth-scope=\"\\\u003coauth-scope\\\u003e\" \\\\\n  --oauth-url=\"\\\u003coauth-url\\\u003e\"`\n          }), _jsx(_components.p, {\n            children: \"To test the stored credentials, run:\"\n          }), _jsx(CodeBlock, {\n            language: \"bash\",\n            children: `fragment login --test`\n          })]\n        }), _jsxs(Page, {\n          id: \"cli-commands-store-schema\",\n          title: \"store-schema\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"Store a Schema within your \", _jsx(InlineLogo, {}), \" workspace.\"]\n          }), _jsx(_components.h6, {\n            children: \"Usage\"\n          }), _jsx(CodeBlock, {\n            language: \"plaintext\",\n            children: `fragment store-schema [-p \u003cvalue\u003e] [-v]`\n          }), _jsx(_components.h6, {\n            children: \"Flags\"\n          }), _jsxs(_components.table, {\n            children: [_jsx(_components.thead, {\n              children: _jsxs(_components.tr, {\n                children: [_jsx(_components.th, {}), _jsx(_components.th, {})]\n              })\n            }), _jsxs(_components.tbody, {\n              children: [_jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"-p, --path=\u003cvalue\u003e\"\n                }), _jsx(_components.td, {\n                  children: \"[default: fragment.jsonc] Path for schema JSON file.\"\n                })]\n              }), _jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"-v, --verbose\"\n                }), _jsx(_components.td, {\n                  children: \"Enable verbose mode (prints GraphQL commands)\"\n                })]\n              })]\n            })]\n          }), _jsx(_components.h6, {\n            children: \"Example\"\n          }), _jsx(CodeBlock, {\n            language: \"bash\",\n            children: `fragment store-schema \\\\\n  -p your-fragment-schema.jsonc`\n          })]\n        }), _jsxs(Page, {\n          id: \"cli-commands-create-ledger\",\n          title: \"create-ledger\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"Create a Ledger within your \", _jsx(InlineLogo, {}), \" workspace.\"]\n          }), _jsx(_components.h6, {\n            children: \"Usage\"\n          }), _jsx(CodeBlock, {\n            language: \"plaintext\",\n            children: `fragment create-ledger \\\\\n  --ik=\u003cledger-ik\u003e \\\\\n  --name=\u003cledger-name\u003e \\\\\n  --schema=\u003cschema-file\u003e`\n          }), _jsx(_components.h6, {\n            children: \"Flags\"\n          }), _jsxs(_components.table, {\n            children: [_jsx(_components.thead, {\n              children: _jsxs(_components.tr, {\n                children: [_jsx(_components.th, {}), _jsx(_components.th, {})]\n              })\n            }), _jsxs(_components.tbody, {\n              children: [_jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"-i, --ik=\u003cledger-ik\u003e\"\n                }), _jsxs(_components.td, {\n                  children: [\"Idempotency key for \", _jsx(_components.code, {\n                    children: \"createLedger\"\n                  })]\n                })]\n              }), _jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"-n, --name=\u003cledger-name\u003e\"\n                }), _jsx(_components.td, {\n                  children: \"Ledger name\"\n                })]\n              }), _jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"-s, --schema=\u003cschema-key\u003e\"\n                }), _jsx(_components.td, {\n                  children: \"[default: fragment.jsonc] Path to the schema JSON file.\"\n                })]\n              }), _jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"-v, --verbose\"\n                }), _jsx(_components.td, {\n                  children: \"Enable verbose mode (prints GraphQL commands)\"\n                })]\n              })]\n            })]\n          }), _jsx(_components.h6, {\n            children: \"Example\"\n          }), _jsx(CodeBlock, {\n            language: \"bash\",\n            children: `fragment create-ledger \\\\\n  --ik=test-ledger \\\\\n  --name=\"Test Ledger\" \\\\\n  --schema=your-fragment-schema.jsonc`\n          })]\n        }), _jsxs(Page, {\n          id: \"cli-commands-get-schema\",\n          title: \"get-schema\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Retrieve a Schema from the API for local use.\"\n          }), _jsx(_components.h6, {\n            children: \"Usage\"\n          }), _jsx(CodeBlock, {\n            language: \"plaintext\",\n            children: `fragment get-schema \\\\\n  [--key=\u003cschema-key\u003e] \\\\\n  [--version=\u003cversion\u003e] \\\\\n  [--output=\u003coutput-file\u003e] \\\\\n  [-v]`\n          }), _jsx(_components.h6, {\n            children: \"Flags\"\n          }), _jsxs(_components.table, {\n            children: [_jsx(_components.thead, {\n              children: _jsxs(_components.tr, {\n                children: [_jsx(_components.th, {}), _jsx(_components.th, {})]\n              })\n            }), _jsxs(_components.tbody, {\n              children: [_jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"-k, --key=\u003cschema-key\u003e\"\n                }), _jsx(_components.td, {\n                  children: \"(Optional) Key of the Schema (e.g. template-schema). If not provided, you'll be prompted to choose a Schema.\"\n                })]\n              }), _jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"-o, --output=\u003coutput-file\u003e\"\n                }), _jsx(_components.td, {\n                  children: \"Path to the JSONC schema file. Defaults to the schema key in the current directory.\"\n                })]\n              }), _jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"--version=\u003cversion\u003e\"\n                }), _jsx(_components.td, {\n                  children: \"Schema version to retrieve. Defaults to the latest version.\"\n                })]\n              }), _jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"-v, --verbose\"\n                }), _jsx(_components.td, {\n                  children: \"Enable verbose mode (prints GraphQL commands)\"\n                })]\n              })]\n            })]\n          }), _jsx(_components.h6, {\n            children: \"Example\"\n          }), _jsx(_components.p, {\n            children: \"To choose the Schema from a list, run:\"\n          }), _jsx(CodeBlock, {\n            language: \"bash\",\n            children: `fragment get-schema`\n          }), _jsx(_components.p, {\n            children: \"If providing the Schema key, run:\"\n          }), _jsx(CodeBlock, {\n            language: \"bash\",\n            title: \"Providing a Schema key\",\n            children: `fragment get-schema \\\\\n  --key=test-schema`\n          })]\n        }), _jsxs(Page, {\n          id: \"cli-commands-add-ledger-entry\",\n          title: \"add-ledger-entry\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"Post a Ledger Entry to your \", _jsx(InlineLogo, {}), \" Ledger.\"]\n          }), _jsx(_components.h6, {\n            children: \"Usage\"\n          }), _jsx(CodeBlock, {\n            language: \"plaintext\",\n            children: `fragment add-ledger-entry \\\\\n  --ik=\u003cadd-ledger-entry-ik\u003e \\\\\n  --ledger.ik=\u003cledger-ik\u003e \\\\\n  --type=\u003centry-type\u003e \\\\\n  [--param=\u003cparameter-value\u003e] \\\\\n  [-v]`\n          }), _jsx(_components.h6, {\n            children: \"Flags\"\n          }), _jsxs(_components.table, {\n            children: [_jsx(_components.thead, {\n              children: _jsxs(_components.tr, {\n                children: [_jsx(_components.th, {}), _jsx(_components.th, {})]\n              })\n            }), _jsxs(_components.tbody, {\n              children: [_jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"-i, --ik=\u003cadd-ledger-entry-ik\u003e\"\n                }), _jsxs(_components.td, {\n                  children: [\"Idempotency key for \", _jsx(_components.code, {\n                    children: \"addLedgerEntry\"\n                  })]\n                })]\n              }), _jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"-l, --ledger.ik=\u003cledger-ik\u003e\"\n                }), _jsx(_components.td, {\n                  children: \"Idempotency Key of the Ledger to post the Ledger Entry to\"\n                })]\n              }), _jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"-t, --type=\u003centry-type\u003e\"\n                }), _jsxs(_components.td, {\n                  children: [\"The \", _jsx(_components.code, {\n                    children: \"type\"\n                  }), \" of Ledger Entry you want to post\"]\n                })]\n              }), _jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"-p, --param=\u003cvalue\u003e...\"\n                }), _jsxs(_components.td, {\n                  children: [\"The parameters for your Ledger Entry. You may specify multiple parameters by repeating the flag. \", _jsx(\"br\", {}), \" (ex: --param amount=100 --param currency=USD)\"]\n                })]\n              }), _jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"-v, --verbose\"\n                }), _jsx(_components.td, {\n                  children: \"Enable verbose mode (prints GraphQL commands)\"\n                })]\n              })]\n            })]\n          }), _jsx(_components.h6, {\n            children: \"Example\"\n          }), _jsx(CodeBlock, {\n            language: \"bash\",\n            children: `fragment add-ledger-entry \\\\\n  --ik=your-entry-ik \\\\\n  --ledger.ik=your-ledger-ik \\\\\n  --type=user_funds_account \\\\\n  --param='user_id=\"testing-user\"' \\\\\n  --param='funding_amount=\"200\"'`\n          })]\n        }), _jsxs(Page, {\n          id: \"cli-commands-create-custom-link\",\n          title: \"create-custom-link\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Create a Custom Link.\"\n          }), _jsxs(_components.p, {\n            children: [\"Read the \", _jsx(_components.a, {\n              href: \"https://fragment.dev/docs#reconcile-transactions-link-any-system\",\n              children: \"Link any system\"\n            }), \" section to learn more about Custom Links.\"]\n          }), _jsx(_components.h6, {\n            children: \"Usage\"\n          }), _jsx(CodeBlock, {\n            language: \"plaintext\",\n            children: `fragment create-custom-link \\\\\n  --ik=\u003ccustom-link-ik\u003e \\\\\n  --name=\u003ccustom-link-name\u003e`\n          }), _jsx(_components.h6, {\n            children: \"Flags\"\n          }), _jsxs(_components.table, {\n            children: [_jsx(_components.thead, {\n              children: _jsxs(_components.tr, {\n                children: [_jsx(_components.th, {}), _jsx(_components.th, {})]\n              })\n            }), _jsxs(_components.tbody, {\n              children: [_jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"-i, --ik=\u003ccustom-link-ik\u003e\"\n                }), _jsx(_components.td, {\n                  children: \"The Idempotency Key for Custom Link creation\"\n                })]\n              }), _jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"--name=\u003ccustom-link-name\u003e\"\n                }), _jsx(_components.td, {\n                  children: \"The name for the Custom Link\"\n                })]\n              })]\n            })]\n          }), _jsx(_components.h6, {\n            children: \"Examples\"\n          }), _jsx(CodeBlock, {\n            language: \"bash\",\n            children: `fragment create-custom-link \\\\\n  --ik=\"example-custom-link\" \\\\\n  --name=\"Example Custom Link\"`\n          })]\n        }), _jsxs(Page, {\n          id: \"cli-commands-gen-graphql\",\n          title: \"gen-graphql\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Generate GraphQL queries to post Ledger Entries for a given Schema.\"\n          }), _jsxs(_components.p, {\n            children: [\"The generated GraphQL queries can be used to generate SDK code specific to your Schema. Read \", _jsx(_components.a, {\n              href: \"/docs#install-the-sdk\",\n              children: \"Install the SDK\"\n            }), \" to learn more.\"]\n          }), _jsx(_components.h6, {\n            children: \"Usage\"\n          }), _jsx(CodeBlock, {\n            language: \"plaintext\",\n            children: `fragment gen-graphql \\\\\n  --path=\u003cpath-to-schema.jsonc\u003e \\\\\n  --output=\u003coutput-filename.graphql\u003e`\n          }), _jsx(_components.h6, {\n            children: \"Flags\"\n          }), _jsxs(_components.table, {\n            children: [_jsx(_components.thead, {\n              children: _jsxs(_components.tr, {\n                children: [_jsx(_components.th, {}), _jsx(_components.th, {})]\n              })\n            }), _jsxs(_components.tbody, {\n              children: [_jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"-o, --output=\u003coutput-filename\u003e\"\n                }), _jsxs(_components.td, {\n                  children: [\"The path for the generated file. Must end with \", _jsx(_components.code, {\n                    children: \".graphql\"\n                  }), \" or \", _jsx(_components.code, {\n                    children: \".gql\"\n                  })]\n                })]\n              }), _jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"-p, --path=\u003cschema-file-path\u003e\"\n                }), _jsx(_components.td, {\n                  children: \"The path to your Schema file\"\n                })]\n              }), _jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"--output-file-per-query\"\n                }), _jsx(_components.td, {\n                  children: \"Output a folder of queries, instead of a single file\"\n                })]\n              }), _jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"--include-standard-queries\"\n                }), _jsxs(_components.td, {\n                  children: [\"Include the set of standard GraphQL queries in the output. This is required only if you are not using the \", _jsx(InlineLogo, {}), \" SDKs\"]\n                })]\n              })]\n            })]\n          }), _jsx(_components.h6, {\n            children: \"Example\"\n          }), _jsx(CodeBlock, {\n            language: \"bash\",\n            children: `fragment gen-graphql \\\\\n  --path=your-fragment-schema.jsonc \\\\\n  --output=queries.graphql`\n          }), _jsx(CodeBlock, {\n            language: \"bash\",\n            children: `fragment gen-graphql \\\\\n  --path=your-fragment-schema.jsonc \\\\\n  --output=generated/queries \\\\\n  --output-file-per-query`\n          })]\n        }), _jsxs(Page, {\n          id: \"cli-commands-update\",\n          title: \"update\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"Update the \", _jsx(InlineLogo, {}), \" CLI.\"]\n          }), _jsx(_components.h6, {\n            children: \"Usage\"\n          }), _jsx(CodeBlock, {\n            language: \"plaintext\",\n            children: `fragment update [-y] [--dry-run]`\n          }), _jsx(_components.h6, {\n            children: \"Flags\"\n          }), _jsxs(_components.table, {\n            children: [_jsx(_components.thead, {\n              children: _jsxs(_components.tr, {\n                children: [_jsx(_components.th, {}), _jsx(_components.th, {})]\n              })\n            }), _jsxs(_components.tbody, {\n              children: [_jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"-y, --yes\"\n                }), _jsx(_components.td, {\n                  children: \"Update without being prompted\"\n                })]\n              }), _jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"--dry-run\"\n                }), _jsx(_components.td, {\n                  children: \"Run the update process without updating the CLI\"\n                })]\n              })]\n            })]\n          }), _jsx(_components.h6, {\n            children: \"Example\"\n          }), _jsx(CodeBlock, {\n            language: \"bash\",\n            children: `fragment update -y`\n          })]\n        }), _jsxs(Page, {\n          id: \"cli-commands-token\",\n          title: \"token\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"Get a \", _jsx(InlineLogo, {}), \" Authentication Token.\"]\n          }), _jsx(_components.p, {\n            children: \"This will print your auth token to standard output (stdout).\"\n          }), _jsx(_components.h6, {\n            children: \"Usage\"\n          }), _jsx(CodeBlock, {\n            language: \"plaintext\",\n            children: `fragment token`\n          })]\n        }), _jsxs(Page, {\n          id: \"cli-commands-help\",\n          title: \"help\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Display help prompt for the CLI.\"\n          }), _jsx(_components.h6, {\n            children: \"Usage\"\n          }), _jsx(CodeBlock, {\n            language: \"plaintext\",\n            children: `fragment help [COMMANDS]`\n          }), _jsx(_components.h6, {\n            children: \"Flags\"\n          }), _jsxs(_components.table, {\n            children: [_jsx(_components.thead, {\n              children: _jsxs(_components.tr, {\n                children: [_jsx(_components.th, {}), _jsx(_components.th, {})]\n              })\n            }), _jsx(_components.tbody, {\n              children: _jsxs(_components.tr, {\n                children: [_jsx(_components.td, {\n                  children: \"COMMANDS...\"\n                }), _jsxs(_components.td, {\n                  children: [\"The Command (or Commands) to show help for. Ex: \", _jsx(_components.code, {\n                    children: \"store-schema\"\n                  })]\n                })]\n              })\n            })]\n          }), _jsx(_components.h6, {\n            children: \"Example\"\n          }), _jsx(CodeBlock, {\n            language: \"plaintext\",\n            children: `fragment help store-schema`\n          })]\n        }), _jsxs(Page, {\n          id: \"cli-commands-workspace\",\n          title: \"workspace\",\n          label: \"\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Get the details of the Workspace this CLI is authenticated to.\"\n          }), _jsx(_components.h6, {\n            children: \"Usage\"\n          }), _jsx(CodeBlock, {\n            language: \"plaintext\",\n            children: `fragment workspace`\n          })]\n        })]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}}},"__N_SSG":true},"page":"/api-reference","query":{},"buildId":"W2yOYhxwWru5tElmEw2mc","isFallback":false,"gsp":true,"scriptLoader":[]}</script></body></html>