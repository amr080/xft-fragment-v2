<!DOCTYPE html><html lang="en"><link rel="preload" as="font" href="/fonts/FragmentMono.otf" type="font/otf"/><head><meta charSet="utf-8"/><title>Fragment Documentation</title><link rel="canonical" href="https://fragment.dev/docs"/><meta name="viewport" content="width=device-width, initial-scale=1.0"/><meta name="description" content="Explore our documentation to learn about Fragment."/><link rel="icon" href="/favicon.ico"/><meta name="next-head-count" content="6"/><link data-next-font="" rel="preconnect" href="/" crossorigin="anonymous"/><script id="color-mode-script" data-nscript="beforeInteractive">
      (function() {
        // Also in ColorModeProvider.tsx
        const LOCAL_STORAGE_KEY = 'fragment-dev-color-mode';
        
        let stored = window.localStorage.getItem(LOCAL_STORAGE_KEY);
        if(!stored) {
          window.localStorage.setItem(LOCAL_STORAGE_KEY, 'system');
          stored = 'system';
        }

        const systemIsDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        const mode = (stored ==='dark' || stored ==='system' && systemIsDark) ? 'dark' : 'light';

        if (mode === 'dark') {
          document.documentElement.classList.add('dark');
        }
      })();
    </script><link rel="preload" href="/_next/static/css/a5efe40cc09b9bf5.css" as="style" crossorigin=""/><link rel="stylesheet" href="/_next/static/css/a5efe40cc09b9bf5.css" crossorigin="" data-n-g=""/><noscript data-n-css=""></noscript><script defer="" crossorigin="" nomodule="" src="/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js"></script><script src="/_next/static/chunks/webpack-a47b0fa283075826.js" defer="" crossorigin=""></script><script src="/_next/static/chunks/framework-1d3a272891709a17.js" defer="" crossorigin=""></script><script src="/_next/static/chunks/main-0f62ab20d26767a6.js" defer="" crossorigin=""></script><script src="/_next/static/chunks/pages/_app-291741fa3b4c7e28.js" defer="" crossorigin=""></script><script src="/_next/static/chunks/7916-62e1e7344c872882.js" defer="" crossorigin=""></script><script src="/_next/static/chunks/6748-27db3013c7a228bd.js" defer="" crossorigin=""></script><script src="/_next/static/chunks/7223-911e7ea7673d2d01.js" defer="" crossorigin=""></script><script src="/_next/static/chunks/1106-315de890c6c80a77.js" defer="" crossorigin=""></script><script src="/_next/static/chunks/pages/docs-d8566f5dbf4f2a55.js" defer="" crossorigin=""></script><script src="/_next/static/W2yOYhxwWru5tElmEw2mc/_buildManifest.js" defer="" crossorigin=""></script><script src="/_next/static/W2yOYhxwWru5tElmEw2mc/_ssgManifest.js" defer="" crossorigin=""></script></head><body><div id="__next"><div><div class="mx-auto w-full flex flex-col text-fnormal laptop:text-s20"><div class="sticky top-0 bg-canvas z-50 w-full mx-auto"><div class="mx-auto max-w-[1440px] laptop:max-w-[1728px] px-f2"><div class="flex text-s20 tablet:text-slg tablet:flex-row py-f1"><div class="grow max-h-f2 text-flg tablet:text-fxl overflow-hidden"><div class="inline-block pr-[1ch] ml-[-4px]"><a class="hover:cursor-pointer transition-all duration-150 ease-in-out text-main hover:text-main-500" target="" href="/"><span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-flg tablet:text-fxl text-inherit bg-inherit border-none">FRAGMENT</span></span></a></div><div class="inline-block pr-f2"><h1 class="text-main">Documentation</h1></div></div><div class="shrink-0 justify-self-end space-x-f3 text-s20 flex items-center"><div class="hidden"><a class="hover:cursor-pointer transition-all duration-150 ease-in-out text-main hover:text-main-500" target="" href="/docs">Documentation</a></div><div class="hidden tablet:block whitespace-nowrap"><a class="hover:cursor-pointer transition-all duration-150 ease-in-out text-main hover:text-main-500" target="_blank" href="https://dashboard.fragment.dev/login">Login<span class="text-main-500">↗</span></a></div><div><button data-testid="main-menu-button" class="hover:cursor-pointer transition-all duration-150 ease-in-out text-main hover:text-main-500 text-s20" id="headlessui-menu-button-:R1qdm:" type="button" aria-haspopup="menu" aria-expanded="false" data-headlessui-state="">Menu</button></div><div class="hidden tablet:block"><div><a href="/get-access"><button data-testid="button-engine" class="font-FragmentMono text-s20 no-underline text-negative hover:text-main bg-main hover:bg-negative border-none px-[1ch]">Get a demo <span class="text-main-500">→</span></button></a></div></div></div></div></div></div><div class="mb-f2 max-w-[1440px] laptop:max-w-[1728px] w-full mx-auto px-f2"><div class="flex items-start max-w-[950px] laptop:max-w-[1250px] w-full ml-0 mr-auto"><div class="tablet:min-w-f28 hidden tablet:flex basis-1/4 sticky top-[90px] pt-f3"><div class="hidden tablet:block w-full pr-[1.5em] "><div class="sticky bottom-auto"><div class="relative overflow-y-auto overflow-x-hidden h-[calc(100vh-99px)] scrollbar-hide"><div class="sticky top-0 left-0 bg-sticky-header-background"><div data-testid="left-nav"><div><a class="hover:text-main text-main" href="/docs"><span class="hover:cursor-pointer">1<!-- --> <span class="text-main">Documentation</span></span></a><div class="my-f2"><div><div><span class="hover:text-main flex text-main-500  break-words ml-[2ch]"><div><div><a class="hover:cursor-pointer" href="/docs#introduction"><span>A<!-- --> </span><span class="text-main">Introduction</span></a></div><div class="ml-[2ch]"></div></div></span></div><div><span class="hover:text-main flex text-main-500  break-words ml-[2ch]"><div><div><a class="hover:cursor-pointer" href="/docs#design-your-ledger"><span>B<!-- --> </span><span class="text-main">Design your Ledger</span></a></div><div class="ml-[2ch]"></div></div></span></div><div><span class="hover:text-main flex text-main-500  break-words ml-[2ch]"><div><div><a class="hover:cursor-pointer" href="/docs#deploy-your-ledger"><span>C<!-- --> </span><span class="text-main">Deploy your Ledger</span></a></div><div class="ml-[2ch]"></div></div></span></div><div><span class="hover:text-main flex text-main-500  break-words ml-[2ch]"><div><div><a class="hover:cursor-pointer" href="/docs#install-the-sdk"><span>D<!-- --> </span><span class="text-main">Install the SDK</span></a></div><div class="ml-[2ch]"></div></div></span></div><div><span class="hover:text-main flex text-main-500  break-words ml-[2ch]"><div><div><a class="hover:cursor-pointer" href="/docs#post-ledger-entries"><span>E<!-- --> </span><span class="text-main">Post Ledger Entries</span></a></div><div class="ml-[2ch]"></div></div></span></div><div><span class="hover:text-main flex text-main-500  break-words ml-[2ch]"><div><div><a class="hover:cursor-pointer" href="/docs#reconcile-transactions"><span>F<!-- --> </span><span class="text-main">Reconcile transactions</span></a></div><div class="ml-[2ch]"></div></div></span></div><div><span class="hover:text-main flex text-main-500  break-words ml-[2ch]"><div><div><a class="hover:cursor-pointer" href="/docs#store-metadata"><span>G<!-- --> </span><span class="text-main">Store metadata</span></a></div><div class="ml-[2ch]"></div></div></span></div><div><span class="hover:text-main flex text-main-500  break-words ml-[2ch]"><div><div><a class="hover:cursor-pointer" href="/docs#read-balances"><span>H<!-- --> </span><span class="text-main">Read balances</span></a></div><div class="ml-[2ch]"></div></div></span></div><div><span class="hover:text-main flex text-main-500  break-words ml-[2ch]"><div><div><a class="hover:cursor-pointer" href="/docs#query-data"><span>I<!-- --> </span><span class="text-main">Query data</span></a></div><div class="ml-[2ch]"></div></div></span></div><div><span class="hover:text-main flex text-main-500  break-words ml-[2ch]"><div><div><a class="hover:cursor-pointer" href="/docs#generate-reports"><span>J<!-- --> </span><span class="text-main">Generate reports</span></a></div><div class="ml-[2ch]"></div></div></span></div><div><span class="hover:text-main flex text-main-500  break-words ml-[2ch]"><div><div><a class="hover:cursor-pointer" href="/docs#configure-consistency"><span>K<!-- --> </span><span class="text-main">Configure consistency</span></a></div><div class="ml-[2ch]"></div></div></span></div><div><span class="hover:text-main flex text-main-500  break-words ml-[2ch]"><div><div><a class="hover:cursor-pointer" href="/docs#handle-currencies"><span>L<!-- --> </span><span class="text-main">Handle currencies</span></a></div><div class="ml-[2ch]"></div></div></span></div><div><span class="hover:text-main flex text-main-500  break-words ml-[2ch]"><div><div><a class="hover:cursor-pointer" href="/docs#group-ledger-entries"><span>M<!-- --> </span><span class="text-main">Group Ledger Entries</span></a></div><div class="ml-[2ch]"></div></div></span></div><div><span class="hover:text-main flex text-main-500  break-words ml-[2ch]"><div><div><a class="hover:cursor-pointer" href="/docs#export-data"><span>N<!-- --> </span><span class="text-main">Export data</span></a></div><div class="ml-[2ch]"></div></div></span></div><div><span class="hover:text-main flex text-main-500  break-words ml-[2ch]"><div><div><a class="hover:cursor-pointer" href="/docs#under-the-hood"><span>O<!-- --> </span><span class="text-main">Under the hood</span></a></div><div class="ml-[2ch]"></div></div></span></div></div></div></div><div><a class="hover:text-main text-main-500" href="/api-reference"><span class="hover:cursor-pointer">2<!-- --> <span class="text-main">Reference</span></span></a></div><div><a class="hover:text-main text-main-500" href="/changelog"><span class="hover:cursor-pointer">3<!-- --> <span class="text-main">Changelog</span></span></a></div></div></div></div></div></div></div><div class="w-full basis-full tablet:basis-3/4 min-w-f0"><div><section id="introduction" class="first:0 pt-f6 tablet:pt-f3 pb-[2em] scroll-mt-[90px]"><span class="TopicContainer-title group-one text-s20 tablet:text-fnormal laptop:text-s20 block mb-[1em] "><span class="text-main-500">A<!-- --> </span>Introduction<span class="pl-[0.5em] phone:invisible phone:group-one-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#introduction">#</a></span></span><div class="TopicContainer-content py-[2em] first-of-type:pt-0 ml-0 phone:ml-[1.8em] tablet:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2"><span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> is a toolkit for building products that move and track money. It includes an API and Dashboard for designing, implementing, and operating your Ledger.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Don&#x27;t have a <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> workspace? <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/get-access">Get access</a>.</p></div></section>
<section id="design-your-ledger" class="first:0 pt-f6 tablet:pt-f3 pb-[2em] scroll-mt-[90px]"><span class="TopicContainer-title group-one text-s20 tablet:text-fnormal laptop:text-s20 block mb-[1em] "><span class="text-main-500">B<!-- --> </span>Design your Ledger<span class="pl-[0.5em] phone:invisible phone:group-one-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#design-your-ledger">#</a></span></span><div class="TopicContainer-content py-[2em] first-of-type:pt-0 ml-0 phone:ml-[1.8em] tablet:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A Ledger uses a Schema to define functionality for a specific product and use case. A Schema may be shared across multiple Ledgers. Updating a Schema will trigger migrations to update each Ledger.
Use the Ledger designer in the Dashboard to model and store your Schema.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Ledgers track money using:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none space-y-[1em] phone:space-y-f0 my-f2 mt-[1em] ml-[1em] list-disc list-outside"><li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">Ledger Accounts, balances that represent the financial state of a business</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">Ledger Entries, financial events that update Ledger Accounts</li></ul><section id="design-your-ledger-ledger-accounts" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">a. </span>Ledger Accounts</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#design-your-ledger-ledger-accounts">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A Ledger Account has a balance. Changes to a Ledger Account&#x27;s balance are called Ledger Lines.</p><div class="pt-f2"><div class="hidden tablet:block"><svg width="100%" height="100%" viewBox="0 0 621 387" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="621" height="387" fill="rgb(var(--colour-negative))"></rect><path d="M19.736 22.214H21.038V30.852H25.7V32H19.736V22.214ZM30.4063 23.614V22.214H31.8063V23.614H30.4063ZM31.6803 24.664V31.048H33.9343V32H28.0123V31.048H30.5323V25.616H28.0123V24.664H31.6803ZM36.7226 32V24.664H37.8006V25.882C38.3746 24.986 39.0746 24.454 40.2366 24.454C41.5106 24.454 42.5606 25.098 42.5606 26.456V32H41.3986V26.918C41.3986 25.938 40.6986 25.476 39.8866 25.476C38.5706 25.476 37.8846 26.61 37.8846 27.87V32H36.7226ZM51.4809 29.732C51.2289 31.272 50.0669 32.252 48.3449 32.252C46.1329 32.252 45.0129 30.642 45.0129 28.402C45.0129 25.952 46.3429 24.44 48.3729 24.44C50.6409 24.44 51.6349 26.134 51.6349 28.682H46.2309C46.2729 30.124 46.9729 31.174 48.3869 31.174C49.3389 31.174 49.9829 30.712 50.3049 29.732H51.4809ZM48.3589 25.518C47.0429 25.518 46.3569 26.498 46.2589 27.73H50.3749C50.3749 26.512 49.6189 25.518 48.3589 25.518ZM59.6312 26.666H58.4132C58.3852 25.938 57.8252 25.476 56.9432 25.476C55.9912 25.476 55.3472 25.896 55.3472 26.554C55.3472 27.072 55.7112 27.38 56.3972 27.562L58.0632 27.996C59.2952 28.318 59.9252 28.92 59.9252 29.956C59.9252 31.384 58.8052 32.252 56.9852 32.252C55.0672 32.252 54.0592 31.412 53.9752 29.774H55.2072C55.3192 30.768 55.9212 31.216 57.0132 31.216C58.0492 31.216 58.7352 30.824 58.7352 30.138C58.7352 29.508 58.4272 29.242 57.6292 29.032L56.0892 28.626C54.7592 28.276 54.1572 27.73 54.1572 26.61C54.1572 25.28 55.2492 24.44 56.9712 24.44C58.6792 24.44 59.6032 25.28 59.6312 26.666ZM77.8918 31.23V32.112C77.5978 32.196 77.3738 32.238 77.1918 32.238C76.3798 32.238 75.9738 31.888 75.8898 31.132C75.0638 31.944 74.3358 32.252 73.3978 32.252C71.9698 32.252 71.0038 31.454 71.0038 30.096C71.0038 28.584 72.1518 28.038 73.0058 27.898C73.2578 27.856 73.8038 27.772 74.6298 27.66C75.5678 27.534 75.8758 27.352 75.8758 26.876V26.624C75.8758 25.896 75.3018 25.532 74.1958 25.532C73.1178 25.532 72.5858 25.938 72.4878 26.834H71.3118C71.3398 25.14 72.5158 24.454 74.2518 24.454C76.0578 24.454 77.0098 25.154 77.0098 26.456V30.684C77.0098 31.062 77.2198 31.258 77.6398 31.258C77.7098 31.258 77.8218 31.244 77.8918 31.23ZM75.8758 29.452V28.29C75.3858 28.514 74.5878 28.64 73.9718 28.71C72.8798 28.836 72.1938 29.144 72.1938 30.068C72.1938 30.796 72.7538 31.23 73.6918 31.23C74.7138 31.23 75.8758 30.474 75.8758 29.452ZM79.9941 32V24.664H81.0721V25.882C81.6461 24.986 82.3461 24.454 83.5081 24.454C84.7821 24.454 85.8321 25.098 85.8321 26.456V32H84.6701V26.918C84.6701 25.938 83.9701 25.476 83.1581 25.476C81.8421 25.476 81.1561 26.61 81.1561 27.87V32H79.9941ZM93.5064 21.794H94.6684V32H93.6324V30.964C93.0444 31.818 92.2604 32.252 91.2944 32.252C89.1244 32.252 88.1024 30.516 88.1024 28.262C88.1024 26.148 89.1664 24.44 91.2524 24.44C92.2464 24.44 93.0024 24.818 93.5064 25.574V21.794ZM91.4484 25.532C90.0764 25.532 89.3204 26.764 89.3204 28.346C89.3204 29.844 89.9644 31.16 91.4624 31.16C92.9324 31.16 93.5064 29.746 93.5064 28.388C93.5064 26.918 92.9184 25.532 91.4484 25.532ZM109.639 32H105.831V22.214H109.317C111.067 22.214 112.271 23.166 112.271 24.706C112.271 25.644 111.823 26.582 110.969 26.89C111.991 27.226 112.593 28.038 112.593 29.214C112.593 30.684 111.571 32 109.639 32ZM107.105 23.32V26.414H109.121C110.171 26.414 110.941 26.078 110.941 24.888C110.941 23.684 110.171 23.32 109.121 23.32H107.105ZM107.105 27.52V30.894H109.485C110.717 30.894 111.263 30.194 111.263 29.2C111.263 28.22 110.717 27.52 109.485 27.52H107.105ZM121.163 31.23V32.112C120.869 32.196 120.645 32.238 120.463 32.238C119.651 32.238 119.245 31.888 119.161 31.132C118.335 31.944 117.607 32.252 116.669 32.252C115.241 32.252 114.275 31.454 114.275 30.096C114.275 28.584 115.423 28.038 116.277 27.898C116.529 27.856 117.075 27.772 117.901 27.66C118.839 27.534 119.147 27.352 119.147 26.876V26.624C119.147 25.896 118.573 25.532 117.467 25.532C116.389 25.532 115.857 25.938 115.759 26.834H114.583C114.611 25.14 115.787 24.454 117.523 24.454C119.329 24.454 120.281 25.154 120.281 26.456V30.684C120.281 31.062 120.491 31.258 120.911 31.258C120.981 31.258 121.093 31.244 121.163 31.23ZM119.147 29.452V28.29C118.657 28.514 117.859 28.64 117.243 28.71C116.151 28.836 115.465 29.144 115.465 30.068C115.465 30.796 116.025 31.23 116.963 31.23C117.985 31.23 119.147 30.474 119.147 29.452ZM127.158 21.794V31.048H129.412V32H123.49V31.048H126.024V22.746H123.49V21.794H127.158ZM138.472 31.23V32.112C138.178 32.196 137.954 32.238 137.772 32.238C136.96 32.238 136.554 31.888 136.47 31.132C135.644 31.944 134.916 32.252 133.978 32.252C132.55 32.252 131.584 31.454 131.584 30.096C131.584 28.584 132.732 28.038 133.586 27.898C133.838 27.856 134.384 27.772 135.21 27.66C136.148 27.534 136.456 27.352 136.456 26.876V26.624C136.456 25.896 135.882 25.532 134.776 25.532C133.698 25.532 133.166 25.938 133.068 26.834H131.892C131.92 25.14 133.096 24.454 134.832 24.454C136.638 24.454 137.59 25.154 137.59 26.456V30.684C137.59 31.062 137.8 31.258 138.22 31.258C138.29 31.258 138.402 31.244 138.472 31.23ZM136.456 29.452V28.29C135.966 28.514 135.168 28.64 134.552 28.71C133.46 28.836 132.774 29.144 132.774 30.068C132.774 30.796 133.334 31.23 134.272 31.23C135.294 31.23 136.456 30.474 136.456 29.452ZM140.574 32V24.664H141.652V25.882C142.226 24.986 142.926 24.454 144.088 24.454C145.362 24.454 146.412 25.098 146.412 26.456V32H145.25V26.918C145.25 25.938 144.55 25.476 143.738 25.476C142.422 25.476 141.736 26.61 141.736 27.87V32H140.574ZM155.276 27.086H154.1C153.974 26.12 153.33 25.518 152.308 25.518C150.796 25.518 150.208 26.96 150.208 28.416C150.208 29.872 150.866 31.174 152.336 31.174C153.358 31.174 153.988 30.6 154.184 29.438H155.36C155.206 31.202 154.114 32.252 152.308 32.252C150.166 32.252 148.99 30.572 148.99 28.416C148.99 26.218 150.138 24.44 152.322 24.44C154.114 24.44 155.234 25.532 155.276 27.086ZM163.987 29.732C163.735 31.272 162.573 32.252 160.851 32.252C158.639 32.252 157.519 30.642 157.519 28.402C157.519 25.952 158.849 24.44 160.879 24.44C163.147 24.44 164.141 26.134 164.141 28.682H158.737C158.779 30.124 159.479 31.174 160.893 31.174C161.845 31.174 162.489 30.712 162.811 29.732H163.987ZM160.865 25.518C159.549 25.518 158.863 26.498 158.765 27.73H162.881C162.881 26.512 162.125 25.518 160.865 25.518ZM172.137 26.666H170.919C170.891 25.938 170.331 25.476 169.449 25.476C168.497 25.476 167.853 25.896 167.853 26.554C167.853 27.072 168.217 27.38 168.903 27.562L170.569 27.996C171.801 28.318 172.431 28.92 172.431 29.956C172.431 31.384 171.311 32.252 169.491 32.252C167.573 32.252 166.565 31.412 166.481 29.774H167.713C167.825 30.768 168.427 31.216 169.519 31.216C170.555 31.216 171.241 30.824 171.241 30.138C171.241 29.508 170.933 29.242 170.135 29.032L168.595 28.626C167.265 28.276 166.663 27.73 166.663 26.61C166.663 25.28 167.755 24.44 169.477 24.44C171.185 24.44 172.109 25.28 172.137 26.666Z" fill="rgb(var(--colour-main))"></path><rect x="152.89" y="126" width="306.11" height="162" stroke="rgb(var(--colour-main-500))"></rect><path d="M172.626 103.214H173.928V111.852H178.59V113H172.626V103.214ZM187.062 110.732C186.81 112.272 185.648 113.252 183.926 113.252C181.714 113.252 180.594 111.642 180.594 109.402C180.594 106.952 181.924 105.44 183.954 105.44C186.222 105.44 187.216 107.134 187.216 109.682H181.812C181.854 111.124 182.554 112.174 183.968 112.174C184.92 112.174 185.564 111.712 185.886 110.732H187.062ZM183.94 106.518C182.624 106.518 181.938 107.498 181.84 108.73H185.956C185.956 107.512 185.2 106.518 183.94 106.518ZM194.47 102.794H195.632V113H194.596V111.964C194.008 112.818 193.224 113.252 192.258 113.252C190.088 113.252 189.066 111.516 189.066 109.262C189.066 107.148 190.13 105.44 192.216 105.44C193.21 105.44 193.966 105.818 194.47 106.574V102.794ZM192.412 106.532C191.04 106.532 190.284 107.764 190.284 109.346C190.284 110.844 190.928 112.16 192.426 112.16C193.896 112.16 194.47 110.746 194.47 109.388C194.47 107.918 193.882 106.532 192.412 106.532ZM200.997 116.052C199.401 116.052 198.197 115.394 198.001 113.84H199.219C199.387 114.666 199.961 115.072 201.025 115.072C202.495 115.072 203.097 114.344 203.097 112.384V111.964C202.663 112.818 201.879 113.252 200.913 113.252C198.743 113.252 197.721 111.558 197.721 109.304C197.721 107.148 198.785 105.44 200.871 105.44C201.865 105.44 202.621 105.818 203.125 106.574V105.664H204.287V111.81C204.287 112.832 204.203 113.602 204.035 114.134C203.629 115.408 202.579 116.052 200.997 116.052ZM201.081 112.16C202.551 112.16 203.125 110.746 203.125 109.388C203.125 107.918 202.537 106.532 201.067 106.532C199.695 106.532 198.939 107.764 198.939 109.346C198.939 110.844 199.583 112.16 201.081 112.16ZM213.025 110.732C212.773 112.272 211.611 113.252 209.889 113.252C207.677 113.252 206.557 111.642 206.557 109.402C206.557 106.952 207.887 105.44 209.917 105.44C212.185 105.44 213.179 107.134 213.179 109.682H207.775C207.817 111.124 208.517 112.174 209.931 112.174C210.883 112.174 211.527 111.712 211.849 110.732H213.025ZM209.903 106.518C208.587 106.518 207.901 107.498 207.803 108.73H211.919C211.919 107.512 211.163 106.518 209.903 106.518ZM215.897 113V105.664H216.975V107.246C217.465 106.196 218.403 105.454 219.607 105.454C221.287 105.454 222.155 106.378 222.295 107.834H221.133C220.965 106.952 220.489 106.476 219.495 106.476C218.025 106.476 217.073 107.722 217.073 109.444V113H215.897Z" fill="rgb(var(--colour-main-500))"></path><rect width="12" height="12" transform="translate(152.89 102)" fill="rgb(var(--colour-main-500))"></rect><rect x="158.89" y="108" width="6" height="6" fill="rgb(var(--colour-inactive-br))"></rect><rect x="158.89" y="102" width="6" height="6" fill="rgb(var(--colour-inactive-tr))"></rect><rect x="152.89" y="108" width="6" height="6" fill="rgb(var(--colour-inactive-bl))"></rect><rect x="152.89" y="102" width="6" height="6" fill="rgb(var(--colour-main-400))"></rect><circle cx="188.89" cy="162" r="6" fill="#5AC93B"></circle><path d="M190.71 165.495H191.68L189.48 158.505H188.31L186.1 165.495H187.06L187.68 163.405H190.09L190.71 165.495ZM187.91 162.625L188.88 159.345L189.86 162.625H187.91Z" fill="rgb(var(--colour-negative))"></path><path d="M207.764 167L206.896 164.074H203.522L202.654 167H201.31L204.404 157.214H206.042L209.122 167H207.764ZM203.844 162.982H206.574L205.202 158.39L203.844 162.982ZM217.006 162.086H215.83C215.704 161.12 215.06 160.518 214.038 160.518C212.526 160.518 211.938 161.96 211.938 163.416C211.938 164.872 212.596 166.174 214.066 166.174C215.088 166.174 215.718 165.6 215.914 164.438H217.09C216.936 166.202 215.844 167.252 214.038 167.252C211.896 167.252 210.72 165.572 210.72 163.416C210.72 161.218 211.868 159.44 214.052 159.44C215.844 159.44 216.964 160.532 217.006 162.086ZM225.66 162.086H224.484C224.358 161.12 223.714 160.518 222.692 160.518C221.18 160.518 220.592 161.96 220.592 163.416C220.592 164.872 221.25 166.174 222.72 166.174C223.742 166.174 224.372 165.6 224.568 164.438H225.744C225.59 166.202 224.498 167.252 222.692 167.252C220.55 167.252 219.374 165.572 219.374 163.416C219.374 161.218 220.522 159.44 222.706 159.44C224.498 159.44 225.618 160.532 225.66 162.086ZM231.179 159.44C233.433 159.44 234.497 161.12 234.497 163.346C234.497 165.572 233.433 167.252 231.179 167.252C228.925 167.252 227.861 165.572 227.861 163.346C227.861 161.12 228.925 159.44 231.179 159.44ZM231.179 160.518C229.695 160.518 229.079 161.848 229.079 163.346C229.079 164.844 229.695 166.174 231.179 166.174C232.663 166.174 233.279 164.844 233.279 163.346C233.279 161.848 232.663 160.518 231.179 160.518ZM242.759 159.664V167H241.709V165.908C241.037 166.874 240.337 167.252 239.259 167.252C238.629 167.252 238.097 167.112 237.677 166.818C237.173 166.454 236.921 165.936 236.921 165.25V159.664H238.083V164.788C238.083 165.278 238.251 165.656 238.573 165.908C238.839 166.118 239.189 166.23 239.595 166.23C240.141 166.23 240.603 166.034 240.981 165.628C241.387 165.194 241.597 164.564 241.597 163.738V159.664H242.759ZM245.575 167V159.664H246.653V160.882C247.227 159.986 247.927 159.454 249.089 159.454C250.363 159.454 251.413 160.098 251.413 161.456V167H250.251V161.918C250.251 160.938 249.551 160.476 248.739 160.476C247.423 160.476 246.737 161.61 246.737 162.87V167H245.575ZM257.197 159.664H260.081V160.616H257.197V164.704C257.197 165.782 257.771 166.146 258.835 166.146C259.311 166.146 259.731 166.104 260.081 166.006V167.028C259.619 167.168 259.157 167.196 258.765 167.196C256.987 167.196 256.035 166.51 256.035 164.914V160.616H253.921V159.664H256.035V157.648H257.197V159.664Z" fill="rgb(var(--colour-main))"></path><path d="M415.823 167V159.902H413.205V158.978C415.515 158.88 415.711 158.74 416.131 157.102H417.055V167H415.823ZM424.561 156.99C427.109 156.99 427.809 159.51 427.809 162.114C427.809 164.718 427.109 167.252 424.561 167.252C422.013 167.252 421.313 164.718 421.313 162.114C421.313 159.51 422.013 156.99 424.561 156.99ZM424.561 158.054C423.119 158.054 422.461 159.65 422.461 162.114C422.461 163.304 422.615 164.298 422.937 164.998L425.695 158.516C425.401 158.208 425.023 158.054 424.561 158.054ZM426.661 162.114C426.661 161.036 426.535 160.126 426.269 159.44L423.567 165.852C423.833 166.076 424.169 166.188 424.561 166.188C426.003 166.188 426.661 164.578 426.661 162.114Z" fill="rgb(var(--colour-main))"></path><rect x="170.89" y="144" width="270" height="36" stroke="rgb(var(--colour-main-500))"></rect><g clip-path="url(#clip0_2738_2463_dark)"><circle cx="188.89" cy="288" r="6" fill="#EC3425"></circle><path d="M186.989 284.505V291.495H191.249V290.675H187.919V284.505H186.989Z" fill="rgb(var(--colour-negative))"></path><path d="M207.764 293L206.896 290.074H203.522L202.654 293H201.31L204.404 283.214H206.042L209.122 293H207.764ZM203.844 288.982H206.574L205.202 284.39L203.844 288.982ZM217.006 288.086H215.83C215.704 287.12 215.06 286.518 214.038 286.518C212.526 286.518 211.938 287.96 211.938 289.416C211.938 290.872 212.596 292.174 214.066 292.174C215.088 292.174 215.718 291.6 215.914 290.438H217.09C216.936 292.202 215.844 293.252 214.038 293.252C211.896 293.252 210.72 291.572 210.72 289.416C210.72 287.218 211.868 285.44 214.052 285.44C215.844 285.44 216.964 286.532 217.006 288.086ZM225.66 288.086H224.484C224.358 287.12 223.714 286.518 222.692 286.518C221.18 286.518 220.592 287.96 220.592 289.416C220.592 290.872 221.25 292.174 222.72 292.174C223.742 292.174 224.372 291.6 224.568 290.438H225.744C225.59 292.202 224.498 293.252 222.692 293.252C220.55 293.252 219.374 291.572 219.374 289.416C219.374 287.218 220.522 285.44 222.706 285.44C224.498 285.44 225.618 286.532 225.66 288.086ZM231.179 285.44C233.433 285.44 234.497 287.12 234.497 289.346C234.497 291.572 233.433 293.252 231.179 293.252C228.925 293.252 227.861 291.572 227.861 289.346C227.861 287.12 228.925 285.44 231.179 285.44ZM231.179 286.518C229.695 286.518 229.079 287.848 229.079 289.346C229.079 290.844 229.695 292.174 231.179 292.174C232.663 292.174 233.279 290.844 233.279 289.346C233.279 287.848 232.663 286.518 231.179 286.518ZM242.759 285.664V293H241.709V291.908C241.037 292.874 240.337 293.252 239.259 293.252C238.629 293.252 238.097 293.112 237.677 292.818C237.173 292.454 236.921 291.936 236.921 291.25V285.664H238.083V290.788C238.083 291.278 238.251 291.656 238.573 291.908C238.839 292.118 239.189 292.23 239.595 292.23C240.141 292.23 240.603 292.034 240.981 291.628C241.387 291.194 241.597 290.564 241.597 289.738V285.664H242.759ZM245.575 293V285.664H246.653V286.882C247.227 285.986 247.927 285.454 249.089 285.454C250.363 285.454 251.413 286.098 251.413 287.456V293H250.251V287.918C250.251 286.938 249.551 286.476 248.739 286.476C247.423 286.476 246.737 287.61 246.737 288.87V293H245.575ZM257.197 285.664H260.081V286.616H257.197V290.704C257.197 291.782 257.771 292.146 258.835 292.146C259.311 292.146 259.731 292.104 260.081 292.006V293.028C259.619 293.168 259.157 293.196 258.765 293.196C256.987 293.196 256.035 292.51 256.035 290.914V286.616H253.921V285.664H256.035V283.648H257.197V285.664Z" fill="rgb(var(--colour-main))"></path></g><rect x="170.89" y="270" width="270" height="18" stroke="rgb(var(--colour-main-500))"></rect><rect x="170.89" y="180" width="270" height="36" fill="rgb(var(--colour-negative))"></rect><rect x="182.89" y="192" width="12" height="12" rx="6" fill="rgb(var(--colour-negative))"></rect><path d="M182.89 198C182.89 194.686 185.576 192 188.89 192V198H182.89Z" fill="#5AC93B"></path><path d="M202.626 193.214H203.928V201.852H208.59V203H202.626V193.214ZM213.296 194.614V193.214H214.696V194.614H213.296ZM214.57 195.664V202.048H216.824V203H210.902V202.048H213.422V196.616H210.902V195.664H214.57ZM219.612 203V195.664H220.69V196.882C221.264 195.986 221.964 195.454 223.126 195.454C224.4 195.454 225.45 196.098 225.45 197.456V203H224.288V197.918C224.288 196.938 223.588 196.476 222.776 196.476C221.46 196.476 220.774 197.61 220.774 198.87V203H219.612ZM234.371 200.732C234.119 202.272 232.957 203.252 231.235 203.252C229.023 203.252 227.903 201.642 227.903 199.402C227.903 196.952 229.233 195.44 231.263 195.44C233.531 195.44 234.525 197.134 234.525 199.682H229.121C229.163 201.124 229.863 202.174 231.277 202.174C232.229 202.174 232.873 201.712 233.195 200.732H234.371ZM231.249 196.518C229.933 196.518 229.247 197.498 229.149 198.73H233.265C233.265 197.512 232.509 196.518 231.249 196.518Z" fill="rgb(var(--colour-main))"></path><path d="M420.836 193.214H425.96V194.292H421.844L421.438 197.148C421.97 196.672 422.656 196.504 423.328 196.504C425.092 196.504 426.478 197.764 426.478 199.794C426.478 201.796 425.19 203.252 423.076 203.252C421.942 203.252 420.094 202.762 419.786 200.606H421.032C421.312 201.656 422.012 202.174 423.076 202.174C424.49 202.174 425.218 201.208 425.218 199.85C425.218 198.492 424.56 197.54 423.118 197.54C422.334 197.54 421.746 197.834 421.228 198.52H420.108L420.836 193.214Z" fill="rgb(var(--colour-main))"></path><rect x="170.89" y="180" width="270" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="170.89" y="216" width="270" height="36" fill="rgb(var(--colour-negative))"></rect><rect x="182.89" y="228" width="12" height="12" rx="6" fill="rgb(var(--colour-negative))"></rect><path d="M182.89 234C182.89 230.686 185.576 228 188.89 228V234H182.89Z" fill="#5AC93B"></path><path d="M202.626 229.214H203.928V237.852H208.59V239H202.626V229.214ZM213.296 230.614V229.214H214.696V230.614H213.296ZM214.57 231.664V238.048H216.824V239H210.902V238.048H213.422V232.616H210.902V231.664H214.57ZM219.612 239V231.664H220.69V232.882C221.264 231.986 221.964 231.454 223.126 231.454C224.4 231.454 225.45 232.098 225.45 233.456V239H224.288V233.918C224.288 232.938 223.588 232.476 222.776 232.476C221.46 232.476 220.774 233.61 220.774 234.87V239H219.612ZM234.371 236.732C234.119 238.272 232.957 239.252 231.235 239.252C229.023 239.252 227.903 237.642 227.903 235.402C227.903 232.952 229.233 231.44 231.263 231.44C233.531 231.44 234.525 233.134 234.525 235.682H229.121C229.163 237.124 229.863 238.174 231.277 238.174C232.229 238.174 232.873 237.712 233.195 236.732H234.371ZM231.249 232.518C229.933 232.518 229.247 233.498 229.149 234.73H233.265C233.265 233.512 232.509 232.518 231.249 232.518Z" fill="rgb(var(--colour-main))"></path><path d="M420.836 229.214H425.96V230.292H421.844L421.438 233.148C421.97 232.672 422.656 232.504 423.328 232.504C425.092 232.504 426.478 233.764 426.478 235.794C426.478 237.796 425.19 239.252 423.076 239.252C421.942 239.252 420.094 238.762 419.786 236.606H421.032C421.312 237.656 422.012 238.174 423.076 238.174C424.49 238.174 425.218 237.208 425.218 235.85C425.218 234.492 424.56 233.54 423.118 233.54C422.334 233.54 421.746 233.834 421.228 234.52H420.108L420.836 229.214Z" fill="rgb(var(--colour-main))"></path><rect x="170.89" y="216" width="270" height="36" stroke="rgb(var(--colour-main-500))"></rect><defs><clipPath id="clip0_2738_2463_dark"><rect x="170.89" y="270" width="270" height="18" fill="rgb(var(--colour-negative))"></rect></clipPath></defs></svg></div><div class="block tablet:hidden"><svg width="100%" height="100%" viewBox="0 0 378 387" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="378" height="387" fill="rgb(var(--colour-negative))"></rect><path d="M19.736 22.214H21.038V30.852H25.7V32H19.736V22.214ZM30.4063 23.614V22.214H31.8063V23.614H30.4063ZM31.6803 24.664V31.048H33.9343V32H28.0123V31.048H30.5323V25.616H28.0123V24.664H31.6803ZM36.7226 32V24.664H37.8006V25.882C38.3746 24.986 39.0746 24.454 40.2366 24.454C41.5106 24.454 42.5606 25.098 42.5606 26.456V32H41.3986V26.918C41.3986 25.938 40.6986 25.476 39.8866 25.476C38.5706 25.476 37.8846 26.61 37.8846 27.87V32H36.7226ZM51.4809 29.732C51.2289 31.272 50.0669 32.252 48.3449 32.252C46.1329 32.252 45.0129 30.642 45.0129 28.402C45.0129 25.952 46.3429 24.44 48.3729 24.44C50.6409 24.44 51.6349 26.134 51.6349 28.682H46.2309C46.2729 30.124 46.9729 31.174 48.3869 31.174C49.3389 31.174 49.9829 30.712 50.3049 29.732H51.4809ZM48.3589 25.518C47.0429 25.518 46.3569 26.498 46.2589 27.73H50.3749C50.3749 26.512 49.6189 25.518 48.3589 25.518ZM59.6312 26.666H58.4132C58.3852 25.938 57.8252 25.476 56.9432 25.476C55.9912 25.476 55.3472 25.896 55.3472 26.554C55.3472 27.072 55.7112 27.38 56.3972 27.562L58.0632 27.996C59.2952 28.318 59.9252 28.92 59.9252 29.956C59.9252 31.384 58.8052 32.252 56.9852 32.252C55.0672 32.252 54.0592 31.412 53.9752 29.774H55.2072C55.3192 30.768 55.9212 31.216 57.0132 31.216C58.0492 31.216 58.7352 30.824 58.7352 30.138C58.7352 29.508 58.4272 29.242 57.6292 29.032L56.0892 28.626C54.7592 28.276 54.1572 27.73 54.1572 26.61C54.1572 25.28 55.2492 24.44 56.9712 24.44C58.6792 24.44 59.6032 25.28 59.6312 26.666ZM77.8918 31.23V32.112C77.5978 32.196 77.3738 32.238 77.1918 32.238C76.3798 32.238 75.9738 31.888 75.8898 31.132C75.0638 31.944 74.3358 32.252 73.3978 32.252C71.9698 32.252 71.0038 31.454 71.0038 30.096C71.0038 28.584 72.1518 28.038 73.0058 27.898C73.2578 27.856 73.8038 27.772 74.6298 27.66C75.5678 27.534 75.8758 27.352 75.8758 26.876V26.624C75.8758 25.896 75.3018 25.532 74.1958 25.532C73.1178 25.532 72.5858 25.938 72.4878 26.834H71.3118C71.3398 25.14 72.5158 24.454 74.2518 24.454C76.0578 24.454 77.0098 25.154 77.0098 26.456V30.684C77.0098 31.062 77.2198 31.258 77.6398 31.258C77.7098 31.258 77.8218 31.244 77.8918 31.23ZM75.8758 29.452V28.29C75.3858 28.514 74.5878 28.64 73.9718 28.71C72.8798 28.836 72.1938 29.144 72.1938 30.068C72.1938 30.796 72.7538 31.23 73.6918 31.23C74.7138 31.23 75.8758 30.474 75.8758 29.452ZM79.9941 32V24.664H81.0721V25.882C81.6461 24.986 82.3461 24.454 83.5081 24.454C84.7821 24.454 85.8321 25.098 85.8321 26.456V32H84.6701V26.918C84.6701 25.938 83.9701 25.476 83.1581 25.476C81.8421 25.476 81.1561 26.61 81.1561 27.87V32H79.9941ZM93.5064 21.794H94.6684V32H93.6324V30.964C93.0444 31.818 92.2604 32.252 91.2944 32.252C89.1244 32.252 88.1024 30.516 88.1024 28.262C88.1024 26.148 89.1664 24.44 91.2524 24.44C92.2464 24.44 93.0024 24.818 93.5064 25.574V21.794ZM91.4484 25.532C90.0764 25.532 89.3204 26.764 89.3204 28.346C89.3204 29.844 89.9644 31.16 91.4624 31.16C92.9324 31.16 93.5064 29.746 93.5064 28.388C93.5064 26.918 92.9184 25.532 91.4484 25.532ZM109.639 32H105.831V22.214H109.317C111.067 22.214 112.271 23.166 112.271 24.706C112.271 25.644 111.823 26.582 110.969 26.89C111.991 27.226 112.593 28.038 112.593 29.214C112.593 30.684 111.571 32 109.639 32ZM107.105 23.32V26.414H109.121C110.171 26.414 110.941 26.078 110.941 24.888C110.941 23.684 110.171 23.32 109.121 23.32H107.105ZM107.105 27.52V30.894H109.485C110.717 30.894 111.263 30.194 111.263 29.2C111.263 28.22 110.717 27.52 109.485 27.52H107.105ZM121.163 31.23V32.112C120.869 32.196 120.645 32.238 120.463 32.238C119.651 32.238 119.245 31.888 119.161 31.132C118.335 31.944 117.607 32.252 116.669 32.252C115.241 32.252 114.275 31.454 114.275 30.096C114.275 28.584 115.423 28.038 116.277 27.898C116.529 27.856 117.075 27.772 117.901 27.66C118.839 27.534 119.147 27.352 119.147 26.876V26.624C119.147 25.896 118.573 25.532 117.467 25.532C116.389 25.532 115.857 25.938 115.759 26.834H114.583C114.611 25.14 115.787 24.454 117.523 24.454C119.329 24.454 120.281 25.154 120.281 26.456V30.684C120.281 31.062 120.491 31.258 120.911 31.258C120.981 31.258 121.093 31.244 121.163 31.23ZM119.147 29.452V28.29C118.657 28.514 117.859 28.64 117.243 28.71C116.151 28.836 115.465 29.144 115.465 30.068C115.465 30.796 116.025 31.23 116.963 31.23C117.985 31.23 119.147 30.474 119.147 29.452ZM127.158 21.794V31.048H129.412V32H123.49V31.048H126.024V22.746H123.49V21.794H127.158ZM138.472 31.23V32.112C138.178 32.196 137.954 32.238 137.772 32.238C136.96 32.238 136.554 31.888 136.47 31.132C135.644 31.944 134.916 32.252 133.978 32.252C132.55 32.252 131.584 31.454 131.584 30.096C131.584 28.584 132.732 28.038 133.586 27.898C133.838 27.856 134.384 27.772 135.21 27.66C136.148 27.534 136.456 27.352 136.456 26.876V26.624C136.456 25.896 135.882 25.532 134.776 25.532C133.698 25.532 133.166 25.938 133.068 26.834H131.892C131.92 25.14 133.096 24.454 134.832 24.454C136.638 24.454 137.59 25.154 137.59 26.456V30.684C137.59 31.062 137.8 31.258 138.22 31.258C138.29 31.258 138.402 31.244 138.472 31.23ZM136.456 29.452V28.29C135.966 28.514 135.168 28.64 134.552 28.71C133.46 28.836 132.774 29.144 132.774 30.068C132.774 30.796 133.334 31.23 134.272 31.23C135.294 31.23 136.456 30.474 136.456 29.452ZM140.574 32V24.664H141.652V25.882C142.226 24.986 142.926 24.454 144.088 24.454C145.362 24.454 146.412 25.098 146.412 26.456V32H145.25V26.918C145.25 25.938 144.55 25.476 143.738 25.476C142.422 25.476 141.736 26.61 141.736 27.87V32H140.574ZM155.276 27.086H154.1C153.974 26.12 153.33 25.518 152.308 25.518C150.796 25.518 150.208 26.96 150.208 28.416C150.208 29.872 150.866 31.174 152.336 31.174C153.358 31.174 153.988 30.6 154.184 29.438H155.36C155.206 31.202 154.114 32.252 152.308 32.252C150.166 32.252 148.99 30.572 148.99 28.416C148.99 26.218 150.138 24.44 152.322 24.44C154.114 24.44 155.234 25.532 155.276 27.086ZM163.987 29.732C163.735 31.272 162.573 32.252 160.851 32.252C158.639 32.252 157.519 30.642 157.519 28.402C157.519 25.952 158.849 24.44 160.879 24.44C163.147 24.44 164.141 26.134 164.141 28.682H158.737C158.779 30.124 159.479 31.174 160.893 31.174C161.845 31.174 162.489 30.712 162.811 29.732H163.987ZM160.865 25.518C159.549 25.518 158.863 26.498 158.765 27.73H162.881C162.881 26.512 162.125 25.518 160.865 25.518ZM172.137 26.666H170.919C170.891 25.938 170.331 25.476 169.449 25.476C168.497 25.476 167.853 25.896 167.853 26.554C167.853 27.072 168.217 27.38 168.903 27.562L170.569 27.996C171.801 28.318 172.431 28.92 172.431 29.956C172.431 31.384 171.311 32.252 169.491 32.252C167.573 32.252 166.565 31.412 166.481 29.774H167.713C167.825 30.768 168.427 31.216 169.519 31.216C170.555 31.216 171.241 30.824 171.241 30.138C171.241 29.508 170.933 29.242 170.135 29.032L168.595 28.626C167.265 28.276 166.663 27.73 166.663 26.61C166.663 25.28 167.755 24.44 169.477 24.44C171.185 24.44 172.109 25.28 172.137 26.666Z" fill="rgb(var(--colour-main))"></path><rect x="36" y="126" width="306.11" height="162" stroke="rgb(var(--colour-main-500))"></rect><circle cx="72" cy="162" r="6" fill="#5AC93B"></circle><path d="M73.82 165.495H74.79L72.59 158.505H71.42L69.21 165.495H70.17L70.79 163.405H73.2L73.82 165.495ZM71.02 162.625L71.99 159.345L72.97 162.625H71.02Z" fill="rgb(var(--colour-negative))"></path><path d="M90.874 167L90.006 164.074H86.632L85.764 167H84.42L87.514 157.214H89.152L92.232 167H90.874ZM86.954 162.982H89.684L88.312 158.39L86.954 162.982ZM100.116 162.086H98.9403C98.8143 161.12 98.1703 160.518 97.1483 160.518C95.6363 160.518 95.0483 161.96 95.0483 163.416C95.0483 164.872 95.7063 166.174 97.1763 166.174C98.1983 166.174 98.8283 165.6 99.0243 164.438H100.2C100.046 166.202 98.9543 167.252 97.1483 167.252C95.0063 167.252 93.8303 165.572 93.8303 163.416C93.8303 161.218 94.9783 159.44 97.1623 159.44C98.9543 159.44 100.074 160.532 100.116 162.086ZM108.771 162.086H107.595C107.469 161.12 106.825 160.518 105.803 160.518C104.291 160.518 103.703 161.96 103.703 163.416C103.703 164.872 104.361 166.174 105.831 166.174C106.853 166.174 107.483 165.6 107.679 164.438H108.855C108.701 166.202 107.609 167.252 105.803 167.252C103.661 167.252 102.485 165.572 102.485 163.416C102.485 161.218 103.633 159.44 105.817 159.44C107.609 159.44 108.729 160.532 108.771 162.086ZM114.289 159.44C116.543 159.44 117.607 161.12 117.607 163.346C117.607 165.572 116.543 167.252 114.289 167.252C112.035 167.252 110.971 165.572 110.971 163.346C110.971 161.12 112.035 159.44 114.289 159.44ZM114.289 160.518C112.805 160.518 112.189 161.848 112.189 163.346C112.189 164.844 112.805 166.174 114.289 166.174C115.773 166.174 116.389 164.844 116.389 163.346C116.389 161.848 115.773 160.518 114.289 160.518ZM125.869 159.664V167H124.819V165.908C124.147 166.874 123.447 167.252 122.369 167.252C121.739 167.252 121.207 167.112 120.787 166.818C120.283 166.454 120.031 165.936 120.031 165.25V159.664H121.193V164.788C121.193 165.278 121.361 165.656 121.683 165.908C121.949 166.118 122.299 166.23 122.705 166.23C123.251 166.23 123.713 166.034 124.091 165.628C124.497 165.194 124.707 164.564 124.707 163.738V159.664H125.869ZM128.685 167V159.664H129.763V160.882C130.337 159.986 131.037 159.454 132.199 159.454C133.473 159.454 134.523 160.098 134.523 161.456V167H133.361V161.918C133.361 160.938 132.661 160.476 131.849 160.476C130.533 160.476 129.847 161.61 129.847 162.87V167H128.685ZM140.308 159.664H143.192V160.616H140.308V164.704C140.308 165.782 140.882 166.146 141.946 166.146C142.422 166.146 142.842 166.104 143.192 166.006V167.028C142.73 167.168 142.268 167.196 141.876 167.196C140.098 167.196 139.146 166.51 139.146 164.914V160.616H137.032V159.664H139.146V157.648H140.308V159.664Z" fill="rgb(var(--colour-main))"></path><path d="M298.933 167V159.902H296.315V158.978C298.625 158.88 298.821 158.74 299.241 157.102H300.165V167H298.933ZM307.672 156.99C310.22 156.99 310.92 159.51 310.92 162.114C310.92 164.718 310.22 167.252 307.672 167.252C305.124 167.252 304.424 164.718 304.424 162.114C304.424 159.51 305.124 156.99 307.672 156.99ZM307.672 158.054C306.23 158.054 305.572 159.65 305.572 162.114C305.572 163.304 305.726 164.298 306.048 164.998L308.806 158.516C308.512 158.208 308.134 158.054 307.672 158.054ZM309.772 162.114C309.772 161.036 309.646 160.126 309.38 159.44L306.678 165.852C306.944 166.076 307.28 166.188 307.672 166.188C309.114 166.188 309.772 164.578 309.772 162.114Z" fill="rgb(var(--colour-main))"></path><rect x="54" y="144" width="270" height="36" stroke="rgb(var(--colour-main-500))"></rect><g clip-path="url(#clip0_2740_6666_dark)"><circle cx="72" cy="288" r="6" fill="#EC3425"></circle><path d="M70.0996 284.505V291.495H74.3596V290.675H71.0296V284.505H70.0996Z" fill="rgb(var(--colour-negative))"></path><path d="M90.874 293L90.006 290.074H86.632L85.764 293H84.42L87.514 283.214H89.152L92.232 293H90.874ZM86.954 288.982H89.684L88.312 284.39L86.954 288.982ZM100.116 288.086H98.9403C98.8143 287.12 98.1703 286.518 97.1483 286.518C95.6363 286.518 95.0483 287.96 95.0483 289.416C95.0483 290.872 95.7063 292.174 97.1763 292.174C98.1983 292.174 98.8283 291.6 99.0243 290.438H100.2C100.046 292.202 98.9543 293.252 97.1483 293.252C95.0063 293.252 93.8303 291.572 93.8303 289.416C93.8303 287.218 94.9783 285.44 97.1623 285.44C98.9543 285.44 100.074 286.532 100.116 288.086ZM108.771 288.086H107.595C107.469 287.12 106.825 286.518 105.803 286.518C104.291 286.518 103.703 287.96 103.703 289.416C103.703 290.872 104.361 292.174 105.831 292.174C106.853 292.174 107.483 291.6 107.679 290.438H108.855C108.701 292.202 107.609 293.252 105.803 293.252C103.661 293.252 102.485 291.572 102.485 289.416C102.485 287.218 103.633 285.44 105.817 285.44C107.609 285.44 108.729 286.532 108.771 288.086ZM114.289 285.44C116.543 285.44 117.607 287.12 117.607 289.346C117.607 291.572 116.543 293.252 114.289 293.252C112.035 293.252 110.971 291.572 110.971 289.346C110.971 287.12 112.035 285.44 114.289 285.44ZM114.289 286.518C112.805 286.518 112.189 287.848 112.189 289.346C112.189 290.844 112.805 292.174 114.289 292.174C115.773 292.174 116.389 290.844 116.389 289.346C116.389 287.848 115.773 286.518 114.289 286.518ZM125.869 285.664V293H124.819V291.908C124.147 292.874 123.447 293.252 122.369 293.252C121.739 293.252 121.207 293.112 120.787 292.818C120.283 292.454 120.031 291.936 120.031 291.25V285.664H121.193V290.788C121.193 291.278 121.361 291.656 121.683 291.908C121.949 292.118 122.299 292.23 122.705 292.23C123.251 292.23 123.713 292.034 124.091 291.628C124.497 291.194 124.707 290.564 124.707 289.738V285.664H125.869ZM128.685 293V285.664H129.763V286.882C130.337 285.986 131.037 285.454 132.199 285.454C133.473 285.454 134.523 286.098 134.523 287.456V293H133.361V287.918C133.361 286.938 132.661 286.476 131.849 286.476C130.533 286.476 129.847 287.61 129.847 288.87V293H128.685ZM140.308 285.664H143.192V286.616H140.308V290.704C140.308 291.782 140.882 292.146 141.946 292.146C142.422 292.146 142.842 292.104 143.192 292.006V293.028C142.73 293.168 142.268 293.196 141.876 293.196C140.098 293.196 139.146 292.51 139.146 290.914V286.616H137.032V285.664H139.146V283.648H140.308V285.664Z" fill="rgb(var(--colour-main))"></path></g><rect x="54" y="270" width="270" height="18" stroke="rgb(var(--colour-main-500))"></rect><rect x="54" y="180" width="270" height="36" fill="rgb(var(--colour-negative))"></rect><rect x="66" y="192" width="12" height="12" rx="6" fill="rgb(var(--colour-negative))"></rect><path d="M66 198C66 194.686 68.6863 192 72 192V198H66Z" fill="#5AC93B"></path><path d="M85.736 193.214H87.038V201.852H91.7V203H85.736V193.214ZM96.4063 194.614V193.214H97.8063V194.614H96.4063ZM97.6803 195.664V202.048H99.9343V203H94.0123V202.048H96.5323V196.616H94.0123V195.664H97.6803ZM102.723 203V195.664H103.801V196.882C104.375 195.986 105.075 195.454 106.237 195.454C107.511 195.454 108.561 196.098 108.561 197.456V203H107.399V197.918C107.399 196.938 106.699 196.476 105.887 196.476C104.571 196.476 103.885 197.61 103.885 198.87V203H102.723ZM117.481 200.732C117.229 202.272 116.067 203.252 114.345 203.252C112.133 203.252 111.013 201.642 111.013 199.402C111.013 196.952 112.343 195.44 114.373 195.44C116.641 195.44 117.635 197.134 117.635 199.682H112.231C112.273 201.124 112.973 202.174 114.387 202.174C115.339 202.174 115.983 201.712 116.305 200.732H117.481ZM114.359 196.518C113.043 196.518 112.357 197.498 112.259 198.73H116.375C116.375 197.512 115.619 196.518 114.359 196.518Z" fill="rgb(var(--colour-main))"></path><path d="M303.946 193.214H309.07V194.292H304.954L304.548 197.148C305.08 196.672 305.766 196.504 306.438 196.504C308.202 196.504 309.588 197.764 309.588 199.794C309.588 201.796 308.3 203.252 306.186 203.252C305.052 203.252 303.204 202.762 302.896 200.606H304.142C304.422 201.656 305.122 202.174 306.186 202.174C307.6 202.174 308.328 201.208 308.328 199.85C308.328 198.492 307.67 197.54 306.228 197.54C305.444 197.54 304.856 197.834 304.338 198.52H303.218L303.946 193.214Z" fill="rgb(var(--colour-main))"></path><rect x="54" y="180" width="270" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="54" y="216" width="270" height="36" fill="rgb(var(--colour-negative))"></rect><rect x="66" y="228" width="12" height="12" rx="6" fill="rgb(var(--colour-negative))"></rect><path d="M66 234C66 230.686 68.6863 228 72 228V234H66Z" fill="#5AC93B"></path><path d="M85.736 229.214H87.038V237.852H91.7V239H85.736V229.214ZM96.4063 230.614V229.214H97.8063V230.614H96.4063ZM97.6803 231.664V238.048H99.9343V239H94.0123V238.048H96.5323V232.616H94.0123V231.664H97.6803ZM102.723 239V231.664H103.801V232.882C104.375 231.986 105.075 231.454 106.237 231.454C107.511 231.454 108.561 232.098 108.561 233.456V239H107.399V233.918C107.399 232.938 106.699 232.476 105.887 232.476C104.571 232.476 103.885 233.61 103.885 234.87V239H102.723ZM117.481 236.732C117.229 238.272 116.067 239.252 114.345 239.252C112.133 239.252 111.013 237.642 111.013 235.402C111.013 232.952 112.343 231.44 114.373 231.44C116.641 231.44 117.635 233.134 117.635 235.682H112.231C112.273 237.124 112.973 238.174 114.387 238.174C115.339 238.174 115.983 237.712 116.305 236.732H117.481ZM114.359 232.518C113.043 232.518 112.357 233.498 112.259 234.73H116.375C116.375 233.512 115.619 232.518 114.359 232.518Z" fill="rgb(var(--colour-main))"></path><path d="M303.946 229.214H309.07V230.292H304.954L304.548 233.148C305.08 232.672 305.766 232.504 306.438 232.504C308.202 232.504 309.588 233.764 309.588 235.794C309.588 237.796 308.3 239.252 306.186 239.252C305.052 239.252 303.204 238.762 302.896 236.606H304.142C304.422 237.656 305.122 238.174 306.186 238.174C307.6 238.174 308.328 237.208 308.328 235.85C308.328 234.492 307.67 233.54 306.228 233.54C305.444 233.54 304.856 233.834 304.338 234.52H303.218L303.946 229.214Z" fill="rgb(var(--colour-main))"></path><rect x="54" y="216" width="270" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M55.736 103.214H57.038V111.852H61.7V113H55.736V103.214ZM70.1723 110.732C69.9203 112.272 68.7583 113.252 67.0363 113.252C64.8243 113.252 63.7043 111.642 63.7043 109.402C63.7043 106.952 65.0343 105.44 67.0643 105.44C69.3323 105.44 70.3263 107.134 70.3263 109.682H64.9223C64.9643 111.124 65.6643 112.174 67.0783 112.174C68.0303 112.174 68.6743 111.712 68.9963 110.732H70.1723ZM67.0503 106.518C65.7343 106.518 65.0483 107.498 64.9503 108.73H69.0663C69.0663 107.512 68.3103 106.518 67.0503 106.518ZM77.5806 102.794H78.7426V113H77.7066V111.964C77.1186 112.818 76.3346 113.252 75.3686 113.252C73.1986 113.252 72.1766 111.516 72.1766 109.262C72.1766 107.148 73.2406 105.44 75.3266 105.44C76.3206 105.44 77.0766 105.818 77.5806 106.574V102.794ZM75.5226 106.532C74.1506 106.532 73.3946 107.764 73.3946 109.346C73.3946 110.844 74.0386 112.16 75.5366 112.16C77.0066 112.16 77.5806 110.746 77.5806 109.388C77.5806 107.918 76.9926 106.532 75.5226 106.532ZM84.1069 116.052C82.5109 116.052 81.3069 115.394 81.1109 113.84H82.3289C82.4969 114.666 83.0709 115.072 84.1349 115.072C85.6049 115.072 86.2069 114.344 86.2069 112.384V111.964C85.7729 112.818 84.9889 113.252 84.0229 113.252C81.8529 113.252 80.8309 111.558 80.8309 109.304C80.8309 107.148 81.8949 105.44 83.9809 105.44C84.9749 105.44 85.7309 105.818 86.2349 106.574V105.664H87.3969V111.81C87.3969 112.832 87.3129 113.602 87.1449 114.134C86.7389 115.408 85.6889 116.052 84.1069 116.052ZM84.1909 112.16C85.6609 112.16 86.2349 110.746 86.2349 109.388C86.2349 107.918 85.6469 106.532 84.1769 106.532C82.8049 106.532 82.0489 107.764 82.0489 109.346C82.0489 110.844 82.6929 112.16 84.1909 112.16ZM96.1352 110.732C95.8832 112.272 94.7212 113.252 92.9992 113.252C90.7872 113.252 89.6672 111.642 89.6672 109.402C89.6672 106.952 90.9972 105.44 93.0272 105.44C95.2952 105.44 96.2892 107.134 96.2892 109.682H90.8852C90.9272 111.124 91.6272 112.174 93.0412 112.174C93.9932 112.174 94.6372 111.712 94.9592 110.732H96.1352ZM93.0132 106.518C91.6972 106.518 91.0112 107.498 90.9132 108.73H95.0292C95.0292 107.512 94.2732 106.518 93.0132 106.518ZM99.0075 113V105.664H100.085V107.246C100.575 106.196 101.513 105.454 102.717 105.454C104.397 105.454 105.265 106.378 105.405 107.834H104.243C104.075 106.952 103.599 106.476 102.605 106.476C101.135 106.476 100.183 107.722 100.183 109.444V113H99.0075Z" fill="rgb(var(--colour-main-500))"></path><rect width="12" height="12" transform="translate(36 102)" fill="rgb(var(--colour-main-500))"></rect><rect x="42" y="108" width="6" height="6" fill="rgb(var(--colour-inactive-br))"></rect><rect x="42" y="102" width="6" height="6" fill="rgb(var(--colour-inactive-tr))"></rect><rect x="36" y="108" width="6" height="6" fill="rgb(var(--colour-inactive-bl))"></rect><rect x="36" y="102" width="6" height="6" fill="rgb(var(--colour-main-400))"></rect><defs><clipPath id="clip0_2740_6666_dark"><rect x="54" y="270" width="270" height="18" fill="rgb(var(--colour-negative))"></rect></clipPath></defs></svg></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">There are four types of Ledger Accounts, split into two layers:</p><div class="grid phone:grid-cols-1  tablet:grid-cols-2 tablet:gap-x-4 my-f2"><div class="mb-f2"><p class="text-main-500">State</p><div class="flex flex-row items-center gap-x-f1"><div class="laptop:scale-[125%]"><svg width="12" height="12" class="shrink-0" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" data-testid="account-type-icon-asset"><circle cx="6" cy="6" r="6" fill="rgb(var(--colour-asset-green))"></circle><path d="M3.98999 9.19595L4.64999 7.29995H7.32599L7.96199 9.19595H9.11399L6.66599 2.19995H5.38199L2.88599 9.19595H3.98999ZM4.94999 6.41195L6.00599 3.36395L7.02599 6.41195H4.94999Z" fill="rgb(var(--colour-negative))"></path></svg></div><span> Assets: what you own</span></div><div class="flex flex-row items-center gap-x-f1"><div class="laptop:scale-[125%]"><svg width="12" height="12" class="shrink-0" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" data-testid="account-type-icon-liability"><circle cx="6" cy="6" r="6" fill="rgb(var(--colour-liability-red))"></circle><path d="M4.00366 9.29678H8.95966V8.38478H5.05966V2.30078H4.00366V9.29678Z" fill="rgb(var(--colour-negative))"></path></svg></div><span> Liabilities: what you owe</span></div></div><div><p class="text-main-500">Change</p><div class="flex flex-row items-center gap-x-f1"><div class="laptop:scale-[125%]"><svg width="12" height="12" class="shrink-0" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" data-testid="account-type-icon-income"><circle cx="6" cy="6" r="6" fill="rgb(var(--colour-income-blue))"></circle><path d="M3.82812 9.49795H8.17212V8.60995H6.50412V3.38995H8.17212V2.50195H3.82812V3.38995H5.48412V8.60995H3.82812V9.49795Z" fill="rgb(var(--colour-negative))"></path></svg></div><span> Income: what you&#x27;ve earned</span></div><div class="flex flex-row items-center gap-x-f1"><div class="laptop:scale-[125%]"><svg width="12" height="12" class="shrink-0" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" data-testid="account-type-icon-expense"><circle cx="6" cy="6" r="6" fill="rgb(var(--colour-expense-yellow))"></circle><path d="M8.3281 6.36595V5.45395H4.6561V3.41395H8.5081V2.50195H3.6001V9.49795H8.6881V8.58595H4.6561V6.36595H8.3281Z" fill="#0D0D0D"></path></svg></div><span> Expense: what you&#x27;ve spent</span></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">State Ledger Accounts track your product&#x27;s financial relationships with your bank, payment systems and users. <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#generate-reports-balance-sheet">Balance Sheets</a> are a report of State Ledger Account balances.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Change Ledger Accounts track when and how your product makes a profit or loss. They produce <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#generate-reports-income-statement">Income Statements</a>.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Within a Schema, the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">chartOfAccounts</code> key contains a nested tree of Ledger Accounts, up to a maximum depth of 10:</p><div class="pt-f2"><div class="hidden tablet:block"><svg width="100%" height="100%" viewBox="0 0 621 450" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="621" height="450" fill="rgb(var(--colour-negative))"></rect><path d="M26.05 24.944H24.72C24.44 23.88 23.922 23.138 22.676 23.138C20.814 23.138 20.114 24.776 20.114 27.128C20.114 29.774 21.01 31.104 22.676 31.104C23.978 31.104 24.538 30.264 24.818 28.682H26.148C25.882 31.048 24.58 32.252 22.662 32.252C20.114 32.252 18.756 30.278 18.756 27.142C18.756 24.328 19.82 21.99 22.718 21.99C24.664 21.99 25.756 23.264 26.05 24.944ZM28.0683 32V21.794H29.2303V25.756C29.7483 24.986 30.4203 24.454 31.5823 24.454C32.8563 24.454 33.9063 25.098 33.9063 26.456V32H32.7443V26.918C32.7443 25.938 32.0443 25.476 31.2323 25.476C29.9163 25.476 29.2303 26.61 29.2303 27.87V32H28.0683ZM43.2746 31.23V32.112C42.9806 32.196 42.7566 32.238 42.5746 32.238C41.7626 32.238 41.3566 31.888 41.2726 31.132C40.4466 31.944 39.7186 32.252 38.7806 32.252C37.3526 32.252 36.3866 31.454 36.3866 30.096C36.3866 28.584 37.5346 28.038 38.3886 27.898C38.6406 27.856 39.1866 27.772 40.0126 27.66C40.9506 27.534 41.2586 27.352 41.2586 26.876V26.624C41.2586 25.896 40.6846 25.532 39.5786 25.532C38.5006 25.532 37.9686 25.938 37.8706 26.834H36.6946C36.7226 25.14 37.8986 24.454 39.6346 24.454C41.4406 24.454 42.3926 25.154 42.3926 26.456V30.684C42.3926 31.062 42.6026 31.258 43.0226 31.258C43.0926 31.258 43.2046 31.244 43.2746 31.23ZM41.2586 29.452V28.29C40.7686 28.514 39.9706 28.64 39.3546 28.71C38.2626 28.836 37.5766 29.144 37.5766 30.068C37.5766 30.796 38.1366 31.23 39.0746 31.23C40.0966 31.23 41.2586 30.474 41.2586 29.452ZM45.6989 32V24.664H46.7769V26.246C47.2669 25.196 48.2049 24.454 49.4089 24.454C51.0889 24.454 51.9569 25.378 52.0969 26.834H50.9349C50.7669 25.952 50.2909 25.476 49.2969 25.476C47.8269 25.476 46.8749 26.722 46.8749 28.444V32H45.6989ZM56.9992 24.664H59.8832V25.616H56.9992V29.704C56.9992 30.782 57.5732 31.146 58.6372 31.146C59.1132 31.146 59.5332 31.104 59.8832 31.006V32.028C59.4212 32.168 58.9592 32.196 58.5672 32.196C56.7892 32.196 55.8372 31.51 55.8372 29.914V25.616H53.7232V24.664H55.8372V22.648H56.9992V24.664ZM74.2518 24.44C76.5058 24.44 77.5698 26.12 77.5698 28.346C77.5698 30.572 76.5058 32.252 74.2518 32.252C71.9978 32.252 70.9338 30.572 70.9338 28.346C70.9338 26.12 71.9978 24.44 74.2518 24.44ZM74.2518 25.518C72.7678 25.518 72.1518 26.848 72.1518 28.346C72.1518 29.844 72.7678 31.174 74.2518 31.174C75.7358 31.174 76.3518 29.844 76.3518 28.346C76.3518 26.848 75.7358 25.518 74.2518 25.518ZM83.3681 24.664H86.2661V25.616H83.3681V32H82.2061V25.616H79.8261V24.664H82.2061V23.852C82.2061 22.326 83.1161 21.654 84.9081 21.654C85.3421 21.654 85.7621 21.668 86.2521 21.738V22.746C85.8601 22.704 85.4541 22.676 85.1881 22.676C83.8441 22.676 83.3681 22.956 83.3681 23.95V24.664ZM102.763 32L101.895 29.074H98.5207L97.6527 32H96.3087L99.4027 22.214H101.041L104.121 32H102.763ZM98.8427 27.982H101.573L100.201 23.39L98.8427 27.982ZM112.005 27.086H110.829C110.703 26.12 110.059 25.518 109.037 25.518C107.525 25.518 106.937 26.96 106.937 28.416C106.937 29.872 107.595 31.174 109.065 31.174C110.087 31.174 110.717 30.6 110.913 29.438H112.089C111.935 31.202 110.843 32.252 109.037 32.252C106.895 32.252 105.719 30.572 105.719 28.416C105.719 26.218 106.867 24.44 109.051 24.44C110.843 24.44 111.963 25.532 112.005 27.086ZM120.659 27.086H119.483C119.357 26.12 118.713 25.518 117.691 25.518C116.179 25.518 115.591 26.96 115.591 28.416C115.591 29.872 116.249 31.174 117.719 31.174C118.741 31.174 119.371 30.6 119.567 29.438H120.743C120.589 31.202 119.497 32.252 117.691 32.252C115.549 32.252 114.373 30.572 114.373 28.416C114.373 26.218 115.521 24.44 117.705 24.44C119.497 24.44 120.617 25.532 120.659 27.086ZM126.178 24.44C128.432 24.44 129.496 26.12 129.496 28.346C129.496 30.572 128.432 32.252 126.178 32.252C123.924 32.252 122.86 30.572 122.86 28.346C122.86 26.12 123.924 24.44 126.178 24.44ZM126.178 25.518C124.694 25.518 124.078 26.848 124.078 28.346C124.078 29.844 124.694 31.174 126.178 31.174C127.662 31.174 128.278 29.844 128.278 28.346C128.278 26.848 127.662 25.518 126.178 25.518ZM137.758 24.664V32H136.708V30.908C136.036 31.874 135.336 32.252 134.258 32.252C133.628 32.252 133.096 32.112 132.676 31.818C132.172 31.454 131.92 30.936 131.92 30.25V24.664H133.082V29.788C133.082 30.278 133.25 30.656 133.572 30.908C133.838 31.118 134.188 31.23 134.594 31.23C135.14 31.23 135.602 31.034 135.98 30.628C136.386 30.194 136.596 29.564 136.596 28.738V24.664H137.758ZM140.574 32V24.664H141.652V25.882C142.226 24.986 142.926 24.454 144.088 24.454C145.362 24.454 146.412 25.098 146.412 26.456V32H145.25V26.918C145.25 25.938 144.55 25.476 143.738 25.476C142.422 25.476 141.736 26.61 141.736 27.87V32H140.574ZM152.196 24.664H155.08V25.616H152.196V29.704C152.196 30.782 152.77 31.146 153.834 31.146C154.31 31.146 154.73 31.104 155.08 31.006V32.028C154.618 32.168 154.156 32.196 153.764 32.196C151.986 32.196 151.034 31.51 151.034 29.914V25.616H148.92V24.664H151.034V22.648H152.196V24.664ZM163.483 26.666H162.265C162.237 25.938 161.677 25.476 160.795 25.476C159.843 25.476 159.199 25.896 159.199 26.554C159.199 27.072 159.563 27.38 160.249 27.562L161.915 27.996C163.147 28.318 163.777 28.92 163.777 29.956C163.777 31.384 162.657 32.252 160.837 32.252C158.919 32.252 157.911 31.412 157.827 29.774H159.059C159.171 30.768 159.773 31.216 160.865 31.216C161.901 31.216 162.587 30.824 162.587 30.138C162.587 29.508 162.279 29.242 161.481 29.032L159.941 28.626C158.611 28.276 158.009 27.73 158.009 26.61C158.009 25.28 159.101 24.44 160.823 24.44C162.531 24.44 163.455 25.28 163.483 26.666Z" fill="rgb(var(--colour-main))"></path><rect x="54" y="153" width="171" height="144" stroke="rgb(var(--colour-main-500))"></rect><circle cx="72" cy="171" r="6" fill="#EC3425"></circle><path d="M70.1 167.505V174.495H74.36V173.675H71.03V167.505H70.1Z" fill="rgb(var(--colour-negative))"></path><path d="M85.736 166.214H87.038V174.852H91.7V176H85.736V166.214ZM96.4063 167.614V166.214H97.8063V167.614H96.4063ZM97.6803 168.664V175.048H99.9343V176H94.0123V175.048H96.5323V169.616H94.0123V168.664H97.6803ZM109.275 175.23V176.112C108.981 176.196 108.757 176.238 108.575 176.238C107.763 176.238 107.357 175.888 107.273 175.132C106.447 175.944 105.719 176.252 104.781 176.252C103.353 176.252 102.387 175.454 102.387 174.096C102.387 172.584 103.535 172.038 104.389 171.898C104.641 171.856 105.187 171.772 106.013 171.66C106.951 171.534 107.259 171.352 107.259 170.876V170.624C107.259 169.896 106.685 169.532 105.579 169.532C104.501 169.532 103.969 169.938 103.871 170.834H102.695C102.723 169.14 103.899 168.454 105.635 168.454C107.441 168.454 108.393 169.154 108.393 170.456V174.684C108.393 175.062 108.603 175.258 109.023 175.258C109.093 175.258 109.205 175.244 109.275 175.23ZM107.259 173.452V172.29C106.769 172.514 105.971 172.64 105.355 172.71C104.263 172.836 103.577 173.144 103.577 174.068C103.577 174.796 104.137 175.23 105.075 175.23C106.097 175.23 107.259 174.474 107.259 173.452ZM111.181 176V165.794H112.343V169.644C112.875 168.846 113.631 168.44 114.611 168.44C116.767 168.44 117.747 170.134 117.747 172.262C117.747 174.516 116.641 176.252 114.555 176.252C113.547 176.252 112.777 175.832 112.231 174.992V176H111.181ZM114.401 169.532C112.917 169.532 112.343 170.974 112.343 172.388C112.343 173.774 112.917 175.16 114.401 175.16C115.871 175.16 116.543 173.816 116.543 172.388C116.543 170.862 115.857 169.532 114.401 169.532ZM122.369 167.614V166.214H123.769V167.614H122.369ZM123.643 168.664V175.048H125.897V176H119.975V175.048H122.495V169.616H119.975V168.664H123.643ZM132.577 165.794V175.048H134.831V176H128.909V175.048H131.443V166.746H128.909V165.794H132.577ZM139.678 167.614V166.214H141.078V167.614H139.678ZM140.952 168.664V175.048H143.206V176H137.284V175.048H139.804V169.616H137.284V168.664H140.952ZM148.962 168.664H151.846V169.616H148.962V173.704C148.962 174.782 149.536 175.146 150.6 175.146C151.076 175.146 151.496 175.104 151.846 175.006V176.028C151.384 176.168 150.922 176.196 150.53 176.196C148.752 176.196 147.8 175.51 147.8 173.914V169.616H145.686V168.664H147.8V166.648H148.962V168.664ZM156.986 167.614V166.214H158.386V167.614H156.986ZM158.26 168.664V175.048H160.514V176H154.592V175.048H157.112V169.616H154.592V168.664H158.26ZM169.407 173.732C169.155 175.272 167.993 176.252 166.271 176.252C164.059 176.252 162.939 174.642 162.939 172.402C162.939 169.952 164.269 168.44 166.299 168.44C168.567 168.44 169.561 170.134 169.561 172.682H164.157C164.199 174.124 164.899 175.174 166.313 175.174C167.265 175.174 167.909 174.712 168.231 173.732H169.407ZM166.285 169.518C164.969 169.518 164.283 170.498 164.185 171.73H168.301C168.301 170.512 167.545 169.518 166.285 169.518ZM177.557 170.666H176.339C176.311 169.938 175.751 169.476 174.869 169.476C173.917 169.476 173.273 169.896 173.273 170.554C173.273 171.072 173.637 171.38 174.323 171.562L175.989 171.996C177.221 172.318 177.851 172.92 177.851 173.956C177.851 175.384 176.731 176.252 174.911 176.252C172.993 176.252 171.985 175.412 171.901 173.774H173.133C173.245 174.768 173.847 175.216 174.939 175.216C175.975 175.216 176.661 174.824 176.661 174.138C176.661 173.508 176.353 173.242 175.555 173.032L174.015 172.626C172.685 172.276 172.083 171.73 172.083 170.61C172.083 169.28 173.175 168.44 174.897 168.44C176.605 168.44 177.529 169.28 177.557 170.666Z" fill="rgb(var(--colour-main))"></path><line x1="234" y1="171.5" x2="225" y2="171.5" stroke="rgb(var(--colour-main-500))"></line><rect x="234" y="153" width="162" height="144" stroke="rgb(var(--colour-main-500))"></rect><circle cx="252" cy="171" r="6" fill="#EC3425"></circle><path d="M250.1 167.505V174.495H254.36V173.675H251.03V167.505H250.1Z" fill="rgb(var(--colour-negative))"></path><path d="M270.426 172.934V166.214H271.728V173.116C271.728 175.384 270.16 176.252 268.312 176.252C266.408 176.252 264.924 175.342 264.924 173.116V166.214H266.226V172.934C266.226 174.642 267.192 175.104 268.312 175.104C269.446 175.104 270.426 174.614 270.426 172.934ZM279.668 170.666H278.45C278.422 169.938 277.862 169.476 276.98 169.476C276.028 169.476 275.384 169.896 275.384 170.554C275.384 171.072 275.748 171.38 276.434 171.562L278.1 171.996C279.332 172.318 279.962 172.92 279.962 173.956C279.962 175.384 278.842 176.252 277.022 176.252C275.104 176.252 274.096 175.412 274.012 173.774H275.244C275.356 174.768 275.958 175.216 277.05 175.216C278.086 175.216 278.772 174.824 278.772 174.138C278.772 173.508 278.464 173.242 277.666 173.032L276.126 172.626C274.796 172.276 274.194 171.73 274.194 170.61C274.194 169.28 275.286 168.44 277.008 168.44C278.716 168.44 279.64 169.28 279.668 170.666ZM288.827 173.732C288.575 175.272 287.413 176.252 285.691 176.252C283.479 176.252 282.359 174.642 282.359 172.402C282.359 169.952 283.689 168.44 285.719 168.44C287.987 168.44 288.981 170.134 288.981 172.682H283.577C283.619 174.124 284.319 175.174 285.733 175.174C286.685 175.174 287.329 174.712 287.651 173.732H288.827ZM285.705 169.518C284.389 169.518 283.703 170.498 283.605 171.73H287.721C287.721 170.512 286.965 169.518 285.705 169.518ZM291.699 176V168.664H292.777V170.246C293.267 169.196 294.205 168.454 295.409 168.454C297.089 168.454 297.957 169.378 298.097 170.834H296.935C296.767 169.952 296.291 169.476 295.297 169.476C293.827 169.476 292.875 170.722 292.875 172.444V176H291.699ZM305.631 170.666H304.413C304.385 169.938 303.825 169.476 302.943 169.476C301.991 169.476 301.347 169.896 301.347 170.554C301.347 171.072 301.711 171.38 302.397 171.562L304.063 171.996C305.295 172.318 305.925 172.92 305.925 173.956C305.925 175.384 304.805 176.252 302.985 176.252C301.067 176.252 300.059 175.412 299.975 173.774H301.207C301.319 174.768 301.921 175.216 303.013 175.216C304.049 175.216 304.735 174.824 304.735 174.138C304.735 173.508 304.427 173.242 303.629 173.032L302.089 172.626C300.759 172.276 300.157 171.73 300.157 170.61C300.157 169.28 301.249 168.44 302.971 168.44C304.679 168.44 305.603 169.28 305.631 170.666Z" fill="rgb(var(--colour-main))"></path><line x1="405" y1="171.5" x2="396" y2="171.5" stroke="rgb(var(--colour-main-500))"></line><rect x="405" y="153" width="162" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="423" cy="171" r="6" fill="#EC3425"></circle><path d="M421.1 167.505V174.495H425.36V173.675H422.03V167.505H421.1Z" fill="rgb(var(--colour-negative))"></path><path d="M441.874 176L441.006 173.074H437.632L436.764 176H435.42L438.514 166.214H440.152L443.232 176H441.874ZM437.954 171.982H440.684L439.312 167.39L437.954 171.982ZM451.312 168.664L448.624 176H447.336L444.648 168.664H445.894L448.008 174.6L450.108 168.664H451.312ZM460.275 175.23V176.112C459.981 176.196 459.757 176.238 459.575 176.238C458.763 176.238 458.357 175.888 458.273 175.132C457.447 175.944 456.719 176.252 455.781 176.252C454.353 176.252 453.387 175.454 453.387 174.096C453.387 172.584 454.535 172.038 455.389 171.898C455.641 171.856 456.187 171.772 457.013 171.66C457.951 171.534 458.259 171.352 458.259 170.876V170.624C458.259 169.896 457.685 169.532 456.579 169.532C455.501 169.532 454.969 169.938 454.871 170.834H453.695C453.723 169.14 454.899 168.454 456.635 168.454C458.441 168.454 459.393 169.154 459.393 170.456V174.684C459.393 175.062 459.603 175.258 460.023 175.258C460.093 175.258 460.205 175.244 460.275 175.23ZM458.259 173.452V172.29C457.769 172.514 456.971 172.64 456.355 172.71C455.263 172.836 454.577 173.144 454.577 174.068C454.577 174.796 455.137 175.23 456.075 175.23C457.097 175.23 458.259 174.474 458.259 173.452ZM464.715 167.614V166.214H466.115V167.614H464.715ZM465.989 168.664V175.048H468.243V176H462.321V175.048H464.841V169.616H462.321V168.664H465.989ZM474.923 165.794V175.048H477.177V176H471.255V175.048H473.789V166.746H471.255V165.794H474.923ZM486.237 175.23V176.112C485.943 176.196 485.719 176.238 485.537 176.238C484.725 176.238 484.319 175.888 484.235 175.132C483.409 175.944 482.681 176.252 481.743 176.252C480.315 176.252 479.349 175.454 479.349 174.096C479.349 172.584 480.497 172.038 481.351 171.898C481.603 171.856 482.149 171.772 482.975 171.66C483.913 171.534 484.221 171.352 484.221 170.876V170.624C484.221 169.896 483.647 169.532 482.541 169.532C481.463 169.532 480.931 169.938 480.833 170.834H479.657C479.685 169.14 480.861 168.454 482.597 168.454C484.403 168.454 485.355 169.154 485.355 170.456V174.684C485.355 175.062 485.565 175.258 485.985 175.258C486.055 175.258 486.167 175.244 486.237 175.23ZM484.221 173.452V172.29C483.731 172.514 482.933 172.64 482.317 172.71C481.225 172.836 480.539 173.144 480.539 174.068C480.539 174.796 481.099 175.23 482.037 175.23C483.059 175.23 484.221 174.474 484.221 173.452ZM488.144 176V165.794H489.306V169.644C489.838 168.846 490.594 168.44 491.574 168.44C493.73 168.44 494.71 170.134 494.71 172.262C494.71 174.516 493.604 176.252 491.518 176.252C490.51 176.252 489.74 175.832 489.194 174.992V176H488.144ZM491.364 169.532C489.88 169.532 489.306 170.974 489.306 172.388C489.306 173.774 489.88 175.16 491.364 175.16C492.834 175.16 493.506 173.816 493.506 172.388C493.506 170.862 492.82 169.532 491.364 169.532ZM500.886 165.794V175.048H503.14V176H497.218V175.048H499.752V166.746H497.218V165.794H500.886ZM511.752 173.732C511.5 175.272 510.338 176.252 508.616 176.252C506.404 176.252 505.284 174.642 505.284 172.402C505.284 169.952 506.614 168.44 508.644 168.44C510.912 168.44 511.906 170.134 511.906 172.682H506.502C506.544 174.124 507.244 175.174 508.658 175.174C509.61 175.174 510.254 174.712 510.576 173.732H511.752ZM508.63 169.518C507.314 169.518 506.628 170.498 506.53 171.73H510.646C510.646 170.512 509.89 169.518 508.63 169.518Z" fill="rgb(var(--colour-main))"></path><line x1="405" y1="225.5" x2="396" y2="225.5" stroke="rgb(var(--colour-main-500))"></line><rect x="405" y="207" width="162" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="423" cy="225" r="6" fill="#EC3425"></circle><path d="M421.1 221.505V228.495H425.36V227.675H422.03V221.505H421.1Z" fill="rgb(var(--colour-negative))"></path><path d="M436.274 230V220.214H439.844C441.594 220.214 442.994 221.208 442.994 223.14C442.994 225.072 441.594 226.066 439.844 226.066H437.548V230H436.274ZM437.548 224.96H439.676C440.922 224.96 441.664 224.26 441.664 223.14C441.664 222.02 440.922 221.32 439.676 221.32H437.548V224.96ZM451.172 227.732C450.92 229.272 449.758 230.252 448.036 230.252C445.824 230.252 444.704 228.642 444.704 226.402C444.704 223.952 446.034 222.44 448.064 222.44C450.332 222.44 451.326 224.134 451.326 226.682H445.922C445.964 228.124 446.664 229.174 448.078 229.174C449.03 229.174 449.674 228.712 449.996 227.732H451.172ZM448.05 223.518C446.734 223.518 446.048 224.498 445.95 225.73H450.066C450.066 224.512 449.31 223.518 448.05 223.518ZM453.723 230V222.664H454.801V223.882C455.375 222.986 456.075 222.454 457.237 222.454C458.511 222.454 459.561 223.098 459.561 224.456V230H458.399V224.918C458.399 223.938 457.699 223.476 456.887 223.476C455.571 223.476 454.885 224.61 454.885 225.87V230H453.723ZM467.235 219.794H468.397V230H467.361V228.964C466.773 229.818 465.989 230.252 465.023 230.252C462.853 230.252 461.831 228.516 461.831 226.262C461.831 224.148 462.895 222.44 464.981 222.44C465.975 222.44 466.731 222.818 467.235 223.574V219.794ZM465.177 223.532C463.805 223.532 463.049 224.764 463.049 226.346C463.049 227.844 463.693 229.16 465.191 229.16C466.661 229.16 467.235 227.746 467.235 226.388C467.235 224.918 466.647 223.532 465.177 223.532ZM473.369 221.614V220.214H474.769V221.614H473.369ZM474.643 222.664V229.048H476.897V230H470.975V229.048H473.495V223.616H470.975V222.664H474.643ZM479.685 230V222.664H480.763V223.882C481.337 222.986 482.037 222.454 483.199 222.454C484.473 222.454 485.523 223.098 485.523 224.456V230H484.361V224.918C484.361 223.938 483.661 223.476 482.849 223.476C481.533 223.476 480.847 224.61 480.847 225.87V230H479.685ZM491.07 233.052C489.474 233.052 488.27 232.394 488.074 230.84H489.292C489.46 231.666 490.034 232.072 491.098 232.072C492.568 232.072 493.17 231.344 493.17 229.384V228.964C492.736 229.818 491.952 230.252 490.986 230.252C488.816 230.252 487.794 228.558 487.794 226.304C487.794 224.148 488.858 222.44 490.944 222.44C491.938 222.44 492.694 222.818 493.198 223.574V222.664H494.36V228.81C494.36 229.832 494.276 230.602 494.108 231.134C493.702 232.408 492.652 233.052 491.07 233.052ZM491.154 229.16C492.624 229.16 493.198 227.746 493.198 226.388C493.198 224.918 492.61 223.532 491.14 223.532C489.768 223.532 489.012 224.764 489.012 226.346C489.012 227.844 489.656 229.16 491.154 229.16Z" fill="rgb(var(--colour-main))"></path><line x1="405" y1="279.5" x2="396" y2="279.5" stroke="rgb(var(--colour-main-500))"></line><rect x="405" y="261" width="162" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="423" cy="279" r="6" fill="#EC3425"></circle><path d="M421.1 275.505V282.495H425.36V281.675H422.03V275.505H421.1Z" fill="rgb(var(--colour-negative))"></path><path d="M440.096 284H436.288V274.214H439.774C441.524 274.214 442.728 275.166 442.728 276.706C442.728 277.644 442.28 278.582 441.426 278.89C442.448 279.226 443.05 280.038 443.05 281.214C443.05 282.684 442.028 284 440.096 284ZM437.562 275.32V278.414H439.578C440.628 278.414 441.398 278.078 441.398 276.888C441.398 275.684 440.628 275.32 439.578 275.32H437.562ZM437.562 279.52V282.894H439.942C441.174 282.894 441.72 282.194 441.72 281.2C441.72 280.22 441.174 279.52 439.942 279.52H437.562ZM448.96 273.794V283.048H451.214V284H445.292V283.048H447.826V274.746H445.292V273.794H448.96ZM456.635 276.44C458.889 276.44 459.953 278.12 459.953 280.346C459.953 282.572 458.889 284.252 456.635 284.252C454.381 284.252 453.317 282.572 453.317 280.346C453.317 278.12 454.381 276.44 456.635 276.44ZM456.635 277.518C455.151 277.518 454.535 278.848 454.535 280.346C454.535 281.844 455.151 283.174 456.635 283.174C458.119 283.174 458.735 281.844 458.735 280.346C458.735 278.848 458.119 277.518 456.635 277.518ZM468.425 279.086H467.249C467.123 278.12 466.479 277.518 465.457 277.518C463.945 277.518 463.357 278.96 463.357 280.416C463.357 281.872 464.015 283.174 465.485 283.174C466.507 283.174 467.137 282.6 467.333 281.438H468.509C468.355 283.202 467.263 284.252 465.457 284.252C463.315 284.252 462.139 282.572 462.139 280.416C462.139 278.218 463.287 276.44 465.471 276.44C467.263 276.44 468.383 277.532 468.425 279.086ZM472.683 284H471.535V273.794H472.683V279.73L475.833 276.664H477.317L474.671 279.282L477.751 284H476.365L473.803 280.052L472.683 281.144V284ZM485.789 281.732C485.537 283.272 484.375 284.252 482.653 284.252C480.441 284.252 479.321 282.642 479.321 280.402C479.321 277.952 480.651 276.44 482.681 276.44C484.949 276.44 485.943 278.134 485.943 280.682H480.539C480.581 282.124 481.281 283.174 482.695 283.174C483.647 283.174 484.291 282.712 484.613 281.732H485.789ZM482.667 277.518C481.351 277.518 480.665 278.498 480.567 279.73H484.683C484.683 278.512 483.927 277.518 482.667 277.518ZM493.198 273.794H494.36V284H493.324V282.964C492.736 283.818 491.952 284.252 490.986 284.252C488.816 284.252 487.794 282.516 487.794 280.262C487.794 278.148 488.858 276.44 490.944 276.44C491.938 276.44 492.694 276.818 493.198 277.574V273.794ZM491.14 277.532C489.768 277.532 489.012 278.764 489.012 280.346C489.012 281.844 489.656 283.16 491.154 283.16C492.624 283.16 493.198 281.746 493.198 280.388C493.198 278.918 492.61 277.532 491.14 277.532Z" fill="rgb(var(--colour-main))"></path></svg></div><div class="block tablet:hidden"><svg width="100%" height="100%" viewBox="0 0 379 414" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="378" height="414" transform="translate(0.889648)" fill="rgb(var(--colour-negative))"></rect><path d="M26.9396 24.944H25.6096C25.3296 23.88 24.8116 23.138 23.5656 23.138C21.7036 23.138 21.0036 24.776 21.0036 27.128C21.0036 29.774 21.8996 31.104 23.5656 31.104C24.8676 31.104 25.4276 30.264 25.7076 28.682H27.0376C26.7716 31.048 25.4696 32.252 23.5516 32.252C21.0036 32.252 19.6456 30.278 19.6456 27.142C19.6456 24.328 20.7096 21.99 23.6076 21.99C25.5536 21.99 26.6456 23.264 26.9396 24.944ZM28.9579 32V21.794H30.1199V25.756C30.6379 24.986 31.3099 24.454 32.4719 24.454C33.7459 24.454 34.7959 25.098 34.7959 26.456V32H33.6339V26.918C33.6339 25.938 32.9339 25.476 32.1219 25.476C30.8059 25.476 30.1199 26.61 30.1199 27.87V32H28.9579ZM44.1642 31.23V32.112C43.8702 32.196 43.6462 32.238 43.4642 32.238C42.6522 32.238 42.2462 31.888 42.1622 31.132C41.3362 31.944 40.6082 32.252 39.6702 32.252C38.2422 32.252 37.2762 31.454 37.2762 30.096C37.2762 28.584 38.4242 28.038 39.2782 27.898C39.5302 27.856 40.0762 27.772 40.9022 27.66C41.8402 27.534 42.1482 27.352 42.1482 26.876V26.624C42.1482 25.896 41.5742 25.532 40.4682 25.532C39.3902 25.532 38.8582 25.938 38.7602 26.834H37.5842C37.6122 25.14 38.7882 24.454 40.5242 24.454C42.3302 24.454 43.2822 25.154 43.2822 26.456V30.684C43.2822 31.062 43.4922 31.258 43.9122 31.258C43.9822 31.258 44.0942 31.244 44.1642 31.23ZM42.1482 29.452V28.29C41.6582 28.514 40.8602 28.64 40.2442 28.71C39.1522 28.836 38.4662 29.144 38.4662 30.068C38.4662 30.796 39.0262 31.23 39.9642 31.23C40.9862 31.23 42.1482 30.474 42.1482 29.452ZM46.5885 32V24.664H47.6665V26.246C48.1565 25.196 49.0945 24.454 50.2985 24.454C51.9785 24.454 52.8465 25.378 52.9865 26.834H51.8245C51.6565 25.952 51.1805 25.476 50.1865 25.476C48.7165 25.476 47.7645 26.722 47.7645 28.444V32H46.5885ZM57.8888 24.664H60.7728V25.616H57.8888V29.704C57.8888 30.782 58.4628 31.146 59.5268 31.146C60.0028 31.146 60.4228 31.104 60.7728 31.006V32.028C60.3108 32.168 59.8488 32.196 59.4568 32.196C57.6788 32.196 56.7268 31.51 56.7268 29.914V25.616H54.6128V24.664H56.7268V22.648H57.8888V24.664ZM75.1414 24.44C77.3954 24.44 78.4594 26.12 78.4594 28.346C78.4594 30.572 77.3954 32.252 75.1414 32.252C72.8874 32.252 71.8234 30.572 71.8234 28.346C71.8234 26.12 72.8874 24.44 75.1414 24.44ZM75.1414 25.518C73.6574 25.518 73.0414 26.848 73.0414 28.346C73.0414 29.844 73.6574 31.174 75.1414 31.174C76.6254 31.174 77.2414 29.844 77.2414 28.346C77.2414 26.848 76.6254 25.518 75.1414 25.518ZM84.2577 24.664H87.1557V25.616H84.2577V32H83.0957V25.616H80.7157V24.664H83.0957V23.852C83.0957 22.326 84.0057 21.654 85.7977 21.654C86.2317 21.654 86.6517 21.668 87.1417 21.738V22.746C86.7497 22.704 86.3437 22.676 86.0777 22.676C84.7337 22.676 84.2577 22.956 84.2577 23.95V24.664ZM103.652 32L102.784 29.074H99.4103L98.5423 32H97.1983L100.292 22.214H101.93L105.01 32H103.652ZM99.7323 27.982H102.462L101.09 23.39L99.7323 27.982ZM112.895 27.086H111.719C111.593 26.12 110.949 25.518 109.927 25.518C108.415 25.518 107.827 26.96 107.827 28.416C107.827 29.872 108.485 31.174 109.955 31.174C110.977 31.174 111.607 30.6 111.803 29.438H112.979C112.825 31.202 111.733 32.252 109.927 32.252C107.785 32.252 106.609 30.572 106.609 28.416C106.609 26.218 107.757 24.44 109.941 24.44C111.733 24.44 112.853 25.532 112.895 27.086ZM121.549 27.086H120.373C120.247 26.12 119.603 25.518 118.581 25.518C117.069 25.518 116.481 26.96 116.481 28.416C116.481 29.872 117.139 31.174 118.609 31.174C119.631 31.174 120.261 30.6 120.457 29.438H121.633C121.479 31.202 120.387 32.252 118.581 32.252C116.439 32.252 115.263 30.572 115.263 28.416C115.263 26.218 116.411 24.44 118.595 24.44C120.387 24.44 121.507 25.532 121.549 27.086ZM127.067 24.44C129.321 24.44 130.385 26.12 130.385 28.346C130.385 30.572 129.321 32.252 127.067 32.252C124.813 32.252 123.749 30.572 123.749 28.346C123.749 26.12 124.813 24.44 127.067 24.44ZM127.067 25.518C125.583 25.518 124.967 26.848 124.967 28.346C124.967 29.844 125.583 31.174 127.067 31.174C128.551 31.174 129.167 29.844 129.167 28.346C129.167 26.848 128.551 25.518 127.067 25.518ZM138.648 24.664V32H137.598V30.908C136.926 31.874 136.226 32.252 135.148 32.252C134.518 32.252 133.986 32.112 133.566 31.818C133.062 31.454 132.81 30.936 132.81 30.25V24.664H133.972V29.788C133.972 30.278 134.14 30.656 134.462 30.908C134.728 31.118 135.078 31.23 135.484 31.23C136.03 31.23 136.492 31.034 136.87 30.628C137.276 30.194 137.486 29.564 137.486 28.738V24.664H138.648ZM141.464 32V24.664H142.542V25.882C143.116 24.986 143.816 24.454 144.978 24.454C146.252 24.454 147.302 25.098 147.302 26.456V32H146.14V26.918C146.14 25.938 145.44 25.476 144.628 25.476C143.312 25.476 142.626 26.61 142.626 27.87V32H141.464ZM153.086 24.664H155.97V25.616H153.086V29.704C153.086 30.782 153.66 31.146 154.724 31.146C155.2 31.146 155.62 31.104 155.97 31.006V32.028C155.508 32.168 155.046 32.196 154.654 32.196C152.876 32.196 151.924 31.51 151.924 29.914V25.616H149.81V24.664H151.924V22.648H153.086V24.664ZM164.372 26.666H163.154C163.126 25.938 162.566 25.476 161.684 25.476C160.732 25.476 160.088 25.896 160.088 26.554C160.088 27.072 160.452 27.38 161.138 27.562L162.804 27.996C164.036 28.318 164.666 28.92 164.666 29.956C164.666 31.384 163.546 32.252 161.726 32.252C159.808 32.252 158.8 31.412 158.716 29.774H159.948C160.06 30.768 160.662 31.216 161.754 31.216C162.79 31.216 163.476 30.824 163.476 30.138C163.476 29.508 163.168 29.242 162.37 29.032L160.83 28.626C159.5 28.276 158.898 27.73 158.898 26.61C158.898 25.28 159.99 24.44 161.712 24.44C163.42 24.44 164.344 25.28 164.372 26.666Z" fill="rgb(var(--colour-main))"></path><rect x="18.8896" y="135" width="171" height="144" stroke="rgb(var(--colour-main-500))"></rect><circle cx="36.8896" cy="153" r="6" fill="#EC3425"></circle><path d="M34.9896 149.505V156.495H39.2496V155.675H35.9196V149.505H34.9896Z" fill="rgb(var(--colour-negative))"></path><path d="M55.3156 154.934V148.214H56.6176V155.116C56.6176 157.384 55.0496 158.252 53.2016 158.252C51.2976 158.252 49.8136 157.342 49.8136 155.116V148.214H51.1156V154.934C51.1156 156.642 52.0816 157.104 53.2016 157.104C54.3356 157.104 55.3156 156.614 55.3156 154.934ZM64.5579 152.666H63.3399C63.3119 151.938 62.7519 151.476 61.8699 151.476C60.9179 151.476 60.2739 151.896 60.2739 152.554C60.2739 153.072 60.6379 153.38 61.3239 153.562L62.9899 153.996C64.2219 154.318 64.8519 154.92 64.8519 155.956C64.8519 157.384 63.7319 158.252 61.9119 158.252C59.9939 158.252 58.9859 157.412 58.9019 155.774H60.1339C60.2459 156.768 60.8479 157.216 61.9399 157.216C62.9759 157.216 63.6619 156.824 63.6619 156.138C63.6619 155.508 63.3539 155.242 62.5559 155.032L61.0159 154.626C59.6859 154.276 59.0839 153.73 59.0839 152.61C59.0839 151.28 60.1759 150.44 61.8979 150.44C63.6059 150.44 64.5299 151.28 64.5579 152.666ZM73.7162 155.732C73.4642 157.272 72.3022 158.252 70.5802 158.252C68.3682 158.252 67.2482 156.642 67.2482 154.402C67.2482 151.952 68.5782 150.44 70.6082 150.44C72.8762 150.44 73.8702 152.134 73.8702 154.682H68.4662C68.5082 156.124 69.2082 157.174 70.6222 157.174C71.5742 157.174 72.2182 156.712 72.5402 155.732H73.7162ZM70.5942 151.518C69.2782 151.518 68.5922 152.498 68.4942 153.73H72.6102C72.6102 152.512 71.8542 151.518 70.5942 151.518ZM76.5885 158V150.664H77.6665V152.246C78.1565 151.196 79.0945 150.454 80.2985 150.454C81.9785 150.454 82.8465 151.378 82.9865 152.834H81.8245C81.6565 151.952 81.1805 151.476 80.1865 151.476C78.7165 151.476 77.7645 152.722 77.7645 154.444V158H76.5885ZM90.5208 152.666H89.3028C89.2748 151.938 88.7148 151.476 87.8328 151.476C86.8808 151.476 86.2368 151.896 86.2368 152.554C86.2368 153.072 86.6008 153.38 87.2868 153.562L88.9528 153.996C90.1848 154.318 90.8148 154.92 90.8148 155.956C90.8148 157.384 89.6948 158.252 87.8748 158.252C85.9568 158.252 84.9488 157.412 84.8648 155.774H86.0968C86.2088 156.768 86.8108 157.216 87.9028 157.216C88.9388 157.216 89.6248 156.824 89.6248 156.138C89.6248 155.508 89.3168 155.242 88.5188 155.032L86.9788 154.626C85.6488 154.276 85.0468 153.73 85.0468 152.61C85.0468 151.28 86.1388 150.44 87.8608 150.44C89.5688 150.44 90.4928 151.28 90.5208 152.666Z" fill="rgb(var(--colour-main))"></path><line x1="198.89" y1="153.5" x2="189.89" y2="153.5" stroke="rgb(var(--colour-main-500))"></line><rect x="198.89" y="135" width="162" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="216.89" cy="153" r="6" fill="#EC3425"></circle><path d="M214.99 149.505V156.495H219.25V155.675H215.92V149.505H214.99Z" fill="rgb(var(--colour-negative))"></path><path d="M235.764 158L234.896 155.074H231.522L230.654 158H229.31L232.404 148.214H234.042L237.122 158H235.764ZM231.844 153.982H234.574L233.202 149.39L231.844 153.982ZM245.202 150.664L242.514 158H241.226L238.538 150.664H239.784L241.898 156.6L243.998 150.664H245.202ZM254.164 157.23V158.112C253.87 158.196 253.646 158.238 253.464 158.238C252.652 158.238 252.246 157.888 252.162 157.132C251.336 157.944 250.608 158.252 249.67 158.252C248.242 158.252 247.276 157.454 247.276 156.096C247.276 154.584 248.424 154.038 249.278 153.898C249.53 153.856 250.076 153.772 250.902 153.66C251.84 153.534 252.148 153.352 252.148 152.876V152.624C252.148 151.896 251.574 151.532 250.468 151.532C249.39 151.532 248.858 151.938 248.76 152.834H247.584C247.612 151.14 248.788 150.454 250.524 150.454C252.33 150.454 253.282 151.154 253.282 152.456V156.684C253.282 157.062 253.492 157.258 253.912 157.258C253.982 157.258 254.094 157.244 254.164 157.23ZM252.148 155.452V154.29C251.658 154.514 250.86 154.64 250.244 154.71C249.152 154.836 248.466 155.144 248.466 156.068C248.466 156.796 249.026 157.23 249.964 157.23C250.986 157.23 252.148 156.474 252.148 155.452ZM258.605 149.614V148.214H260.005V149.614H258.605ZM259.879 150.664V157.048H262.133V158H256.211V157.048H258.731V151.616H256.211V150.664H259.879ZM268.813 147.794V157.048H271.067V158H265.145V157.048H267.679V148.746H265.145V147.794H268.813ZM280.127 157.23V158.112C279.833 158.196 279.609 158.238 279.427 158.238C278.615 158.238 278.209 157.888 278.125 157.132C277.299 157.944 276.571 158.252 275.633 158.252C274.205 158.252 273.239 157.454 273.239 156.096C273.239 154.584 274.387 154.038 275.241 153.898C275.493 153.856 276.039 153.772 276.865 153.66C277.803 153.534 278.111 153.352 278.111 152.876V152.624C278.111 151.896 277.537 151.532 276.431 151.532C275.353 151.532 274.821 151.938 274.723 152.834H273.547C273.575 151.14 274.751 150.454 276.487 150.454C278.293 150.454 279.245 151.154 279.245 152.456V156.684C279.245 157.062 279.455 157.258 279.875 157.258C279.945 157.258 280.057 157.244 280.127 157.23ZM278.111 155.452V154.29C277.621 154.514 276.823 154.64 276.207 154.71C275.115 154.836 274.429 155.144 274.429 156.068C274.429 156.796 274.989 157.23 275.927 157.23C276.949 157.23 278.111 156.474 278.111 155.452ZM282.033 158V147.794H283.195V151.644C283.727 150.846 284.483 150.44 285.463 150.44C287.619 150.44 288.599 152.134 288.599 154.262C288.599 156.516 287.493 158.252 285.407 158.252C284.399 158.252 283.629 157.832 283.083 156.992V158H282.033ZM285.253 151.532C283.769 151.532 283.195 152.974 283.195 154.388C283.195 155.774 283.769 157.16 285.253 157.16C286.723 157.16 287.395 155.816 287.395 154.388C287.395 152.862 286.709 151.532 285.253 151.532ZM294.776 147.794V157.048H297.03V158H291.108V157.048H293.642V148.746H291.108V147.794H294.776ZM305.642 155.732C305.39 157.272 304.228 158.252 302.506 158.252C300.294 158.252 299.174 156.642 299.174 154.402C299.174 151.952 300.504 150.44 302.534 150.44C304.802 150.44 305.796 152.134 305.796 154.682H300.392C300.434 156.124 301.134 157.174 302.548 157.174C303.5 157.174 304.144 156.712 304.466 155.732H305.642ZM302.52 151.518C301.204 151.518 300.518 152.498 300.42 153.73H304.536C304.536 152.512 303.78 151.518 302.52 151.518Z" fill="rgb(var(--colour-main))"></path><line x1="198.89" y1="207.5" x2="189.89" y2="207.5" stroke="rgb(var(--colour-main-500))"></line><rect x="198.89" y="189" width="162" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="216.89" cy="207" r="6" fill="#EC3425"></circle><path d="M214.99 203.505V210.495H219.25V209.675H215.92V203.505H214.99Z" fill="rgb(var(--colour-negative))"></path><path d="M230.164 212V202.214H233.734C235.484 202.214 236.884 203.208 236.884 205.14C236.884 207.072 235.484 208.066 233.734 208.066H231.438V212H230.164ZM231.438 206.96H233.566C234.812 206.96 235.554 206.26 235.554 205.14C235.554 204.02 234.812 203.32 233.566 203.32H231.438V206.96ZM245.062 209.732C244.81 211.272 243.648 212.252 241.926 212.252C239.714 212.252 238.594 210.642 238.594 208.402C238.594 205.952 239.924 204.44 241.954 204.44C244.222 204.44 245.216 206.134 245.216 208.682H239.812C239.854 210.124 240.554 211.174 241.968 211.174C242.92 211.174 243.564 210.712 243.886 209.732H245.062ZM241.94 205.518C240.624 205.518 239.938 206.498 239.84 207.73H243.956C243.956 206.512 243.2 205.518 241.94 205.518ZM247.612 212V204.664H248.69V205.882C249.264 204.986 249.964 204.454 251.126 204.454C252.4 204.454 253.45 205.098 253.45 206.456V212H252.288V206.918C252.288 205.938 251.588 205.476 250.776 205.476C249.46 205.476 248.774 206.61 248.774 207.87V212H247.612ZM261.125 201.794H262.287V212H261.251V210.964C260.663 211.818 259.879 212.252 258.913 212.252C256.743 212.252 255.721 210.516 255.721 208.262C255.721 206.148 256.785 204.44 258.871 204.44C259.865 204.44 260.621 204.818 261.125 205.574V201.794ZM259.067 205.532C257.695 205.532 256.939 206.764 256.939 208.346C256.939 209.844 257.583 211.16 259.081 211.16C260.551 211.16 261.125 209.746 261.125 208.388C261.125 206.918 260.537 205.532 259.067 205.532ZM267.259 203.614V202.214H268.659V203.614H267.259ZM268.533 204.664V211.048H270.787V212H264.865V211.048H267.385V205.616H264.865V204.664H268.533ZM273.575 212V204.664H274.653V205.882C275.227 204.986 275.927 204.454 277.089 204.454C278.363 204.454 279.413 205.098 279.413 206.456V212H278.251V206.918C278.251 205.938 277.551 205.476 276.739 205.476C275.423 205.476 274.737 206.61 274.737 207.87V212H273.575ZM284.959 215.052C283.363 215.052 282.159 214.394 281.963 212.84H283.181C283.349 213.666 283.923 214.072 284.987 214.072C286.457 214.072 287.059 213.344 287.059 211.384V210.964C286.625 211.818 285.841 212.252 284.875 212.252C282.705 212.252 281.683 210.558 281.683 208.304C281.683 206.148 282.747 204.44 284.833 204.44C285.827 204.44 286.583 204.818 287.087 205.574V204.664H288.249V210.81C288.249 211.832 288.165 212.602 287.997 213.134C287.591 214.408 286.541 215.052 284.959 215.052ZM285.043 211.16C286.513 211.16 287.087 209.746 287.087 208.388C287.087 206.918 286.499 205.532 285.029 205.532C283.657 205.532 282.901 206.764 282.901 208.346C282.901 209.844 283.545 211.16 285.043 211.16Z" fill="rgb(var(--colour-main))"></path><line x1="198.89" y1="261.5" x2="189.89" y2="261.5" stroke="rgb(var(--colour-main-500))"></line><rect x="198.89" y="243" width="162" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="216.89" cy="261" r="6" fill="#EC3425"></circle><path d="M214.99 257.505V264.495H219.25V263.675H215.92V257.505H214.99Z" fill="rgb(var(--colour-negative))"></path><path d="M233.986 266H230.178V256.214H233.664C235.414 256.214 236.618 257.166 236.618 258.706C236.618 259.644 236.17 260.582 235.316 260.89C236.338 261.226 236.94 262.038 236.94 263.214C236.94 264.684 235.918 266 233.986 266ZM231.452 257.32V260.414H233.468C234.518 260.414 235.288 260.078 235.288 258.888C235.288 257.684 234.518 257.32 233.468 257.32H231.452ZM231.452 261.52V264.894H233.832C235.064 264.894 235.61 264.194 235.61 263.2C235.61 262.22 235.064 261.52 233.832 261.52H231.452ZM242.85 255.794V265.048H245.104V266H239.182V265.048H241.716V256.746H239.182V255.794H242.85ZM250.524 258.44C252.778 258.44 253.842 260.12 253.842 262.346C253.842 264.572 252.778 266.252 250.524 266.252C248.27 266.252 247.206 264.572 247.206 262.346C247.206 260.12 248.27 258.44 250.524 258.44ZM250.524 259.518C249.04 259.518 248.424 260.848 248.424 262.346C248.424 263.844 249.04 265.174 250.524 265.174C252.008 265.174 252.624 263.844 252.624 262.346C252.624 260.848 252.008 259.518 250.524 259.518ZM262.315 261.086H261.139C261.013 260.12 260.369 259.518 259.347 259.518C257.835 259.518 257.247 260.96 257.247 262.416C257.247 263.872 257.905 265.174 259.375 265.174C260.397 265.174 261.027 264.6 261.223 263.438H262.399C262.245 265.202 261.153 266.252 259.347 266.252C257.205 266.252 256.029 264.572 256.029 262.416C256.029 260.218 257.177 258.44 259.361 258.44C261.153 258.44 262.273 259.532 262.315 261.086ZM266.573 266H265.425V255.794H266.573V261.73L269.723 258.664H271.207L268.561 261.282L271.641 266H270.255L267.693 262.052L266.573 263.144V266ZM279.679 263.732C279.427 265.272 278.265 266.252 276.543 266.252C274.331 266.252 273.211 264.642 273.211 262.402C273.211 259.952 274.541 258.44 276.571 258.44C278.839 258.44 279.833 260.134 279.833 262.682H274.429C274.471 264.124 275.171 265.174 276.585 265.174C277.537 265.174 278.181 264.712 278.503 263.732H279.679ZM276.557 259.518C275.241 259.518 274.555 260.498 274.457 261.73H278.573C278.573 260.512 277.817 259.518 276.557 259.518ZM287.087 255.794H288.249V266H287.213V264.964C286.625 265.818 285.841 266.252 284.875 266.252C282.705 266.252 281.683 264.516 281.683 262.262C281.683 260.148 282.747 258.44 284.833 258.44C285.827 258.44 286.583 258.818 287.087 259.574V255.794ZM285.029 259.532C283.657 259.532 282.901 260.764 282.901 262.346C282.901 263.844 283.545 265.16 285.043 265.16C286.513 265.16 287.087 263.746 287.087 262.388C287.087 260.918 286.499 259.532 285.029 259.532Z" fill="rgb(var(--colour-main))"></path></svg></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Ledger Accounts that share a parent require a unique <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">key</code>, but the same <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">key</code> can be used in different parts of the tree.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">For some Ledger Accounts, you must set additional properties:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">linkedAccount</code> enables <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#reconcile-transactions">reconciliation</a> with an external system</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">template</code> allows multiple instances to be created on demand</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">currencyMode</code> configures the account&#x27;s <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#handle-currencies">currency mode</a>, <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">single</code> or <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">multi</code></li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">consistencyConfig</code> configures the whether the Ledger Account&#x27;s balances and Ledger Lines are strongly or eventually <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#configure-consistency">consistent</a></li>
</ul></div></div></section><section id="design-your-ledger-ledger-entries" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">b. </span>Ledger Entries</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#design-your-ledger-ledger-entries">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A Ledger Entry is a single update to a Ledger. Define a Ledger Entry type in your Schema for every financial event in your product and bank.</p><div class="pt-f2"><div class="hidden tablet:block"><svg width="100%" height="100%" viewBox="0 0 621 422" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="621" height="422" fill="rgb(var(--colour-negative))"></rect><path d="M24.874 32L24.006 29.074H20.632L19.764 32H18.42L21.514 22.214H23.152L26.232 32H24.874ZM20.954 27.982H23.684L22.312 23.39L20.954 27.982ZM28.0683 32V24.664H29.1463V25.882C29.7203 24.986 30.4203 24.454 31.5823 24.454C32.8563 24.454 33.9063 25.098 33.9063 26.456V32H32.7443V26.918C32.7443 25.938 32.0443 25.476 31.2323 25.476C29.9163 25.476 29.2303 26.61 29.2303 27.87V32H28.0683ZM43.2746 31.23V32.112C42.9806 32.196 42.7566 32.238 42.5746 32.238C41.7626 32.238 41.3566 31.888 41.2726 31.132C40.4466 31.944 39.7186 32.252 38.7806 32.252C37.3526 32.252 36.3866 31.454 36.3866 30.096C36.3866 28.584 37.5346 28.038 38.3886 27.898C38.6406 27.856 39.1866 27.772 40.0126 27.66C40.9506 27.534 41.2586 27.352 41.2586 26.876V26.624C41.2586 25.896 40.6846 25.532 39.5786 25.532C38.5006 25.532 37.9686 25.938 37.8706 26.834H36.6946C36.7226 25.14 37.8986 24.454 39.6346 24.454C41.4406 24.454 42.3926 25.154 42.3926 26.456V30.684C42.3926 31.062 42.6026 31.258 43.0226 31.258C43.0926 31.258 43.2046 31.244 43.2746 31.23ZM41.2586 29.452V28.29C40.7686 28.514 39.9706 28.64 39.3546 28.71C38.2626 28.836 37.5766 29.144 37.5766 30.068C37.5766 30.796 38.1366 31.23 39.0746 31.23C40.0966 31.23 41.2586 30.474 41.2586 29.452ZM48.3449 24.664H51.2289V25.616H48.3449V29.704C48.3449 30.782 48.9189 31.146 49.9829 31.146C50.4589 31.146 50.8789 31.104 51.2289 31.006V32.028C50.7669 32.168 50.3049 32.196 49.9129 32.196C48.1349 32.196 47.1829 31.51 47.1829 29.914V25.616H45.0689V24.664H47.1829V22.648H48.3449V24.664ZM56.9432 24.44C59.1972 24.44 60.2612 26.12 60.2612 28.346C60.2612 30.572 59.1972 32.252 56.9432 32.252C54.6892 32.252 53.6252 30.572 53.6252 28.346C53.6252 26.12 54.6892 24.44 56.9432 24.44ZM56.9432 25.518C55.4592 25.518 54.8432 26.848 54.8432 28.346C54.8432 29.844 55.4592 31.174 56.9432 31.174C58.4272 31.174 59.0432 29.844 59.0432 28.346C59.0432 26.848 58.4272 25.518 56.9432 25.518ZM61.8175 32V24.664H62.9095V25.42C63.2175 24.958 63.8055 24.496 64.5895 24.496C65.3035 24.496 65.8775 24.874 66.0875 25.476C66.3815 24.986 66.9695 24.496 67.7955 24.496C68.7055 24.496 69.3775 25.098 69.3775 26.022V32H68.2295V26.26C68.2295 25.742 67.8935 25.476 67.4175 25.476C66.6335 25.476 66.1715 25.938 66.1715 26.708V32H65.0235V26.26C65.0235 25.742 64.6875 25.476 64.2115 25.476C63.4275 25.476 62.9655 25.938 62.9655 26.708V32H61.8175ZM74.3078 33.54C73.9298 34.548 73.2158 35.052 72.3058 35.052C71.9558 35.052 71.6478 35.01 71.3538 34.912V33.82C71.6618 33.89 71.9138 33.904 72.1518 33.904C72.6838 33.904 72.9778 33.708 73.1878 33.19L73.6358 32.112L70.9198 24.664H72.1518L74.2938 30.614L76.4078 24.664H77.6118L74.3078 33.54ZM91.5604 24.44C93.8144 24.44 94.8784 26.12 94.8784 28.346C94.8784 30.572 93.8144 32.252 91.5604 32.252C89.3064 32.252 88.2424 30.572 88.2424 28.346C88.2424 26.12 89.3064 24.44 91.5604 24.44ZM91.5604 25.518C90.0764 25.518 89.4604 26.848 89.4604 28.346C89.4604 29.844 90.0764 31.174 91.5604 31.174C93.0444 31.174 93.6604 29.844 93.6604 28.346C93.6604 26.848 93.0444 25.518 91.5604 25.518ZM100.677 24.664H103.575V25.616H100.677V32H99.5147V25.616H97.1347V24.664H99.5147V23.852C99.5147 22.326 100.425 21.654 102.217 21.654C102.651 21.654 103.071 21.668 103.561 21.738V22.746C103.169 22.704 102.763 22.676 102.497 22.676C101.153 22.676 100.677 22.956 100.677 23.95V24.664ZM121.163 31.23V32.112C120.869 32.196 120.645 32.238 120.463 32.238C119.651 32.238 119.245 31.888 119.161 31.132C118.335 31.944 117.607 32.252 116.669 32.252C115.241 32.252 114.275 31.454 114.275 30.096C114.275 28.584 115.423 28.038 116.277 27.898C116.529 27.856 117.075 27.772 117.901 27.66C118.839 27.534 119.147 27.352 119.147 26.876V26.624C119.147 25.896 118.573 25.532 117.467 25.532C116.389 25.532 115.857 25.938 115.759 26.834H114.583C114.611 25.14 115.787 24.454 117.523 24.454C119.329 24.454 120.281 25.154 120.281 26.456V30.684C120.281 31.062 120.491 31.258 120.911 31.258C120.981 31.258 121.093 31.244 121.163 31.23ZM119.147 29.452V28.29C118.657 28.514 117.859 28.64 117.243 28.71C116.151 28.836 115.465 29.144 115.465 30.068C115.465 30.796 116.025 31.23 116.963 31.23C117.985 31.23 119.147 30.474 119.147 29.452ZM123.266 32V24.664H124.344V25.882C124.918 24.986 125.618 24.454 126.78 24.454C128.054 24.454 129.104 25.098 129.104 26.456V32H127.942V26.918C127.942 25.938 127.242 25.476 126.43 25.476C125.114 25.476 124.428 26.61 124.428 27.87V32H123.266ZM146.244 27.562H142.044V30.852H146.706V32H140.742V22.214H146.454V23.362H142.044V26.414H146.244V27.562ZM149.228 32V24.664H150.306V25.882C150.88 24.986 151.58 24.454 152.742 24.454C154.016 24.454 155.066 25.098 155.066 26.456V32H153.904V26.918C153.904 25.938 153.204 25.476 152.392 25.476C151.076 25.476 150.39 26.61 150.39 27.87V32H149.228ZM160.851 24.664H163.735V25.616H160.851V29.704C160.851 30.782 161.425 31.146 162.489 31.146C162.965 31.146 163.385 31.104 163.735 31.006V32.028C163.273 32.168 162.811 32.196 162.419 32.196C160.641 32.196 159.689 31.51 159.689 29.914V25.616H157.575V24.664H159.689V22.648H160.851V24.664ZM166.859 32V24.664H167.937V26.246C168.427 25.196 169.365 24.454 170.569 24.454C172.249 24.454 173.117 25.378 173.257 26.834H172.095C171.927 25.952 171.451 25.476 170.457 25.476C168.987 25.476 168.035 26.722 168.035 28.444V32H166.859ZM178.159 33.54C177.781 34.548 177.067 35.052 176.157 35.052C175.807 35.052 175.499 35.01 175.205 34.912V33.82C175.513 33.89 175.765 33.904 176.003 33.904C176.535 33.904 176.829 33.708 177.039 33.19L177.487 32.112L174.771 24.664H176.003L178.145 30.614L180.259 24.664H181.463L178.159 33.54Z" fill="rgb(var(--colour-main))"></path><path d="M171 144H177C177 147.314 174.314 150 171 150V144Z" fill="rgb(var(--colour-inactive-br))"></path><path d="M171 138C174.314 138 177 140.686 177 144H171V138Z" fill="rgb(var(--colour-inactive-tr))"></path><path d="M165 144H171V150C167.686 150 165 147.314 165 144Z" fill="rgb(var(--colour-inactive-bl))"></path><path d="M165 144C165 140.686 167.686 138 171 138V144H165Z" fill="rgb(var(--colour-inactive-tl))"></path><path d="M171 144H177C177 147.314 174.314 150 171 150V144Z" fill="#FFE000"></path><path d="M171 138C174.314 138 177 140.686 177 144H171V138Z" fill="rgb(var(--colour-income-blue))"></path><path d="M165 144H171V150C167.686 150 165 147.314 165 144Z" fill="#EC3425"></path><path d="M165 144C165 140.686 167.686 138 171 138V144H165Z" fill="#5AC93B"></path><path d="M189.084 144.562H184.884V147.852H189.546V149H183.582V139.214H189.294V140.362H184.884V143.414H189.084V144.562ZM192.068 149V141.664H193.146V142.882C193.72 141.986 194.42 141.454 195.582 141.454C196.856 141.454 197.906 142.098 197.906 143.456V149H196.744V143.918C196.744 142.938 196.044 142.476 195.232 142.476C193.916 142.476 193.23 143.61 193.23 144.87V149H192.068ZM203.691 141.664H206.575V142.616H203.691V146.704C203.691 147.782 204.265 148.146 205.329 148.146C205.805 148.146 206.225 148.104 206.575 148.006V149.028C206.113 149.168 205.651 149.196 205.259 149.196C203.481 149.196 202.529 148.51 202.529 146.914V142.616H200.415V141.664H202.529V139.648H203.691V141.664ZM209.699 149V141.664H210.777V143.246C211.267 142.196 212.205 141.454 213.409 141.454C215.089 141.454 215.957 142.378 216.097 143.834H214.935C214.767 142.952 214.291 142.476 213.297 142.476C211.827 142.476 210.875 143.722 210.875 145.444V149H209.699ZM220.999 150.54C220.621 151.548 219.907 152.052 218.997 152.052C218.647 152.052 218.339 152.01 218.045 151.912V150.82C218.353 150.89 218.605 150.904 218.843 150.904C219.375 150.904 219.669 150.708 219.879 150.19L220.327 149.112L217.611 141.664H218.843L220.985 147.614L223.099 141.664H224.303L220.999 150.54ZM229.499 149H226.335V139.214H229.499C231.977 139.214 233.223 141.258 233.223 144.1C233.223 146.956 231.977 149 229.499 149ZM227.637 140.362V147.852H229.275C231.109 147.852 231.865 146.438 231.865 144.114C231.865 141.776 231.109 140.362 229.275 140.362H227.637ZM241.444 146.732C241.192 148.272 240.03 149.252 238.308 149.252C236.096 149.252 234.976 147.642 234.976 145.402C234.976 142.952 236.306 141.44 238.336 141.44C240.604 141.44 241.598 143.134 241.598 145.682H236.194C236.236 147.124 236.936 148.174 238.35 148.174C239.302 148.174 239.946 147.712 240.268 146.732H241.444ZM238.322 142.518C237.006 142.518 236.32 143.498 236.222 144.73H240.338C240.338 143.512 239.582 142.518 238.322 142.518ZM249.594 143.666H248.376C248.348 142.938 247.788 142.476 246.906 142.476C245.954 142.476 245.31 142.896 245.31 143.554C245.31 144.072 245.674 144.38 246.36 144.562L248.026 144.996C249.258 145.318 249.888 145.92 249.888 146.956C249.888 148.384 248.768 149.252 246.948 149.252C245.03 149.252 244.022 148.412 243.938 146.774H245.17C245.282 147.768 245.884 148.216 246.976 148.216C248.012 148.216 248.698 147.824 248.698 147.138C248.698 146.508 248.39 146.242 247.592 146.032L246.052 145.626C244.722 145.276 244.12 144.73 244.12 143.61C244.12 142.28 245.212 141.44 246.934 141.44C248.642 141.44 249.566 142.28 249.594 143.666ZM258.696 144.086H257.52C257.394 143.12 256.75 142.518 255.728 142.518C254.216 142.518 253.628 143.96 253.628 145.416C253.628 146.872 254.286 148.174 255.756 148.174C256.778 148.174 257.408 147.6 257.604 146.438H258.78C258.626 148.202 257.534 149.252 255.728 149.252C253.586 149.252 252.41 147.572 252.41 145.416C252.41 143.218 253.558 141.44 255.742 141.44C257.534 141.44 258.654 142.532 258.696 144.086ZM261.625 149V141.664H262.703V143.246C263.193 142.196 264.131 141.454 265.335 141.454C267.015 141.454 267.883 142.378 268.023 143.834H266.861C266.693 142.952 266.217 142.476 265.223 142.476C263.753 142.476 262.801 143.722 262.801 145.444V149H261.625ZM272.295 140.614V139.214H273.695V140.614H272.295ZM273.569 141.664V148.048H275.823V149H269.901V148.048H272.421V142.616H269.901V141.664H273.569ZM279.591 152.052H278.415V141.664H279.493V142.756C280.039 141.874 280.809 141.44 281.831 141.44C284.015 141.44 284.981 143.302 284.981 145.416C284.981 147.516 283.945 149.252 281.845 149.252C280.893 149.252 280.207 148.93 279.591 148.16V152.052ZM281.635 142.532C280.179 142.532 279.591 143.918 279.591 145.346C279.591 146.774 280.179 148.16 281.635 148.16C283.105 148.16 283.763 146.802 283.763 145.388C283.763 143.904 283.119 142.532 281.635 142.532ZM290.234 141.664H293.118V142.616H290.234V146.704C290.234 147.782 290.808 148.146 291.872 148.146C292.348 148.146 292.768 148.104 293.118 148.006V149.028C292.656 149.168 292.194 149.196 291.802 149.196C290.024 149.196 289.072 148.51 289.072 146.914V142.616H286.958V141.664H289.072V139.648H290.234V141.664ZM298.258 140.614V139.214H299.658V140.614H298.258ZM299.532 141.664V148.048H301.786V149H295.864V148.048H298.384V142.616H295.864V141.664H299.532ZM307.486 141.44C309.74 141.44 310.804 143.12 310.804 145.346C310.804 147.572 309.74 149.252 307.486 149.252C305.232 149.252 304.168 147.572 304.168 145.346C304.168 143.12 305.232 141.44 307.486 141.44ZM307.486 142.518C306.002 142.518 305.386 143.848 305.386 145.346C305.386 146.844 306.002 148.174 307.486 148.174C308.97 148.174 309.586 146.844 309.586 145.346C309.586 143.848 308.97 142.518 307.486 142.518ZM313.228 149V141.664H314.306V142.882C314.88 141.986 315.58 141.454 316.742 141.454C318.016 141.454 319.066 142.098 319.066 143.456V149H317.904V143.918C317.904 142.938 317.204 142.476 316.392 142.476C315.076 142.476 314.39 143.61 314.39 144.87V149H313.228Z" fill="rgb(var(--colour-main))"></path><rect x="153" y="126" width="297" height="54" stroke="rgb(var(--colour-main-500))"></rect><rect x="152.89" y="216" width="297" height="36" fill="rgb(var(--colour-negative))"></rect><rect x="170.89" y="228" width="12" height="12" rx="6" fill="rgb(var(--colour-negative))"></rect><path d="M170.89 234H176.89V240C173.576 240 170.89 237.314 170.89 234Z" fill="#EC3425"></path><path d="M190.626 229.214H191.928V237.852H196.59V239H190.626V229.214ZM201.296 230.614V229.214H202.696V230.614H201.296ZM202.57 231.664V238.048H204.824V239H198.902V238.048H201.422V232.616H198.902V231.664H202.57ZM207.612 239V231.664H208.69V232.882C209.264 231.986 209.964 231.454 211.126 231.454C212.4 231.454 213.45 232.098 213.45 233.456V239H212.288V233.918C212.288 232.938 211.588 232.476 210.776 232.476C209.46 232.476 208.774 233.61 208.774 234.87V239H207.612ZM222.371 236.732C222.119 238.272 220.957 239.252 219.235 239.252C217.023 239.252 215.903 237.642 215.903 235.402C215.903 232.952 217.233 231.44 219.263 231.44C221.531 231.44 222.525 233.134 222.525 235.682H217.121C217.163 237.124 217.863 238.174 219.277 238.174C220.229 238.174 220.873 237.712 221.195 236.732H222.371ZM219.249 232.518C217.933 232.518 217.247 233.498 217.149 234.73H221.265C221.265 233.512 220.509 232.518 219.249 232.518Z" fill="rgb(var(--colour-main))"></path><path d="M424.836 229.214H429.96V230.292H425.844L425.438 233.148C425.97 232.672 426.656 232.504 427.328 232.504C429.092 232.504 430.478 233.764 430.478 235.794C430.478 237.796 429.19 239.252 427.076 239.252C425.942 239.252 424.094 238.762 423.786 236.606H425.032C425.312 237.656 426.012 238.174 427.076 238.174C428.49 238.174 429.218 237.208 429.218 235.85C429.218 234.492 428.56 233.54 427.118 233.54C426.334 233.54 425.746 233.834 425.228 234.52H424.108L424.836 229.214Z" fill="rgb(var(--colour-main))"></path><rect x="152.89" y="216" width="297" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="152.89" y="180" width="297" height="36" fill="rgb(var(--colour-negative))"></rect><rect x="170.89" y="192" width="12" height="12" rx="6" fill="rgb(var(--colour-negative))"></rect><path d="M170.89 198C170.89 194.686 173.576 192 176.89 192V198H170.89Z" fill="#5AC93B"></path><path d="M190.626 193.214H191.928V201.852H196.59V203H190.626V193.214ZM201.296 194.614V193.214H202.696V194.614H201.296ZM202.57 195.664V202.048H204.824V203H198.902V202.048H201.422V196.616H198.902V195.664H202.57ZM207.612 203V195.664H208.69V196.882C209.264 195.986 209.964 195.454 211.126 195.454C212.4 195.454 213.45 196.098 213.45 197.456V203H212.288V197.918C212.288 196.938 211.588 196.476 210.776 196.476C209.46 196.476 208.774 197.61 208.774 198.87V203H207.612ZM222.371 200.732C222.119 202.272 220.957 203.252 219.235 203.252C217.023 203.252 215.903 201.642 215.903 199.402C215.903 196.952 217.233 195.44 219.263 195.44C221.531 195.44 222.525 197.134 222.525 199.682H217.121C217.163 201.124 217.863 202.174 219.277 202.174C220.229 202.174 220.873 201.712 221.195 200.732H222.371ZM219.249 196.518C217.933 196.518 217.247 197.498 217.149 198.73H221.265C221.265 197.512 220.509 196.518 219.249 196.518Z" fill="rgb(var(--colour-main))"></path><path d="M418.132 203V195.902H415.514V194.978C417.824 194.88 418.02 194.74 418.44 193.102H419.364V203H418.132ZM426.87 192.99C429.418 192.99 430.118 195.51 430.118 198.114C430.118 200.718 429.418 203.252 426.87 203.252C424.322 203.252 423.622 200.718 423.622 198.114C423.622 195.51 424.322 192.99 426.87 192.99ZM426.87 194.054C425.428 194.054 424.77 195.65 424.77 198.114C424.77 199.304 424.924 200.298 425.246 200.998L428.004 194.516C427.71 194.208 427.332 194.054 426.87 194.054ZM428.97 198.114C428.97 197.036 428.844 196.126 428.578 195.44L425.876 201.852C426.142 202.076 426.478 202.188 426.87 202.188C428.312 202.188 428.97 200.578 428.97 198.114Z" fill="rgb(var(--colour-main))"></path><rect x="152.89" y="180" width="297" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="152.89" y="252" width="297" height="36" fill="rgb(var(--colour-negative))"></rect><rect x="170.89" y="264" width="12" height="12" rx="6" fill="rgb(var(--colour-negative))"></rect><path d="M176.89 264C180.203 264 182.89 266.686 182.89 270H176.89V264Z" fill="rgb(var(--colour-income-blue))"></path><path d="M190.626 265.214H191.928V273.852H196.59V275H190.626V265.214ZM201.296 266.614V265.214H202.696V266.614H201.296ZM202.57 267.664V274.048H204.824V275H198.902V274.048H201.422V268.616H198.902V267.664H202.57ZM207.612 275V267.664H208.69V268.882C209.264 267.986 209.964 267.454 211.126 267.454C212.4 267.454 213.45 268.098 213.45 269.456V275H212.288V269.918C212.288 268.938 211.588 268.476 210.776 268.476C209.46 268.476 208.774 269.61 208.774 270.87V275H207.612ZM222.371 272.732C222.119 274.272 220.957 275.252 219.235 275.252C217.023 275.252 215.903 273.642 215.903 271.402C215.903 268.952 217.233 267.44 219.263 267.44C221.531 267.44 222.525 269.134 222.525 271.682H217.121C217.163 273.124 217.863 274.174 219.277 274.174C220.229 274.174 220.873 273.712 221.195 272.732H222.371ZM219.249 268.518C217.933 268.518 217.247 269.498 217.149 270.73H221.265C221.265 269.512 220.509 268.518 219.249 268.518Z" fill="rgb(var(--colour-main))"></path><path d="M423.898 265.214H430.534V266.25C428.336 269.316 427.09 271.654 426.502 275H425.186C426.152 270.912 427.118 269.526 429.33 266.292H423.898V265.214Z" fill="rgb(var(--colour-main))"></path><rect x="152.89" y="252" width="297" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="152.89" y="288" width="297" height="36" fill="rgb(var(--colour-negative))"></rect><rect x="170.89" y="300" width="12" height="12" rx="6" fill="rgb(var(--colour-negative))"></rect><path d="M176.89 306H182.89C182.89 309.314 180.203 312 176.89 312V306Z" fill="#FFE000"></path><path d="M190.626 301.214H191.928V309.852H196.59V311H190.626V301.214ZM201.296 302.614V301.214H202.696V302.614H201.296ZM202.57 303.664V310.048H204.824V311H198.902V310.048H201.422V304.616H198.902V303.664H202.57ZM207.612 311V303.664H208.69V304.882C209.264 303.986 209.964 303.454 211.126 303.454C212.4 303.454 213.45 304.098 213.45 305.456V311H212.288V305.918C212.288 304.938 211.588 304.476 210.776 304.476C209.46 304.476 208.774 305.61 208.774 306.87V311H207.612ZM222.371 308.732C222.119 310.272 220.957 311.252 219.235 311.252C217.023 311.252 215.903 309.642 215.903 307.402C215.903 304.952 217.233 303.44 219.263 303.44C221.531 303.44 222.525 305.134 222.525 307.682H217.121C217.163 309.124 217.863 310.174 219.277 310.174C220.229 310.174 220.873 309.712 221.195 308.732H222.371ZM219.249 304.518C217.933 304.518 217.247 305.498 217.149 306.73H221.265C221.265 305.512 220.509 304.518 219.249 304.518Z" fill="rgb(var(--colour-main))"></path><path d="M430.492 309.922V311H423.884C424.038 308.704 424.654 307.738 426.67 306.632L427.972 305.918C428.854 305.428 429.302 304.798 429.302 303.944C429.302 302.838 428.714 302.068 427.468 302.068C426.026 302.068 425.438 303.048 425.34 304.49H424.108C424.178 302.25 425.298 300.99 427.51 300.99C429.512 300.99 430.562 302.306 430.562 303.944C430.562 305.204 429.876 306.184 428.476 306.926L427.076 307.668C425.9 308.298 425.354 308.998 425.27 309.922H430.492Z" fill="rgb(var(--colour-main))"></path><rect x="152.89" y="288" width="297" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M92.6256 193.214H93.9276V201.852H98.5896V203H92.6256V193.214ZM103.296 194.614V193.214H104.696V194.614H103.296ZM104.57 195.664V202.048H106.824V203H100.902V202.048H103.422V196.616H100.902V195.664H104.57ZM109.612 203V195.664H110.69V196.882C111.264 195.986 111.964 195.454 113.126 195.454C114.4 195.454 115.45 196.098 115.45 197.456V203H114.288V197.918C114.288 196.938 113.588 196.476 112.776 196.476C111.46 196.476 110.774 197.61 110.774 198.87V203H109.612ZM124.371 200.732C124.119 202.272 122.957 203.252 121.235 203.252C119.023 203.252 117.903 201.642 117.903 199.402C117.903 196.952 119.233 195.44 121.263 195.44C123.531 195.44 124.525 197.134 124.525 199.682H119.121C119.163 201.124 119.863 202.174 121.277 202.174C122.229 202.174 122.873 201.712 123.195 200.732H124.371ZM121.249 196.518C119.933 196.518 119.247 197.498 119.149 198.73H123.265C123.265 197.512 122.509 196.518 121.249 196.518Z" fill="rgb(var(--colour-main))"></path><path d="M483.874 203L483.006 200.074H479.632L478.764 203H477.42L480.514 193.214H482.152L485.232 203H483.874ZM479.954 198.982H482.684L481.312 194.39L479.954 198.982ZM486.2 203V195.664H487.292V196.42C487.6 195.958 488.188 195.496 488.972 195.496C489.686 195.496 490.26 195.874 490.47 196.476C490.764 195.986 491.352 195.496 492.178 195.496C493.088 195.496 493.76 196.098 493.76 197.022V203H492.612V197.26C492.612 196.742 492.276 196.476 491.8 196.476C491.016 196.476 490.554 196.938 490.554 197.708V203H489.406V197.26C489.406 196.742 489.07 196.476 488.594 196.476C487.81 196.476 487.348 196.938 487.348 197.708V203H486.2ZM498.635 195.44C500.889 195.44 501.953 197.12 501.953 199.346C501.953 201.572 500.889 203.252 498.635 203.252C496.381 203.252 495.317 201.572 495.317 199.346C495.317 197.12 496.381 195.44 498.635 195.44ZM498.635 196.518C497.151 196.518 496.535 197.848 496.535 199.346C496.535 200.844 497.151 202.174 498.635 202.174C500.119 202.174 500.735 200.844 500.735 199.346C500.735 197.848 500.119 196.518 498.635 196.518ZM510.215 195.664V203H509.165V201.908C508.493 202.874 507.793 203.252 506.715 203.252C506.085 203.252 505.553 203.112 505.133 202.818C504.629 202.454 504.377 201.936 504.377 201.25V195.664H505.539V200.788C505.539 201.278 505.707 201.656 506.029 201.908C506.295 202.118 506.645 202.23 507.051 202.23C507.597 202.23 508.059 202.034 508.437 201.628C508.843 201.194 509.053 200.564 509.053 199.738V195.664H510.215ZM513.031 203V195.664H514.109V196.882C514.683 195.986 515.383 195.454 516.545 195.454C517.819 195.454 518.869 196.098 518.869 197.456V203H517.707V197.918C517.707 196.938 517.007 196.476 516.195 196.476C514.879 196.476 514.193 197.61 514.193 198.87V203H513.031ZM524.653 195.664H527.537V196.616H524.653V200.704C524.653 201.782 525.227 202.146 526.291 202.146C526.767 202.146 527.187 202.104 527.537 202.006V203.028C527.075 203.168 526.613 203.196 526.221 203.196C524.443 203.196 523.491 202.51 523.491 200.914V196.616H521.377V195.664H523.491V193.648H524.653V195.664Z" fill="rgb(var(--colour-main))"></path><path d="M98.7996 140.362V139.214H91.6316V140.362H94.5716V149H95.8736V140.362H98.7996ZM100.538 141.664L103.254 149.112L102.806 150.19C102.596 150.708 102.302 150.904 101.77 150.904C101.532 150.904 101.28 150.89 100.972 150.82V151.912C101.266 152.01 101.574 152.052 101.924 152.052C102.834 152.052 103.548 151.548 103.926 150.54L107.23 141.664H106.026L103.912 147.614L101.77 141.664H100.538ZM110.592 152.052V148.16C111.208 148.93 111.894 149.252 112.846 149.252C114.946 149.252 115.982 147.516 115.982 145.416C115.982 143.302 115.016 141.44 112.832 141.44C111.81 141.44 111.04 141.874 110.494 142.756V141.664H109.416V152.052H110.592ZM110.592 145.346C110.592 143.918 111.18 142.532 112.636 142.532C114.12 142.532 114.764 143.904 114.764 145.388C114.764 146.802 114.106 148.16 112.636 148.16C111.18 148.16 110.592 146.774 110.592 145.346ZM123.265 144.73H119.149C119.247 143.498 119.933 142.518 121.249 142.518C122.509 142.518 123.265 143.512 123.265 144.73ZM117.903 145.402C117.903 147.642 119.023 149.252 121.235 149.252C122.957 149.252 124.119 148.272 124.371 146.732H123.195C122.873 147.712 122.229 148.174 121.277 148.174C119.863 148.174 119.163 147.124 119.121 145.682H124.525C124.525 143.134 123.531 141.44 121.263 141.44C119.233 141.44 117.903 142.952 117.903 145.402Z" fill="rgb(var(--colour-main))"></path><line x1="161.89" y1="198.5" x2="134.89" y2="198.5" stroke="rgb(var(--colour-main-500))"></line><line x1="468" y1="198.5" x2="441" y2="198.5" stroke="rgb(var(--colour-main-500))"></line><line x1="161.89" y1="144.5" x2="134.89" y2="144.5" stroke="rgb(var(--colour-main-500))"></line></svg></div><div class="block tablet:hidden"><svg width="100%" height="100%" viewBox="0 0 378 441" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="378" height="441" fill="rgb(var(--colour-negative))"></rect><path d="M24.874 32L24.006 29.074H20.632L19.764 32H18.42L21.514 22.214H23.152L26.232 32H24.874ZM20.954 27.982H23.684L22.312 23.39L20.954 27.982ZM28.0683 32V24.664H29.1463V25.882C29.7203 24.986 30.4203 24.454 31.5823 24.454C32.8563 24.454 33.9063 25.098 33.9063 26.456V32H32.7443V26.918C32.7443 25.938 32.0443 25.476 31.2323 25.476C29.9163 25.476 29.2303 26.61 29.2303 27.87V32H28.0683ZM43.2746 31.23V32.112C42.9806 32.196 42.7566 32.238 42.5746 32.238C41.7626 32.238 41.3566 31.888 41.2726 31.132C40.4466 31.944 39.7186 32.252 38.7806 32.252C37.3526 32.252 36.3866 31.454 36.3866 30.096C36.3866 28.584 37.5346 28.038 38.3886 27.898C38.6406 27.856 39.1866 27.772 40.0126 27.66C40.9506 27.534 41.2586 27.352 41.2586 26.876V26.624C41.2586 25.896 40.6846 25.532 39.5786 25.532C38.5006 25.532 37.9686 25.938 37.8706 26.834H36.6946C36.7226 25.14 37.8986 24.454 39.6346 24.454C41.4406 24.454 42.3926 25.154 42.3926 26.456V30.684C42.3926 31.062 42.6026 31.258 43.0226 31.258C43.0926 31.258 43.2046 31.244 43.2746 31.23ZM41.2586 29.452V28.29C40.7686 28.514 39.9706 28.64 39.3546 28.71C38.2626 28.836 37.5766 29.144 37.5766 30.068C37.5766 30.796 38.1366 31.23 39.0746 31.23C40.0966 31.23 41.2586 30.474 41.2586 29.452ZM48.3449 24.664H51.2289V25.616H48.3449V29.704C48.3449 30.782 48.9189 31.146 49.9829 31.146C50.4589 31.146 50.8789 31.104 51.2289 31.006V32.028C50.7669 32.168 50.3049 32.196 49.9129 32.196C48.1349 32.196 47.1829 31.51 47.1829 29.914V25.616H45.0689V24.664H47.1829V22.648H48.3449V24.664ZM56.9432 24.44C59.1972 24.44 60.2612 26.12 60.2612 28.346C60.2612 30.572 59.1972 32.252 56.9432 32.252C54.6892 32.252 53.6252 30.572 53.6252 28.346C53.6252 26.12 54.6892 24.44 56.9432 24.44ZM56.9432 25.518C55.4592 25.518 54.8432 26.848 54.8432 28.346C54.8432 29.844 55.4592 31.174 56.9432 31.174C58.4272 31.174 59.0432 29.844 59.0432 28.346C59.0432 26.848 58.4272 25.518 56.9432 25.518ZM61.8175 32V24.664H62.9095V25.42C63.2175 24.958 63.8055 24.496 64.5895 24.496C65.3035 24.496 65.8775 24.874 66.0875 25.476C66.3815 24.986 66.9695 24.496 67.7955 24.496C68.7055 24.496 69.3775 25.098 69.3775 26.022V32H68.2295V26.26C68.2295 25.742 67.8935 25.476 67.4175 25.476C66.6335 25.476 66.1715 25.938 66.1715 26.708V32H65.0235V26.26C65.0235 25.742 64.6875 25.476 64.2115 25.476C63.4275 25.476 62.9655 25.938 62.9655 26.708V32H61.8175ZM74.3078 33.54C73.9298 34.548 73.2158 35.052 72.3058 35.052C71.9558 35.052 71.6478 35.01 71.3538 34.912V33.82C71.6618 33.89 71.9138 33.904 72.1518 33.904C72.6838 33.904 72.9778 33.708 73.1878 33.19L73.6358 32.112L70.9198 24.664H72.1518L74.2938 30.614L76.4078 24.664H77.6118L74.3078 33.54ZM91.5604 24.44C93.8144 24.44 94.8784 26.12 94.8784 28.346C94.8784 30.572 93.8144 32.252 91.5604 32.252C89.3064 32.252 88.2424 30.572 88.2424 28.346C88.2424 26.12 89.3064 24.44 91.5604 24.44ZM91.5604 25.518C90.0764 25.518 89.4604 26.848 89.4604 28.346C89.4604 29.844 90.0764 31.174 91.5604 31.174C93.0444 31.174 93.6604 29.844 93.6604 28.346C93.6604 26.848 93.0444 25.518 91.5604 25.518ZM100.677 24.664H103.575V25.616H100.677V32H99.5147V25.616H97.1347V24.664H99.5147V23.852C99.5147 22.326 100.425 21.654 102.217 21.654C102.651 21.654 103.071 21.668 103.561 21.738V22.746C103.169 22.704 102.763 22.676 102.497 22.676C101.153 22.676 100.677 22.956 100.677 23.95V24.664ZM121.163 31.23V32.112C120.869 32.196 120.645 32.238 120.463 32.238C119.651 32.238 119.245 31.888 119.161 31.132C118.335 31.944 117.607 32.252 116.669 32.252C115.241 32.252 114.275 31.454 114.275 30.096C114.275 28.584 115.423 28.038 116.277 27.898C116.529 27.856 117.075 27.772 117.901 27.66C118.839 27.534 119.147 27.352 119.147 26.876V26.624C119.147 25.896 118.573 25.532 117.467 25.532C116.389 25.532 115.857 25.938 115.759 26.834H114.583C114.611 25.14 115.787 24.454 117.523 24.454C119.329 24.454 120.281 25.154 120.281 26.456V30.684C120.281 31.062 120.491 31.258 120.911 31.258C120.981 31.258 121.093 31.244 121.163 31.23ZM119.147 29.452V28.29C118.657 28.514 117.859 28.64 117.243 28.71C116.151 28.836 115.465 29.144 115.465 30.068C115.465 30.796 116.025 31.23 116.963 31.23C117.985 31.23 119.147 30.474 119.147 29.452ZM123.266 32V24.664H124.344V25.882C124.918 24.986 125.618 24.454 126.78 24.454C128.054 24.454 129.104 25.098 129.104 26.456V32H127.942V26.918C127.942 25.938 127.242 25.476 126.43 25.476C125.114 25.476 124.428 26.61 124.428 27.87V32H123.266ZM146.244 27.562H142.044V30.852H146.706V32H140.742V22.214H146.454V23.362H142.044V26.414H146.244V27.562ZM149.228 32V24.664H150.306V25.882C150.88 24.986 151.58 24.454 152.742 24.454C154.016 24.454 155.066 25.098 155.066 26.456V32H153.904V26.918C153.904 25.938 153.204 25.476 152.392 25.476C151.076 25.476 150.39 26.61 150.39 27.87V32H149.228ZM160.851 24.664H163.735V25.616H160.851V29.704C160.851 30.782 161.425 31.146 162.489 31.146C162.965 31.146 163.385 31.104 163.735 31.006V32.028C163.273 32.168 162.811 32.196 162.419 32.196C160.641 32.196 159.689 31.51 159.689 29.914V25.616H157.575V24.664H159.689V22.648H160.851V24.664ZM166.859 32V24.664H167.937V26.246C168.427 25.196 169.365 24.454 170.569 24.454C172.249 24.454 173.117 25.378 173.257 26.834H172.095C171.927 25.952 171.451 25.476 170.457 25.476C168.987 25.476 168.035 26.722 168.035 28.444V32H166.859ZM178.159 33.54C177.781 34.548 177.067 35.052 176.157 35.052C175.807 35.052 175.499 35.01 175.205 34.912V33.82C175.513 33.89 175.765 33.904 176.003 33.904C176.535 33.904 176.829 33.708 177.039 33.19L177.487 32.112L174.771 24.664H176.003L178.145 30.614L180.259 24.664H181.463L178.159 33.54Z" fill="rgb(var(--colour-main))"></path><path d="M72 144H78C78 147.314 75.3137 150 72 150V144Z" fill="rgb(var(--colour-inactive-br))"></path><path d="M72 138C75.3137 138 78 140.686 78 144H72V138Z" fill="rgb(var(--colour-inactive-tr))"></path><path d="M66 144H72V150C68.6863 150 66 147.314 66 144Z" fill="rgb(var(--colour-inactive-bl))"></path><path d="M66 144C66 140.686 68.6863 138 72 138V144H66Z" fill="rgb(var(--colour-inactive-tl))"></path><path d="M72 144H78C78 147.314 75.3137 150 72 150V144Z" fill="#FFE000"></path><path d="M72 138C75.3137 138 78 140.686 78 144H72V138Z" fill="rgb(var(--colour-income-blue))"></path><path d="M66 144H72V150C68.6863 150 66 147.314 66 144Z" fill="#EC3425"></path><path d="M66 144C66 140.686 68.6863 138 72 138V144H66Z" fill="#5AC93B"></path><path d="M90.084 144.562H85.884V147.852H90.546V149H84.582V139.214H90.294V140.362H85.884V143.414H90.084V144.562ZM93.0683 149V141.664H94.1463V142.882C94.7203 141.986 95.4203 141.454 96.5823 141.454C97.8563 141.454 98.9063 142.098 98.9063 143.456V149H97.7443V143.918C97.7443 142.938 97.0443 142.476 96.2323 142.476C94.9163 142.476 94.2303 143.61 94.2303 144.87V149H93.0683ZM104.691 141.664H107.575V142.616H104.691V146.704C104.691 147.782 105.265 148.146 106.329 148.146C106.805 148.146 107.225 148.104 107.575 148.006V149.028C107.113 149.168 106.651 149.196 106.259 149.196C104.481 149.196 103.529 148.51 103.529 146.914V142.616H101.415V141.664H103.529V139.648H104.691V141.664ZM110.699 149V141.664H111.777V143.246C112.267 142.196 113.205 141.454 114.409 141.454C116.089 141.454 116.957 142.378 117.097 143.834H115.935C115.767 142.952 115.291 142.476 114.297 142.476C112.827 142.476 111.875 143.722 111.875 145.444V149H110.699ZM121.999 150.54C121.621 151.548 120.907 152.052 119.997 152.052C119.647 152.052 119.339 152.01 119.045 151.912V150.82C119.353 150.89 119.605 150.904 119.843 150.904C120.375 150.904 120.669 150.708 120.879 150.19L121.327 149.112L118.611 141.664H119.843L121.985 147.614L124.099 141.664H125.303L121.999 150.54ZM130.499 149H127.335V139.214H130.499C132.977 139.214 134.223 141.258 134.223 144.1C134.223 146.956 132.977 149 130.499 149ZM128.637 140.362V147.852H130.275C132.109 147.852 132.865 146.438 132.865 144.114C132.865 141.776 132.109 140.362 130.275 140.362H128.637ZM142.444 146.732C142.192 148.272 141.03 149.252 139.308 149.252C137.096 149.252 135.976 147.642 135.976 145.402C135.976 142.952 137.306 141.44 139.336 141.44C141.604 141.44 142.598 143.134 142.598 145.682H137.194C137.236 147.124 137.936 148.174 139.35 148.174C140.302 148.174 140.946 147.712 141.268 146.732H142.444ZM139.322 142.518C138.006 142.518 137.32 143.498 137.222 144.73H141.338C141.338 143.512 140.582 142.518 139.322 142.518ZM150.594 143.666H149.376C149.348 142.938 148.788 142.476 147.906 142.476C146.954 142.476 146.31 142.896 146.31 143.554C146.31 144.072 146.674 144.38 147.36 144.562L149.026 144.996C150.258 145.318 150.888 145.92 150.888 146.956C150.888 148.384 149.768 149.252 147.948 149.252C146.03 149.252 145.022 148.412 144.938 146.774H146.17C146.282 147.768 146.884 148.216 147.976 148.216C149.012 148.216 149.698 147.824 149.698 147.138C149.698 146.508 149.39 146.242 148.592 146.032L147.052 145.626C145.722 145.276 145.12 144.73 145.12 143.61C145.12 142.28 146.212 141.44 147.934 141.44C149.642 141.44 150.566 142.28 150.594 143.666ZM159.696 144.086H158.52C158.394 143.12 157.75 142.518 156.728 142.518C155.216 142.518 154.628 143.96 154.628 145.416C154.628 146.872 155.286 148.174 156.756 148.174C157.778 148.174 158.408 147.6 158.604 146.438H159.78C159.626 148.202 158.534 149.252 156.728 149.252C154.586 149.252 153.41 147.572 153.41 145.416C153.41 143.218 154.558 141.44 156.742 141.44C158.534 141.44 159.654 142.532 159.696 144.086ZM162.625 149V141.664H163.703V143.246C164.193 142.196 165.131 141.454 166.335 141.454C168.015 141.454 168.883 142.378 169.023 143.834H167.861C167.693 142.952 167.217 142.476 166.223 142.476C164.753 142.476 163.801 143.722 163.801 145.444V149H162.625ZM173.295 140.614V139.214H174.695V140.614H173.295ZM174.569 141.664V148.048H176.823V149H170.901V148.048H173.421V142.616H170.901V141.664H174.569ZM180.591 152.052H179.415V141.664H180.493V142.756C181.039 141.874 181.809 141.44 182.831 141.44C185.015 141.44 185.981 143.302 185.981 145.416C185.981 147.516 184.945 149.252 182.845 149.252C181.893 149.252 181.207 148.93 180.591 148.16V152.052ZM182.635 142.532C181.179 142.532 180.591 143.918 180.591 145.346C180.591 146.774 181.179 148.16 182.635 148.16C184.105 148.16 184.763 146.802 184.763 145.388C184.763 143.904 184.119 142.532 182.635 142.532ZM191.234 141.664H194.118V142.616H191.234V146.704C191.234 147.782 191.808 148.146 192.872 148.146C193.348 148.146 193.768 148.104 194.118 148.006V149.028C193.656 149.168 193.194 149.196 192.802 149.196C191.024 149.196 190.072 148.51 190.072 146.914V142.616H187.958V141.664H190.072V139.648H191.234V141.664ZM199.258 140.614V139.214H200.658V140.614H199.258ZM200.532 141.664V148.048H202.786V149H196.864V148.048H199.384V142.616H196.864V141.664H200.532ZM208.486 141.44C210.74 141.44 211.804 143.12 211.804 145.346C211.804 147.572 210.74 149.252 208.486 149.252C206.232 149.252 205.168 147.572 205.168 145.346C205.168 143.12 206.232 141.44 208.486 141.44ZM208.486 142.518C207.002 142.518 206.386 143.848 206.386 145.346C206.386 146.844 207.002 148.174 208.486 148.174C209.97 148.174 210.586 146.844 210.586 145.346C210.586 143.848 209.97 142.518 208.486 142.518ZM214.228 149V141.664H215.306V142.882C215.88 141.986 216.58 141.454 217.742 141.454C219.016 141.454 220.066 142.098 220.066 143.456V149H218.904V143.918C218.904 142.938 218.204 142.476 217.392 142.476C216.076 142.476 215.39 143.61 215.39 144.87V149H214.228Z" fill="rgb(var(--colour-main))"></path><rect x="54" y="126" width="270" height="54" stroke="rgb(var(--colour-main-500))"></rect><rect x="54" y="216" width="270" height="36" fill="rgb(var(--colour-negative))"></rect><rect x="72" y="228" width="12" height="12" rx="6" fill="rgb(var(--colour-negative))"></rect><path d="M72 234H78V240C74.6863 240 72 237.314 72 234Z" fill="#EC3425"></path><path d="M91.736 229.214H93.038V237.852H97.7V239H91.736V229.214ZM102.406 230.614V229.214H103.806V230.614H102.406ZM103.68 231.664V238.048H105.934V239H100.012V238.048H102.532V232.616H100.012V231.664H103.68ZM108.723 239V231.664H109.801V232.882C110.375 231.986 111.075 231.454 112.237 231.454C113.511 231.454 114.561 232.098 114.561 233.456V239H113.399V233.918C113.399 232.938 112.699 232.476 111.887 232.476C110.571 232.476 109.885 233.61 109.885 234.87V239H108.723ZM123.481 236.732C123.229 238.272 122.067 239.252 120.345 239.252C118.133 239.252 117.013 237.642 117.013 235.402C117.013 232.952 118.343 231.44 120.373 231.44C122.641 231.44 123.635 233.134 123.635 235.682H118.231C118.273 237.124 118.973 238.174 120.387 238.174C121.339 238.174 121.983 237.712 122.305 236.732H123.481ZM120.359 232.518C119.043 232.518 118.357 233.498 118.259 234.73H122.375C122.375 233.512 121.619 232.518 120.359 232.518Z" fill="rgb(var(--colour-main))"></path><path d="M298.946 229.214H304.07V230.292H299.954L299.548 233.148C300.08 232.672 300.766 232.504 301.438 232.504C303.202 232.504 304.588 233.764 304.588 235.794C304.588 237.796 303.3 239.252 301.186 239.252C300.052 239.252 298.204 238.762 297.896 236.606H299.142C299.422 237.656 300.122 238.174 301.186 238.174C302.6 238.174 303.328 237.208 303.328 235.85C303.328 234.492 302.67 233.54 301.228 233.54C300.444 233.54 299.856 233.834 299.338 234.52H298.218L298.946 229.214Z" fill="rgb(var(--colour-main))"></path><rect x="54" y="216" width="270" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="54" y="180" width="270" height="36" fill="rgb(var(--colour-negative))"></rect><rect x="72" y="192" width="12" height="12" rx="6" fill="rgb(var(--colour-negative))"></rect><path d="M72 198C72 194.686 74.6863 192 78 192V198H72Z" fill="#5AC93B"></path><path d="M91.736 193.214H93.038V201.852H97.7V203H91.736V193.214ZM102.406 194.614V193.214H103.806V194.614H102.406ZM103.68 195.664V202.048H105.934V203H100.012V202.048H102.532V196.616H100.012V195.664H103.68ZM108.723 203V195.664H109.801V196.882C110.375 195.986 111.075 195.454 112.237 195.454C113.511 195.454 114.561 196.098 114.561 197.456V203H113.399V197.918C113.399 196.938 112.699 196.476 111.887 196.476C110.571 196.476 109.885 197.61 109.885 198.87V203H108.723ZM123.481 200.732C123.229 202.272 122.067 203.252 120.345 203.252C118.133 203.252 117.013 201.642 117.013 199.402C117.013 196.952 118.343 195.44 120.373 195.44C122.641 195.44 123.635 197.134 123.635 199.682H118.231C118.273 201.124 118.973 202.174 120.387 202.174C121.339 202.174 121.983 201.712 122.305 200.732H123.481ZM120.359 196.518C119.043 196.518 118.357 197.498 118.259 198.73H122.375C122.375 197.512 121.619 196.518 120.359 196.518Z" fill="rgb(var(--colour-main))"></path><path d="M292.242 203V195.902H289.624V194.978C291.934 194.88 292.13 194.74 292.55 193.102H293.474V203H292.242ZM300.98 192.99C303.528 192.99 304.228 195.51 304.228 198.114C304.228 200.718 303.528 203.252 300.98 203.252C298.432 203.252 297.732 200.718 297.732 198.114C297.732 195.51 298.432 192.99 300.98 192.99ZM300.98 194.054C299.538 194.054 298.88 195.65 298.88 198.114C298.88 199.304 299.034 200.298 299.356 200.998L302.114 194.516C301.82 194.208 301.442 194.054 300.98 194.054ZM303.08 198.114C303.08 197.036 302.954 196.126 302.688 195.44L299.986 201.852C300.252 202.076 300.588 202.188 300.98 202.188C302.422 202.188 303.08 200.578 303.08 198.114Z" fill="rgb(var(--colour-main))"></path><rect x="54" y="180" width="270" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="54" y="252" width="270" height="36" fill="rgb(var(--colour-negative))"></rect><rect x="72" y="264" width="12" height="12" rx="6" fill="rgb(var(--colour-negative))"></rect><path d="M78 264C81.3137 264 84 266.686 84 270H78V264Z" fill="rgb(var(--colour-income-blue))"></path><path d="M91.736 265.214H93.038V273.852H97.7V275H91.736V265.214ZM102.406 266.614V265.214H103.806V266.614H102.406ZM103.68 267.664V274.048H105.934V275H100.012V274.048H102.532V268.616H100.012V267.664H103.68ZM108.723 275V267.664H109.801V268.882C110.375 267.986 111.075 267.454 112.237 267.454C113.511 267.454 114.561 268.098 114.561 269.456V275H113.399V269.918C113.399 268.938 112.699 268.476 111.887 268.476C110.571 268.476 109.885 269.61 109.885 270.87V275H108.723ZM123.481 272.732C123.229 274.272 122.067 275.252 120.345 275.252C118.133 275.252 117.013 273.642 117.013 271.402C117.013 268.952 118.343 267.44 120.373 267.44C122.641 267.44 123.635 269.134 123.635 271.682H118.231C118.273 273.124 118.973 274.174 120.387 274.174C121.339 274.174 121.983 273.712 122.305 272.732H123.481ZM120.359 268.518C119.043 268.518 118.357 269.498 118.259 270.73H122.375C122.375 269.512 121.619 268.518 120.359 268.518Z" fill="rgb(var(--colour-main))"></path><path d="M298.008 265.214H304.644V266.25C302.446 269.316 301.2 271.654 300.612 275H299.296C300.262 270.912 301.228 269.526 303.44 266.292H298.008V265.214Z" fill="rgb(var(--colour-main))"></path><rect x="54" y="252" width="270" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="54" y="288" width="270" height="36" fill="rgb(var(--colour-negative))"></rect><rect x="72" y="300" width="12" height="12" rx="6" fill="rgb(var(--colour-negative))"></rect><path d="M78 306H84C84 309.314 81.3137 312 78 312V306Z" fill="#FFE000"></path><path d="M91.736 301.214H93.038V309.852H97.7V311H91.736V301.214ZM102.406 302.614V301.214H103.806V302.614H102.406ZM103.68 303.664V310.048H105.934V311H100.012V310.048H102.532V304.616H100.012V303.664H103.68ZM108.723 311V303.664H109.801V304.882C110.375 303.986 111.075 303.454 112.237 303.454C113.511 303.454 114.561 304.098 114.561 305.456V311H113.399V305.918C113.399 304.938 112.699 304.476 111.887 304.476C110.571 304.476 109.885 305.61 109.885 306.87V311H108.723ZM123.481 308.732C123.229 310.272 122.067 311.252 120.345 311.252C118.133 311.252 117.013 309.642 117.013 307.402C117.013 304.952 118.343 303.44 120.373 303.44C122.641 303.44 123.635 305.134 123.635 307.682H118.231C118.273 309.124 118.973 310.174 120.387 310.174C121.339 310.174 121.983 309.712 122.305 308.732H123.481ZM120.359 304.518C119.043 304.518 118.357 305.498 118.259 306.73H122.375C122.375 305.512 121.619 304.518 120.359 304.518Z" fill="rgb(var(--colour-main))"></path><path d="M304.602 309.922V311H297.994C298.148 308.704 298.764 307.738 300.78 306.632L302.082 305.918C302.964 305.428 303.412 304.798 303.412 303.944C303.412 302.838 302.824 302.068 301.578 302.068C300.136 302.068 299.548 303.048 299.45 304.49H298.218C298.288 302.25 299.408 300.99 301.62 300.99C303.622 300.99 304.672 302.306 304.672 303.944C304.672 305.204 303.986 306.184 302.586 306.926L301.186 307.668C300.01 308.298 299.464 308.998 299.38 309.922H304.602Z" fill="rgb(var(--colour-main))"></path><rect x="54" y="288" width="270" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M91.736 355.214H93.038V363.852H97.7V365H91.736V355.214ZM102.406 356.614V355.214H103.806V356.614H102.406ZM103.68 357.664V364.048H105.934V365H100.012V364.048H102.532V358.616H100.012V357.664H103.68ZM108.723 365V357.664H109.801V358.882C110.375 357.986 111.075 357.454 112.237 357.454C113.511 357.454 114.561 358.098 114.561 359.456V365H113.399V359.918C113.399 358.938 112.699 358.476 111.887 358.476C110.571 358.476 109.885 359.61 109.885 360.87V365H108.723ZM123.481 362.732C123.229 364.272 122.067 365.252 120.345 365.252C118.133 365.252 117.013 363.642 117.013 361.402C117.013 358.952 118.343 357.44 120.373 357.44C122.641 357.44 123.635 359.134 123.635 361.682H118.231C118.273 363.124 118.973 364.174 120.387 364.174C121.339 364.174 121.983 363.712 122.305 362.732H123.481ZM120.359 358.518C119.043 358.518 118.357 359.498 118.259 360.73H122.375C122.375 359.512 121.619 358.518 120.359 358.518Z" fill="rgb(var(--colour-main))"></path><path d="M303.874 365L303.006 362.074H299.632L298.764 365H297.42L300.514 355.214H302.152L305.232 365H303.874ZM299.954 360.982H302.684L301.312 356.39L299.954 360.982ZM306.2 365V357.664H307.292V358.42C307.6 357.958 308.188 357.496 308.972 357.496C309.686 357.496 310.26 357.874 310.47 358.476C310.764 357.986 311.352 357.496 312.178 357.496C313.088 357.496 313.76 358.098 313.76 359.022V365H312.612V359.26C312.612 358.742 312.276 358.476 311.8 358.476C311.016 358.476 310.554 358.938 310.554 359.708V365H309.406V359.26C309.406 358.742 309.07 358.476 308.594 358.476C307.81 358.476 307.348 358.938 307.348 359.708V365H306.2ZM318.635 357.44C320.889 357.44 321.953 359.12 321.953 361.346C321.953 363.572 320.889 365.252 318.635 365.252C316.381 365.252 315.317 363.572 315.317 361.346C315.317 359.12 316.381 357.44 318.635 357.44ZM318.635 358.518C317.151 358.518 316.535 359.848 316.535 361.346C316.535 362.844 317.151 364.174 318.635 364.174C320.119 364.174 320.735 362.844 320.735 361.346C320.735 359.848 320.119 358.518 318.635 358.518ZM330.215 357.664V365H329.165V363.908C328.493 364.874 327.793 365.252 326.715 365.252C326.085 365.252 325.553 365.112 325.133 364.818C324.629 364.454 324.377 363.936 324.377 363.25V357.664H325.539V362.788C325.539 363.278 325.707 363.656 326.029 363.908C326.295 364.118 326.645 364.23 327.051 364.23C327.597 364.23 328.059 364.034 328.437 363.628C328.843 363.194 329.053 362.564 329.053 361.738V357.664H330.215ZM333.031 365V357.664H334.109V358.882C334.683 357.986 335.383 357.454 336.545 357.454C337.819 357.454 338.869 358.098 338.869 359.456V365H337.707V359.918C337.707 358.938 337.007 358.476 336.195 358.476C334.879 358.476 334.193 359.61 334.193 360.87V365H333.031ZM344.653 357.664H347.537V358.616H344.653V362.704C344.653 363.782 345.227 364.146 346.291 364.146C346.767 364.146 347.187 364.104 347.537 364.006V365.028C347.075 365.168 346.613 365.196 346.221 365.196C344.443 365.196 343.491 364.51 343.491 362.914V358.616H341.377V357.664H343.491V355.648H344.653V357.664Z" fill="rgb(var(--colour-main))"></path><path d="M88.91 86.362V85.214H81.742V86.362H84.682V95H85.984V86.362H88.91ZM90.6483 87.664L93.3643 95.112L92.9163 96.19C92.7063 96.708 92.4123 96.904 91.8803 96.904C91.6423 96.904 91.3903 96.89 91.0823 96.82V97.912C91.3763 98.01 91.6843 98.052 92.0343 98.052C92.9443 98.052 93.6583 97.548 94.0363 96.54L97.3403 87.664H96.1363L94.0223 93.614L91.8803 87.664H90.6483ZM100.703 98.052V94.16C101.319 94.93 102.005 95.252 102.957 95.252C105.057 95.252 106.093 93.516 106.093 91.416C106.093 89.302 105.127 87.44 102.943 87.44C101.921 87.44 101.151 87.874 100.605 88.756V87.664H99.5266V98.052H100.703ZM100.703 91.346C100.703 89.918 101.291 88.532 102.747 88.532C104.231 88.532 104.875 89.904 104.875 91.388C104.875 92.802 104.217 94.16 102.747 94.16C101.291 94.16 100.703 92.774 100.703 91.346ZM113.375 90.73H109.259C109.357 89.498 110.043 88.518 111.359 88.518C112.619 88.518 113.375 89.512 113.375 90.73ZM108.013 91.402C108.013 93.642 109.133 95.252 111.345 95.252C113.067 95.252 114.229 94.272 114.481 92.732H113.305C112.983 93.712 112.339 94.174 111.387 94.174C109.973 94.174 109.273 93.124 109.231 91.682H114.635C114.635 89.134 113.641 87.44 111.373 87.44C109.343 87.44 108.013 88.952 108.013 91.402Z" fill="rgb(var(--colour-main))"></path><line x1="90.5" y1="315" x2="90.5" y2="342" stroke="rgb(var(--colour-main-500))"></line><line x1="297.5" y1="315" x2="297.5" y2="342" stroke="rgb(var(--colour-main-500))"></line><line x1="81.5" y1="108" x2="81.5" y2="135" stroke="rgb(var(--colour-main-500))"></line></svg></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A Ledger Entry must be balanced, which means it follows the Accounting Equation:</p><br/><div class="flex flex-row flex-wrap"><div class="flex items-center"><span class="pr-[0.5ch] laptop:scale-[125%]"><svg width="12" height="12" class="shrink-0" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" data-testid="account-type-icon-asset"><circle cx="6" cy="6" r="6" fill="rgb(var(--colour-asset-green))"></circle><path d="M3.98999 9.19595L4.64999 7.29995H7.32599L7.96199 9.19595H9.11399L6.66599 2.19995H5.38199L2.88599 9.19595H3.98999ZM4.94999 6.41195L6.00599 3.36395L7.02599 6.41195H4.94999Z" fill="rgb(var(--colour-negative))"></path></svg></span> <!-- -->Assets -<!-- --> <span class="pl-[1ch] pr-[0.5ch] laptop:scale-[125%]"><svg width="12" height="12" class="shrink-0" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" data-testid="account-type-icon-liability"><circle cx="6" cy="6" r="6" fill="rgb(var(--colour-liability-red))"></circle><path d="M4.00366 9.29678H8.95966V8.38478H5.05966V2.30078H4.00366V9.29678Z" fill="rgb(var(--colour-negative))"></path></svg></span>Liabilities</div><div class="pl-[1ch] pr-[1ch] flex items-center">=</div><div class="flex items-center"><span class="pr-[0.5ch] laptop:scale-[125%]"><svg width="12" height="12" class="shrink-0" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" data-testid="account-type-icon-income"><circle cx="6" cy="6" r="6" fill="rgb(var(--colour-income-blue))"></circle><path d="M3.82812 9.49795H8.17212V8.60995H6.50412V3.38995H8.17212V2.50195H3.82812V3.38995H5.48412V8.60995H3.82812V9.49795Z" fill="rgb(var(--colour-negative))"></path></svg> </span>Income -<!-- --> <span class=" pl-[1ch] pr-[0.5ch] laptop:scale-[125%]"><svg width="12" height="12" class="shrink-0" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" data-testid="account-type-icon-expense"><circle cx="6" cy="6" r="6" fill="rgb(var(--colour-expense-yellow))"></circle><path d="M8.3281 6.36595V5.45395H4.6561V3.41395H8.5081V2.50195H3.6001V9.49795H8.6881V8.58595H4.6561V6.36595H8.3281Z" fill="#0D0D0D"></path></svg></span> <!-- -->Expenses</div></div><br/><div class="pt-f2"><div class="hidden tablet:block"><svg width="100%" height="100%" viewBox="0 0 621 306" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="621" height="306" fill="rgb(var(--colour-negative))"></rect><path d="M24.874 32L24.006 29.074H20.632L19.764 32H18.42L21.514 22.214H23.152L26.232 32H24.874ZM20.954 27.982H23.684L22.312 23.39L20.954 27.982ZM34.1163 27.086H32.9403C32.8143 26.12 32.1703 25.518 31.1483 25.518C29.6363 25.518 29.0483 26.96 29.0483 28.416C29.0483 29.872 29.7063 31.174 31.1763 31.174C32.1983 31.174 32.8283 30.6 33.0243 29.438H34.2003C34.0463 31.202 32.9543 32.252 31.1483 32.252C29.0063 32.252 27.8303 30.572 27.8303 28.416C27.8303 26.218 28.9783 24.44 31.1623 24.44C32.9543 24.44 34.0743 25.532 34.1163 27.086ZM42.7706 27.086H41.5946C41.4686 26.12 40.8246 25.518 39.8026 25.518C38.2906 25.518 37.7026 26.96 37.7026 28.416C37.7026 29.872 38.3606 31.174 39.8306 31.174C40.8526 31.174 41.4826 30.6 41.6786 29.438H42.8546C42.7006 31.202 41.6086 32.252 39.8026 32.252C37.6606 32.252 36.4846 30.572 36.4846 28.416C36.4846 26.218 37.6326 24.44 39.8166 24.44C41.6086 24.44 42.7286 25.532 42.7706 27.086ZM48.2889 24.44C50.5429 24.44 51.6069 26.12 51.6069 28.346C51.6069 30.572 50.5429 32.252 48.2889 32.252C46.0349 32.252 44.9709 30.572 44.9709 28.346C44.9709 26.12 46.0349 24.44 48.2889 24.44ZM48.2889 25.518C46.8049 25.518 46.1889 26.848 46.1889 28.346C46.1889 29.844 46.8049 31.174 48.2889 31.174C49.7729 31.174 50.3889 29.844 50.3889 28.346C50.3889 26.848 49.7729 25.518 48.2889 25.518ZM59.8692 24.664V32H58.8192V30.908C58.1472 31.874 57.4472 32.252 56.3692 32.252C55.7392 32.252 55.2072 32.112 54.7872 31.818C54.2832 31.454 54.0312 30.936 54.0312 30.25V24.664H55.1932V29.788C55.1932 30.278 55.3612 30.656 55.6832 30.908C55.9492 31.118 56.2992 31.23 56.7052 31.23C57.2512 31.23 57.7132 31.034 58.0912 30.628C58.4972 30.194 58.7072 29.564 58.7072 28.738V24.664H59.8692ZM62.6855 32V24.664H63.7635V25.882C64.3375 24.986 65.0375 24.454 66.1995 24.454C67.4735 24.454 68.5235 25.098 68.5235 26.456V32H67.3615V26.918C67.3615 25.938 66.6615 25.476 65.8495 25.476C64.5335 25.476 63.8475 26.61 63.8475 27.87V32H62.6855ZM74.3078 24.664H77.1918V25.616H74.3078V29.704C74.3078 30.782 74.8818 31.146 75.9458 31.146C76.4218 31.146 76.8418 31.104 77.1918 31.006V32.028C76.7298 32.168 76.2678 32.196 75.8758 32.196C74.0978 32.196 73.1458 31.51 73.1458 29.914V25.616H71.0318V24.664H73.1458V22.648H74.3078V24.664ZM82.3321 23.614V22.214H83.7321V23.614H82.3321ZM83.6061 24.664V31.048H85.8601V32H79.9381V31.048H82.4581V25.616H79.9381V24.664H83.6061ZM88.6484 32V24.664H89.7264V25.882C90.3004 24.986 91.0004 24.454 92.1624 24.454C93.4364 24.454 94.4864 25.098 94.4864 26.456V32H93.3244V26.918C93.3244 25.938 92.6244 25.476 91.8124 25.476C90.4964 25.476 89.8104 26.61 89.8104 27.87V32H88.6484ZM100.033 35.052C98.4367 35.052 97.2327 34.394 97.0367 32.84H98.2547C98.4227 33.666 98.9967 34.072 100.061 34.072C101.531 34.072 102.133 33.344 102.133 31.384V30.964C101.699 31.818 100.915 32.252 99.9487 32.252C97.7787 32.252 96.7567 30.558 96.7567 28.304C96.7567 26.148 97.8207 24.44 99.9067 24.44C100.901 24.44 101.657 24.818 102.161 25.574V24.664H103.323V30.81C103.323 31.832 103.239 32.602 103.071 33.134C102.665 34.408 101.615 35.052 100.033 35.052ZM100.117 31.16C101.587 31.16 102.161 29.746 102.161 28.388C102.161 26.918 101.573 25.532 100.103 25.532C98.7307 25.532 97.9747 26.764 97.9747 28.346C97.9747 29.844 98.6187 31.16 100.117 31.16ZM120.281 27.562H116.081V30.852H120.743V32H114.779V22.214H120.491V23.362H116.081V26.414H120.281V27.562ZM129.286 24.664V35.052H128.124V31.076C127.578 31.916 126.864 32.252 125.856 32.252C123.882 32.252 122.72 30.74 122.72 28.43C122.72 26.204 123.798 24.44 125.912 24.44C126.878 24.44 127.704 24.86 128.25 25.63V24.664H129.286ZM126.08 25.532C124.694 25.532 123.938 26.764 123.938 28.346C123.938 29.844 124.61 31.16 126.08 31.16C127.55 31.16 128.124 29.746 128.124 28.388C128.124 26.932 127.536 25.532 126.08 25.532ZM137.758 24.664V32H136.708V30.908C136.036 31.874 135.336 32.252 134.258 32.252C133.628 32.252 133.096 32.112 132.676 31.818C132.172 31.454 131.92 30.936 131.92 30.25V24.664H133.082V29.788C133.082 30.278 133.25 30.656 133.572 30.908C133.838 31.118 134.188 31.23 134.594 31.23C135.14 31.23 135.602 31.034 135.98 30.628C136.386 30.194 136.596 29.564 136.596 28.738V24.664H137.758ZM147.126 31.23V32.112C146.832 32.196 146.608 32.238 146.426 32.238C145.614 32.238 145.208 31.888 145.124 31.132C144.298 31.944 143.57 32.252 142.632 32.252C141.204 32.252 140.238 31.454 140.238 30.096C140.238 28.584 141.386 28.038 142.24 27.898C142.492 27.856 143.038 27.772 143.864 27.66C144.802 27.534 145.11 27.352 145.11 26.876V26.624C145.11 25.896 144.536 25.532 143.43 25.532C142.352 25.532 141.82 25.938 141.722 26.834H140.546C140.574 25.14 141.75 24.454 143.486 24.454C145.292 24.454 146.244 25.154 146.244 26.456V30.684C146.244 31.062 146.454 31.258 146.874 31.258C146.944 31.258 147.056 31.244 147.126 31.23ZM145.11 29.452V28.29C144.62 28.514 143.822 28.64 143.206 28.71C142.114 28.836 141.428 29.144 141.428 30.068C141.428 30.796 141.988 31.23 142.926 31.23C143.948 31.23 145.11 30.474 145.11 29.452ZM152.196 24.664H155.08V25.616H152.196V29.704C152.196 30.782 152.77 31.146 153.834 31.146C154.31 31.146 154.73 31.104 155.08 31.006V32.028C154.618 32.168 154.156 32.196 153.764 32.196C151.986 32.196 151.034 31.51 151.034 29.914V25.616H148.92V24.664H151.034V22.648H152.196V24.664ZM160.221 23.614V22.214H161.621V23.614H160.221ZM161.495 24.664V31.048H163.749V32H157.827V31.048H160.347V25.616H157.827V24.664H161.495ZM169.449 24.44C171.703 24.44 172.767 26.12 172.767 28.346C172.767 30.572 171.703 32.252 169.449 32.252C167.195 32.252 166.131 30.572 166.131 28.346C166.131 26.12 167.195 24.44 169.449 24.44ZM169.449 25.518C167.965 25.518 167.349 26.848 167.349 28.346C167.349 29.844 167.965 31.174 169.449 31.174C170.933 31.174 171.549 29.844 171.549 28.346C171.549 26.848 170.933 25.518 169.449 25.518ZM175.191 32V24.664H176.269V25.882C176.843 24.986 177.543 24.454 178.705 24.454C179.979 24.454 181.029 25.098 181.029 26.456V32H179.867V26.918C179.867 25.938 179.167 25.476 178.355 25.476C177.039 25.476 176.353 26.61 176.353 27.87V32H175.191Z" fill="rgb(var(--colour-main))"></path><rect x="138.5" y="108" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="156.5" cy="126" r="6" fill="#5AC93B"></circle><path d="M158.32 129.495H159.29L157.09 122.505H155.92L153.71 129.495H154.67L155.29 127.405H157.7L158.32 129.495ZM155.52 126.625L156.49 123.345L157.47 126.625H155.52Z" fill="rgb(var(--colour-negative))"></path><path d="M175.374 131L174.506 128.074H171.132L170.264 131H168.92L172.014 121.214H173.652L176.732 131H175.374ZM171.454 126.982H174.184L172.812 122.39L171.454 126.982ZM184.168 125.666H182.95C182.922 124.938 182.362 124.476 181.48 124.476C180.528 124.476 179.884 124.896 179.884 125.554C179.884 126.072 180.248 126.38 180.934 126.562L182.6 126.996C183.832 127.318 184.462 127.92 184.462 128.956C184.462 130.384 183.342 131.252 181.522 131.252C179.604 131.252 178.596 130.412 178.512 128.774H179.744C179.856 129.768 180.458 130.216 181.55 130.216C182.586 130.216 183.272 129.824 183.272 129.138C183.272 128.508 182.964 128.242 182.166 128.032L180.626 127.626C179.296 127.276 178.694 126.73 178.694 125.61C178.694 124.28 179.786 123.44 181.508 123.44C183.216 123.44 184.14 124.28 184.168 125.666ZM192.823 125.666H191.605C191.577 124.938 191.017 124.476 190.135 124.476C189.183 124.476 188.539 124.896 188.539 125.554C188.539 126.072 188.903 126.38 189.589 126.562L191.255 126.996C192.487 127.318 193.117 127.92 193.117 128.956C193.117 130.384 191.997 131.252 190.177 131.252C188.259 131.252 187.251 130.412 187.167 128.774H188.399C188.511 129.768 189.113 130.216 190.205 130.216C191.241 130.216 191.927 129.824 191.927 129.138C191.927 128.508 191.619 128.242 190.821 128.032L189.281 127.626C187.951 127.276 187.349 126.73 187.349 125.61C187.349 124.28 188.441 123.44 190.163 123.44C191.871 123.44 192.795 124.28 192.823 125.666ZM201.981 128.732C201.729 130.272 200.567 131.252 198.845 131.252C196.633 131.252 195.513 129.642 195.513 127.402C195.513 124.952 196.843 123.44 198.873 123.44C201.141 123.44 202.135 125.134 202.135 127.682H196.731C196.773 129.124 197.473 130.174 198.887 130.174C199.839 130.174 200.483 129.712 200.805 128.732H201.981ZM198.859 124.518C197.543 124.518 196.857 125.498 196.759 126.73H200.875C200.875 125.512 200.119 124.518 198.859 124.518ZM207.499 123.664H210.383V124.616H207.499V128.704C207.499 129.782 208.073 130.146 209.137 130.146C209.613 130.146 210.033 130.104 210.383 130.006V131.028C209.921 131.168 209.459 131.196 209.067 131.196C207.289 131.196 206.337 130.51 206.337 128.914V124.616H204.223V123.664H206.337V121.648H207.499V123.664ZM218.785 125.666H217.567C217.539 124.938 216.979 124.476 216.097 124.476C215.145 124.476 214.501 124.896 214.501 125.554C214.501 126.072 214.865 126.38 215.551 126.562L217.217 126.996C218.449 127.318 219.079 127.92 219.079 128.956C219.079 130.384 217.959 131.252 216.139 131.252C214.221 131.252 213.213 130.412 213.129 128.774H214.361C214.473 129.768 215.075 130.216 216.167 130.216C217.203 130.216 217.889 129.824 217.889 129.138C217.889 128.508 217.581 128.242 216.783 128.032L215.243 127.626C213.913 127.276 213.311 126.73 213.311 125.61C213.311 124.28 214.403 123.44 216.125 123.44C217.833 123.44 218.757 124.28 218.785 125.666Z" fill="rgb(var(--colour-main))"></path><path d="M293.766 132.358V131.084C291.988 130.916 290.896 129.656 290.854 128.004H291.918C291.96 129.138 292.576 129.964 293.766 130.118V126.492L293.136 126.324C291.862 125.988 291.05 125.036 291.05 123.804C291.05 122.348 292.058 121.298 293.766 121.158V119.884H294.564V121.158C296.16 121.298 297.126 122.306 297.196 123.86H296.132C296.076 122.964 295.558 122.278 294.564 122.124V125.582L295.474 125.834C296.748 126.184 297.49 127.094 297.49 128.27C297.49 129.866 296.342 130.944 294.564 131.084V132.358H293.766ZM293.332 125.246L293.766 125.372V122.11C292.8 122.222 292.128 122.754 292.128 123.692C292.128 124.434 292.548 125.036 293.332 125.246ZM295.11 126.856L294.564 126.702V130.132C295.74 130.02 296.412 129.376 296.412 128.424C296.412 127.64 296.02 127.094 295.11 126.856Z" fill="rgb(var(--colour-main-500))"></path><rect x="310.5" y="108" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="328.5" cy="126" r="6" fill="rgb(var(--colour-income-blue))"></circle><path d="M326.545 129.495H330.455V128.715H328.965V123.285H330.455V122.505H326.545V123.285H328.025V128.715H326.545V129.495Z" fill="rgb(var(--colour-main))"></path><path d="M342.096 131V129.908H344.168V122.306H342.096V121.214H347.57V122.306H345.484V129.908H347.57V131H342.096ZM350.568 131V123.664H351.646V124.882C352.22 123.986 352.92 123.454 354.082 123.454C355.356 123.454 356.406 124.098 356.406 125.456V131H355.244V125.918C355.244 124.938 354.544 124.476 353.732 124.476C352.416 124.476 351.73 125.61 351.73 126.87V131H350.568ZM365.271 126.086H364.095C363.969 125.12 363.325 124.518 362.303 124.518C360.791 124.518 360.203 125.96 360.203 127.416C360.203 128.872 360.861 130.174 362.331 130.174C363.353 130.174 363.983 129.6 364.179 128.438H365.355C365.201 130.202 364.109 131.252 362.303 131.252C360.161 131.252 358.985 129.572 358.985 127.416C358.985 125.218 360.133 123.44 362.317 123.44C364.109 123.44 365.229 124.532 365.271 126.086ZM370.789 123.44C373.043 123.44 374.107 125.12 374.107 127.346C374.107 129.572 373.043 131.252 370.789 131.252C368.535 131.252 367.471 129.572 367.471 127.346C367.471 125.12 368.535 123.44 370.789 123.44ZM370.789 124.518C369.305 124.518 368.689 125.848 368.689 127.346C368.689 128.844 369.305 130.174 370.789 130.174C372.273 130.174 372.889 128.844 372.889 127.346C372.889 125.848 372.273 124.518 370.789 124.518ZM375.663 131V123.664H376.755V124.42C377.063 123.958 377.651 123.496 378.435 123.496C379.149 123.496 379.723 123.874 379.933 124.476C380.227 123.986 380.815 123.496 381.641 123.496C382.551 123.496 383.223 124.098 383.223 125.022V131H382.075V125.26C382.075 124.742 381.739 124.476 381.263 124.476C380.479 124.476 380.017 124.938 380.017 125.708V131H378.869V125.26C378.869 124.742 378.533 124.476 378.057 124.476C377.273 124.476 376.811 124.938 376.811 125.708V131H375.663ZM391.289 128.732C391.037 130.272 389.875 131.252 388.153 131.252C385.941 131.252 384.821 129.642 384.821 127.402C384.821 124.952 386.151 123.44 388.181 123.44C390.449 123.44 391.443 125.134 391.443 127.682H386.039C386.081 129.124 386.781 130.174 388.195 130.174C389.147 130.174 389.791 129.712 390.113 128.732H391.289ZM388.167 124.518C386.851 124.518 386.165 125.498 386.067 126.73H390.183C390.183 125.512 389.427 124.518 388.167 124.518Z" fill="rgb(var(--colour-main))"></path><path d="M465.766 132.358V131.084C463.988 130.916 462.896 129.656 462.854 128.004H463.918C463.96 129.138 464.576 129.964 465.766 130.118V126.492L465.136 126.324C463.862 125.988 463.05 125.036 463.05 123.804C463.05 122.348 464.058 121.298 465.766 121.158V119.884H466.564V121.158C468.16 121.298 469.126 122.306 469.196 123.86H468.132C468.076 122.964 467.558 122.278 466.564 122.124V125.582L467.474 125.834C468.748 126.184 469.49 127.094 469.49 128.27C469.49 129.866 468.342 130.944 466.564 131.084V132.358H465.766ZM465.332 125.246L465.766 125.372V122.11C464.8 122.222 464.128 122.754 464.128 123.692C464.128 124.434 464.548 125.036 465.332 125.246ZM467.11 126.856L466.564 126.702V130.132C467.74 130.02 468.412 129.376 468.412 128.424C468.412 127.64 468.02 127.094 467.11 126.856Z" fill="rgb(var(--colour-main-500))"></path><rect x="310.5" y="144" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="328.5" cy="162" r="6" fill="#FFE000"></circle><path d="M330.3 162.325V161.505H327.3V159.325H330.45V158.505H326.37V165.495H330.63V164.675H327.3V162.325H330.3Z" fill="rgb(var(--colour-main))"></path><path d="M347.584 162.562H343.384V165.852H348.046V167H342.082V157.214H347.794V158.362H343.384V161.414H347.584V162.562ZM356.602 159.664L354.138 163.206L356.672 167H355.286L353.48 164.214L351.646 167H350.288L352.878 163.262L350.428 159.664H351.8L353.522 162.296L355.272 159.664H356.602ZM360.203 170.052H359.027V159.664H360.105V160.756C360.651 159.874 361.421 159.44 362.443 159.44C364.627 159.44 365.593 161.302 365.593 163.416C365.593 165.516 364.557 167.252 362.457 167.252C361.505 167.252 360.819 166.93 360.203 166.16V170.052ZM362.247 160.532C360.791 160.532 360.203 161.918 360.203 163.346C360.203 164.774 360.791 166.16 362.247 166.16C363.717 166.16 364.375 164.802 364.375 163.388C364.375 161.904 363.731 160.532 362.247 160.532ZM373.981 164.732C373.729 166.272 372.567 167.252 370.845 167.252C368.633 167.252 367.513 165.642 367.513 163.402C367.513 160.952 368.843 159.44 370.873 159.44C373.141 159.44 374.135 161.134 374.135 163.682H368.731C368.773 165.124 369.473 166.174 370.887 166.174C371.839 166.174 372.483 165.712 372.805 164.732H373.981ZM370.859 160.518C369.543 160.518 368.857 161.498 368.759 162.73H372.875C372.875 161.512 372.119 160.518 370.859 160.518ZM376.531 167V159.664H377.609V160.882C378.183 159.986 378.883 159.454 380.045 159.454C381.319 159.454 382.369 160.098 382.369 161.456V167H381.207V161.918C381.207 160.938 380.507 160.476 379.695 160.476C378.379 160.476 377.693 161.61 377.693 162.87V167H376.531ZM390.785 161.666H389.567C389.539 160.938 388.979 160.476 388.097 160.476C387.145 160.476 386.501 160.896 386.501 161.554C386.501 162.072 386.865 162.38 387.551 162.562L389.217 162.996C390.449 163.318 391.079 163.92 391.079 164.956C391.079 166.384 389.959 167.252 388.139 167.252C386.221 167.252 385.213 166.412 385.129 164.774H386.361C386.473 165.768 387.075 166.216 388.167 166.216C389.203 166.216 389.889 165.824 389.889 165.138C389.889 164.508 389.581 164.242 388.783 164.032L387.243 163.626C385.913 163.276 385.311 162.73 385.311 161.61C385.311 160.28 386.403 159.44 388.125 159.44C389.833 159.44 390.757 160.28 390.785 161.666ZM399.944 164.732C399.692 166.272 398.53 167.252 396.808 167.252C394.596 167.252 393.476 165.642 393.476 163.402C393.476 160.952 394.806 159.44 396.836 159.44C399.104 159.44 400.098 161.134 400.098 163.682H394.694C394.736 165.124 395.436 166.174 396.85 166.174C397.802 166.174 398.446 165.712 398.768 164.732H399.944ZM396.822 160.518C395.506 160.518 394.82 161.498 394.722 162.73H398.838C398.838 161.512 398.082 160.518 396.822 160.518Z" fill="rgb(var(--colour-main))"></path><path d="M465.766 168.358V167.084C463.988 166.916 462.896 165.656 462.854 164.004H463.918C463.96 165.138 464.576 165.964 465.766 166.118V162.492L465.136 162.324C463.862 161.988 463.05 161.036 463.05 159.804C463.05 158.348 464.058 157.298 465.766 157.158V155.884H466.564V157.158C468.16 157.298 469.126 158.306 469.196 159.86H468.132C468.076 158.964 467.558 158.278 466.564 158.124V161.582L467.474 161.834C468.748 162.184 469.49 163.094 469.49 164.27C469.49 165.866 468.342 166.944 466.564 167.084V168.358H465.766ZM465.332 161.246L465.766 161.372V158.11C464.8 158.222 464.128 158.754 464.128 159.692C464.128 160.434 464.548 161.036 465.332 161.246ZM467.11 162.856L466.564 162.702V166.132C467.74 166.02 468.412 165.376 468.412 164.424C468.412 163.64 468.02 163.094 467.11 162.856Z" fill="rgb(var(--colour-main-500))"></path><rect x="138.5" y="144" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="156.5" cy="162" r="6" fill="#EC3425"></circle><path d="M154.6 158.505V165.495H158.86V164.675H155.53V158.505H154.6Z" fill="rgb(var(--colour-negative))"></path><path d="M170.236 157.214H171.538V165.852H176.2V167H170.236V157.214ZM180.906 158.614V157.214H182.306V158.614H180.906ZM182.18 159.664V166.048H184.434V167H178.512V166.048H181.032V160.616H178.512V159.664H182.18ZM193.775 166.23V167.112C193.481 167.196 193.257 167.238 193.075 167.238C192.263 167.238 191.857 166.888 191.773 166.132C190.947 166.944 190.219 167.252 189.281 167.252C187.853 167.252 186.887 166.454 186.887 165.096C186.887 163.584 188.035 163.038 188.889 162.898C189.141 162.856 189.687 162.772 190.513 162.66C191.451 162.534 191.759 162.352 191.759 161.876V161.624C191.759 160.896 191.185 160.532 190.079 160.532C189.001 160.532 188.469 160.938 188.371 161.834H187.195C187.223 160.14 188.399 159.454 190.135 159.454C191.941 159.454 192.893 160.154 192.893 161.456V165.684C192.893 166.062 193.103 166.258 193.523 166.258C193.593 166.258 193.705 166.244 193.775 166.23ZM191.759 164.452V163.29C191.269 163.514 190.471 163.64 189.855 163.71C188.763 163.836 188.077 164.144 188.077 165.068C188.077 165.796 188.637 166.23 189.575 166.23C190.597 166.23 191.759 165.474 191.759 164.452ZM195.681 167V156.794H196.843V160.644C197.375 159.846 198.131 159.44 199.111 159.44C201.267 159.44 202.247 161.134 202.247 163.262C202.247 165.516 201.141 167.252 199.055 167.252C198.047 167.252 197.277 166.832 196.731 165.992V167H195.681ZM198.901 160.532C197.417 160.532 196.843 161.974 196.843 163.388C196.843 164.774 197.417 166.16 198.901 166.16C200.371 166.16 201.043 164.816 201.043 163.388C201.043 161.862 200.357 160.532 198.901 160.532ZM206.869 158.614V157.214H208.269V158.614H206.869ZM208.143 159.664V166.048H210.397V167H204.475V166.048H206.995V160.616H204.475V159.664H208.143ZM217.077 156.794V166.048H219.331V167H213.409V166.048H215.943V157.746H213.409V156.794H217.077ZM224.178 158.614V157.214H225.578V158.614H224.178ZM225.452 159.664V166.048H227.706V167H221.784V166.048H224.304V160.616H221.784V159.664H225.452ZM233.462 159.664H236.346V160.616H233.462V164.704C233.462 165.782 234.036 166.146 235.1 166.146C235.576 166.146 235.996 166.104 236.346 166.006V167.028C235.884 167.168 235.422 167.196 235.03 167.196C233.252 167.196 232.3 166.51 232.3 164.914V160.616H230.186V159.664H232.3V157.648H233.462V159.664ZM241.486 158.614V157.214H242.886V158.614H241.486ZM242.76 159.664V166.048H245.014V167H239.092V166.048H241.612V160.616H239.092V159.664H242.76ZM253.907 164.732C253.655 166.272 252.493 167.252 250.771 167.252C248.559 167.252 247.439 165.642 247.439 163.402C247.439 160.952 248.769 159.44 250.799 159.44C253.067 159.44 254.061 161.134 254.061 163.682H248.657C248.699 165.124 249.399 166.174 250.813 166.174C251.765 166.174 252.409 165.712 252.731 164.732H253.907ZM250.785 160.518C249.469 160.518 248.783 161.498 248.685 162.73H252.801C252.801 161.512 252.045 160.518 250.785 160.518ZM262.057 161.666H260.839C260.811 160.938 260.251 160.476 259.369 160.476C258.417 160.476 257.773 160.896 257.773 161.554C257.773 162.072 258.137 162.38 258.823 162.562L260.489 162.996C261.721 163.318 262.351 163.92 262.351 164.956C262.351 166.384 261.231 167.252 259.411 167.252C257.493 167.252 256.485 166.412 256.401 164.774H257.633C257.745 165.768 258.347 166.216 259.439 166.216C260.475 166.216 261.161 165.824 261.161 165.138C261.161 164.508 260.853 164.242 260.055 164.032L258.515 163.626C257.185 163.276 256.583 162.73 256.583 161.61C256.583 160.28 257.675 159.44 259.397 159.44C261.105 159.44 262.029 160.28 262.057 161.666Z" fill="rgb(var(--colour-main))"></path><path d="M293.766 168.358V167.084C291.988 166.916 290.896 165.656 290.854 164.004H291.918C291.96 165.138 292.576 165.964 293.766 166.118V162.492L293.136 162.324C291.862 161.988 291.05 161.036 291.05 159.804C291.05 158.348 292.058 157.298 293.766 157.158V155.884H294.564V157.158C296.16 157.298 297.126 158.306 297.196 159.86H296.132C296.076 158.964 295.558 158.278 294.564 158.124V161.582L295.474 161.834C296.748 162.184 297.49 163.094 297.49 164.27C297.49 165.866 296.342 166.944 294.564 167.084V168.358H293.766ZM293.332 161.246L293.766 161.372V158.11C292.8 158.222 292.128 158.754 292.128 159.692C292.128 160.434 292.548 161.036 293.332 161.246ZM295.11 162.856L294.564 162.702V166.132C295.74 166.02 296.412 165.376 296.412 164.424C296.412 163.64 296.02 163.094 295.11 162.856Z" fill="rgb(var(--colour-main-500))"></path><rect x="138.5" y="180" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M158.228 196.042H156.968C156.926 194.922 156.268 194.096 154.91 194.096C153.566 194.096 152.852 194.768 152.852 195.65C152.852 196.462 153.272 196.924 154.182 197.134L156.184 197.596C157.71 197.946 158.508 198.954 158.508 200.214C158.508 202.16 157.094 203.252 155.036 203.252C152.6 203.252 151.298 201.964 151.27 199.878H152.53C152.544 201.18 153.412 202.09 155.064 202.09C156.534 202.09 157.192 201.39 157.192 200.396C157.192 199.528 156.716 199.038 155.75 198.814L153.72 198.338C152.306 198.002 151.536 197.12 151.536 195.776C151.536 194.138 152.852 192.99 154.952 192.99C156.996 192.99 158.228 194.236 158.228 195.86V196.042ZM163.536 195.664H166.42V196.616H163.536V200.704C163.536 201.782 164.11 202.146 165.174 202.146C165.65 202.146 166.07 202.104 166.42 202.006V203.028C165.958 203.168 165.496 203.196 165.104 203.196C163.326 203.196 162.374 202.51 162.374 200.914V196.616H160.26V195.664H162.374V193.648H163.536V195.664ZM175.775 202.23V203.112C175.481 203.196 175.257 203.238 175.075 203.238C174.263 203.238 173.857 202.888 173.773 202.132C172.947 202.944 172.219 203.252 171.281 203.252C169.853 203.252 168.887 202.454 168.887 201.096C168.887 199.584 170.035 199.038 170.889 198.898C171.141 198.856 171.687 198.772 172.513 198.66C173.451 198.534 173.759 198.352 173.759 197.876V197.624C173.759 196.896 173.185 196.532 172.079 196.532C171.001 196.532 170.469 196.938 170.371 197.834H169.195C169.223 196.14 170.399 195.454 172.135 195.454C173.941 195.454 174.893 196.154 174.893 197.456V201.684C174.893 202.062 175.103 202.258 175.523 202.258C175.593 202.258 175.705 202.244 175.775 202.23ZM173.759 200.452V199.29C173.269 199.514 172.471 199.64 171.855 199.71C170.763 199.836 170.077 200.144 170.077 201.068C170.077 201.796 170.637 202.23 171.575 202.23C172.597 202.23 173.759 201.474 173.759 200.452ZM180.845 195.664H183.729V196.616H180.845V200.704C180.845 201.782 181.419 202.146 182.483 202.146C182.959 202.146 183.379 202.104 183.729 202.006V203.028C183.267 203.168 182.805 203.196 182.413 203.196C180.635 203.196 179.683 202.51 179.683 200.914V196.616H177.569V195.664H179.683V193.648H180.845V195.664ZM192.635 200.732C192.383 202.272 191.221 203.252 189.499 203.252C187.287 203.252 186.167 201.642 186.167 199.402C186.167 196.952 187.497 195.44 189.527 195.44C191.795 195.44 192.789 197.134 192.789 199.682H187.385C187.427 201.124 188.127 202.174 189.541 202.174C190.493 202.174 191.137 201.712 191.459 200.732H192.635ZM189.513 196.518C188.197 196.518 187.511 197.498 187.413 198.73H191.529C191.529 197.512 190.773 196.518 189.513 196.518Z" fill="rgb(var(--colour-main))"></path><path d="M294.172 192.99C296.72 192.99 297.42 195.51 297.42 198.114C297.42 200.718 296.72 203.252 294.172 203.252C291.624 203.252 290.924 200.718 290.924 198.114C290.924 195.51 291.624 192.99 294.172 192.99ZM294.172 194.054C292.73 194.054 292.072 195.65 292.072 198.114C292.072 199.304 292.226 200.298 292.548 200.998L295.306 194.516C295.012 194.208 294.634 194.054 294.172 194.054ZM296.272 198.114C296.272 197.036 296.146 196.126 295.88 195.44L293.178 201.852C293.444 202.076 293.78 202.188 294.172 202.188C295.614 202.188 296.272 200.578 296.272 198.114Z" fill="rgb(var(--colour-main))"></path><rect x="310.5" y="180" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M330.55 195.944H329.22C328.94 194.88 328.422 194.138 327.176 194.138C325.314 194.138 324.614 195.776 324.614 198.128C324.614 200.774 325.51 202.104 327.176 202.104C328.478 202.104 329.038 201.264 329.318 199.682H330.648C330.382 202.048 329.08 203.252 327.162 203.252C324.614 203.252 323.256 201.278 323.256 198.142C323.256 195.328 324.32 192.99 327.218 192.99C329.164 192.99 330.256 194.264 330.55 195.944ZM332.568 203V192.794H333.73V196.756C334.248 195.986 334.92 195.454 336.082 195.454C337.356 195.454 338.406 196.098 338.406 197.456V203H337.244V197.918C337.244 196.938 336.544 196.476 335.732 196.476C334.416 196.476 333.73 197.61 333.73 198.87V203H332.568ZM347.775 202.23V203.112C347.481 203.196 347.257 203.238 347.075 203.238C346.263 203.238 345.857 202.888 345.773 202.132C344.947 202.944 344.219 203.252 343.281 203.252C341.853 203.252 340.887 202.454 340.887 201.096C340.887 199.584 342.035 199.038 342.889 198.898C343.141 198.856 343.687 198.772 344.513 198.66C345.451 198.534 345.759 198.352 345.759 197.876V197.624C345.759 196.896 345.185 196.532 344.079 196.532C343.001 196.532 342.469 196.938 342.371 197.834H341.195C341.223 196.14 342.399 195.454 344.135 195.454C345.941 195.454 346.893 196.154 346.893 197.456V201.684C346.893 202.062 347.103 202.258 347.523 202.258C347.593 202.258 347.705 202.244 347.775 202.23ZM345.759 200.452V199.29C345.269 199.514 344.471 199.64 343.855 199.71C342.763 199.836 342.077 200.144 342.077 201.068C342.077 201.796 342.637 202.23 343.575 202.23C344.597 202.23 345.759 201.474 345.759 200.452ZM349.877 203V195.664H350.955V196.882C351.529 195.986 352.229 195.454 353.391 195.454C354.665 195.454 355.715 196.098 355.715 197.456V203H354.553V197.918C354.553 196.938 353.853 196.476 353.041 196.476C351.725 196.476 351.039 197.61 351.039 198.87V203H349.877ZM361.261 206.052C359.665 206.052 358.461 205.394 358.265 203.84H359.483C359.651 204.666 360.225 205.072 361.289 205.072C362.759 205.072 363.361 204.344 363.361 202.384V201.964C362.927 202.818 362.143 203.252 361.177 203.252C359.007 203.252 357.985 201.558 357.985 199.304C357.985 197.148 359.049 195.44 361.135 195.44C362.129 195.44 362.885 195.818 363.389 196.574V195.664H364.551V201.81C364.551 202.832 364.467 203.602 364.299 204.134C363.893 205.408 362.843 206.052 361.261 206.052ZM361.345 202.16C362.815 202.16 363.389 200.746 363.389 199.388C363.389 197.918 362.801 196.532 361.331 196.532C359.959 196.532 359.203 197.764 359.203 199.346C359.203 200.844 359.847 202.16 361.345 202.16ZM373.289 200.732C373.037 202.272 371.875 203.252 370.153 203.252C367.941 203.252 366.821 201.642 366.821 199.402C366.821 196.952 368.151 195.44 370.181 195.44C372.449 195.44 373.443 197.134 373.443 199.682H368.039C368.081 201.124 368.781 202.174 370.195 202.174C371.147 202.174 371.791 201.712 372.113 200.732H373.289ZM370.167 196.518C368.851 196.518 368.165 197.498 368.067 198.73H372.183C372.183 197.512 371.427 196.518 370.167 196.518Z" fill="rgb(var(--colour-main))"></path><path d="M466.172 192.99C468.72 192.99 469.42 195.51 469.42 198.114C469.42 200.718 468.72 203.252 466.172 203.252C463.624 203.252 462.924 200.718 462.924 198.114C462.924 195.51 463.624 192.99 466.172 192.99ZM466.172 194.054C464.73 194.054 464.072 195.65 464.072 198.114C464.072 199.304 464.226 200.298 464.548 200.998L467.306 194.516C467.012 194.208 466.634 194.054 466.172 194.054ZM468.272 198.114C468.272 197.036 468.146 196.126 467.88 195.44L465.178 201.852C465.444 202.076 465.78 202.188 466.172 202.188C467.614 202.188 468.272 200.578 468.272 198.114Z" fill="rgb(var(--colour-main))"></path></svg></div><div class="block tablet:hidden"><svg width="100%" height="100%" viewBox="0 0 378 306" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="378" height="306" fill="rgb(var(--colour-negative))"></rect><path d="M24.874 32L24.006 29.074H20.632L19.764 32H18.42L21.514 22.214H23.152L26.232 32H24.874ZM20.954 27.982H23.684L22.312 23.39L20.954 27.982ZM34.1163 27.086H32.9403C32.8143 26.12 32.1703 25.518 31.1483 25.518C29.6363 25.518 29.0483 26.96 29.0483 28.416C29.0483 29.872 29.7063 31.174 31.1763 31.174C32.1983 31.174 32.8283 30.6 33.0243 29.438H34.2003C34.0463 31.202 32.9543 32.252 31.1483 32.252C29.0063 32.252 27.8303 30.572 27.8303 28.416C27.8303 26.218 28.9783 24.44 31.1623 24.44C32.9543 24.44 34.0743 25.532 34.1163 27.086ZM42.7706 27.086H41.5946C41.4686 26.12 40.8246 25.518 39.8026 25.518C38.2906 25.518 37.7026 26.96 37.7026 28.416C37.7026 29.872 38.3606 31.174 39.8306 31.174C40.8526 31.174 41.4826 30.6 41.6786 29.438H42.8546C42.7006 31.202 41.6086 32.252 39.8026 32.252C37.6606 32.252 36.4846 30.572 36.4846 28.416C36.4846 26.218 37.6326 24.44 39.8166 24.44C41.6086 24.44 42.7286 25.532 42.7706 27.086ZM48.2889 24.44C50.5429 24.44 51.6069 26.12 51.6069 28.346C51.6069 30.572 50.5429 32.252 48.2889 32.252C46.0349 32.252 44.9709 30.572 44.9709 28.346C44.9709 26.12 46.0349 24.44 48.2889 24.44ZM48.2889 25.518C46.8049 25.518 46.1889 26.848 46.1889 28.346C46.1889 29.844 46.8049 31.174 48.2889 31.174C49.7729 31.174 50.3889 29.844 50.3889 28.346C50.3889 26.848 49.7729 25.518 48.2889 25.518ZM59.8692 24.664V32H58.8192V30.908C58.1472 31.874 57.4472 32.252 56.3692 32.252C55.7392 32.252 55.2072 32.112 54.7872 31.818C54.2832 31.454 54.0312 30.936 54.0312 30.25V24.664H55.1932V29.788C55.1932 30.278 55.3612 30.656 55.6832 30.908C55.9492 31.118 56.2992 31.23 56.7052 31.23C57.2512 31.23 57.7132 31.034 58.0912 30.628C58.4972 30.194 58.7072 29.564 58.7072 28.738V24.664H59.8692ZM62.6855 32V24.664H63.7635V25.882C64.3375 24.986 65.0375 24.454 66.1995 24.454C67.4735 24.454 68.5235 25.098 68.5235 26.456V32H67.3615V26.918C67.3615 25.938 66.6615 25.476 65.8495 25.476C64.5335 25.476 63.8475 26.61 63.8475 27.87V32H62.6855ZM74.3078 24.664H77.1918V25.616H74.3078V29.704C74.3078 30.782 74.8818 31.146 75.9458 31.146C76.4218 31.146 76.8418 31.104 77.1918 31.006V32.028C76.7298 32.168 76.2678 32.196 75.8758 32.196C74.0978 32.196 73.1458 31.51 73.1458 29.914V25.616H71.0318V24.664H73.1458V22.648H74.3078V24.664ZM82.3321 23.614V22.214H83.7321V23.614H82.3321ZM83.6061 24.664V31.048H85.8601V32H79.9381V31.048H82.4581V25.616H79.9381V24.664H83.6061ZM88.6484 32V24.664H89.7264V25.882C90.3004 24.986 91.0004 24.454 92.1624 24.454C93.4364 24.454 94.4864 25.098 94.4864 26.456V32H93.3244V26.918C93.3244 25.938 92.6244 25.476 91.8124 25.476C90.4964 25.476 89.8104 26.61 89.8104 27.87V32H88.6484ZM100.033 35.052C98.4367 35.052 97.2327 34.394 97.0367 32.84H98.2547C98.4227 33.666 98.9967 34.072 100.061 34.072C101.531 34.072 102.133 33.344 102.133 31.384V30.964C101.699 31.818 100.915 32.252 99.9487 32.252C97.7787 32.252 96.7567 30.558 96.7567 28.304C96.7567 26.148 97.8207 24.44 99.9067 24.44C100.901 24.44 101.657 24.818 102.161 25.574V24.664H103.323V30.81C103.323 31.832 103.239 32.602 103.071 33.134C102.665 34.408 101.615 35.052 100.033 35.052ZM100.117 31.16C101.587 31.16 102.161 29.746 102.161 28.388C102.161 26.918 101.573 25.532 100.103 25.532C98.7307 25.532 97.9747 26.764 97.9747 28.346C97.9747 29.844 98.6187 31.16 100.117 31.16ZM120.281 27.562H116.081V30.852H120.743V32H114.779V22.214H120.491V23.362H116.081V26.414H120.281V27.562ZM129.286 24.664V35.052H128.124V31.076C127.578 31.916 126.864 32.252 125.856 32.252C123.882 32.252 122.72 30.74 122.72 28.43C122.72 26.204 123.798 24.44 125.912 24.44C126.878 24.44 127.704 24.86 128.25 25.63V24.664H129.286ZM126.08 25.532C124.694 25.532 123.938 26.764 123.938 28.346C123.938 29.844 124.61 31.16 126.08 31.16C127.55 31.16 128.124 29.746 128.124 28.388C128.124 26.932 127.536 25.532 126.08 25.532ZM137.758 24.664V32H136.708V30.908C136.036 31.874 135.336 32.252 134.258 32.252C133.628 32.252 133.096 32.112 132.676 31.818C132.172 31.454 131.92 30.936 131.92 30.25V24.664H133.082V29.788C133.082 30.278 133.25 30.656 133.572 30.908C133.838 31.118 134.188 31.23 134.594 31.23C135.14 31.23 135.602 31.034 135.98 30.628C136.386 30.194 136.596 29.564 136.596 28.738V24.664H137.758ZM147.126 31.23V32.112C146.832 32.196 146.608 32.238 146.426 32.238C145.614 32.238 145.208 31.888 145.124 31.132C144.298 31.944 143.57 32.252 142.632 32.252C141.204 32.252 140.238 31.454 140.238 30.096C140.238 28.584 141.386 28.038 142.24 27.898C142.492 27.856 143.038 27.772 143.864 27.66C144.802 27.534 145.11 27.352 145.11 26.876V26.624C145.11 25.896 144.536 25.532 143.43 25.532C142.352 25.532 141.82 25.938 141.722 26.834H140.546C140.574 25.14 141.75 24.454 143.486 24.454C145.292 24.454 146.244 25.154 146.244 26.456V30.684C146.244 31.062 146.454 31.258 146.874 31.258C146.944 31.258 147.056 31.244 147.126 31.23ZM145.11 29.452V28.29C144.62 28.514 143.822 28.64 143.206 28.71C142.114 28.836 141.428 29.144 141.428 30.068C141.428 30.796 141.988 31.23 142.926 31.23C143.948 31.23 145.11 30.474 145.11 29.452ZM152.196 24.664H155.08V25.616H152.196V29.704C152.196 30.782 152.77 31.146 153.834 31.146C154.31 31.146 154.73 31.104 155.08 31.006V32.028C154.618 32.168 154.156 32.196 153.764 32.196C151.986 32.196 151.034 31.51 151.034 29.914V25.616H148.92V24.664H151.034V22.648H152.196V24.664ZM160.221 23.614V22.214H161.621V23.614H160.221ZM161.495 24.664V31.048H163.749V32H157.827V31.048H160.347V25.616H157.827V24.664H161.495ZM169.449 24.44C171.703 24.44 172.767 26.12 172.767 28.346C172.767 30.572 171.703 32.252 169.449 32.252C167.195 32.252 166.131 30.572 166.131 28.346C166.131 26.12 167.195 24.44 169.449 24.44ZM169.449 25.518C167.965 25.518 167.349 26.848 167.349 28.346C167.349 29.844 167.965 31.174 169.449 31.174C170.933 31.174 171.549 29.844 171.549 28.346C171.549 26.848 170.933 25.518 169.449 25.518ZM175.191 32V24.664H176.269V25.882C176.843 24.986 177.543 24.454 178.705 24.454C179.979 24.454 181.029 25.098 181.029 26.456V32H179.867V26.918C179.867 25.938 179.167 25.476 178.355 25.476C177.039 25.476 176.353 26.61 176.353 27.87V32H175.191Z" fill="rgb(var(--colour-main))"></path><rect x="18" y="108" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="36" cy="126" r="6" fill="#5AC93B"></circle><path d="M37.82 129.495H38.79L36.59 122.505H35.42L33.21 129.495H34.17L34.79 127.405H37.2L37.82 129.495ZM35.02 126.625L35.99 123.345L36.97 126.625H35.02Z" fill="rgb(var(--colour-negative))"></path><path d="M54.874 131L54.006 128.074H50.632L49.764 131H48.42L51.514 121.214H53.152L56.232 131H54.874ZM50.954 126.982H53.684L52.312 122.39L50.954 126.982ZM63.6683 125.666H62.4503C62.4223 124.938 61.8623 124.476 60.9803 124.476C60.0283 124.476 59.3843 124.896 59.3843 125.554C59.3843 126.072 59.7483 126.38 60.4343 126.562L62.1003 126.996C63.3323 127.318 63.9623 127.92 63.9623 128.956C63.9623 130.384 62.8423 131.252 61.0223 131.252C59.1043 131.252 58.0963 130.412 58.0123 128.774H59.2443C59.3563 129.768 59.9583 130.216 61.0503 130.216C62.0863 130.216 62.7723 129.824 62.7723 129.138C62.7723 128.508 62.4643 128.242 61.6663 128.032L60.1263 127.626C58.7963 127.276 58.1943 126.73 58.1943 125.61C58.1943 124.28 59.2863 123.44 61.0083 123.44C62.7163 123.44 63.6403 124.28 63.6683 125.666ZM72.3226 125.666H71.1046C71.0766 124.938 70.5166 124.476 69.6346 124.476C68.6826 124.476 68.0386 124.896 68.0386 125.554C68.0386 126.072 68.4026 126.38 69.0886 126.562L70.7546 126.996C71.9866 127.318 72.6166 127.92 72.6166 128.956C72.6166 130.384 71.4966 131.252 69.6766 131.252C67.7586 131.252 66.7506 130.412 66.6666 128.774H67.8986C68.0106 129.768 68.6126 130.216 69.7046 130.216C70.7406 130.216 71.4266 129.824 71.4266 129.138C71.4266 128.508 71.1186 128.242 70.3206 128.032L68.7806 127.626C67.4506 127.276 66.8486 126.73 66.8486 125.61C66.8486 124.28 67.9406 123.44 69.6626 123.44C71.3706 123.44 72.2946 124.28 72.3226 125.666ZM81.4809 128.732C81.2289 130.272 80.0669 131.252 78.3449 131.252C76.1329 131.252 75.0129 129.642 75.0129 127.402C75.0129 124.952 76.3429 123.44 78.3729 123.44C80.6409 123.44 81.6349 125.134 81.6349 127.682H76.2309C76.2729 129.124 76.9729 130.174 78.3869 130.174C79.3389 130.174 79.9829 129.712 80.3049 128.732H81.4809ZM78.3589 124.518C77.0429 124.518 76.3569 125.498 76.2589 126.73H80.3749C80.3749 125.512 79.6189 124.518 78.3589 124.518ZM86.9992 123.664H89.8832V124.616H86.9992V128.704C86.9992 129.782 87.5732 130.146 88.6372 130.146C89.1132 130.146 89.5332 130.104 89.8832 130.006V131.028C89.4212 131.168 88.9592 131.196 88.5672 131.196C86.7892 131.196 85.8372 130.51 85.8372 128.914V124.616H83.7232V123.664H85.8372V121.648H86.9992V123.664ZM98.2855 125.666H97.0675C97.0395 124.938 96.4795 124.476 95.5975 124.476C94.6455 124.476 94.0015 124.896 94.0015 125.554C94.0015 126.072 94.3655 126.38 95.0515 126.562L96.7175 126.996C97.9495 127.318 98.5795 127.92 98.5795 128.956C98.5795 130.384 97.4595 131.252 95.6395 131.252C93.7215 131.252 92.7135 130.412 92.6295 128.774H93.8615C93.9735 129.768 94.5755 130.216 95.6675 130.216C96.7035 130.216 97.3895 129.824 97.3895 129.138C97.3895 128.508 97.0815 128.242 96.2835 128.032L94.7435 127.626C93.4135 127.276 92.8115 126.73 92.8115 125.61C92.8115 124.28 93.9035 123.44 95.6255 123.44C97.3335 123.44 98.2575 124.28 98.2855 125.666Z" fill="rgb(var(--colour-main))"></path><path d="M172.266 132.358V131.084C170.488 130.916 169.396 129.656 169.354 128.004H170.418C170.46 129.138 171.076 129.964 172.266 130.118V126.492L171.636 126.324C170.362 125.988 169.55 125.036 169.55 123.804C169.55 122.348 170.558 121.298 172.266 121.158V119.884H173.064V121.158C174.66 121.298 175.626 122.306 175.696 123.86H174.632C174.576 122.964 174.058 122.278 173.064 122.124V125.582L173.974 125.834C175.248 126.184 175.99 127.094 175.99 128.27C175.99 129.866 174.842 130.944 173.064 131.084V132.358H172.266ZM171.832 125.246L172.266 125.372V122.11C171.3 122.222 170.628 122.754 170.628 123.692C170.628 124.434 171.048 125.036 171.832 125.246ZM173.61 126.856L173.064 126.702V130.132C174.24 130.02 174.912 129.376 174.912 128.424C174.912 127.64 174.52 127.094 173.61 126.856Z" fill="rgb(var(--colour-main-500))"></path><rect x="189" y="108" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="207" cy="126" r="6" fill="rgb(var(--colour-income-blue))"></circle><path d="M205.045 129.495H208.955V128.715H207.465V123.285H208.955V122.505H205.045V123.285H206.525V128.715H205.045V129.495Z" fill="rgb(var(--colour-main))"></path><path d="M220.596 131V129.908H222.668V122.306H220.596V121.214H226.07V122.306H223.984V129.908H226.07V131H220.596ZM229.068 131V123.664H230.146V124.882C230.72 123.986 231.42 123.454 232.582 123.454C233.856 123.454 234.906 124.098 234.906 125.456V131H233.744V125.918C233.744 124.938 233.044 124.476 232.232 124.476C230.916 124.476 230.23 125.61 230.23 126.87V131H229.068ZM243.771 126.086H242.595C242.469 125.12 241.825 124.518 240.803 124.518C239.291 124.518 238.703 125.96 238.703 127.416C238.703 128.872 239.361 130.174 240.831 130.174C241.853 130.174 242.483 129.6 242.679 128.438H243.855C243.701 130.202 242.609 131.252 240.803 131.252C238.661 131.252 237.485 129.572 237.485 127.416C237.485 125.218 238.633 123.44 240.817 123.44C242.609 123.44 243.729 124.532 243.771 126.086ZM249.289 123.44C251.543 123.44 252.607 125.12 252.607 127.346C252.607 129.572 251.543 131.252 249.289 131.252C247.035 131.252 245.971 129.572 245.971 127.346C245.971 125.12 247.035 123.44 249.289 123.44ZM249.289 124.518C247.805 124.518 247.189 125.848 247.189 127.346C247.189 128.844 247.805 130.174 249.289 130.174C250.773 130.174 251.389 128.844 251.389 127.346C251.389 125.848 250.773 124.518 249.289 124.518ZM254.163 131V123.664H255.255V124.42C255.563 123.958 256.151 123.496 256.935 123.496C257.649 123.496 258.223 123.874 258.433 124.476C258.727 123.986 259.315 123.496 260.141 123.496C261.051 123.496 261.723 124.098 261.723 125.022V131H260.575V125.26C260.575 124.742 260.239 124.476 259.763 124.476C258.979 124.476 258.517 124.938 258.517 125.708V131H257.369V125.26C257.369 124.742 257.033 124.476 256.557 124.476C255.773 124.476 255.311 124.938 255.311 125.708V131H254.163ZM269.789 128.732C269.537 130.272 268.375 131.252 266.653 131.252C264.441 131.252 263.321 129.642 263.321 127.402C263.321 124.952 264.651 123.44 266.681 123.44C268.949 123.44 269.943 125.134 269.943 127.682H264.539C264.581 129.124 265.281 130.174 266.695 130.174C267.647 130.174 268.291 129.712 268.613 128.732H269.789ZM266.667 124.518C265.351 124.518 264.665 125.498 264.567 126.73H268.683C268.683 125.512 267.927 124.518 266.667 124.518Z" fill="rgb(var(--colour-main))"></path><path d="M343.266 132.358V131.084C341.488 130.916 340.396 129.656 340.354 128.004H341.418C341.46 129.138 342.076 129.964 343.266 130.118V126.492L342.636 126.324C341.362 125.988 340.55 125.036 340.55 123.804C340.55 122.348 341.558 121.298 343.266 121.158V119.884H344.064V121.158C345.66 121.298 346.626 122.306 346.696 123.86H345.632C345.576 122.964 345.058 122.278 344.064 122.124V125.582L344.974 125.834C346.248 126.184 346.99 127.094 346.99 128.27C346.99 129.866 345.842 130.944 344.064 131.084V132.358H343.266ZM342.832 125.246L343.266 125.372V122.11C342.3 122.222 341.628 122.754 341.628 123.692C341.628 124.434 342.048 125.036 342.832 125.246ZM344.61 126.856L344.064 126.702V130.132C345.24 130.02 345.912 129.376 345.912 128.424C345.912 127.64 345.52 127.094 344.61 126.856Z" fill="rgb(var(--colour-main-500))"></path><rect x="189" y="144" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="207" cy="162" r="6" fill="#FFE000"></circle><path d="M208.8 162.325V161.505H205.8V159.325H208.95V158.505H204.87V165.495H209.13V164.675H205.8V162.325H208.8Z" fill="rgb(var(--colour-main))"></path><path d="M226.084 162.562H221.884V165.852H226.546V167H220.582V157.214H226.294V158.362H221.884V161.414H226.084V162.562ZM235.102 159.664L232.638 163.206L235.172 167H233.786L231.98 164.214L230.146 167H228.788L231.378 163.262L228.928 159.664H230.3L232.022 162.296L233.772 159.664H235.102ZM238.703 170.052H237.527V159.664H238.605V160.756C239.151 159.874 239.921 159.44 240.943 159.44C243.127 159.44 244.093 161.302 244.093 163.416C244.093 165.516 243.057 167.252 240.957 167.252C240.005 167.252 239.319 166.93 238.703 166.16V170.052ZM240.747 160.532C239.291 160.532 238.703 161.918 238.703 163.346C238.703 164.774 239.291 166.16 240.747 166.16C242.217 166.16 242.875 164.802 242.875 163.388C242.875 161.904 242.231 160.532 240.747 160.532ZM252.481 164.732C252.229 166.272 251.067 167.252 249.345 167.252C247.133 167.252 246.013 165.642 246.013 163.402C246.013 160.952 247.343 159.44 249.373 159.44C251.641 159.44 252.635 161.134 252.635 163.682H247.231C247.273 165.124 247.973 166.174 249.387 166.174C250.339 166.174 250.983 165.712 251.305 164.732H252.481ZM249.359 160.518C248.043 160.518 247.357 161.498 247.259 162.73H251.375C251.375 161.512 250.619 160.518 249.359 160.518ZM255.031 167V159.664H256.109V160.882C256.683 159.986 257.383 159.454 258.545 159.454C259.819 159.454 260.869 160.098 260.869 161.456V167H259.707V161.918C259.707 160.938 259.007 160.476 258.195 160.476C256.879 160.476 256.193 161.61 256.193 162.87V167H255.031ZM269.285 161.666H268.067C268.039 160.938 267.479 160.476 266.597 160.476C265.645 160.476 265.001 160.896 265.001 161.554C265.001 162.072 265.365 162.38 266.051 162.562L267.717 162.996C268.949 163.318 269.579 163.92 269.579 164.956C269.579 166.384 268.459 167.252 266.639 167.252C264.721 167.252 263.713 166.412 263.629 164.774H264.861C264.973 165.768 265.575 166.216 266.667 166.216C267.703 166.216 268.389 165.824 268.389 165.138C268.389 164.508 268.081 164.242 267.283 164.032L265.743 163.626C264.413 163.276 263.811 162.73 263.811 161.61C263.811 160.28 264.903 159.44 266.625 159.44C268.333 159.44 269.257 160.28 269.285 161.666ZM278.444 164.732C278.192 166.272 277.03 167.252 275.308 167.252C273.096 167.252 271.976 165.642 271.976 163.402C271.976 160.952 273.306 159.44 275.336 159.44C277.604 159.44 278.598 161.134 278.598 163.682H273.194C273.236 165.124 273.936 166.174 275.35 166.174C276.302 166.174 276.946 165.712 277.268 164.732H278.444ZM275.322 160.518C274.006 160.518 273.32 161.498 273.222 162.73H277.338C277.338 161.512 276.582 160.518 275.322 160.518Z" fill="rgb(var(--colour-main))"></path><path d="M343.266 168.358V167.084C341.488 166.916 340.396 165.656 340.354 164.004H341.418C341.46 165.138 342.076 165.964 343.266 166.118V162.492L342.636 162.324C341.362 161.988 340.55 161.036 340.55 159.804C340.55 158.348 341.558 157.298 343.266 157.158V155.884H344.064V157.158C345.66 157.298 346.626 158.306 346.696 159.86H345.632C345.576 158.964 345.058 158.278 344.064 158.124V161.582L344.974 161.834C346.248 162.184 346.99 163.094 346.99 164.27C346.99 165.866 345.842 166.944 344.064 167.084V168.358H343.266ZM342.832 161.246L343.266 161.372V158.11C342.3 158.222 341.628 158.754 341.628 159.692C341.628 160.434 342.048 161.036 342.832 161.246ZM344.61 162.856L344.064 162.702V166.132C345.24 166.02 345.912 165.376 345.912 164.424C345.912 163.64 345.52 163.094 344.61 162.856Z" fill="rgb(var(--colour-main-500))"></path><rect x="18" y="144" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="36" cy="162" r="6" fill="#EC3425"></circle><path d="M34.1 158.505V165.495H38.36V164.675H35.03V158.505H34.1Z" fill="rgb(var(--colour-negative))"></path><path d="M49.736 157.214H51.038V165.852H55.7V167H49.736V157.214ZM60.4063 158.614V157.214H61.8063V158.614H60.4063ZM61.6803 159.664V166.048H63.9343V167H58.0123V166.048H60.5323V160.616H58.0123V159.664H61.6803ZM73.2746 166.23V167.112C72.9806 167.196 72.7566 167.238 72.5746 167.238C71.7626 167.238 71.3566 166.888 71.2726 166.132C70.4466 166.944 69.7186 167.252 68.7806 167.252C67.3526 167.252 66.3866 166.454 66.3866 165.096C66.3866 163.584 67.5346 163.038 68.3886 162.898C68.6406 162.856 69.1866 162.772 70.0126 162.66C70.9506 162.534 71.2586 162.352 71.2586 161.876V161.624C71.2586 160.896 70.6846 160.532 69.5786 160.532C68.5006 160.532 67.9686 160.938 67.8706 161.834H66.6946C66.7226 160.14 67.8986 159.454 69.6346 159.454C71.4406 159.454 72.3926 160.154 72.3926 161.456V165.684C72.3926 166.062 72.6026 166.258 73.0226 166.258C73.0926 166.258 73.2046 166.244 73.2746 166.23ZM71.2586 164.452V163.29C70.7686 163.514 69.9706 163.64 69.3546 163.71C68.2626 163.836 67.5766 164.144 67.5766 165.068C67.5766 165.796 68.1366 166.23 69.0746 166.23C70.0966 166.23 71.2586 165.474 71.2586 164.452ZM75.1809 167V156.794H76.3429V160.644C76.8749 159.846 77.6309 159.44 78.6109 159.44C80.7669 159.44 81.7469 161.134 81.7469 163.262C81.7469 165.516 80.6409 167.252 78.5549 167.252C77.5469 167.252 76.7769 166.832 76.2309 165.992V167H75.1809ZM78.4009 160.532C76.9169 160.532 76.3429 161.974 76.3429 163.388C76.3429 164.774 76.9169 166.16 78.4009 166.16C79.8709 166.16 80.5429 164.816 80.5429 163.388C80.5429 161.862 79.8569 160.532 78.4009 160.532ZM86.3692 158.614V157.214H87.7692V158.614H86.3692ZM87.6432 159.664V166.048H89.8972V167H83.9752V166.048H86.4952V160.616H83.9752V159.664H87.6432ZM96.5775 156.794V166.048H98.8315V167H92.9095V166.048H95.4435V157.746H92.9095V156.794H96.5775ZM103.678 158.614V157.214H105.078V158.614H103.678ZM104.952 159.664V166.048H107.206V167H101.284V166.048H103.804V160.616H101.284V159.664H104.952ZM112.962 159.664H115.846V160.616H112.962V164.704C112.962 165.782 113.536 166.146 114.6 166.146C115.076 166.146 115.496 166.104 115.846 166.006V167.028C115.384 167.168 114.922 167.196 114.53 167.196C112.752 167.196 111.8 166.51 111.8 164.914V160.616H109.686V159.664H111.8V157.648H112.962V159.664ZM120.986 158.614V157.214H122.386V158.614H120.986ZM122.26 159.664V166.048H124.514V167H118.592V166.048H121.112V160.616H118.592V159.664H122.26ZM133.407 164.732C133.155 166.272 131.993 167.252 130.271 167.252C128.059 167.252 126.939 165.642 126.939 163.402C126.939 160.952 128.269 159.44 130.299 159.44C132.567 159.44 133.561 161.134 133.561 163.682H128.157C128.199 165.124 128.899 166.174 130.313 166.174C131.265 166.174 131.909 165.712 132.231 164.732H133.407ZM130.285 160.518C128.969 160.518 128.283 161.498 128.185 162.73H132.301C132.301 161.512 131.545 160.518 130.285 160.518ZM141.557 161.666H140.339C140.311 160.938 139.751 160.476 138.869 160.476C137.917 160.476 137.273 160.896 137.273 161.554C137.273 162.072 137.637 162.38 138.323 162.562L139.989 162.996C141.221 163.318 141.851 163.92 141.851 164.956C141.851 166.384 140.731 167.252 138.911 167.252C136.993 167.252 135.985 166.412 135.901 164.774H137.133C137.245 165.768 137.847 166.216 138.939 166.216C139.975 166.216 140.661 165.824 140.661 165.138C140.661 164.508 140.353 164.242 139.555 164.032L138.015 163.626C136.685 163.276 136.083 162.73 136.083 161.61C136.083 160.28 137.175 159.44 138.897 159.44C140.605 159.44 141.529 160.28 141.557 161.666Z" fill="rgb(var(--colour-main))"></path><path d="M172.266 168.358V167.084C170.488 166.916 169.396 165.656 169.354 164.004H170.418C170.46 165.138 171.076 165.964 172.266 166.118V162.492L171.636 162.324C170.362 161.988 169.55 161.036 169.55 159.804C169.55 158.348 170.558 157.298 172.266 157.158V155.884H173.064V157.158C174.66 157.298 175.626 158.306 175.696 159.86H174.632C174.576 158.964 174.058 158.278 173.064 158.124V161.582L173.974 161.834C175.248 162.184 175.99 163.094 175.99 164.27C175.99 165.866 174.842 166.944 173.064 167.084V168.358H172.266ZM171.832 161.246L172.266 161.372V158.11C171.3 158.222 170.628 158.754 170.628 159.692C170.628 160.434 171.048 161.036 171.832 161.246ZM173.61 162.856L173.064 162.702V166.132C174.24 166.02 174.912 165.376 174.912 164.424C174.912 163.64 174.52 163.094 173.61 162.856Z" fill="rgb(var(--colour-main-500))"></path><rect x="18" y="180" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M37.728 196.042H36.468C36.426 194.922 35.768 194.096 34.41 194.096C33.066 194.096 32.352 194.768 32.352 195.65C32.352 196.462 32.772 196.924 33.682 197.134L35.684 197.596C37.21 197.946 38.008 198.954 38.008 200.214C38.008 202.16 36.594 203.252 34.536 203.252C32.1 203.252 30.798 201.964 30.77 199.878H32.03C32.044 201.18 32.912 202.09 34.564 202.09C36.034 202.09 36.692 201.39 36.692 200.396C36.692 199.528 36.216 199.038 35.25 198.814L33.22 198.338C31.806 198.002 31.036 197.12 31.036 195.776C31.036 194.138 32.352 192.99 34.452 192.99C36.496 192.99 37.728 194.236 37.728 195.86V196.042ZM43.0363 195.664H45.9203V196.616H43.0363V200.704C43.0363 201.782 43.6103 202.146 44.6743 202.146C45.1503 202.146 45.5703 202.104 45.9203 202.006V203.028C45.4583 203.168 44.9963 203.196 44.6043 203.196C42.8263 203.196 41.8743 202.51 41.8743 200.914V196.616H39.7603V195.664H41.8743V193.648H43.0363V195.664ZM55.2746 202.23V203.112C54.9806 203.196 54.7566 203.238 54.5746 203.238C53.7626 203.238 53.3566 202.888 53.2726 202.132C52.4466 202.944 51.7186 203.252 50.7806 203.252C49.3526 203.252 48.3866 202.454 48.3866 201.096C48.3866 199.584 49.5346 199.038 50.3886 198.898C50.6406 198.856 51.1866 198.772 52.0126 198.66C52.9506 198.534 53.2586 198.352 53.2586 197.876V197.624C53.2586 196.896 52.6846 196.532 51.5786 196.532C50.5006 196.532 49.9686 196.938 49.8706 197.834H48.6946C48.7226 196.14 49.8986 195.454 51.6346 195.454C53.4406 195.454 54.3926 196.154 54.3926 197.456V201.684C54.3926 202.062 54.6026 202.258 55.0226 202.258C55.0926 202.258 55.2046 202.244 55.2746 202.23ZM53.2586 200.452V199.29C52.7686 199.514 51.9706 199.64 51.3546 199.71C50.2626 199.836 49.5766 200.144 49.5766 201.068C49.5766 201.796 50.1366 202.23 51.0746 202.23C52.0966 202.23 53.2586 201.474 53.2586 200.452ZM60.3449 195.664H63.2289V196.616H60.3449V200.704C60.3449 201.782 60.9189 202.146 61.9829 202.146C62.4589 202.146 62.8789 202.104 63.2289 202.006V203.028C62.7669 203.168 62.3049 203.196 61.9129 203.196C60.1349 203.196 59.1829 202.51 59.1829 200.914V196.616H57.0689V195.664H59.1829V193.648H60.3449V195.664ZM72.1352 200.732C71.8832 202.272 70.7212 203.252 68.9992 203.252C66.7872 203.252 65.6672 201.642 65.6672 199.402C65.6672 196.952 66.9972 195.44 69.0272 195.44C71.2952 195.44 72.2892 197.134 72.2892 199.682H66.8852C66.9272 201.124 67.6272 202.174 69.0412 202.174C69.9932 202.174 70.6372 201.712 70.9592 200.732H72.1352ZM69.0132 196.518C67.6972 196.518 67.0112 197.498 66.9132 198.73H71.0292C71.0292 197.512 70.2732 196.518 69.0132 196.518Z" fill="rgb(var(--colour-main))"></path><path d="M172.672 192.99C175.22 192.99 175.92 195.51 175.92 198.114C175.92 200.718 175.22 203.252 172.672 203.252C170.124 203.252 169.424 200.718 169.424 198.114C169.424 195.51 170.124 192.99 172.672 192.99ZM172.672 194.054C171.23 194.054 170.572 195.65 170.572 198.114C170.572 199.304 170.726 200.298 171.048 200.998L173.806 194.516C173.512 194.208 173.134 194.054 172.672 194.054ZM174.772 198.114C174.772 197.036 174.646 196.126 174.38 195.44L171.678 201.852C171.944 202.076 172.28 202.188 172.672 202.188C174.114 202.188 174.772 200.578 174.772 198.114Z" fill="rgb(var(--colour-main))"></path><rect x="189" y="180" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M209.05 195.944H207.72C207.44 194.88 206.922 194.138 205.676 194.138C203.814 194.138 203.114 195.776 203.114 198.128C203.114 200.774 204.01 202.104 205.676 202.104C206.978 202.104 207.538 201.264 207.818 199.682H209.148C208.882 202.048 207.58 203.252 205.662 203.252C203.114 203.252 201.756 201.278 201.756 198.142C201.756 195.328 202.82 192.99 205.718 192.99C207.664 192.99 208.756 194.264 209.05 195.944ZM211.068 203V192.794H212.23V196.756C212.748 195.986 213.42 195.454 214.582 195.454C215.856 195.454 216.906 196.098 216.906 197.456V203H215.744V197.918C215.744 196.938 215.044 196.476 214.232 196.476C212.916 196.476 212.23 197.61 212.23 198.87V203H211.068ZM226.275 202.23V203.112C225.981 203.196 225.757 203.238 225.575 203.238C224.763 203.238 224.357 202.888 224.273 202.132C223.447 202.944 222.719 203.252 221.781 203.252C220.353 203.252 219.387 202.454 219.387 201.096C219.387 199.584 220.535 199.038 221.389 198.898C221.641 198.856 222.187 198.772 223.013 198.66C223.951 198.534 224.259 198.352 224.259 197.876V197.624C224.259 196.896 223.685 196.532 222.579 196.532C221.501 196.532 220.969 196.938 220.871 197.834H219.695C219.723 196.14 220.899 195.454 222.635 195.454C224.441 195.454 225.393 196.154 225.393 197.456V201.684C225.393 202.062 225.603 202.258 226.023 202.258C226.093 202.258 226.205 202.244 226.275 202.23ZM224.259 200.452V199.29C223.769 199.514 222.971 199.64 222.355 199.71C221.263 199.836 220.577 200.144 220.577 201.068C220.577 201.796 221.137 202.23 222.075 202.23C223.097 202.23 224.259 201.474 224.259 200.452ZM228.377 203V195.664H229.455V196.882C230.029 195.986 230.729 195.454 231.891 195.454C233.165 195.454 234.215 196.098 234.215 197.456V203H233.053V197.918C233.053 196.938 232.353 196.476 231.541 196.476C230.225 196.476 229.539 197.61 229.539 198.87V203H228.377ZM239.761 206.052C238.165 206.052 236.961 205.394 236.765 203.84H237.983C238.151 204.666 238.725 205.072 239.789 205.072C241.259 205.072 241.861 204.344 241.861 202.384V201.964C241.427 202.818 240.643 203.252 239.677 203.252C237.507 203.252 236.485 201.558 236.485 199.304C236.485 197.148 237.549 195.44 239.635 195.44C240.629 195.44 241.385 195.818 241.889 196.574V195.664H243.051V201.81C243.051 202.832 242.967 203.602 242.799 204.134C242.393 205.408 241.343 206.052 239.761 206.052ZM239.845 202.16C241.315 202.16 241.889 200.746 241.889 199.388C241.889 197.918 241.301 196.532 239.831 196.532C238.459 196.532 237.703 197.764 237.703 199.346C237.703 200.844 238.347 202.16 239.845 202.16ZM251.789 200.732C251.537 202.272 250.375 203.252 248.653 203.252C246.441 203.252 245.321 201.642 245.321 199.402C245.321 196.952 246.651 195.44 248.681 195.44C250.949 195.44 251.943 197.134 251.943 199.682H246.539C246.581 201.124 247.281 202.174 248.695 202.174C249.647 202.174 250.291 201.712 250.613 200.732H251.789ZM248.667 196.518C247.351 196.518 246.665 197.498 246.567 198.73H250.683C250.683 197.512 249.927 196.518 248.667 196.518Z" fill="rgb(var(--colour-main))"></path><path d="M343.672 192.99C346.22 192.99 346.92 195.51 346.92 198.114C346.92 200.718 346.22 203.252 343.672 203.252C341.124 203.252 340.424 200.718 340.424 198.114C340.424 195.51 341.124 192.99 343.672 192.99ZM343.672 194.054C342.23 194.054 341.572 195.65 341.572 198.114C341.572 199.304 341.726 200.298 342.048 200.998L344.806 194.516C344.512 194.208 344.134 194.054 343.672 194.054ZM345.772 198.114C345.772 197.036 345.646 196.126 345.38 195.44L342.678 201.852C342.944 202.076 343.28 202.188 343.672 202.188C345.114 202.188 345.772 200.578 345.772 198.114Z" fill="rgb(var(--colour-main))"></path></svg></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">How you balance a Ledger Entry depends upon its net effect to the Ledger&#x27;s balances.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">When the net change to the State Ledger Accounts is zero, the financial event being recorded did not change the net worth of the business. In this example, an increase to an asset account is balanced by an increase in a liability account:</p><div class="pt-f2"><div class="hidden tablet:block"><svg width="100%" height="100%" viewBox="0 0 621 549" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="621" height="549" fill="rgb(var(--colour-negative))"></rect><path d="M23.096 32H19.288V22.214H22.774C24.524 22.214 25.728 23.166 25.728 24.706C25.728 25.644 25.28 26.582 24.426 26.89C25.448 27.226 26.05 28.038 26.05 29.214C26.05 30.684 25.028 32 23.096 32ZM20.562 23.32V26.414H22.578C23.628 26.414 24.398 26.078 24.398 24.888C24.398 23.684 23.628 23.32 22.578 23.32H20.562ZM20.562 27.52V30.894H22.942C24.174 30.894 24.72 30.194 24.72 29.2C24.72 28.22 24.174 27.52 22.942 27.52H20.562ZM34.6203 31.23V32.112C34.3263 32.196 34.1023 32.238 33.9203 32.238C33.1083 32.238 32.7023 31.888 32.6183 31.132C31.7923 31.944 31.0643 32.252 30.1263 32.252C28.6983 32.252 27.7323 31.454 27.7323 30.096C27.7323 28.584 28.8803 28.038 29.7343 27.898C29.9863 27.856 30.5323 27.772 31.3583 27.66C32.2963 27.534 32.6043 27.352 32.6043 26.876V26.624C32.6043 25.896 32.0303 25.532 30.9243 25.532C29.8463 25.532 29.3143 25.938 29.2163 26.834H28.0403C28.0683 25.14 29.2443 24.454 30.9803 24.454C32.7863 24.454 33.7383 25.154 33.7383 26.456V30.684C33.7383 31.062 33.9483 31.258 34.3683 31.258C34.4383 31.258 34.5503 31.244 34.6203 31.23ZM32.6043 29.452V28.29C32.1143 28.514 31.3163 28.64 30.7003 28.71C29.6083 28.836 28.9223 29.144 28.9223 30.068C28.9223 30.796 29.4823 31.23 30.4203 31.23C31.4423 31.23 32.6043 30.474 32.6043 29.452ZM40.6146 21.794V31.048H42.8686V32H36.9466V31.048H39.4806V22.746H36.9466V21.794H40.6146ZM51.9289 31.23V32.112C51.6349 32.196 51.4109 32.238 51.2289 32.238C50.4169 32.238 50.0109 31.888 49.9269 31.132C49.1009 31.944 48.3729 32.252 47.4349 32.252C46.0069 32.252 45.0409 31.454 45.0409 30.096C45.0409 28.584 46.1889 28.038 47.0429 27.898C47.2949 27.856 47.8409 27.772 48.6669 27.66C49.6049 27.534 49.9129 27.352 49.9129 26.876V26.624C49.9129 25.896 49.3389 25.532 48.2329 25.532C47.1549 25.532 46.6229 25.938 46.5249 26.834H45.3489C45.3769 25.14 46.5529 24.454 48.2889 24.454C50.0949 24.454 51.0469 25.154 51.0469 26.456V30.684C51.0469 31.062 51.2569 31.258 51.6769 31.258C51.7469 31.258 51.8589 31.244 51.9289 31.23ZM49.9129 29.452V28.29C49.4229 28.514 48.6249 28.64 48.0089 28.71C46.9169 28.836 46.2309 29.144 46.2309 30.068C46.2309 30.796 46.7909 31.23 47.7289 31.23C48.7509 31.23 49.9129 30.474 49.9129 29.452ZM54.0312 32V24.664H55.1092V25.882C55.6832 24.986 56.3832 24.454 57.5452 24.454C58.8192 24.454 59.8692 25.098 59.8692 26.456V32H58.7072V26.918C58.7072 25.938 58.0072 25.476 57.1952 25.476C55.8792 25.476 55.1932 26.61 55.1932 27.87V32H54.0312ZM68.7335 27.086H67.5575C67.4315 26.12 66.7875 25.518 65.7655 25.518C64.2535 25.518 63.6655 26.96 63.6655 28.416C63.6655 29.872 64.3235 31.174 65.7935 31.174C66.8155 31.174 67.4455 30.6 67.6415 29.438H68.8175C68.6635 31.202 67.5715 32.252 65.7655 32.252C63.6235 32.252 62.4475 30.572 62.4475 28.416C62.4475 26.218 63.5955 24.44 65.7795 24.44C67.5715 24.44 68.6915 25.532 68.7335 27.086ZM77.4438 29.732C77.1918 31.272 76.0298 32.252 74.3078 32.252C72.0958 32.252 70.9758 30.642 70.9758 28.402C70.9758 25.952 72.3058 24.44 74.3358 24.44C76.6038 24.44 77.5978 26.134 77.5978 28.682H72.1938C72.2358 30.124 72.9358 31.174 74.3498 31.174C75.3018 31.174 75.9458 30.712 76.2678 29.732H77.4438ZM74.3218 25.518C73.0058 25.518 72.3198 26.498 72.2218 27.73H76.3378C76.3378 26.512 75.5818 25.518 74.3218 25.518ZM84.8521 21.794H86.0141V32H84.9781V30.964C84.3901 31.818 83.6061 32.252 82.6401 32.252C80.4701 32.252 79.4481 30.516 79.4481 28.262C79.4481 26.148 80.5121 24.44 82.5981 24.44C83.5921 24.44 84.3481 24.818 84.8521 25.574V21.794ZM82.7941 25.532C81.4221 25.532 80.6661 26.764 80.6661 28.346C80.6661 29.844 81.3101 31.16 82.8081 31.16C84.2781 31.16 84.8521 29.746 84.8521 28.388C84.8521 26.918 84.2641 25.532 82.7941 25.532ZM102.973 27.562H98.7727V30.852H103.435V32H97.4707V22.214H103.183V23.362H98.7727V26.414H102.973V27.562ZM105.957 32V24.664H107.035V25.882C107.609 24.986 108.309 24.454 109.471 24.454C110.745 24.454 111.795 25.098 111.795 26.456V32H110.633V26.918C110.633 25.938 109.933 25.476 109.121 25.476C107.805 25.476 107.119 26.61 107.119 27.87V32H105.957ZM117.579 24.664H120.463V25.616H117.579V29.704C117.579 30.782 118.153 31.146 119.217 31.146C119.693 31.146 120.113 31.104 120.463 31.006V32.028C120.001 32.168 119.539 32.196 119.147 32.196C117.369 32.196 116.417 31.51 116.417 29.914V25.616H114.303V24.664H116.417V22.648H117.579V24.664ZM123.588 32V24.664H124.666V26.246C125.156 25.196 126.094 24.454 127.298 24.454C128.978 24.454 129.846 25.378 129.986 26.834H128.824C128.656 25.952 128.18 25.476 127.186 25.476C125.716 25.476 124.764 26.722 124.764 28.444V32H123.588ZM134.888 33.54C134.51 34.548 133.796 35.052 132.886 35.052C132.536 35.052 132.228 35.01 131.934 34.912V33.82C132.242 33.89 132.494 33.904 132.732 33.904C133.264 33.904 133.558 33.708 133.768 33.19L134.216 32.112L131.5 24.664H132.732L134.874 30.614L136.988 24.664H138.192L134.888 33.54Z" fill="rgb(var(--colour-main))"></path><rect x="139" y="126" width="344" height="54" stroke="rgb(var(--colour-main-500))"></rect><path d="M157 144H163V144C163 147.314 160.314 150 157 150V150V144Z" fill="rgb(var(--colour-inactive-br))"></path><path d="M157 138V138C160.314 138 163 140.686 163 144V144H157V138Z" fill="rgb(var(--colour-inactive-tr))"></path><path d="M151 144H157V150V150C153.686 150 151 147.314 151 144V144Z" fill="rgb(var(--colour-inactive-bl))"></path><path d="M151 144C151 140.686 153.686 138 157 138V138V144H151V144Z" fill="rgb(var(--colour-inactive-tl))"></path><path d="M157 144H163V144C163 147.314 160.314 150 157 150V150V144Z" fill="#FFE000"></path><path d="M157 138V138C160.314 138 163 140.686 163 144V144H157V138Z" fill="rgb(var(--colour-income-blue))"></path><path d="M151 144H157V150V150C153.686 150 151 147.314 151 144V144Z" fill="#EC3425"></path><path d="M151 144C151 140.686 153.686 138 157 138V138V144H151V144Z" fill="#5AC93B"></path><path d="M175.084 144.562H170.884V147.852H175.546V149H169.582V139.214H175.294V140.362H170.884V143.414H175.084V144.562ZM178.068 149V141.664H179.146V142.882C179.436 142.434 179.767 142.084 180.14 141.832C180.523 141.58 181.004 141.454 181.582 141.454C182.012 141.454 182.399 141.529 182.744 141.678C183.099 141.818 183.379 142.037 183.584 142.336C183.799 142.625 183.906 142.999 183.906 143.456V149H182.744V143.918C182.744 143.423 182.595 143.059 182.296 142.826C181.998 142.593 181.643 142.476 181.232 142.476C180.794 142.476 180.425 142.588 180.126 142.812C179.828 143.036 179.604 143.33 179.454 143.694C179.305 144.058 179.23 144.45 179.23 144.87V149H178.068ZM189.691 141.664H192.575V142.616H189.691V146.704C189.691 147.245 189.831 147.623 190.111 147.838C190.391 148.043 190.797 148.146 191.329 148.146C191.571 148.146 191.795 148.137 192.001 148.118C192.206 148.09 192.397 148.053 192.575 148.006V149.028C192.341 149.093 192.113 149.135 191.889 149.154C191.665 149.182 191.455 149.196 191.259 149.196C190.372 149.196 189.695 149.014 189.229 148.65C188.762 148.286 188.529 147.707 188.529 146.914V142.616H186.415V141.664H188.529V139.648H189.691V141.664ZM195.699 149V141.664H196.777V143.246C197.02 142.723 197.37 142.294 197.827 141.958C198.284 141.622 198.812 141.454 199.409 141.454C200.249 141.454 200.888 141.669 201.327 142.098C201.775 142.527 202.032 143.106 202.097 143.834H200.935C200.851 143.395 200.678 143.059 200.417 142.826C200.165 142.593 199.792 142.476 199.297 142.476C198.812 142.476 198.387 142.607 198.023 142.868C197.659 143.12 197.374 143.47 197.169 143.918C196.973 144.357 196.875 144.865 196.875 145.444V149H195.699ZM206.999 150.54C206.813 151.044 206.547 151.422 206.201 151.674C205.856 151.926 205.455 152.052 204.997 152.052C204.643 152.052 204.325 152.005 204.045 151.912V150.82C204.204 150.857 204.344 150.881 204.465 150.89C204.596 150.899 204.722 150.904 204.843 150.904C205.114 150.904 205.329 150.848 205.487 150.736C205.646 150.633 205.777 150.451 205.879 150.19L206.327 149.112L203.611 141.664H204.843L206.985 147.614L209.099 141.664H210.303L206.999 150.54Z" fill="rgb(var(--colour-main))"></path><rect x="139" y="216" width="344" height="36" fill="rgb(var(--colour-negative))"></rect><rect x="139" y="216" width="344" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="157" y="228" width="12" height="12" rx="6" fill="rgb(var(--colour-negative))"></rect><path d="M157 234H163V240V240C159.686 240 157 237.314 157 234V234Z" fill="#EC3425"></path><path d="M176.736 229.214H178.038V237.852H182.7V239H176.736V229.214ZM187.406 230.614V229.214H188.806V230.614H187.406ZM188.68 231.664V238.048H190.934V239H185.012V238.048H187.532V232.616H185.012V231.664H188.68ZM193.723 239V231.664H194.801V232.882C195.09 232.434 195.421 232.084 195.795 231.832C196.177 231.58 196.658 231.454 197.237 231.454C197.666 231.454 198.053 231.529 198.399 231.678C198.753 231.818 199.033 232.037 199.239 232.336C199.453 232.625 199.561 232.999 199.561 233.456V239H198.399V233.918C198.399 233.423 198.249 233.059 197.951 232.826C197.652 232.593 197.297 232.476 196.887 232.476C196.448 232.476 196.079 232.588 195.781 232.812C195.482 233.036 195.258 233.33 195.109 233.694C194.959 234.058 194.885 234.45 194.885 234.87V239H193.723ZM208.481 236.732C208.36 237.497 208.019 238.109 207.459 238.566C206.908 239.023 206.204 239.252 205.345 239.252C204.608 239.252 203.992 239.089 203.497 238.762C203.002 238.426 202.629 237.969 202.377 237.39C202.134 236.811 202.013 236.149 202.013 235.402C202.013 234.581 202.153 233.876 202.433 233.288C202.713 232.7 203.105 232.247 203.609 231.93C204.113 231.603 204.701 231.44 205.373 231.44C206.129 231.44 206.745 231.617 207.221 231.972C207.706 232.327 208.061 232.821 208.285 233.456C208.518 234.091 208.635 234.833 208.635 235.682H203.231C203.25 236.401 203.436 236.998 203.791 237.474C204.146 237.941 204.678 238.174 205.387 238.174C206.348 238.174 206.988 237.693 207.305 236.732H208.481ZM205.359 232.518C204.706 232.518 204.206 232.733 203.861 233.162C203.516 233.591 203.315 234.114 203.259 234.73H207.375C207.375 234.319 207.291 233.951 207.123 233.624C206.964 233.288 206.736 233.022 206.437 232.826C206.138 232.621 205.779 232.518 205.359 232.518Z" fill="rgb(var(--colour-main))"></path><path d="M451.242 239V231.902H448.624V230.978C449.203 230.95 449.66 230.913 449.996 230.866C450.341 230.819 450.607 230.735 450.794 230.614C450.981 230.493 451.125 230.315 451.228 230.082C451.34 229.839 451.447 229.513 451.55 229.102H452.474V239H451.242ZM459.98 228.99C460.615 228.99 461.142 229.135 461.562 229.424C461.982 229.704 462.314 230.087 462.556 230.572C462.799 231.057 462.972 231.608 463.074 232.224C463.177 232.831 463.228 233.461 463.228 234.114C463.228 234.767 463.177 235.402 463.074 236.018C462.972 236.625 462.799 237.175 462.556 237.67C462.314 238.155 461.982 238.543 461.562 238.832C461.142 239.112 460.615 239.252 459.98 239.252C459.346 239.252 458.818 239.112 458.398 238.832C457.978 238.543 457.647 238.155 457.404 237.67C457.162 237.175 456.989 236.625 456.886 236.018C456.784 235.402 456.732 234.767 456.732 234.114C456.732 233.461 456.784 232.831 456.886 232.224C456.989 231.608 457.162 231.057 457.404 230.572C457.647 230.087 457.978 229.704 458.398 229.424C458.818 229.135 459.346 228.99 459.98 228.99ZM459.98 230.054C459.262 230.054 458.73 230.423 458.384 231.16C458.048 231.897 457.88 232.882 457.88 234.114C457.88 234.711 457.918 235.257 457.992 235.752C458.076 236.237 458.198 236.653 458.356 236.998L461.114 230.516C460.806 230.208 460.428 230.054 459.98 230.054ZM462.08 234.114C462.08 233.573 462.048 233.078 461.982 232.63C461.917 232.182 461.819 231.785 461.688 231.44L458.986 237.852C459.266 238.076 459.598 238.188 459.98 238.188C460.466 238.188 460.862 238.02 461.17 237.684C461.478 237.348 461.707 236.877 461.856 236.27C462.006 235.654 462.08 234.935 462.08 234.114Z" fill="rgb(var(--colour-main))"></path><rect x="139" y="180" width="344" height="36" fill="rgb(var(--colour-negative))"></rect><rect x="139" y="180" width="344" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="157" y="192" width="12" height="12" rx="6" fill="rgb(var(--colour-negative))"></rect><path d="M157 198C157 194.686 159.686 192 163 192V192V198H157V198Z" fill="#5AC93B"></path><path d="M176.736 193.214H178.038V201.852H182.7V203H176.736V193.214ZM187.406 194.614V193.214H188.806V194.614H187.406ZM188.68 195.664V202.048H190.934V203H185.012V202.048H187.532V196.616H185.012V195.664H188.68ZM193.723 203V195.664H194.801V196.882C195.09 196.434 195.421 196.084 195.795 195.832C196.177 195.58 196.658 195.454 197.237 195.454C197.666 195.454 198.053 195.529 198.399 195.678C198.753 195.818 199.033 196.037 199.239 196.336C199.453 196.625 199.561 196.999 199.561 197.456V203H198.399V197.918C198.399 197.423 198.249 197.059 197.951 196.826C197.652 196.593 197.297 196.476 196.887 196.476C196.448 196.476 196.079 196.588 195.781 196.812C195.482 197.036 195.258 197.33 195.109 197.694C194.959 198.058 194.885 198.45 194.885 198.87V203H193.723ZM208.481 200.732C208.36 201.497 208.019 202.109 207.459 202.566C206.908 203.023 206.204 203.252 205.345 203.252C204.608 203.252 203.992 203.089 203.497 202.762C203.002 202.426 202.629 201.969 202.377 201.39C202.134 200.811 202.013 200.149 202.013 199.402C202.013 198.581 202.153 197.876 202.433 197.288C202.713 196.7 203.105 196.247 203.609 195.93C204.113 195.603 204.701 195.44 205.373 195.44C206.129 195.44 206.745 195.617 207.221 195.972C207.706 196.327 208.061 196.821 208.285 197.456C208.518 198.091 208.635 198.833 208.635 199.682H203.231C203.25 200.401 203.436 200.998 203.791 201.474C204.146 201.941 204.678 202.174 205.387 202.174C206.348 202.174 206.988 201.693 207.305 200.732H208.481ZM205.359 196.518C204.706 196.518 204.206 196.733 203.861 197.162C203.516 197.591 203.315 198.114 203.259 198.73H207.375C207.375 198.319 207.291 197.951 207.123 197.624C206.964 197.288 206.736 197.022 206.437 196.826C206.138 196.621 205.779 196.518 205.359 196.518Z" fill="rgb(var(--colour-main))"></path><path d="M451.242 203V195.902H448.624V194.978C449.203 194.95 449.66 194.913 449.996 194.866C450.341 194.819 450.607 194.735 450.794 194.614C450.981 194.493 451.125 194.315 451.228 194.082C451.34 193.839 451.447 193.513 451.55 193.102H452.474V203H451.242ZM459.98 192.99C460.615 192.99 461.142 193.135 461.562 193.424C461.982 193.704 462.314 194.087 462.556 194.572C462.799 195.057 462.972 195.608 463.074 196.224C463.177 196.831 463.228 197.461 463.228 198.114C463.228 198.767 463.177 199.402 463.074 200.018C462.972 200.625 462.799 201.175 462.556 201.67C462.314 202.155 461.982 202.543 461.562 202.832C461.142 203.112 460.615 203.252 459.98 203.252C459.346 203.252 458.818 203.112 458.398 202.832C457.978 202.543 457.647 202.155 457.404 201.67C457.162 201.175 456.989 200.625 456.886 200.018C456.784 199.402 456.732 198.767 456.732 198.114C456.732 197.461 456.784 196.831 456.886 196.224C456.989 195.608 457.162 195.057 457.404 194.572C457.647 194.087 457.978 193.704 458.398 193.424C458.818 193.135 459.346 192.99 459.98 192.99ZM459.98 194.054C459.262 194.054 458.73 194.423 458.384 195.16C458.048 195.897 457.88 196.882 457.88 198.114C457.88 198.711 457.918 199.257 457.992 199.752C458.076 200.237 458.198 200.653 458.356 200.998L461.114 194.516C460.806 194.208 460.428 194.054 459.98 194.054ZM462.08 198.114C462.08 197.573 462.048 197.078 461.982 196.63C461.917 196.182 461.819 195.785 461.688 195.44L458.986 201.852C459.266 202.076 459.598 202.188 459.98 202.188C460.466 202.188 460.862 202.02 461.17 201.684C461.478 201.348 461.707 200.877 461.856 200.27C462.006 199.654 462.08 198.935 462.08 198.114Z" fill="rgb(var(--colour-main))"></path><rect x="138.5" y="342" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="156.5" cy="360" r="6" fill="#5AC93B"></circle><path d="M158.32 363.495H159.29L157.09 356.505H155.92L153.71 363.495H154.67L155.29 361.405H157.7L158.32 363.495ZM155.52 360.625L156.49 357.345L157.47 360.625H155.52Z" fill="rgb(var(--colour-negative))"></path><path d="M175.374 365L174.506 362.074H171.132L170.264 365H168.92L172.014 355.214H173.652L176.732 365H175.374ZM171.454 360.982H174.184L172.812 356.39L171.454 360.982ZM184.168 359.666H182.95C182.941 359.302 182.801 359.013 182.53 358.798C182.269 358.583 181.919 358.476 181.48 358.476C181.004 358.476 180.617 358.574 180.318 358.77C180.029 358.966 179.884 359.227 179.884 359.554C179.884 359.815 179.973 360.025 180.15 360.184C180.328 360.343 180.589 360.469 180.934 360.562L182.6 360.996C183.216 361.155 183.678 361.393 183.986 361.71C184.304 362.018 184.462 362.433 184.462 362.956C184.462 363.665 184.201 364.225 183.678 364.636C183.156 365.047 182.437 365.252 181.522 365.252C179.6 365.252 178.596 364.426 178.512 362.774H179.744C179.8 363.269 179.978 363.633 180.276 363.866C180.584 364.099 181.009 364.216 181.55 364.216C182.073 364.216 182.488 364.123 182.796 363.936C183.114 363.749 183.272 363.483 183.272 363.138C183.272 362.821 183.188 362.583 183.02 362.424C182.852 362.265 182.568 362.135 182.166 362.032L180.626 361.626C179.964 361.449 179.474 361.211 179.156 360.912C178.848 360.604 178.694 360.17 178.694 359.61C178.694 358.947 178.946 358.42 179.45 358.028C179.964 357.636 180.65 357.44 181.508 357.44C182.367 357.44 183.02 357.641 183.468 358.042C183.926 358.434 184.159 358.975 184.168 359.666ZM192.823 359.666H191.605C191.595 359.302 191.455 359.013 191.185 358.798C190.923 358.583 190.573 358.476 190.135 358.476C189.659 358.476 189.271 358.574 188.973 358.77C188.683 358.966 188.539 359.227 188.539 359.554C188.539 359.815 188.627 360.025 188.805 360.184C188.982 360.343 189.243 360.469 189.589 360.562L191.255 360.996C191.871 361.155 192.333 361.393 192.641 361.71C192.958 362.018 193.117 362.433 193.117 362.956C193.117 363.665 192.855 364.225 192.333 364.636C191.81 365.047 191.091 365.252 190.177 365.252C188.254 365.252 187.251 364.426 187.167 362.774H188.399C188.455 363.269 188.632 363.633 188.931 363.866C189.239 364.099 189.663 364.216 190.205 364.216C190.727 364.216 191.143 364.123 191.451 363.936C191.768 363.749 191.927 363.483 191.927 363.138C191.927 362.821 191.843 362.583 191.675 362.424C191.507 362.265 191.222 362.135 190.821 362.032L189.281 361.626C188.618 361.449 188.128 361.211 187.811 360.912C187.503 360.604 187.349 360.17 187.349 359.61C187.349 358.947 187.601 358.42 188.105 358.028C188.618 357.636 189.304 357.44 190.163 357.44C191.021 357.44 191.675 357.641 192.123 358.042C192.58 358.434 192.813 358.975 192.823 359.666ZM201.981 362.732C201.86 363.497 201.519 364.109 200.959 364.566C200.408 365.023 199.704 365.252 198.845 365.252C198.108 365.252 197.492 365.089 196.997 364.762C196.502 364.426 196.129 363.969 195.877 363.39C195.634 362.811 195.513 362.149 195.513 361.402C195.513 360.581 195.653 359.876 195.933 359.288C196.213 358.7 196.605 358.247 197.109 357.93C197.613 357.603 198.201 357.44 198.873 357.44C199.629 357.44 200.245 357.617 200.721 357.972C201.206 358.327 201.561 358.821 201.785 359.456C202.018 360.091 202.135 360.833 202.135 361.682H196.731C196.75 362.401 196.936 362.998 197.291 363.474C197.646 363.941 198.178 364.174 198.887 364.174C199.848 364.174 200.488 363.693 200.805 362.732H201.981ZM198.859 358.518C198.206 358.518 197.706 358.733 197.361 359.162C197.016 359.591 196.815 360.114 196.759 360.73H200.875C200.875 360.319 200.791 359.951 200.623 359.624C200.464 359.288 200.236 359.022 199.937 358.826C199.638 358.621 199.279 358.518 198.859 358.518ZM207.499 357.664H210.383V358.616H207.499V362.704C207.499 363.245 207.639 363.623 207.919 363.838C208.199 364.043 208.605 364.146 209.137 364.146C209.38 364.146 209.604 364.137 209.809 364.118C210.015 364.09 210.206 364.053 210.383 364.006V365.028C210.15 365.093 209.921 365.135 209.697 365.154C209.473 365.182 209.263 365.196 209.067 365.196C208.181 365.196 207.504 365.014 207.037 364.65C206.571 364.286 206.337 363.707 206.337 362.914V358.616H204.223V357.664H206.337V355.648H207.499V357.664ZM218.785 359.666H217.567C217.558 359.302 217.418 359.013 217.147 358.798C216.886 358.583 216.536 358.476 216.097 358.476C215.621 358.476 215.234 358.574 214.935 358.77C214.646 358.966 214.501 359.227 214.501 359.554C214.501 359.815 214.59 360.025 214.767 360.184C214.945 360.343 215.206 360.469 215.551 360.562L217.217 360.996C217.833 361.155 218.295 361.393 218.603 361.71C218.921 362.018 219.079 362.433 219.079 362.956C219.079 363.665 218.818 364.225 218.295 364.636C217.773 365.047 217.054 365.252 216.139 365.252C214.217 365.252 213.213 364.426 213.129 362.774H214.361C214.417 363.269 214.595 363.633 214.893 363.866C215.201 364.099 215.626 364.216 216.167 364.216C216.69 364.216 217.105 364.123 217.413 363.936C217.731 363.749 217.889 363.483 217.889 363.138C217.889 362.821 217.805 362.583 217.637 362.424C217.469 362.265 217.185 362.135 216.783 362.032L215.243 361.626C214.581 361.449 214.091 361.211 213.773 360.912C213.465 360.604 213.311 360.17 213.311 359.61C213.311 358.947 213.563 358.42 214.067 358.028C214.581 357.636 215.267 357.44 216.125 357.44C216.984 357.44 217.637 357.641 218.085 358.042C218.543 358.434 218.776 358.975 218.785 359.666Z" fill="rgb(var(--colour-main))"></path><path d="M285.433 365V357.902H282.815V356.978C283.394 356.95 283.851 356.913 284.187 356.866C284.533 356.819 284.799 356.735 284.985 356.614C285.172 356.493 285.317 356.315 285.419 356.082C285.531 355.839 285.639 355.513 285.741 355.102H286.665V365H285.433ZM294.172 354.99C294.806 354.99 295.334 355.135 295.754 355.424C296.174 355.704 296.505 356.087 296.748 356.572C296.99 357.057 297.163 357.608 297.266 358.224C297.368 358.831 297.42 359.461 297.42 360.114C297.42 360.767 297.368 361.402 297.266 362.018C297.163 362.625 296.99 363.175 296.748 363.67C296.505 364.155 296.174 364.543 295.754 364.832C295.334 365.112 294.806 365.252 294.172 365.252C293.537 365.252 293.01 365.112 292.59 364.832C292.17 364.543 291.838 364.155 291.596 363.67C291.353 363.175 291.18 362.625 291.078 362.018C290.975 361.402 290.924 360.767 290.924 360.114C290.924 359.461 290.975 358.831 291.078 358.224C291.18 357.608 291.353 357.057 291.596 356.572C291.838 356.087 292.17 355.704 292.59 355.424C293.01 355.135 293.537 354.99 294.172 354.99ZM294.172 356.054C293.453 356.054 292.921 356.423 292.576 357.16C292.24 357.897 292.072 358.882 292.072 360.114C292.072 360.711 292.109 361.257 292.184 361.752C292.268 362.237 292.389 362.653 292.548 362.998L295.306 356.516C294.998 356.208 294.62 356.054 294.172 356.054ZM296.272 360.114C296.272 359.573 296.239 359.078 296.174 358.63C296.108 358.182 296.01 357.785 295.88 357.44L293.178 363.852C293.458 364.076 293.789 364.188 294.172 364.188C294.657 364.188 295.054 364.02 295.362 363.684C295.67 363.348 295.898 362.877 296.048 362.27C296.197 361.654 296.272 360.935 296.272 360.114Z" fill="rgb(var(--colour-main))"></path><rect x="310.5" y="342" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="328.5" cy="360" r="6" fill="rgb(var(--colour-income-blue))"></circle><path d="M326.545 363.495H330.455V362.715H328.965V357.285H330.455V356.505H326.545V357.285H328.025V362.715H326.545V363.495Z" fill="rgb(var(--colour-main))"></path><path d="M342.096 365V363.908H344.168V356.306H342.096V355.214H347.57V356.306H345.484V363.908H347.57V365H342.096ZM350.568 365V357.664H351.646V358.882C351.936 358.434 352.267 358.084 352.64 357.832C353.023 357.58 353.504 357.454 354.082 357.454C354.512 357.454 354.899 357.529 355.244 357.678C355.599 357.818 355.879 358.037 356.084 358.336C356.299 358.625 356.406 358.999 356.406 359.456V365H355.244V359.918C355.244 359.423 355.095 359.059 354.796 358.826C354.498 358.593 354.143 358.476 353.732 358.476C353.294 358.476 352.925 358.588 352.626 358.812C352.328 359.036 352.104 359.33 351.954 359.694C351.805 360.058 351.73 360.45 351.73 360.87V365H350.568ZM365.271 360.086H364.095C364.029 359.601 363.843 359.218 363.535 358.938C363.227 358.658 362.816 358.518 362.303 358.518C361.799 358.518 361.393 358.658 361.085 358.938C360.777 359.218 360.553 359.582 360.413 360.03C360.273 360.469 360.203 360.931 360.203 361.416C360.203 361.901 360.277 362.354 360.427 362.774C360.576 363.194 360.809 363.535 361.127 363.796C361.444 364.048 361.845 364.174 362.331 364.174C363.367 364.174 363.983 363.595 364.179 362.438H365.355C365.28 363.315 364.977 364.006 364.445 364.51C363.922 365.005 363.208 365.252 362.303 365.252C361.593 365.252 360.991 365.084 360.497 364.748C360.002 364.403 359.624 363.941 359.363 363.362C359.111 362.783 358.985 362.135 358.985 361.416C358.985 360.679 359.111 360.011 359.363 359.414C359.615 358.817 359.988 358.341 360.483 357.986C360.977 357.622 361.589 357.44 362.317 357.44C363.213 357.44 363.922 357.687 364.445 358.182C364.977 358.677 365.252 359.311 365.271 360.086ZM370.789 357.44C371.545 357.44 372.166 357.613 372.651 357.958C373.146 358.294 373.51 358.756 373.743 359.344C373.986 359.932 374.107 360.599 374.107 361.346C374.107 362.083 373.986 362.751 373.743 363.348C373.51 363.936 373.146 364.403 372.651 364.748C372.166 365.084 371.545 365.252 370.789 365.252C370.042 365.252 369.422 365.084 368.927 364.748C368.432 364.403 368.064 363.936 367.821 363.348C367.588 362.751 367.471 362.083 367.471 361.346C367.471 360.599 367.588 359.932 367.821 359.344C368.064 358.756 368.432 358.294 368.927 357.958C369.422 357.613 370.042 357.44 370.789 357.44ZM370.789 358.518C370.294 358.518 369.893 358.649 369.585 358.91C369.277 359.171 369.048 359.517 368.899 359.946C368.759 360.375 368.689 360.842 368.689 361.346C368.689 361.841 368.759 362.307 368.899 362.746C369.048 363.175 369.277 363.521 369.585 363.782C369.893 364.043 370.294 364.174 370.789 364.174C371.284 364.174 371.685 364.043 371.993 363.782C372.301 363.521 372.525 363.175 372.665 362.746C372.814 362.307 372.889 361.841 372.889 361.346C372.889 360.842 372.814 360.375 372.665 359.946C372.525 359.517 372.301 359.171 371.993 358.91C371.685 358.649 371.284 358.518 370.789 358.518ZM375.663 365V357.664H376.755V358.42C376.914 358.187 377.133 357.977 377.413 357.79C377.703 357.594 378.043 357.496 378.435 357.496C378.79 357.496 379.098 357.585 379.359 357.762C379.63 357.93 379.821 358.168 379.933 358.476C380.083 358.233 380.302 358.009 380.591 357.804C380.881 357.599 381.231 357.496 381.641 357.496C382.099 357.496 382.477 357.636 382.775 357.916C383.074 358.187 383.223 358.555 383.223 359.022V365H382.075V359.26C382.075 358.999 382.001 358.803 381.851 358.672C381.702 358.541 381.506 358.476 381.263 358.476C380.871 358.476 380.563 358.588 380.339 358.812C380.125 359.027 380.017 359.325 380.017 359.708V365H378.869V359.26C378.869 358.999 378.795 358.803 378.645 358.672C378.496 358.541 378.3 358.476 378.057 358.476C377.665 358.476 377.357 358.588 377.133 358.812C376.919 359.027 376.811 359.325 376.811 359.708V365H375.663ZM391.289 362.732C391.168 363.497 390.827 364.109 390.267 364.566C389.717 365.023 389.012 365.252 388.153 365.252C387.416 365.252 386.8 365.089 386.305 364.762C385.811 364.426 385.437 363.969 385.185 363.39C384.943 362.811 384.821 362.149 384.821 361.402C384.821 360.581 384.961 359.876 385.241 359.288C385.521 358.7 385.913 358.247 386.417 357.93C386.921 357.603 387.509 357.44 388.181 357.44C388.937 357.44 389.553 357.617 390.029 357.972C390.515 358.327 390.869 358.821 391.093 359.456C391.327 360.091 391.443 360.833 391.443 361.682H386.039C386.058 362.401 386.245 362.998 386.599 363.474C386.954 363.941 387.486 364.174 388.195 364.174C389.157 364.174 389.796 363.693 390.113 362.732H391.289ZM388.167 358.518C387.514 358.518 387.015 358.733 386.669 359.162C386.324 359.591 386.123 360.114 386.067 360.73H390.183C390.183 360.319 390.099 359.951 389.931 359.624C389.773 359.288 389.544 359.022 389.245 358.826C388.947 358.621 388.587 358.518 388.167 358.518Z" fill="rgb(var(--colour-main-500))"></path><path d="M466.172 354.99C466.806 354.99 467.334 355.135 467.754 355.424C468.174 355.704 468.505 356.087 468.748 356.572C468.99 357.057 469.163 357.608 469.266 358.224C469.368 358.831 469.42 359.461 469.42 360.114C469.42 360.767 469.368 361.402 469.266 362.018C469.163 362.625 468.99 363.175 468.748 363.67C468.505 364.155 468.174 364.543 467.754 364.832C467.334 365.112 466.806 365.252 466.172 365.252C465.537 365.252 465.01 365.112 464.59 364.832C464.17 364.543 463.838 364.155 463.596 363.67C463.353 363.175 463.18 362.625 463.078 362.018C462.975 361.402 462.924 360.767 462.924 360.114C462.924 359.461 462.975 358.831 463.078 358.224C463.18 357.608 463.353 357.057 463.596 356.572C463.838 356.087 464.17 355.704 464.59 355.424C465.01 355.135 465.537 354.99 466.172 354.99ZM466.172 356.054C465.453 356.054 464.921 356.423 464.576 357.16C464.24 357.897 464.072 358.882 464.072 360.114C464.072 360.711 464.109 361.257 464.184 361.752C464.268 362.237 464.389 362.653 464.548 362.998L467.306 356.516C466.998 356.208 466.62 356.054 466.172 356.054ZM468.272 360.114C468.272 359.573 468.239 359.078 468.174 358.63C468.108 358.182 468.01 357.785 467.88 357.44L465.178 363.852C465.458 364.076 465.789 364.188 466.172 364.188C466.657 364.188 467.054 364.02 467.362 363.684C467.67 363.348 467.898 362.877 468.048 362.27C468.197 361.654 468.272 360.935 468.272 360.114Z" fill="rgb(var(--colour-main-500))"></path><rect x="310.5" y="378" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="328.5" cy="396" r="6" fill="#FFE000"></circle><path d="M330.3 396.325V395.505H327.3V393.325H330.45V392.505H326.37V399.495H330.63V398.675H327.3V396.325H330.3Z" fill="rgb(var(--colour-main))"></path><path d="M347.584 396.562H343.384V399.852H348.046V401H342.082V391.214H347.794V392.362H343.384V395.414H347.584V396.562ZM356.602 393.664L354.138 397.206L356.672 401H355.286L353.48 398.214L351.646 401H350.288L352.878 397.262L350.428 393.664H351.8L353.522 396.296L355.272 393.664H356.602ZM360.203 404.052H359.027V393.664H360.105V394.756C360.646 393.879 361.425 393.44 362.443 393.44C363.171 393.44 363.763 393.627 364.221 394C364.687 394.364 365.033 394.849 365.257 395.456C365.481 396.053 365.593 396.707 365.593 397.416C365.593 398.116 365.476 398.76 365.243 399.348C365.019 399.927 364.673 400.389 364.207 400.734C363.74 401.079 363.157 401.252 362.457 401.252C361.981 401.252 361.561 401.168 361.197 401C360.842 400.823 360.511 400.543 360.203 400.16V404.052ZM362.247 394.532C361.761 394.532 361.369 394.667 361.071 394.938C360.772 395.209 360.553 395.559 360.413 395.988C360.273 396.417 360.203 396.87 360.203 397.346C360.203 397.822 360.273 398.275 360.413 398.704C360.553 399.133 360.772 399.483 361.071 399.754C361.369 400.025 361.761 400.16 362.247 400.16C362.741 400.16 363.143 400.029 363.451 399.768C363.768 399.497 364.001 399.152 364.151 398.732C364.3 398.303 364.375 397.855 364.375 397.388C364.375 396.893 364.3 396.431 364.151 396.002C364.001 395.563 363.768 395.209 363.451 394.938C363.143 394.667 362.741 394.532 362.247 394.532ZM373.981 398.732C373.86 399.497 373.519 400.109 372.959 400.566C372.408 401.023 371.704 401.252 370.845 401.252C370.108 401.252 369.492 401.089 368.997 400.762C368.502 400.426 368.129 399.969 367.877 399.39C367.634 398.811 367.513 398.149 367.513 397.402C367.513 396.581 367.653 395.876 367.933 395.288C368.213 394.7 368.605 394.247 369.109 393.93C369.613 393.603 370.201 393.44 370.873 393.44C371.629 393.44 372.245 393.617 372.721 393.972C373.206 394.327 373.561 394.821 373.785 395.456C374.018 396.091 374.135 396.833 374.135 397.682H368.731C368.75 398.401 368.936 398.998 369.291 399.474C369.646 399.941 370.178 400.174 370.887 400.174C371.848 400.174 372.488 399.693 372.805 398.732H373.981ZM370.859 394.518C370.206 394.518 369.706 394.733 369.361 395.162C369.016 395.591 368.815 396.114 368.759 396.73H372.875C372.875 396.319 372.791 395.951 372.623 395.624C372.464 395.288 372.236 395.022 371.937 394.826C371.638 394.621 371.279 394.518 370.859 394.518ZM376.531 401V393.664H377.609V394.882C377.899 394.434 378.23 394.084 378.603 393.832C378.986 393.58 379.467 393.454 380.045 393.454C380.475 393.454 380.862 393.529 381.207 393.678C381.562 393.818 381.842 394.037 382.047 394.336C382.262 394.625 382.369 394.999 382.369 395.456V401H381.207V395.918C381.207 395.423 381.058 395.059 380.759 394.826C380.461 394.593 380.106 394.476 379.695 394.476C379.257 394.476 378.888 394.588 378.589 394.812C378.291 395.036 378.067 395.33 377.917 395.694C377.768 396.058 377.693 396.45 377.693 396.87V401H376.531ZM390.785 395.666H389.567C389.558 395.302 389.418 395.013 389.147 394.798C388.886 394.583 388.536 394.476 388.097 394.476C387.621 394.476 387.234 394.574 386.935 394.77C386.646 394.966 386.501 395.227 386.501 395.554C386.501 395.815 386.59 396.025 386.767 396.184C386.945 396.343 387.206 396.469 387.551 396.562L389.217 396.996C389.833 397.155 390.295 397.393 390.603 397.71C390.921 398.018 391.079 398.433 391.079 398.956C391.079 399.665 390.818 400.225 390.295 400.636C389.773 401.047 389.054 401.252 388.139 401.252C386.217 401.252 385.213 400.426 385.129 398.774H386.361C386.417 399.269 386.595 399.633 386.893 399.866C387.201 400.099 387.626 400.216 388.167 400.216C388.69 400.216 389.105 400.123 389.413 399.936C389.731 399.749 389.889 399.483 389.889 399.138C389.889 398.821 389.805 398.583 389.637 398.424C389.469 398.265 389.185 398.135 388.783 398.032L387.243 397.626C386.581 397.449 386.091 397.211 385.773 396.912C385.465 396.604 385.311 396.17 385.311 395.61C385.311 394.947 385.563 394.42 386.067 394.028C386.581 393.636 387.267 393.44 388.125 393.44C388.984 393.44 389.637 393.641 390.085 394.042C390.543 394.434 390.776 394.975 390.785 395.666ZM399.944 398.732C399.822 399.497 399.482 400.109 398.922 400.566C398.371 401.023 397.666 401.252 396.808 401.252C396.07 401.252 395.454 401.089 394.96 400.762C394.465 400.426 394.092 399.969 393.84 399.39C393.597 398.811 393.476 398.149 393.476 397.402C393.476 396.581 393.616 395.876 393.896 395.288C394.176 394.7 394.568 394.247 395.072 393.93C395.576 393.603 396.164 393.44 396.836 393.44C397.592 393.44 398.208 393.617 398.684 393.972C399.169 394.327 399.524 394.821 399.748 395.456C399.981 396.091 400.098 396.833 400.098 397.682H394.694C394.712 398.401 394.899 398.998 395.254 399.474C395.608 399.941 396.14 400.174 396.85 400.174C397.811 400.174 398.45 399.693 398.768 398.732H399.944ZM396.822 394.518C396.168 394.518 395.669 394.733 395.324 395.162C394.978 395.591 394.778 396.114 394.722 396.73H398.838C398.838 396.319 398.754 395.951 398.586 395.624C398.427 395.288 398.198 395.022 397.9 394.826C397.601 394.621 397.242 394.518 396.822 394.518Z" fill="rgb(var(--colour-main-500))"></path><path d="M466.172 390.99C466.806 390.99 467.334 391.135 467.754 391.424C468.174 391.704 468.505 392.087 468.748 392.572C468.99 393.057 469.163 393.608 469.266 394.224C469.368 394.831 469.42 395.461 469.42 396.114C469.42 396.767 469.368 397.402 469.266 398.018C469.163 398.625 468.99 399.175 468.748 399.67C468.505 400.155 468.174 400.543 467.754 400.832C467.334 401.112 466.806 401.252 466.172 401.252C465.537 401.252 465.01 401.112 464.59 400.832C464.17 400.543 463.838 400.155 463.596 399.67C463.353 399.175 463.18 398.625 463.078 398.018C462.975 397.402 462.924 396.767 462.924 396.114C462.924 395.461 462.975 394.831 463.078 394.224C463.18 393.608 463.353 393.057 463.596 392.572C463.838 392.087 464.17 391.704 464.59 391.424C465.01 391.135 465.537 390.99 466.172 390.99ZM466.172 392.054C465.453 392.054 464.921 392.423 464.576 393.16C464.24 393.897 464.072 394.882 464.072 396.114C464.072 396.711 464.109 397.257 464.184 397.752C464.268 398.237 464.389 398.653 464.548 398.998L467.306 392.516C466.998 392.208 466.62 392.054 466.172 392.054ZM468.272 396.114C468.272 395.573 468.239 395.078 468.174 394.63C468.108 394.182 468.01 393.785 467.88 393.44L465.178 399.852C465.458 400.076 465.789 400.188 466.172 400.188C466.657 400.188 467.054 400.02 467.362 399.684C467.67 399.348 467.898 398.877 468.048 398.27C468.197 397.654 468.272 396.935 468.272 396.114Z" fill="rgb(var(--colour-main-500))"></path><rect x="138.5" y="378" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="156.5" cy="396" r="6" fill="#EC3425"></circle><path d="M154.6 392.505V399.495H158.86V398.675H155.53V392.505H154.6Z" fill="rgb(var(--colour-negative))"></path><path d="M170.236 391.214H171.538V399.852H176.2V401H170.236V391.214ZM180.906 392.614V391.214H182.306V392.614H180.906ZM182.18 393.664V400.048H184.434V401H178.512V400.048H181.032V394.616H178.512V393.664H182.18ZM193.775 400.23V401.112C193.485 401.196 193.252 401.238 193.075 401.238C192.291 401.238 191.857 400.869 191.773 400.132C191.362 400.533 190.961 400.823 190.569 401C190.177 401.168 189.747 401.252 189.281 401.252C188.571 401.252 187.993 401.065 187.545 400.692C187.106 400.309 186.887 399.777 186.887 399.096C186.887 398.592 186.994 398.191 187.209 397.892C187.423 397.584 187.685 397.355 187.993 397.206C188.31 397.047 188.609 396.945 188.889 396.898C189.019 396.879 189.22 396.851 189.491 396.814C189.761 396.767 190.102 396.716 190.513 396.66C190.979 396.595 191.301 396.506 191.479 396.394C191.665 396.282 191.759 396.109 191.759 395.876V395.624C191.759 394.896 191.199 394.532 190.079 394.532C189.537 394.532 189.127 394.639 188.847 394.854C188.576 395.059 188.417 395.386 188.371 395.834H187.195C187.213 394.985 187.489 394.378 188.021 394.014C188.562 393.641 189.267 393.454 190.135 393.454C191.04 393.454 191.726 393.627 192.193 393.972C192.659 394.308 192.893 394.803 192.893 395.456V399.684C192.893 400.067 193.103 400.258 193.523 400.258C193.597 400.258 193.681 400.249 193.775 400.23ZM191.759 398.452V397.29C191.516 397.402 191.213 397.491 190.849 397.556C190.494 397.621 190.163 397.673 189.855 397.71C189.313 397.775 188.879 397.901 188.553 398.088C188.235 398.275 188.077 398.601 188.077 399.068C188.077 399.432 188.207 399.717 188.469 399.922C188.739 400.127 189.108 400.23 189.575 400.23C189.92 400.23 190.256 400.155 190.583 400.006C190.919 399.847 191.199 399.633 191.423 399.362C191.647 399.091 191.759 398.788 191.759 398.452ZM195.681 401V390.794H196.843V394.644C197.375 393.841 198.131 393.44 199.111 393.44C199.83 393.44 200.418 393.613 200.875 393.958C201.342 394.294 201.687 394.751 201.911 395.33C202.135 395.909 202.247 396.553 202.247 397.262C202.247 398.009 202.126 398.685 201.883 399.292C201.64 399.899 201.281 400.379 200.805 400.734C200.338 401.079 199.755 401.252 199.055 401.252C198.056 401.252 197.282 400.832 196.731 399.992V401H195.681ZM198.901 394.532C198.406 394.532 198.005 394.672 197.697 394.952C197.398 395.232 197.179 395.591 197.039 396.03C196.908 396.459 196.843 396.912 196.843 397.388C196.843 397.845 196.908 398.289 197.039 398.718C197.179 399.138 197.398 399.483 197.697 399.754C198.005 400.025 198.406 400.16 198.901 400.16C199.396 400.16 199.797 400.029 200.105 399.768C200.422 399.507 200.656 399.166 200.805 398.746C200.964 398.317 201.043 397.864 201.043 397.388C201.043 396.875 200.964 396.403 200.805 395.974C200.656 395.545 200.422 395.199 200.105 394.938C199.788 394.667 199.386 394.532 198.901 394.532ZM206.869 392.614V391.214H208.269V392.614H206.869ZM208.143 393.664V400.048H210.397V401H204.475V400.048H206.995V394.616H204.475V393.664H208.143ZM217.077 390.794V400.048H219.331V401H213.409V400.048H215.943V391.746H213.409V390.794H217.077ZM224.178 392.614V391.214H225.578V392.614H224.178ZM225.452 393.664V400.048H227.706V401H221.784V400.048H224.304V394.616H221.784V393.664H225.452ZM233.462 393.664H236.346V394.616H233.462V398.704C233.462 399.245 233.602 399.623 233.882 399.838C234.162 400.043 234.568 400.146 235.1 400.146C235.343 400.146 235.567 400.137 235.772 400.118C235.977 400.09 236.169 400.053 236.346 400.006V401.028C236.113 401.093 235.884 401.135 235.66 401.154C235.436 401.182 235.226 401.196 235.03 401.196C234.143 401.196 233.467 401.014 233 400.65C232.533 400.286 232.3 399.707 232.3 398.914V394.616H230.186V393.664H232.3V391.648H233.462V393.664ZM241.486 392.614V391.214H242.886V392.614H241.486ZM242.76 393.664V400.048H245.014V401H239.092V400.048H241.612V394.616H239.092V393.664H242.76ZM253.907 398.732C253.785 399.497 253.445 400.109 252.885 400.566C252.334 401.023 251.629 401.252 250.771 401.252C250.033 401.252 249.417 401.089 248.923 400.762C248.428 400.426 248.055 399.969 247.803 399.39C247.56 398.811 247.439 398.149 247.439 397.402C247.439 396.581 247.579 395.876 247.859 395.288C248.139 394.7 248.531 394.247 249.035 393.93C249.539 393.603 250.127 393.44 250.799 393.44C251.555 393.44 252.171 393.617 252.647 393.972C253.132 394.327 253.487 394.821 253.711 395.456C253.944 396.091 254.061 396.833 254.061 397.682H248.657C248.675 398.401 248.862 398.998 249.217 399.474C249.571 399.941 250.103 400.174 250.813 400.174C251.774 400.174 252.413 399.693 252.731 398.732H253.907ZM250.785 394.518C250.131 394.518 249.632 394.733 249.287 395.162C248.941 395.591 248.741 396.114 248.685 396.73H252.801C252.801 396.319 252.717 395.951 252.549 395.624C252.39 395.288 252.161 395.022 251.863 394.826C251.564 394.621 251.205 394.518 250.785 394.518ZM262.057 395.666H260.839C260.83 395.302 260.69 395.013 260.419 394.798C260.158 394.583 259.808 394.476 259.369 394.476C258.893 394.476 258.506 394.574 258.207 394.77C257.918 394.966 257.773 395.227 257.773 395.554C257.773 395.815 257.862 396.025 258.039 396.184C258.216 396.343 258.478 396.469 258.823 396.562L260.489 396.996C261.105 397.155 261.567 397.393 261.875 397.71C262.192 398.018 262.351 398.433 262.351 398.956C262.351 399.665 262.09 400.225 261.567 400.636C261.044 401.047 260.326 401.252 259.411 401.252C257.488 401.252 256.485 400.426 256.401 398.774H257.633C257.689 399.269 257.866 399.633 258.165 399.866C258.473 400.099 258.898 400.216 259.439 400.216C259.962 400.216 260.377 400.123 260.685 399.936C261.002 399.749 261.161 399.483 261.161 399.138C261.161 398.821 261.077 398.583 260.909 398.424C260.741 398.265 260.456 398.135 260.055 398.032L258.515 397.626C257.852 397.449 257.362 397.211 257.045 396.912C256.737 396.604 256.583 396.17 256.583 395.61C256.583 394.947 256.835 394.42 257.339 394.028C257.852 393.636 258.538 393.44 259.397 393.44C260.256 393.44 260.909 393.641 261.357 394.042C261.814 394.434 262.048 394.975 262.057 395.666Z" fill="rgb(var(--colour-main))"></path><path d="M285.433 401V393.902H282.815V392.978C283.394 392.95 283.851 392.913 284.187 392.866C284.533 392.819 284.799 392.735 284.985 392.614C285.172 392.493 285.317 392.315 285.419 392.082C285.531 391.839 285.639 391.513 285.741 391.102H286.665V401H285.433ZM294.172 390.99C294.806 390.99 295.334 391.135 295.754 391.424C296.174 391.704 296.505 392.087 296.748 392.572C296.99 393.057 297.163 393.608 297.266 394.224C297.368 394.831 297.42 395.461 297.42 396.114C297.42 396.767 297.368 397.402 297.266 398.018C297.163 398.625 296.99 399.175 296.748 399.67C296.505 400.155 296.174 400.543 295.754 400.832C295.334 401.112 294.806 401.252 294.172 401.252C293.537 401.252 293.01 401.112 292.59 400.832C292.17 400.543 291.838 400.155 291.596 399.67C291.353 399.175 291.18 398.625 291.078 398.018C290.975 397.402 290.924 396.767 290.924 396.114C290.924 395.461 290.975 394.831 291.078 394.224C291.18 393.608 291.353 393.057 291.596 392.572C291.838 392.087 292.17 391.704 292.59 391.424C293.01 391.135 293.537 390.99 294.172 390.99ZM294.172 392.054C293.453 392.054 292.921 392.423 292.576 393.16C292.24 393.897 292.072 394.882 292.072 396.114C292.072 396.711 292.109 397.257 292.184 397.752C292.268 398.237 292.389 398.653 292.548 398.998L295.306 392.516C294.998 392.208 294.62 392.054 294.172 392.054ZM296.272 396.114C296.272 395.573 296.239 395.078 296.174 394.63C296.108 394.182 296.01 393.785 295.88 393.44L293.178 399.852C293.458 400.076 293.789 400.188 294.172 400.188C294.657 400.188 295.054 400.02 295.362 399.684C295.67 399.348 295.898 398.877 296.048 398.27C296.197 397.654 296.272 396.935 296.272 396.114Z" fill="rgb(var(--colour-main))"></path><path d="M145.584 108.562H141.384V111.852H146.046V113H140.082V103.214H145.794V104.362H141.384V107.414H145.584V108.562ZM148.568 113V105.664H149.646V106.882C150.22 105.986 150.92 105.454 152.082 105.454C153.356 105.454 154.406 106.098 154.406 107.456V113H153.244V107.918C153.244 106.938 152.544 106.476 151.732 106.476C150.416 106.476 149.73 107.61 149.73 108.87V113H148.568ZM160.191 105.664H163.075V106.616H160.191V110.704C160.191 111.782 160.765 112.146 161.829 112.146C162.305 112.146 162.725 112.104 163.075 112.006V113.028C162.613 113.168 162.151 113.196 161.759 113.196C159.981 113.196 159.029 112.51 159.029 110.914V106.616H156.915V105.664H159.029V103.648H160.191V105.664ZM166.199 113V105.664H167.277V107.246C167.767 106.196 168.705 105.454 169.909 105.454C171.589 105.454 172.457 106.378 172.597 107.834H171.435C171.267 106.952 170.791 106.476 169.797 106.476C168.327 106.476 167.375 107.722 167.375 109.444V113H166.199ZM177.499 114.54C177.121 115.548 176.407 116.052 175.497 116.052C175.147 116.052 174.839 116.01 174.545 115.912V114.82C174.853 114.89 175.105 114.904 175.343 114.904C175.875 114.904 176.169 114.708 176.379 114.19L176.827 113.112L174.111 105.664H175.343L177.485 111.614L179.599 105.664H180.803L177.499 114.54Z" fill="rgb(var(--colour-main-500))"></path><path d="M145.374 329L144.506 326.074H141.132L140.264 329H138.92L142.014 319.214H143.652L146.732 329H145.374ZM141.454 324.982H144.184L142.812 320.39L141.454 324.982ZM154.616 324.086H153.44C153.314 323.12 152.67 322.518 151.648 322.518C150.136 322.518 149.548 323.96 149.548 325.416C149.548 326.872 150.206 328.174 151.676 328.174C152.698 328.174 153.328 327.6 153.524 326.438H154.7C154.546 328.202 153.454 329.252 151.648 329.252C149.506 329.252 148.33 327.572 148.33 325.416C148.33 323.218 149.478 321.44 151.662 321.44C153.454 321.44 154.574 322.532 154.616 324.086ZM163.271 324.086H162.095C161.969 323.12 161.325 322.518 160.303 322.518C158.791 322.518 158.203 323.96 158.203 325.416C158.203 326.872 158.861 328.174 160.331 328.174C161.353 328.174 161.983 327.6 162.179 326.438H163.355C163.201 328.202 162.109 329.252 160.303 329.252C158.161 329.252 156.985 327.572 156.985 325.416C156.985 323.218 158.133 321.44 160.317 321.44C162.109 321.44 163.229 322.532 163.271 324.086ZM168.789 321.44C171.043 321.44 172.107 323.12 172.107 325.346C172.107 327.572 171.043 329.252 168.789 329.252C166.535 329.252 165.471 327.572 165.471 325.346C165.471 323.12 166.535 321.44 168.789 321.44ZM168.789 322.518C167.305 322.518 166.689 323.848 166.689 325.346C166.689 326.844 167.305 328.174 168.789 328.174C170.273 328.174 170.889 326.844 170.889 325.346C170.889 323.848 170.273 322.518 168.789 322.518ZM180.369 321.664V329H179.319V327.908C178.647 328.874 177.947 329.252 176.869 329.252C176.239 329.252 175.707 329.112 175.287 328.818C174.783 328.454 174.531 327.936 174.531 327.25V321.664H175.693V326.788C175.693 327.278 175.861 327.656 176.183 327.908C176.449 328.118 176.799 328.23 177.205 328.23C177.751 328.23 178.213 328.034 178.591 327.628C178.997 327.194 179.207 326.564 179.207 325.738V321.664H180.369ZM183.185 329V321.664H184.263V322.882C184.837 321.986 185.537 321.454 186.699 321.454C187.973 321.454 189.023 322.098 189.023 323.456V329H187.861V323.918C187.861 322.938 187.161 322.476 186.349 322.476C185.033 322.476 184.347 323.61 184.347 324.87V329H183.185ZM194.808 321.664H197.692V322.616H194.808V326.704C194.808 327.782 195.382 328.146 196.446 328.146C196.922 328.146 197.342 328.104 197.692 328.006V329.028C197.23 329.168 196.768 329.196 196.376 329.196C194.598 329.196 193.646 328.51 193.646 326.914V322.616H191.532V321.664H193.646V319.648H194.808V321.664ZM202.832 320.614V319.214H204.232V320.614H202.832ZM204.106 321.664V328.048H206.36V329H200.438V328.048H202.958V322.616H200.438V321.664H204.106ZM209.148 329V321.664H210.226V322.882C210.8 321.986 211.5 321.454 212.662 321.454C213.936 321.454 214.986 322.098 214.986 323.456V329H213.824V323.918C213.824 322.938 213.124 322.476 212.312 322.476C210.996 322.476 210.31 323.61 210.31 324.87V329H209.148ZM220.533 332.052C218.937 332.052 217.733 331.394 217.537 329.84H218.755C218.923 330.666 219.497 331.072 220.561 331.072C222.031 331.072 222.633 330.344 222.633 328.384V327.964C222.199 328.818 221.415 329.252 220.449 329.252C218.279 329.252 217.257 327.558 217.257 325.304C217.257 323.148 218.321 321.44 220.407 321.44C221.401 321.44 222.157 321.818 222.661 322.574V321.664H223.823V327.81C223.823 328.832 223.739 329.602 223.571 330.134C223.165 331.408 222.115 332.052 220.533 332.052ZM220.617 328.16C222.087 328.16 222.661 326.746 222.661 325.388C222.661 323.918 222.073 322.532 220.603 322.532C219.231 322.532 218.475 323.764 218.475 325.346C218.475 326.844 219.119 328.16 220.617 328.16ZM240.781 324.562H236.581V327.852H241.243V329H235.279V319.214H240.991V320.362H236.581V323.414H240.781V324.562ZM249.786 321.664V332.052H248.624V328.076C248.078 328.916 247.364 329.252 246.356 329.252C244.382 329.252 243.22 327.74 243.22 325.43C243.22 323.204 244.298 321.44 246.412 321.44C247.378 321.44 248.204 321.86 248.75 322.63V321.664H249.786ZM246.58 322.532C245.194 322.532 244.438 323.764 244.438 325.346C244.438 326.844 245.11 328.16 246.58 328.16C248.05 328.16 248.624 326.746 248.624 325.388C248.624 323.932 248.036 322.532 246.58 322.532ZM258.258 321.664V329H257.208V327.908C256.536 328.874 255.836 329.252 254.758 329.252C254.128 329.252 253.596 329.112 253.176 328.818C252.672 328.454 252.42 327.936 252.42 327.25V321.664H253.582V326.788C253.582 327.278 253.75 327.656 254.072 327.908C254.338 328.118 254.688 328.23 255.094 328.23C255.64 328.23 256.102 328.034 256.48 327.628C256.886 327.194 257.096 326.564 257.096 325.738V321.664H258.258ZM267.626 328.23V329.112C267.332 329.196 267.108 329.238 266.926 329.238C266.114 329.238 265.708 328.888 265.624 328.132C264.798 328.944 264.07 329.252 263.132 329.252C261.704 329.252 260.738 328.454 260.738 327.096C260.738 325.584 261.886 325.038 262.74 324.898C262.992 324.856 263.538 324.772 264.364 324.66C265.302 324.534 265.61 324.352 265.61 323.876V323.624C265.61 322.896 265.036 322.532 263.93 322.532C262.852 322.532 262.32 322.938 262.222 323.834H261.046C261.074 322.14 262.25 321.454 263.986 321.454C265.792 321.454 266.744 322.154 266.744 323.456V327.684C266.744 328.062 266.954 328.258 267.374 328.258C267.444 328.258 267.556 328.244 267.626 328.23ZM265.61 326.452V325.29C265.12 325.514 264.322 325.64 263.706 325.71C262.614 325.836 261.928 326.144 261.928 327.068C261.928 327.796 262.488 328.23 263.426 328.23C264.448 328.23 265.61 327.474 265.61 326.452ZM272.696 321.664H275.58V322.616H272.696V326.704C272.696 327.782 273.27 328.146 274.334 328.146C274.81 328.146 275.23 328.104 275.58 328.006V329.028C275.118 329.168 274.656 329.196 274.264 329.196C272.486 329.196 271.534 328.51 271.534 326.914V322.616H269.42V321.664H271.534V319.648H272.696V321.664ZM280.721 320.614V319.214H282.121V320.614H280.721ZM281.995 321.664V328.048H284.249V329H278.327V328.048H280.847V322.616H278.327V321.664H281.995ZM289.949 321.44C292.203 321.44 293.267 323.12 293.267 325.346C293.267 327.572 292.203 329.252 289.949 329.252C287.695 329.252 286.631 327.572 286.631 325.346C286.631 323.12 287.695 321.44 289.949 321.44ZM289.949 322.518C288.465 322.518 287.849 323.848 287.849 325.346C287.849 326.844 288.465 328.174 289.949 328.174C291.433 328.174 292.049 326.844 292.049 325.346C292.049 323.848 291.433 322.518 289.949 322.518ZM295.691 329V321.664H296.769V322.882C297.343 321.986 298.043 321.454 299.205 321.454C300.479 321.454 301.529 322.098 301.529 323.456V329H300.367V323.918C300.367 322.938 299.667 322.476 298.855 322.476C297.539 322.476 296.853 323.61 296.853 324.87V329H295.691Z" fill="rgb(var(--colour-main-500))"></path><rect x="138.5" y="414" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M158.228 430.042H156.968C156.949 429.482 156.772 429.02 156.436 428.656C156.1 428.283 155.591 428.096 154.91 428.096C154.238 428.096 153.725 428.245 153.37 428.544C153.025 428.843 152.852 429.211 152.852 429.65C152.852 430.434 153.295 430.929 154.182 431.134L156.184 431.596C156.949 431.773 157.528 432.095 157.92 432.562C158.312 433.029 158.508 433.579 158.508 434.214C158.508 434.858 158.359 435.409 158.06 435.866C157.771 436.314 157.365 436.659 156.842 436.902C156.329 437.135 155.727 437.252 155.036 437.252C153.823 437.252 152.894 436.953 152.25 436.356C151.615 435.749 151.289 434.923 151.27 433.878H152.53C152.539 434.531 152.759 435.063 153.188 435.474C153.617 435.885 154.243 436.09 155.064 436.09C155.801 436.09 156.338 435.931 156.674 435.614C157.019 435.297 157.192 434.891 157.192 434.396C157.192 433.957 157.071 433.612 156.828 433.36C156.595 433.108 156.235 432.926 155.75 432.814L153.72 432.338C153.011 432.17 152.469 431.871 152.096 431.442C151.723 431.003 151.536 430.448 151.536 429.776C151.536 429.225 151.676 428.745 151.956 428.334C152.236 427.914 152.628 427.587 153.132 427.354C153.645 427.111 154.252 426.99 154.952 426.99C155.633 426.99 156.217 427.116 156.702 427.368C157.197 427.62 157.575 427.965 157.836 428.404C158.097 428.833 158.228 429.319 158.228 429.86V430.042ZM163.536 429.664H166.42V430.616H163.536V434.704C163.536 435.245 163.676 435.623 163.956 435.838C164.236 436.043 164.642 436.146 165.174 436.146C165.417 436.146 165.641 436.137 165.846 436.118C166.052 436.09 166.243 436.053 166.42 436.006V437.028C166.187 437.093 165.958 437.135 165.734 437.154C165.51 437.182 165.3 437.196 165.104 437.196C164.218 437.196 163.541 437.014 163.074 436.65C162.608 436.286 162.374 435.707 162.374 434.914V430.616H160.26V429.664H162.374V427.648H163.536V429.664ZM175.775 436.23V437.112C175.485 437.196 175.252 437.238 175.075 437.238C174.291 437.238 173.857 436.869 173.773 436.132C173.362 436.533 172.961 436.823 172.569 437C172.177 437.168 171.747 437.252 171.281 437.252C170.571 437.252 169.993 437.065 169.545 436.692C169.106 436.309 168.887 435.777 168.887 435.096C168.887 434.592 168.994 434.191 169.209 433.892C169.423 433.584 169.685 433.355 169.993 433.206C170.31 433.047 170.609 432.945 170.889 432.898C171.019 432.879 171.22 432.851 171.491 432.814C171.761 432.767 172.102 432.716 172.513 432.66C172.979 432.595 173.301 432.506 173.479 432.394C173.665 432.282 173.759 432.109 173.759 431.876V431.624C173.759 430.896 173.199 430.532 172.079 430.532C171.537 430.532 171.127 430.639 170.847 430.854C170.576 431.059 170.417 431.386 170.371 431.834H169.195C169.213 430.985 169.489 430.378 170.021 430.014C170.562 429.641 171.267 429.454 172.135 429.454C173.04 429.454 173.726 429.627 174.193 429.972C174.659 430.308 174.893 430.803 174.893 431.456V435.684C174.893 436.067 175.103 436.258 175.523 436.258C175.597 436.258 175.681 436.249 175.775 436.23ZM173.759 434.452V433.29C173.516 433.402 173.213 433.491 172.849 433.556C172.494 433.621 172.163 433.673 171.855 433.71C171.313 433.775 170.879 433.901 170.553 434.088C170.235 434.275 170.077 434.601 170.077 435.068C170.077 435.432 170.207 435.717 170.469 435.922C170.739 436.127 171.108 436.23 171.575 436.23C171.92 436.23 172.256 436.155 172.583 436.006C172.919 435.847 173.199 435.633 173.423 435.362C173.647 435.091 173.759 434.788 173.759 434.452ZM180.845 429.664H183.729V430.616H180.845V434.704C180.845 435.245 180.985 435.623 181.265 435.838C181.545 436.043 181.951 436.146 182.483 436.146C182.726 436.146 182.95 436.137 183.155 436.118C183.36 436.09 183.552 436.053 183.729 436.006V437.028C183.496 437.093 183.267 437.135 183.043 437.154C182.819 437.182 182.609 437.196 182.413 437.196C181.526 437.196 180.85 437.014 180.383 436.65C179.916 436.286 179.683 435.707 179.683 434.914V430.616H177.569V429.664H179.683V427.648H180.845V429.664ZM192.635 434.732C192.514 435.497 192.173 436.109 191.613 436.566C191.063 437.023 190.358 437.252 189.499 437.252C188.762 437.252 188.146 437.089 187.651 436.762C187.157 436.426 186.783 435.969 186.531 435.39C186.289 434.811 186.167 434.149 186.167 433.402C186.167 432.581 186.307 431.876 186.587 431.288C186.867 430.7 187.259 430.247 187.763 429.93C188.267 429.603 188.855 429.44 189.527 429.44C190.283 429.44 190.899 429.617 191.375 429.972C191.861 430.327 192.215 430.821 192.439 431.456C192.673 432.091 192.789 432.833 192.789 433.682H187.385C187.404 434.401 187.591 434.998 187.945 435.474C188.3 435.941 188.832 436.174 189.541 436.174C190.503 436.174 191.142 435.693 191.459 434.732H192.635ZM189.513 430.518C188.86 430.518 188.361 430.733 188.015 431.162C187.67 431.591 187.469 432.114 187.413 432.73H191.529C191.529 432.319 191.445 431.951 191.277 431.624C191.119 431.288 190.89 431.022 190.591 430.826C190.293 430.621 189.933 430.518 189.513 430.518Z" fill="rgb(var(--colour-main))"></path><path d="M294.172 426.99C294.806 426.99 295.334 427.135 295.754 427.424C296.174 427.704 296.505 428.087 296.748 428.572C296.99 429.057 297.163 429.608 297.266 430.224C297.368 430.831 297.42 431.461 297.42 432.114C297.42 432.767 297.368 433.402 297.266 434.018C297.163 434.625 296.99 435.175 296.748 435.67C296.505 436.155 296.174 436.543 295.754 436.832C295.334 437.112 294.806 437.252 294.172 437.252C293.537 437.252 293.01 437.112 292.59 436.832C292.17 436.543 291.838 436.155 291.596 435.67C291.353 435.175 291.18 434.625 291.078 434.018C290.975 433.402 290.924 432.767 290.924 432.114C290.924 431.461 290.975 430.831 291.078 430.224C291.18 429.608 291.353 429.057 291.596 428.572C291.838 428.087 292.17 427.704 292.59 427.424C293.01 427.135 293.537 426.99 294.172 426.99ZM294.172 428.054C293.453 428.054 292.921 428.423 292.576 429.16C292.24 429.897 292.072 430.882 292.072 432.114C292.072 432.711 292.109 433.257 292.184 433.752C292.268 434.237 292.389 434.653 292.548 434.998L295.306 428.516C294.998 428.208 294.62 428.054 294.172 428.054ZM296.272 432.114C296.272 431.573 296.239 431.078 296.174 430.63C296.108 430.182 296.01 429.785 295.88 429.44L293.178 435.852C293.458 436.076 293.789 436.188 294.172 436.188C294.657 436.188 295.054 436.02 295.362 435.684C295.67 435.348 295.898 434.877 296.048 434.27C296.197 433.654 296.272 432.935 296.272 432.114Z" fill="rgb(var(--colour-main))"></path><rect x="310.5" y="414" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M330.55 429.944H329.22C329.08 429.412 328.861 428.978 328.562 428.642C328.263 428.306 327.801 428.138 327.176 428.138C326.56 428.138 326.061 428.306 325.678 428.642C325.305 428.978 325.034 429.449 324.866 430.056C324.698 430.653 324.614 431.344 324.614 432.128C324.614 433.453 324.833 434.447 325.272 435.11C325.711 435.773 326.345 436.104 327.176 436.104C327.829 436.104 328.315 435.899 328.632 435.488C328.949 435.077 329.178 434.475 329.318 433.682H330.648C330.517 434.867 330.144 435.759 329.528 436.356C328.912 436.953 328.123 437.252 327.162 437.252C326.313 437.252 325.599 437.047 325.02 436.636C324.441 436.216 324.003 435.623 323.704 434.858C323.405 434.093 323.256 433.187 323.256 432.142C323.256 431.442 323.326 430.779 323.466 430.154C323.615 429.529 323.844 428.983 324.152 428.516C324.46 428.04 324.866 427.667 325.37 427.396C325.874 427.125 326.49 426.99 327.218 426.99C327.871 426.99 328.427 427.121 328.884 427.382C329.341 427.643 329.71 427.998 329.99 428.446C330.27 428.885 330.457 429.384 330.55 429.944ZM332.568 437V426.794H333.73V430.756C333.992 430.373 334.304 430.061 334.668 429.818C335.032 429.575 335.504 429.454 336.082 429.454C336.512 429.454 336.899 429.529 337.244 429.678C337.599 429.818 337.879 430.037 338.084 430.336C338.299 430.625 338.406 430.999 338.406 431.456V437H337.244V431.918C337.244 431.423 337.095 431.059 336.796 430.826C336.498 430.593 336.143 430.476 335.732 430.476C335.294 430.476 334.925 430.588 334.626 430.812C334.328 431.036 334.104 431.33 333.954 431.694C333.805 432.058 333.73 432.45 333.73 432.87V437H332.568ZM347.775 436.23V437.112C347.485 437.196 347.252 437.238 347.075 437.238C346.291 437.238 345.857 436.869 345.773 436.132C345.362 436.533 344.961 436.823 344.569 437C344.177 437.168 343.747 437.252 343.281 437.252C342.571 437.252 341.993 437.065 341.545 436.692C341.106 436.309 340.887 435.777 340.887 435.096C340.887 434.592 340.994 434.191 341.209 433.892C341.423 433.584 341.685 433.355 341.993 433.206C342.31 433.047 342.609 432.945 342.889 432.898C343.019 432.879 343.22 432.851 343.491 432.814C343.761 432.767 344.102 432.716 344.513 432.66C344.979 432.595 345.301 432.506 345.479 432.394C345.665 432.282 345.759 432.109 345.759 431.876V431.624C345.759 430.896 345.199 430.532 344.079 430.532C343.537 430.532 343.127 430.639 342.847 430.854C342.576 431.059 342.417 431.386 342.371 431.834H341.195C341.213 430.985 341.489 430.378 342.021 430.014C342.562 429.641 343.267 429.454 344.135 429.454C345.04 429.454 345.726 429.627 346.193 429.972C346.659 430.308 346.893 430.803 346.893 431.456V435.684C346.893 436.067 347.103 436.258 347.523 436.258C347.597 436.258 347.681 436.249 347.775 436.23ZM345.759 434.452V433.29C345.516 433.402 345.213 433.491 344.849 433.556C344.494 433.621 344.163 433.673 343.855 433.71C343.313 433.775 342.879 433.901 342.553 434.088C342.235 434.275 342.077 434.601 342.077 435.068C342.077 435.432 342.207 435.717 342.469 435.922C342.739 436.127 343.108 436.23 343.575 436.23C343.92 436.23 344.256 436.155 344.583 436.006C344.919 435.847 345.199 435.633 345.423 435.362C345.647 435.091 345.759 434.788 345.759 434.452ZM349.877 437V429.664H350.955V430.882C351.244 430.434 351.576 430.084 351.949 429.832C352.332 429.58 352.812 429.454 353.391 429.454C353.82 429.454 354.208 429.529 354.553 429.678C354.908 429.818 355.188 430.037 355.393 430.336C355.608 430.625 355.715 430.999 355.715 431.456V437H354.553V431.918C354.553 431.423 354.404 431.059 354.105 430.826C353.806 430.593 353.452 430.476 353.041 430.476C352.602 430.476 352.234 430.588 351.935 430.812C351.636 431.036 351.412 431.33 351.263 431.694C351.114 432.058 351.039 432.45 351.039 432.87V437H349.877ZM361.261 440.052C360.468 440.052 359.796 439.875 359.245 439.52C358.695 439.175 358.368 438.615 358.265 437.84H359.483C359.651 438.661 360.253 439.072 361.289 439.072C362.027 439.072 362.554 438.867 362.871 438.456C363.198 438.055 363.361 437.364 363.361 436.384V435.964C363.147 436.393 362.848 436.715 362.465 436.93C362.092 437.145 361.663 437.252 361.177 437.252C360.459 437.252 359.861 437.079 359.385 436.734C358.909 436.389 358.555 435.917 358.321 435.32C358.097 434.723 357.985 434.051 357.985 433.304C357.985 432.585 358.102 431.937 358.335 431.358C358.569 430.77 358.919 430.303 359.385 429.958C359.861 429.613 360.445 429.44 361.135 429.44C362.134 429.44 362.885 429.818 363.389 430.574V429.664H364.551V435.81C364.551 436.827 364.467 437.602 364.299 438.134C364.094 438.769 363.735 439.245 363.221 439.562C362.708 439.889 362.055 440.052 361.261 440.052ZM361.345 436.16C361.84 436.16 362.237 436.025 362.535 435.754C362.834 435.474 363.049 435.124 363.179 434.704C363.319 434.275 363.389 433.836 363.389 433.388C363.389 432.893 363.319 432.431 363.179 432.002C363.039 431.563 362.82 431.209 362.521 430.938C362.223 430.667 361.826 430.532 361.331 430.532C360.874 430.532 360.487 430.658 360.169 430.91C359.852 431.153 359.609 431.489 359.441 431.918C359.283 432.338 359.203 432.814 359.203 433.346C359.203 433.841 359.278 434.303 359.427 434.732C359.577 435.161 359.805 435.507 360.113 435.768C360.431 436.029 360.841 436.16 361.345 436.16ZM373.289 434.732C373.168 435.497 372.827 436.109 372.267 436.566C371.717 437.023 371.012 437.252 370.153 437.252C369.416 437.252 368.8 437.089 368.305 436.762C367.811 436.426 367.437 435.969 367.185 435.39C366.943 434.811 366.821 434.149 366.821 433.402C366.821 432.581 366.961 431.876 367.241 431.288C367.521 430.7 367.913 430.247 368.417 429.93C368.921 429.603 369.509 429.44 370.181 429.44C370.937 429.44 371.553 429.617 372.029 429.972C372.515 430.327 372.869 430.821 373.093 431.456C373.327 432.091 373.443 432.833 373.443 433.682H368.039C368.058 434.401 368.245 434.998 368.599 435.474C368.954 435.941 369.486 436.174 370.195 436.174C371.157 436.174 371.796 435.693 372.113 434.732H373.289ZM370.167 430.518C369.514 430.518 369.015 430.733 368.669 431.162C368.324 431.591 368.123 432.114 368.067 432.73H372.183C372.183 432.319 372.099 431.951 371.931 431.624C371.773 431.288 371.544 431.022 371.245 430.826C370.947 430.621 370.587 430.518 370.167 430.518Z" fill="rgb(var(--colour-main))"></path><path d="M466.172 426.99C466.806 426.99 467.334 427.135 467.754 427.424C468.174 427.704 468.505 428.087 468.748 428.572C468.99 429.057 469.163 429.608 469.266 430.224C469.368 430.831 469.42 431.461 469.42 432.114C469.42 432.767 469.368 433.402 469.266 434.018C469.163 434.625 468.99 435.175 468.748 435.67C468.505 436.155 468.174 436.543 467.754 436.832C467.334 437.112 466.806 437.252 466.172 437.252C465.537 437.252 465.01 437.112 464.59 436.832C464.17 436.543 463.838 436.155 463.596 435.67C463.353 435.175 463.18 434.625 463.078 434.018C462.975 433.402 462.924 432.767 462.924 432.114C462.924 431.461 462.975 430.831 463.078 430.224C463.18 429.608 463.353 429.057 463.596 428.572C463.838 428.087 464.17 427.704 464.59 427.424C465.01 427.135 465.537 426.99 466.172 426.99ZM466.172 428.054C465.453 428.054 464.921 428.423 464.576 429.16C464.24 429.897 464.072 430.882 464.072 432.114C464.072 432.711 464.109 433.257 464.184 433.752C464.268 434.237 464.389 434.653 464.548 434.998L467.306 428.516C466.998 428.208 466.62 428.054 466.172 428.054ZM468.272 432.114C468.272 431.573 468.239 431.078 468.174 430.63C468.108 430.182 468.01 429.785 467.88 429.44L465.178 435.852C465.458 436.076 465.789 436.188 466.172 436.188C466.657 436.188 467.054 436.02 467.362 435.684C467.67 435.348 467.898 434.877 468.048 434.27C468.197 433.654 468.272 432.935 468.272 432.114Z" fill="rgb(var(--colour-main))"></path></svg></div><div class="block tablet:hidden"><svg width="100%" height="100%" viewBox="0 0 378 549" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="378" height="549" fill="rgb(var(--colour-negative))"></rect><path d="M23.096 32H19.288V22.214H22.774C23.6513 22.214 24.3607 22.438 24.902 22.886C25.4527 23.3247 25.728 23.9313 25.728 24.706C25.728 25.1727 25.616 25.616 25.392 26.036C25.1773 26.456 24.8553 26.7407 24.426 26.89C24.93 27.058 25.3267 27.3427 25.616 27.744C25.9053 28.136 26.05 28.626 26.05 29.214C26.05 29.6993 25.938 30.1567 25.714 30.586C25.49 31.006 25.1587 31.3467 24.72 31.608C24.2813 31.8693 23.74 32 23.096 32ZM20.562 23.32V26.414H22.578C23.1007 26.414 23.5347 26.3113 23.88 26.106C24.2253 25.8913 24.398 25.4853 24.398 24.888C24.398 24.2813 24.2253 23.8707 23.88 23.656C23.5347 23.432 23.1007 23.32 22.578 23.32H20.562ZM20.562 27.52V30.894H22.942C23.558 30.894 24.006 30.7353 24.286 30.418C24.5753 30.1007 24.72 29.6947 24.72 29.2C24.72 28.7053 24.5753 28.304 24.286 27.996C24.006 27.6787 23.558 27.52 22.942 27.52H20.562ZM34.6203 31.23V32.112C34.331 32.196 34.0976 32.238 33.9203 32.238C33.1363 32.238 32.7023 31.8693 32.6183 31.132C32.2076 31.5333 31.8063 31.8227 31.4143 32C31.0223 32.168 30.593 32.252 30.1263 32.252C29.417 32.252 28.8383 32.0653 28.3903 31.692C27.9516 31.3093 27.7323 30.7773 27.7323 30.096C27.7323 29.592 27.8396 29.1907 28.0543 28.892C28.269 28.584 28.5303 28.3553 28.8383 28.206C29.1556 28.0473 29.4543 27.9447 29.7343 27.898C29.865 27.8793 30.0656 27.8513 30.3363 27.814C30.607 27.7673 30.9476 27.716 31.3583 27.66C31.825 27.5947 32.147 27.506 32.3243 27.394C32.511 27.282 32.6043 27.1093 32.6043 26.876V26.624C32.6043 25.896 32.0443 25.532 30.9243 25.532C30.383 25.532 29.9723 25.6393 29.6923 25.854C29.4216 26.0593 29.263 26.386 29.2163 26.834H28.0403C28.059 25.9847 28.3343 25.378 28.8663 25.014C29.4076 24.6407 30.1123 24.454 30.9803 24.454C31.8856 24.454 32.5716 24.6267 33.0383 24.972C33.505 25.308 33.7383 25.8027 33.7383 26.456V30.684C33.7383 31.0667 33.9483 31.258 34.3683 31.258C34.443 31.258 34.527 31.2487 34.6203 31.23ZM32.6043 29.452V28.29C32.3616 28.402 32.0583 28.4907 31.6943 28.556C31.3396 28.6213 31.0083 28.6727 30.7003 28.71C30.159 28.7753 29.725 28.9013 29.3983 29.088C29.081 29.2747 28.9223 29.6013 28.9223 30.068C28.9223 30.432 29.053 30.7167 29.3143 30.922C29.585 31.1273 29.9536 31.23 30.4203 31.23C30.7656 31.23 31.1016 31.1553 31.4283 31.006C31.7643 30.8473 32.0443 30.6327 32.2683 30.362C32.4923 30.0913 32.6043 29.788 32.6043 29.452ZM40.6146 21.794V31.048H42.8686V32H36.9466V31.048H39.4806V22.746H36.9466V21.794H40.6146ZM51.9289 31.23V32.112C51.6396 32.196 51.4062 32.238 51.2289 32.238C50.4449 32.238 50.0109 31.8693 49.9269 31.132C49.5162 31.5333 49.1149 31.8227 48.7229 32C48.3309 32.168 47.9016 32.252 47.4349 32.252C46.7256 32.252 46.1469 32.0653 45.6989 31.692C45.2602 31.3093 45.0409 30.7773 45.0409 30.096C45.0409 29.592 45.1482 29.1907 45.3629 28.892C45.5776 28.584 45.8389 28.3553 46.1469 28.206C46.4642 28.0473 46.7629 27.9447 47.0429 27.898C47.1736 27.8793 47.3742 27.8513 47.6449 27.814C47.9156 27.7673 48.2562 27.716 48.6669 27.66C49.1336 27.5947 49.4556 27.506 49.6329 27.394C49.8196 27.282 49.9129 27.1093 49.9129 26.876V26.624C49.9129 25.896 49.3529 25.532 48.2329 25.532C47.6916 25.532 47.2809 25.6393 47.0009 25.854C46.7302 26.0593 46.5716 26.386 46.5249 26.834H45.3489C45.3676 25.9847 45.6429 25.378 46.1749 25.014C46.7162 24.6407 47.4209 24.454 48.2889 24.454C49.1942 24.454 49.8802 24.6267 50.3469 24.972C50.8136 25.308 51.0469 25.8027 51.0469 26.456V30.684C51.0469 31.0667 51.2569 31.258 51.6769 31.258C51.7516 31.258 51.8356 31.2487 51.9289 31.23ZM49.9129 29.452V28.29C49.6702 28.402 49.3669 28.4907 49.0029 28.556C48.6482 28.6213 48.3169 28.6727 48.0089 28.71C47.4676 28.7753 47.0336 28.9013 46.7069 29.088C46.3896 29.2747 46.2309 29.6013 46.2309 30.068C46.2309 30.432 46.3616 30.7167 46.6229 30.922C46.8936 31.1273 47.2622 31.23 47.7289 31.23C48.0742 31.23 48.4102 31.1553 48.7369 31.006C49.0729 30.8473 49.3529 30.6327 49.5769 30.362C49.8009 30.0913 49.9129 29.788 49.9129 29.452ZM54.0312 32V24.664H55.1092V25.882C55.3985 25.434 55.7299 25.084 56.1032 24.832C56.4859 24.58 56.9665 24.454 57.5452 24.454C57.9745 24.454 58.3619 24.5287 58.7072 24.678C59.0619 24.818 59.3419 25.0373 59.5472 25.336C59.7619 25.6253 59.8692 25.9987 59.8692 26.456V32H58.7072V26.918C58.7072 26.4233 58.5579 26.0593 58.2592 25.826C57.9605 25.5927 57.6059 25.476 57.1952 25.476C56.7565 25.476 56.3879 25.588 56.0892 25.812C55.7905 26.036 55.5665 26.33 55.4172 26.694C55.2679 27.058 55.1932 27.45 55.1932 27.87V32H54.0312ZM68.7335 27.086H67.5575C67.4922 26.6007 67.3055 26.218 66.9975 25.938C66.6895 25.658 66.2788 25.518 65.7655 25.518C65.2615 25.518 64.8555 25.658 64.5475 25.938C64.2395 26.218 64.0155 26.582 63.8755 27.03C63.7355 27.4687 63.6655 27.9307 63.6655 28.416C63.6655 28.9013 63.7402 29.354 63.8895 29.774C64.0388 30.194 64.2722 30.5347 64.5895 30.796C64.9068 31.048 65.3082 31.174 65.7935 31.174C66.8295 31.174 67.4455 30.5953 67.6415 29.438H68.8175C68.7428 30.3153 68.4395 31.006 67.9075 31.51C67.3848 32.0047 66.6708 32.252 65.7655 32.252C65.0562 32.252 64.4542 32.084 63.9595 31.748C63.4648 31.4027 63.0868 30.9407 62.8255 30.362C62.5735 29.7833 62.4475 29.1347 62.4475 28.416C62.4475 27.6787 62.5735 27.0113 62.8255 26.414C63.0775 25.8167 63.4508 25.3407 63.9455 24.986C64.4402 24.622 65.0515 24.44 65.7795 24.44C66.6755 24.44 67.3848 24.6873 67.9075 25.182C68.4395 25.6767 68.7148 26.3113 68.7335 27.086ZM77.4438 29.732C77.3224 30.4973 76.9818 31.1087 76.4218 31.566C75.8711 32.0233 75.1664 32.252 74.3078 32.252C73.5704 32.252 72.9544 32.0887 72.4598 31.762C71.9651 31.426 71.5918 30.9687 71.3398 30.39C71.0971 29.8113 70.9758 29.1487 70.9758 28.402C70.9758 27.5807 71.1158 26.876 71.3958 26.288C71.6758 25.7 72.0678 25.2473 72.5718 24.93C73.0758 24.6033 73.6638 24.44 74.3358 24.44C75.0918 24.44 75.7078 24.6173 76.1838 24.972C76.6691 25.3267 77.0238 25.8213 77.2478 26.456C77.4811 27.0907 77.5978 27.8327 77.5978 28.682H72.1938C72.2124 29.4007 72.3991 29.998 72.7538 30.474C73.1084 30.9407 73.6404 31.174 74.3498 31.174C75.3111 31.174 75.9504 30.6933 76.2678 29.732H77.4438ZM74.3218 25.518C73.6684 25.518 73.1691 25.7327 72.8238 26.162C72.4784 26.5913 72.2778 27.114 72.2218 27.73H76.3378C76.3378 27.3193 76.2538 26.9507 76.0858 26.624C75.9271 26.288 75.6984 26.022 75.3998 25.826C75.1011 25.6207 74.7418 25.518 74.3218 25.518ZM84.8521 21.794H86.0141V32H84.9781V30.964C84.3901 31.8227 83.6107 32.252 82.6401 32.252C81.9214 32.252 81.3241 32.0793 80.8481 31.734C80.3721 31.3793 80.0174 30.8987 79.7841 30.292C79.5601 29.6853 79.4481 29.0087 79.4481 28.262C79.4481 27.5527 79.5647 26.9133 79.7981 26.344C80.0314 25.7653 80.3814 25.3033 80.8481 24.958C81.3241 24.6127 81.9074 24.44 82.5981 24.44C83.5967 24.44 84.3481 24.818 84.8521 25.574V21.794ZM82.7941 25.532C82.3367 25.532 81.9494 25.658 81.6321 25.91C81.3147 26.1527 81.0721 26.4887 80.9041 26.918C80.7454 27.338 80.6661 27.814 80.6661 28.346C80.6661 28.8407 80.7407 29.3027 80.8901 29.732C81.0394 30.1613 81.2681 30.5067 81.5761 30.768C81.8934 31.0293 82.3041 31.16 82.8081 31.16C83.3027 31.16 83.6994 31.0247 83.9981 30.754C84.2967 30.474 84.5114 30.124 84.6421 29.704C84.7821 29.2747 84.8521 28.836 84.8521 28.388C84.8521 27.8933 84.7821 27.4313 84.6421 27.002C84.5021 26.5633 84.2827 26.2087 83.9841 25.938C83.6854 25.6673 83.2887 25.532 82.7941 25.532ZM102.973 27.562H98.7727V30.852H103.435V32H97.4707V22.214H103.183V23.362H98.7727V26.414H102.973V27.562ZM105.957 32V24.664H107.035V25.882C107.324 25.434 107.656 25.084 108.029 24.832C108.412 24.58 108.892 24.454 109.471 24.454C109.9 24.454 110.288 24.5287 110.633 24.678C110.988 24.818 111.268 25.0373 111.473 25.336C111.688 25.6253 111.795 25.9987 111.795 26.456V32H110.633V26.918C110.633 26.4233 110.484 26.0593 110.185 25.826C109.886 25.5927 109.532 25.476 109.121 25.476C108.682 25.476 108.314 25.588 108.015 25.812C107.716 26.036 107.492 26.33 107.343 26.694C107.194 27.058 107.119 27.45 107.119 27.87V32H105.957ZM117.579 24.664H120.463V25.616H117.579V29.704C117.579 30.2453 117.719 30.6233 117.999 30.838C118.279 31.0433 118.685 31.146 119.217 31.146C119.46 31.146 119.684 31.1367 119.889 31.118C120.095 31.09 120.286 31.0527 120.463 31.006V32.028C120.23 32.0933 120.001 32.1353 119.777 32.154C119.553 32.182 119.343 32.196 119.147 32.196C118.261 32.196 117.584 32.014 117.117 31.65C116.651 31.286 116.417 30.7073 116.417 29.914V25.616H114.303V24.664H116.417V22.648H117.579V24.664ZM123.588 32V24.664H124.666V26.246C124.908 25.7233 125.258 25.294 125.716 24.958C126.173 24.622 126.7 24.454 127.298 24.454C128.138 24.454 128.777 24.6687 129.216 25.098C129.664 25.5273 129.92 26.106 129.986 26.834H128.824C128.74 26.3953 128.567 26.0593 128.306 25.826C128.054 25.5927 127.68 25.476 127.186 25.476C126.7 25.476 126.276 25.6067 125.912 25.868C125.548 26.12 125.263 26.47 125.058 26.918C124.862 27.3567 124.764 27.8653 124.764 28.444V32H123.588ZM134.888 33.54C134.701 34.044 134.435 34.422 134.09 34.674C133.745 34.926 133.343 35.052 132.886 35.052C132.531 35.052 132.214 35.0053 131.934 34.912V33.82C132.093 33.8573 132.233 33.8807 132.354 33.89C132.485 33.8993 132.611 33.904 132.732 33.904C133.003 33.904 133.217 33.848 133.376 33.736C133.535 33.6333 133.665 33.4513 133.768 33.19L134.216 32.112L131.5 24.664H132.732L134.874 30.614L136.988 24.664H138.192L134.888 33.54Z" fill="rgb(var(--colour-main))"></path><rect x="18" y="126" width="342" height="54" stroke="rgb(var(--colour-main-500))"></rect><path d="M36 144H42V144C42 147.314 39.3137 150 36 150V150V144Z" fill="rgb(var(--colour-inactive-br))"></path><path d="M36 138V138C39.3137 138 42 140.686 42 144V144H36V138Z" fill="rgb(var(--colour-inactive-tr))"></path><path d="M30 144H36V150V150C32.6863 150 30 147.314 30 144V144Z" fill="rgb(var(--colour-inactive-bl))"></path><path d="M30 144C30 140.686 32.6863 138 36 138V138V144H30V144Z" fill="rgb(var(--colour-inactive-tl))"></path><path d="M36 144H42V144C42 147.314 39.3137 150 36 150V150V144Z" fill="#FFE000"></path><path d="M36 138V138C39.3137 138 42 140.686 42 144V144H36V138Z" fill="rgb(var(--colour-income-blue))"></path><path d="M30 144H36V150V150C32.6863 150 30 147.314 30 144V144Z" fill="#EC3425"></path><path d="M30 144C30 140.686 32.6863 138 36 138V138V144H30V144Z" fill="#5AC93B"></path><path d="M54.084 144.562H49.884V147.852H54.546V149H48.582V139.214H54.294V140.362H49.884V143.414H54.084V144.562ZM57.0683 149V141.664H58.1463V142.882C58.4356 142.434 58.767 142.084 59.1403 141.832C59.523 141.58 60.0036 141.454 60.5823 141.454C61.0116 141.454 61.399 141.529 61.7443 141.678C62.099 141.818 62.379 142.037 62.5843 142.336C62.799 142.625 62.9063 142.999 62.9063 143.456V149H61.7443V143.918C61.7443 143.423 61.595 143.059 61.2963 142.826C60.9976 142.593 60.643 142.476 60.2323 142.476C59.7936 142.476 59.425 142.588 59.1263 142.812C58.8276 143.036 58.6036 143.33 58.4543 143.694C58.305 144.058 58.2303 144.45 58.2303 144.87V149H57.0683ZM68.6906 141.664H71.5746V142.616H68.6906V146.704C68.6906 147.245 68.8306 147.623 69.1106 147.838C69.3906 148.043 69.7966 148.146 70.3286 148.146C70.5713 148.146 70.7953 148.137 71.0006 148.118C71.2059 148.09 71.3973 148.053 71.5746 148.006V149.028C71.3413 149.093 71.1126 149.135 70.8886 149.154C70.6646 149.182 70.4546 149.196 70.2586 149.196C69.3719 149.196 68.6953 149.014 68.2286 148.65C67.7619 148.286 67.5286 147.707 67.5286 146.914V142.616H65.4146V141.664H67.5286V139.648H68.6906V141.664ZM74.6989 149V141.664H75.7769V143.246C76.0196 142.723 76.3696 142.294 76.8269 141.958C77.2842 141.622 77.8116 141.454 78.4089 141.454C79.2489 141.454 79.8882 141.669 80.3269 142.098C80.7749 142.527 81.0316 143.106 81.0969 143.834H79.9349C79.8509 143.395 79.6782 143.059 79.4169 142.826C79.1649 142.593 78.7916 142.476 78.2969 142.476C77.8116 142.476 77.3869 142.607 77.0229 142.868C76.6589 143.12 76.3742 143.47 76.1689 143.918C75.9729 144.357 75.8749 144.865 75.8749 145.444V149H74.6989ZM85.9992 150.54C85.8125 151.044 85.5465 151.422 85.2012 151.674C84.8559 151.926 84.4545 152.052 83.9972 152.052C83.6425 152.052 83.3252 152.005 83.0452 151.912V150.82C83.2039 150.857 83.3439 150.881 83.4652 150.89C83.5959 150.899 83.7219 150.904 83.8432 150.904C84.1139 150.904 84.3285 150.848 84.4872 150.736C84.6459 150.633 84.7765 150.451 84.8792 150.19L85.3272 149.112L82.6112 141.664H83.8432L85.9852 147.614L88.0992 141.664H89.3032L85.9992 150.54Z" fill="rgb(var(--colour-main))"></path><rect x="18" y="216" width="342" height="36" fill="rgb(var(--colour-negative))"></rect><rect x="18" y="216" width="342" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="36" y="228" width="12" height="12" rx="6" fill="rgb(var(--colour-negative))"></rect><path d="M36 234H42V240V240C38.6863 240 36 237.314 36 234V234Z" fill="#EC3425"></path><path d="M55.736 229.214H57.038V237.852H61.7V239H55.736V229.214ZM66.4063 230.614V229.214H67.8063V230.614H66.4063ZM67.6803 231.664V238.048H69.9343V239H64.0123V238.048H66.5323V232.616H64.0123V231.664H67.6803ZM72.7226 239V231.664H73.8006V232.882C74.0899 232.434 74.4213 232.084 74.7946 231.832C75.1773 231.58 75.6579 231.454 76.2366 231.454C76.6659 231.454 77.0533 231.529 77.3986 231.678C77.7533 231.818 78.0333 232.037 78.2386 232.336C78.4533 232.625 78.5606 232.999 78.5606 233.456V239H77.3986V233.918C77.3986 233.423 77.2493 233.059 76.9506 232.826C76.6519 232.593 76.2973 232.476 75.8866 232.476C75.4479 232.476 75.0793 232.588 74.7806 232.812C74.4819 233.036 74.2579 233.33 74.1086 233.694C73.9593 234.058 73.8846 234.45 73.8846 234.87V239H72.7226ZM87.4809 236.732C87.3596 237.497 87.0189 238.109 86.4589 238.566C85.9082 239.023 85.2036 239.252 84.3449 239.252C83.6076 239.252 82.9916 239.089 82.4969 238.762C82.0022 238.426 81.6289 237.969 81.3769 237.39C81.1342 236.811 81.0129 236.149 81.0129 235.402C81.0129 234.581 81.1529 233.876 81.4329 233.288C81.7129 232.7 82.1049 232.247 82.6089 231.93C83.1129 231.603 83.7009 231.44 84.3729 231.44C85.1289 231.44 85.7449 231.617 86.2209 231.972C86.7062 232.327 87.0609 232.821 87.2849 233.456C87.5182 234.091 87.6349 234.833 87.6349 235.682H82.2309C82.2496 236.401 82.4362 236.998 82.7909 237.474C83.1456 237.941 83.6776 238.174 84.3869 238.174C85.3482 238.174 85.9876 237.693 86.3049 236.732H87.4809ZM84.3589 232.518C83.7056 232.518 83.2062 232.733 82.8609 233.162C82.5156 233.591 82.3149 234.114 82.2589 234.73H86.3749C86.3749 234.319 86.2909 233.951 86.1229 233.624C85.9642 233.288 85.7356 233.022 85.4369 232.826C85.1382 232.621 84.7789 232.518 84.3589 232.518Z" fill="rgb(var(--colour-main))"></path><path d="M328.242 239V231.902H325.624V230.978C326.203 230.95 326.66 230.913 326.996 230.866C327.341 230.819 327.607 230.735 327.794 230.614C327.981 230.493 328.125 230.315 328.228 230.082C328.34 229.839 328.447 229.513 328.55 229.102H329.474V239H328.242ZM336.98 228.99C337.615 228.99 338.142 229.135 338.562 229.424C338.982 229.704 339.314 230.087 339.556 230.572C339.799 231.057 339.972 231.608 340.074 232.224C340.177 232.831 340.228 233.461 340.228 234.114C340.228 234.767 340.177 235.402 340.074 236.018C339.972 236.625 339.799 237.175 339.556 237.67C339.314 238.155 338.982 238.543 338.562 238.832C338.142 239.112 337.615 239.252 336.98 239.252C336.346 239.252 335.818 239.112 335.398 238.832C334.978 238.543 334.647 238.155 334.404 237.67C334.162 237.175 333.989 236.625 333.886 236.018C333.784 235.402 333.732 234.767 333.732 234.114C333.732 233.461 333.784 232.831 333.886 232.224C333.989 231.608 334.162 231.057 334.404 230.572C334.647 230.087 334.978 229.704 335.398 229.424C335.818 229.135 336.346 228.99 336.98 228.99ZM336.98 230.054C336.262 230.054 335.73 230.423 335.384 231.16C335.048 231.897 334.88 232.882 334.88 234.114C334.88 234.711 334.918 235.257 334.992 235.752C335.076 236.237 335.198 236.653 335.356 236.998L338.114 230.516C337.806 230.208 337.428 230.054 336.98 230.054ZM339.08 234.114C339.08 233.573 339.048 233.078 338.982 232.63C338.917 232.182 338.819 231.785 338.688 231.44L335.986 237.852C336.266 238.076 336.598 238.188 336.98 238.188C337.466 238.188 337.862 238.02 338.17 237.684C338.478 237.348 338.707 236.877 338.856 236.27C339.006 235.654 339.08 234.935 339.08 234.114Z" fill="rgb(var(--colour-main))"></path><rect x="18" y="180" width="342" height="36" fill="rgb(var(--colour-negative))"></rect><rect x="18" y="180" width="342" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="36" y="192" width="12" height="12" rx="6" fill="rgb(var(--colour-negative))"></rect><path d="M36 198C36 194.686 38.6863 192 42 192V192V198H36V198Z" fill="#5AC93B"></path><path d="M55.736 193.214H57.038V201.852H61.7V203H55.736V193.214ZM66.4063 194.614V193.214H67.8063V194.614H66.4063ZM67.6803 195.664V202.048H69.9343V203H64.0123V202.048H66.5323V196.616H64.0123V195.664H67.6803ZM72.7226 203V195.664H73.8006V196.882C74.0899 196.434 74.4213 196.084 74.7946 195.832C75.1773 195.58 75.6579 195.454 76.2366 195.454C76.6659 195.454 77.0533 195.529 77.3986 195.678C77.7533 195.818 78.0333 196.037 78.2386 196.336C78.4533 196.625 78.5606 196.999 78.5606 197.456V203H77.3986V197.918C77.3986 197.423 77.2493 197.059 76.9506 196.826C76.6519 196.593 76.2973 196.476 75.8866 196.476C75.4479 196.476 75.0793 196.588 74.7806 196.812C74.4819 197.036 74.2579 197.33 74.1086 197.694C73.9593 198.058 73.8846 198.45 73.8846 198.87V203H72.7226ZM87.4809 200.732C87.3596 201.497 87.0189 202.109 86.4589 202.566C85.9082 203.023 85.2036 203.252 84.3449 203.252C83.6076 203.252 82.9916 203.089 82.4969 202.762C82.0022 202.426 81.6289 201.969 81.3769 201.39C81.1342 200.811 81.0129 200.149 81.0129 199.402C81.0129 198.581 81.1529 197.876 81.4329 197.288C81.7129 196.7 82.1049 196.247 82.6089 195.93C83.1129 195.603 83.7009 195.44 84.3729 195.44C85.1289 195.44 85.7449 195.617 86.2209 195.972C86.7062 196.327 87.0609 196.821 87.2849 197.456C87.5182 198.091 87.6349 198.833 87.6349 199.682H82.2309C82.2496 200.401 82.4362 200.998 82.7909 201.474C83.1456 201.941 83.6776 202.174 84.3869 202.174C85.3482 202.174 85.9876 201.693 86.3049 200.732H87.4809ZM84.3589 196.518C83.7056 196.518 83.2062 196.733 82.8609 197.162C82.5156 197.591 82.3149 198.114 82.2589 198.73H86.3749C86.3749 198.319 86.2909 197.951 86.1229 197.624C85.9642 197.288 85.7356 197.022 85.4369 196.826C85.1382 196.621 84.7789 196.518 84.3589 196.518Z" fill="rgb(var(--colour-main))"></path><path d="M328.242 203V195.902H325.624V194.978C326.203 194.95 326.66 194.913 326.996 194.866C327.341 194.819 327.607 194.735 327.794 194.614C327.981 194.493 328.125 194.315 328.228 194.082C328.34 193.839 328.447 193.513 328.55 193.102H329.474V203H328.242ZM336.98 192.99C337.615 192.99 338.142 193.135 338.562 193.424C338.982 193.704 339.314 194.087 339.556 194.572C339.799 195.057 339.972 195.608 340.074 196.224C340.177 196.831 340.228 197.461 340.228 198.114C340.228 198.767 340.177 199.402 340.074 200.018C339.972 200.625 339.799 201.175 339.556 201.67C339.314 202.155 338.982 202.543 338.562 202.832C338.142 203.112 337.615 203.252 336.98 203.252C336.346 203.252 335.818 203.112 335.398 202.832C334.978 202.543 334.647 202.155 334.404 201.67C334.162 201.175 333.989 200.625 333.886 200.018C333.784 199.402 333.732 198.767 333.732 198.114C333.732 197.461 333.784 196.831 333.886 196.224C333.989 195.608 334.162 195.057 334.404 194.572C334.647 194.087 334.978 193.704 335.398 193.424C335.818 193.135 336.346 192.99 336.98 192.99ZM336.98 194.054C336.262 194.054 335.73 194.423 335.384 195.16C335.048 195.897 334.88 196.882 334.88 198.114C334.88 198.711 334.918 199.257 334.992 199.752C335.076 200.237 335.198 200.653 335.356 200.998L338.114 194.516C337.806 194.208 337.428 194.054 336.98 194.054ZM339.08 198.114C339.08 197.573 339.048 197.078 338.982 196.63C338.917 196.182 338.819 195.785 338.688 195.44L335.986 201.852C336.266 202.076 336.598 202.188 336.98 202.188C337.466 202.188 337.862 202.02 338.17 201.684C338.478 201.348 338.707 200.877 338.856 200.27C339.006 199.654 339.08 198.935 339.08 198.114Z" fill="rgb(var(--colour-main))"></path><rect x="18" y="342" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="36" cy="360" r="6" fill="#5AC93B"></circle><path d="M37.82 363.495H38.79L36.59 356.505H35.42L33.21 363.495H34.17L34.79 361.405H37.2L37.82 363.495ZM35.02 360.625L35.99 357.345L36.97 360.625H35.02Z" fill="rgb(var(--colour-negative))"></path><path d="M54.874 365L54.006 362.074H50.632L49.764 365H48.42L51.514 355.214H53.152L56.232 365H54.874ZM50.954 360.982H53.684L52.312 356.39L50.954 360.982ZM63.6683 359.666H62.4503C62.441 359.302 62.301 359.013 62.0303 358.798C61.769 358.583 61.419 358.476 60.9803 358.476C60.5043 358.476 60.117 358.574 59.8183 358.77C59.529 358.966 59.3843 359.227 59.3843 359.554C59.3843 359.815 59.473 360.025 59.6503 360.184C59.8276 360.343 60.089 360.469 60.4343 360.562L62.1003 360.996C62.7163 361.155 63.1783 361.393 63.4863 361.71C63.8036 362.018 63.9623 362.433 63.9623 362.956C63.9623 363.665 63.701 364.225 63.1783 364.636C62.6556 365.047 61.937 365.252 61.0223 365.252C59.0996 365.252 58.0963 364.426 58.0123 362.774H59.2443C59.3003 363.269 59.4776 363.633 59.7763 363.866C60.0843 364.099 60.509 364.216 61.0503 364.216C61.573 364.216 61.9883 364.123 62.2963 363.936C62.6136 363.749 62.7723 363.483 62.7723 363.138C62.7723 362.821 62.6883 362.583 62.5203 362.424C62.3523 362.265 62.0676 362.135 61.6663 362.032L60.1263 361.626C59.4636 361.449 58.9736 361.211 58.6563 360.912C58.3483 360.604 58.1943 360.17 58.1943 359.61C58.1943 358.947 58.4463 358.42 58.9503 358.028C59.4636 357.636 60.1496 357.44 61.0083 357.44C61.867 357.44 62.5203 357.641 62.9683 358.042C63.4256 358.434 63.659 358.975 63.6683 359.666ZM72.3226 359.666H71.1046C71.0953 359.302 70.9553 359.013 70.6846 358.798C70.4233 358.583 70.0733 358.476 69.6346 358.476C69.1586 358.476 68.7713 358.574 68.4726 358.77C68.1833 358.966 68.0386 359.227 68.0386 359.554C68.0386 359.815 68.1273 360.025 68.3046 360.184C68.4819 360.343 68.7433 360.469 69.0886 360.562L70.7546 360.996C71.3706 361.155 71.8326 361.393 72.1406 361.71C72.4579 362.018 72.6166 362.433 72.6166 362.956C72.6166 363.665 72.3553 364.225 71.8326 364.636C71.3099 365.047 70.5913 365.252 69.6766 365.252C67.7539 365.252 66.7506 364.426 66.6666 362.774H67.8986C67.9546 363.269 68.1319 363.633 68.4306 363.866C68.7386 364.099 69.1633 364.216 69.7046 364.216C70.2273 364.216 70.6426 364.123 70.9506 363.936C71.2679 363.749 71.4266 363.483 71.4266 363.138C71.4266 362.821 71.3426 362.583 71.1746 362.424C71.0066 362.265 70.7219 362.135 70.3206 362.032L68.7806 361.626C68.1179 361.449 67.6279 361.211 67.3106 360.912C67.0026 360.604 66.8486 360.17 66.8486 359.61C66.8486 358.947 67.1006 358.42 67.6046 358.028C68.1179 357.636 68.8039 357.44 69.6626 357.44C70.5213 357.44 71.1746 357.641 71.6226 358.042C72.0799 358.434 72.3133 358.975 72.3226 359.666ZM81.4809 362.732C81.3596 363.497 81.0189 364.109 80.4589 364.566C79.9082 365.023 79.2036 365.252 78.3449 365.252C77.6076 365.252 76.9916 365.089 76.4969 364.762C76.0022 364.426 75.6289 363.969 75.3769 363.39C75.1342 362.811 75.0129 362.149 75.0129 361.402C75.0129 360.581 75.1529 359.876 75.4329 359.288C75.7129 358.7 76.1049 358.247 76.6089 357.93C77.1129 357.603 77.7009 357.44 78.3729 357.44C79.1289 357.44 79.7449 357.617 80.2209 357.972C80.7062 358.327 81.0609 358.821 81.2849 359.456C81.5182 360.091 81.6349 360.833 81.6349 361.682H76.2309C76.2496 362.401 76.4362 362.998 76.7909 363.474C77.1456 363.941 77.6776 364.174 78.3869 364.174C79.3482 364.174 79.9876 363.693 80.3049 362.732H81.4809ZM78.3589 358.518C77.7056 358.518 77.2062 358.733 76.8609 359.162C76.5156 359.591 76.3149 360.114 76.2589 360.73H80.3749C80.3749 360.319 80.2909 359.951 80.1229 359.624C79.9642 359.288 79.7356 359.022 79.4369 358.826C79.1382 358.621 78.7789 358.518 78.3589 358.518ZM86.9992 357.664H89.8832V358.616H86.9992V362.704C86.9992 363.245 87.1392 363.623 87.4192 363.838C87.6992 364.043 88.1052 364.146 88.6372 364.146C88.8799 364.146 89.1039 364.137 89.3092 364.118C89.5145 364.09 89.7059 364.053 89.8832 364.006V365.028C89.6499 365.093 89.4212 365.135 89.1972 365.154C88.9732 365.182 88.7632 365.196 88.5672 365.196C87.6805 365.196 87.0039 365.014 86.5372 364.65C86.0705 364.286 85.8372 363.707 85.8372 362.914V358.616H83.7232V357.664H85.8372V355.648H86.9992V357.664ZM98.2855 359.666H97.0675C97.0582 359.302 96.9182 359.013 96.6475 358.798C96.3862 358.583 96.0362 358.476 95.5975 358.476C95.1215 358.476 94.7342 358.574 94.4355 358.77C94.1462 358.966 94.0015 359.227 94.0015 359.554C94.0015 359.815 94.0902 360.025 94.2675 360.184C94.4448 360.343 94.7062 360.469 95.0515 360.562L96.7175 360.996C97.3335 361.155 97.7955 361.393 98.1035 361.71C98.4208 362.018 98.5795 362.433 98.5795 362.956C98.5795 363.665 98.3182 364.225 97.7955 364.636C97.2728 365.047 96.5542 365.252 95.6395 365.252C93.7168 365.252 92.7135 364.426 92.6295 362.774H93.8615C93.9175 363.269 94.0948 363.633 94.3935 363.866C94.7015 364.099 95.1262 364.216 95.6675 364.216C96.1902 364.216 96.6055 364.123 96.9135 363.936C97.2308 363.749 97.3895 363.483 97.3895 363.138C97.3895 362.821 97.3055 362.583 97.1375 362.424C96.9695 362.265 96.6848 362.135 96.2835 362.032L94.7435 361.626C94.0808 361.449 93.5908 361.211 93.2735 360.912C92.9655 360.604 92.8115 360.17 92.8115 359.61C92.8115 358.947 93.0635 358.42 93.5675 358.028C94.0808 357.636 94.7668 357.44 95.6255 357.44C96.4842 357.44 97.1375 357.641 97.5855 358.042C98.0428 358.434 98.2762 358.975 98.2855 359.666Z" fill="rgb(var(--colour-main))"></path><path d="M163.933 365V357.902H161.315V356.978C161.894 356.95 162.351 356.913 162.687 356.866C163.033 356.819 163.299 356.735 163.485 356.614C163.672 356.493 163.817 356.315 163.919 356.082C164.031 355.839 164.139 355.513 164.241 355.102H165.165V365H163.933ZM172.672 354.99C173.306 354.99 173.834 355.135 174.254 355.424C174.674 355.704 175.005 356.087 175.248 356.572C175.49 357.057 175.663 357.608 175.766 358.224C175.868 358.831 175.92 359.461 175.92 360.114C175.92 360.767 175.868 361.402 175.766 362.018C175.663 362.625 175.49 363.175 175.248 363.67C175.005 364.155 174.674 364.543 174.254 364.832C173.834 365.112 173.306 365.252 172.672 365.252C172.037 365.252 171.51 365.112 171.09 364.832C170.67 364.543 170.338 364.155 170.096 363.67C169.853 363.175 169.68 362.625 169.578 362.018C169.475 361.402 169.424 360.767 169.424 360.114C169.424 359.461 169.475 358.831 169.578 358.224C169.68 357.608 169.853 357.057 170.096 356.572C170.338 356.087 170.67 355.704 171.09 355.424C171.51 355.135 172.037 354.99 172.672 354.99ZM172.672 356.054C171.953 356.054 171.421 356.423 171.076 357.16C170.74 357.897 170.572 358.882 170.572 360.114C170.572 360.711 170.609 361.257 170.684 361.752C170.768 362.237 170.889 362.653 171.048 362.998L173.806 356.516C173.498 356.208 173.12 356.054 172.672 356.054ZM174.772 360.114C174.772 359.573 174.739 359.078 174.674 358.63C174.608 358.182 174.51 357.785 174.38 357.44L171.678 363.852C171.958 364.076 172.289 364.188 172.672 364.188C173.157 364.188 173.554 364.02 173.862 363.684C174.17 363.348 174.398 362.877 174.548 362.27C174.697 361.654 174.772 360.935 174.772 360.114Z" fill="rgb(var(--colour-main))"></path><rect x="189" y="342" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="207" cy="360" r="6" fill="rgb(var(--colour-income-blue))"></circle><path d="M205.045 363.495H208.955V362.715H207.465V357.285H208.955V356.505H205.045V357.285H206.525V362.715H205.045V363.495Z" fill="rgb(var(--colour-main))"></path><path d="M220.596 365V363.908H222.668V356.306H220.596V355.214H226.07V356.306H223.984V363.908H226.07V365H220.596ZM229.068 365V357.664H230.146V358.882C230.436 358.434 230.767 358.084 231.14 357.832C231.523 357.58 232.004 357.454 232.582 357.454C233.012 357.454 233.399 357.529 233.744 357.678C234.099 357.818 234.379 358.037 234.584 358.336C234.799 358.625 234.906 358.999 234.906 359.456V365H233.744V359.918C233.744 359.423 233.595 359.059 233.296 358.826C232.998 358.593 232.643 358.476 232.232 358.476C231.794 358.476 231.425 358.588 231.126 358.812C230.828 359.036 230.604 359.33 230.454 359.694C230.305 360.058 230.23 360.45 230.23 360.87V365H229.068ZM243.771 360.086H242.595C242.529 359.601 242.343 359.218 242.035 358.938C241.727 358.658 241.316 358.518 240.803 358.518C240.299 358.518 239.893 358.658 239.585 358.938C239.277 359.218 239.053 359.582 238.913 360.03C238.773 360.469 238.703 360.931 238.703 361.416C238.703 361.901 238.777 362.354 238.927 362.774C239.076 363.194 239.309 363.535 239.627 363.796C239.944 364.048 240.345 364.174 240.831 364.174C241.867 364.174 242.483 363.595 242.679 362.438H243.855C243.78 363.315 243.477 364.006 242.945 364.51C242.422 365.005 241.708 365.252 240.803 365.252C240.093 365.252 239.491 365.084 238.997 364.748C238.502 364.403 238.124 363.941 237.863 363.362C237.611 362.783 237.485 362.135 237.485 361.416C237.485 360.679 237.611 360.011 237.863 359.414C238.115 358.817 238.488 358.341 238.983 357.986C239.477 357.622 240.089 357.44 240.817 357.44C241.713 357.44 242.422 357.687 242.945 358.182C243.477 358.677 243.752 359.311 243.771 360.086ZM249.289 357.44C250.045 357.44 250.666 357.613 251.151 357.958C251.646 358.294 252.01 358.756 252.243 359.344C252.486 359.932 252.607 360.599 252.607 361.346C252.607 362.083 252.486 362.751 252.243 363.348C252.01 363.936 251.646 364.403 251.151 364.748C250.666 365.084 250.045 365.252 249.289 365.252C248.542 365.252 247.922 365.084 247.427 364.748C246.932 364.403 246.564 363.936 246.321 363.348C246.088 362.751 245.971 362.083 245.971 361.346C245.971 360.599 246.088 359.932 246.321 359.344C246.564 358.756 246.932 358.294 247.427 357.958C247.922 357.613 248.542 357.44 249.289 357.44ZM249.289 358.518C248.794 358.518 248.393 358.649 248.085 358.91C247.777 359.171 247.548 359.517 247.399 359.946C247.259 360.375 247.189 360.842 247.189 361.346C247.189 361.841 247.259 362.307 247.399 362.746C247.548 363.175 247.777 363.521 248.085 363.782C248.393 364.043 248.794 364.174 249.289 364.174C249.784 364.174 250.185 364.043 250.493 363.782C250.801 363.521 251.025 363.175 251.165 362.746C251.314 362.307 251.389 361.841 251.389 361.346C251.389 360.842 251.314 360.375 251.165 359.946C251.025 359.517 250.801 359.171 250.493 358.91C250.185 358.649 249.784 358.518 249.289 358.518ZM254.163 365V357.664H255.255V358.42C255.414 358.187 255.633 357.977 255.913 357.79C256.203 357.594 256.543 357.496 256.935 357.496C257.29 357.496 257.598 357.585 257.859 357.762C258.13 357.93 258.321 358.168 258.433 358.476C258.583 358.233 258.802 358.009 259.091 357.804C259.381 357.599 259.731 357.496 260.141 357.496C260.599 357.496 260.977 357.636 261.275 357.916C261.574 358.187 261.723 358.555 261.723 359.022V365H260.575V359.26C260.575 358.999 260.501 358.803 260.351 358.672C260.202 358.541 260.006 358.476 259.763 358.476C259.371 358.476 259.063 358.588 258.839 358.812C258.625 359.027 258.517 359.325 258.517 359.708V365H257.369V359.26C257.369 358.999 257.295 358.803 257.145 358.672C256.996 358.541 256.8 358.476 256.557 358.476C256.165 358.476 255.857 358.588 255.633 358.812C255.419 359.027 255.311 359.325 255.311 359.708V365H254.163ZM269.789 362.732C269.668 363.497 269.327 364.109 268.767 364.566C268.217 365.023 267.512 365.252 266.653 365.252C265.916 365.252 265.3 365.089 264.805 364.762C264.311 364.426 263.937 363.969 263.685 363.39C263.443 362.811 263.321 362.149 263.321 361.402C263.321 360.581 263.461 359.876 263.741 359.288C264.021 358.7 264.413 358.247 264.917 357.93C265.421 357.603 266.009 357.44 266.681 357.44C267.437 357.44 268.053 357.617 268.529 357.972C269.015 358.327 269.369 358.821 269.593 359.456C269.827 360.091 269.943 360.833 269.943 361.682H264.539C264.558 362.401 264.745 362.998 265.099 363.474C265.454 363.941 265.986 364.174 266.695 364.174C267.657 364.174 268.296 363.693 268.613 362.732H269.789ZM266.667 358.518C266.014 358.518 265.515 358.733 265.169 359.162C264.824 359.591 264.623 360.114 264.567 360.73H268.683C268.683 360.319 268.599 359.951 268.431 359.624C268.273 359.288 268.044 359.022 267.745 358.826C267.447 358.621 267.087 358.518 266.667 358.518Z" fill="rgb(var(--colour-main-500))"></path><path d="M343.672 354.99C344.306 354.99 344.834 355.135 345.254 355.424C345.674 355.704 346.005 356.087 346.248 356.572C346.49 357.057 346.663 357.608 346.766 358.224C346.868 358.831 346.92 359.461 346.92 360.114C346.92 360.767 346.868 361.402 346.766 362.018C346.663 362.625 346.49 363.175 346.248 363.67C346.005 364.155 345.674 364.543 345.254 364.832C344.834 365.112 344.306 365.252 343.672 365.252C343.037 365.252 342.51 365.112 342.09 364.832C341.67 364.543 341.338 364.155 341.096 363.67C340.853 363.175 340.68 362.625 340.578 362.018C340.475 361.402 340.424 360.767 340.424 360.114C340.424 359.461 340.475 358.831 340.578 358.224C340.68 357.608 340.853 357.057 341.096 356.572C341.338 356.087 341.67 355.704 342.09 355.424C342.51 355.135 343.037 354.99 343.672 354.99ZM343.672 356.054C342.953 356.054 342.421 356.423 342.076 357.16C341.74 357.897 341.572 358.882 341.572 360.114C341.572 360.711 341.609 361.257 341.684 361.752C341.768 362.237 341.889 362.653 342.048 362.998L344.806 356.516C344.498 356.208 344.12 356.054 343.672 356.054ZM345.772 360.114C345.772 359.573 345.739 359.078 345.674 358.63C345.608 358.182 345.51 357.785 345.38 357.44L342.678 363.852C342.958 364.076 343.289 364.188 343.672 364.188C344.157 364.188 344.554 364.02 344.862 363.684C345.17 363.348 345.398 362.877 345.548 362.27C345.697 361.654 345.772 360.935 345.772 360.114Z" fill="rgb(var(--colour-main-500))"></path><rect x="189" y="378" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="207" cy="396" r="6" fill="#FFE000"></circle><path d="M208.8 396.325V395.505H205.8V393.325H208.95V392.505H204.87V399.495H209.13V398.675H205.8V396.325H208.8Z" fill="rgb(var(--colour-main))"></path><path d="M226.084 396.562H221.884V399.852H226.546V401H220.582V391.214H226.294V392.362H221.884V395.414H226.084V396.562ZM235.102 393.664L232.638 397.206L235.172 401H233.786L231.98 398.214L230.146 401H228.788L231.378 397.262L228.928 393.664H230.3L232.022 396.296L233.772 393.664H235.102ZM238.703 404.052H237.527V393.664H238.605V394.756C239.146 393.879 239.925 393.44 240.943 393.44C241.671 393.44 242.263 393.627 242.721 394C243.187 394.364 243.533 394.849 243.757 395.456C243.981 396.053 244.093 396.707 244.093 397.416C244.093 398.116 243.976 398.76 243.743 399.348C243.519 399.927 243.173 400.389 242.707 400.734C242.24 401.079 241.657 401.252 240.957 401.252C240.481 401.252 240.061 401.168 239.697 401C239.342 400.823 239.011 400.543 238.703 400.16V404.052ZM240.747 394.532C240.261 394.532 239.869 394.667 239.571 394.938C239.272 395.209 239.053 395.559 238.913 395.988C238.773 396.417 238.703 396.87 238.703 397.346C238.703 397.822 238.773 398.275 238.913 398.704C239.053 399.133 239.272 399.483 239.571 399.754C239.869 400.025 240.261 400.16 240.747 400.16C241.241 400.16 241.643 400.029 241.951 399.768C242.268 399.497 242.501 399.152 242.651 398.732C242.8 398.303 242.875 397.855 242.875 397.388C242.875 396.893 242.8 396.431 242.651 396.002C242.501 395.563 242.268 395.209 241.951 394.938C241.643 394.667 241.241 394.532 240.747 394.532ZM252.481 398.732C252.36 399.497 252.019 400.109 251.459 400.566C250.908 401.023 250.204 401.252 249.345 401.252C248.608 401.252 247.992 401.089 247.497 400.762C247.002 400.426 246.629 399.969 246.377 399.39C246.134 398.811 246.013 398.149 246.013 397.402C246.013 396.581 246.153 395.876 246.433 395.288C246.713 394.7 247.105 394.247 247.609 393.93C248.113 393.603 248.701 393.44 249.373 393.44C250.129 393.44 250.745 393.617 251.221 393.972C251.706 394.327 252.061 394.821 252.285 395.456C252.518 396.091 252.635 396.833 252.635 397.682H247.231C247.25 398.401 247.436 398.998 247.791 399.474C248.146 399.941 248.678 400.174 249.387 400.174C250.348 400.174 250.988 399.693 251.305 398.732H252.481ZM249.359 394.518C248.706 394.518 248.206 394.733 247.861 395.162C247.516 395.591 247.315 396.114 247.259 396.73H251.375C251.375 396.319 251.291 395.951 251.123 395.624C250.964 395.288 250.736 395.022 250.437 394.826C250.138 394.621 249.779 394.518 249.359 394.518ZM255.031 401V393.664H256.109V394.882C256.399 394.434 256.73 394.084 257.103 393.832C257.486 393.58 257.967 393.454 258.545 393.454C258.975 393.454 259.362 393.529 259.707 393.678C260.062 393.818 260.342 394.037 260.547 394.336C260.762 394.625 260.869 394.999 260.869 395.456V401H259.707V395.918C259.707 395.423 259.558 395.059 259.259 394.826C258.961 394.593 258.606 394.476 258.195 394.476C257.757 394.476 257.388 394.588 257.089 394.812C256.791 395.036 256.567 395.33 256.417 395.694C256.268 396.058 256.193 396.45 256.193 396.87V401H255.031ZM269.285 395.666H268.067C268.058 395.302 267.918 395.013 267.647 394.798C267.386 394.583 267.036 394.476 266.597 394.476C266.121 394.476 265.734 394.574 265.435 394.77C265.146 394.966 265.001 395.227 265.001 395.554C265.001 395.815 265.09 396.025 265.267 396.184C265.445 396.343 265.706 396.469 266.051 396.562L267.717 396.996C268.333 397.155 268.795 397.393 269.103 397.71C269.421 398.018 269.579 398.433 269.579 398.956C269.579 399.665 269.318 400.225 268.795 400.636C268.273 401.047 267.554 401.252 266.639 401.252C264.717 401.252 263.713 400.426 263.629 398.774H264.861C264.917 399.269 265.095 399.633 265.393 399.866C265.701 400.099 266.126 400.216 266.667 400.216C267.19 400.216 267.605 400.123 267.913 399.936C268.231 399.749 268.389 399.483 268.389 399.138C268.389 398.821 268.305 398.583 268.137 398.424C267.969 398.265 267.685 398.135 267.283 398.032L265.743 397.626C265.081 397.449 264.591 397.211 264.273 396.912C263.965 396.604 263.811 396.17 263.811 395.61C263.811 394.947 264.063 394.42 264.567 394.028C265.081 393.636 265.767 393.44 266.625 393.44C267.484 393.44 268.137 393.641 268.585 394.042C269.043 394.434 269.276 394.975 269.285 395.666ZM278.444 398.732C278.322 399.497 277.982 400.109 277.422 400.566C276.871 401.023 276.166 401.252 275.308 401.252C274.57 401.252 273.954 401.089 273.46 400.762C272.965 400.426 272.592 399.969 272.34 399.39C272.097 398.811 271.976 398.149 271.976 397.402C271.976 396.581 272.116 395.876 272.396 395.288C272.676 394.7 273.068 394.247 273.572 393.93C274.076 393.603 274.664 393.44 275.336 393.44C276.092 393.44 276.708 393.617 277.184 393.972C277.669 394.327 278.024 394.821 278.248 395.456C278.481 396.091 278.598 396.833 278.598 397.682H273.194C273.212 398.401 273.399 398.998 273.754 399.474C274.108 399.941 274.64 400.174 275.35 400.174C276.311 400.174 276.95 399.693 277.268 398.732H278.444ZM275.322 394.518C274.668 394.518 274.169 394.733 273.824 395.162C273.478 395.591 273.278 396.114 273.222 396.73H277.338C277.338 396.319 277.254 395.951 277.086 395.624C276.927 395.288 276.698 395.022 276.4 394.826C276.101 394.621 275.742 394.518 275.322 394.518Z" fill="rgb(var(--colour-main-500))"></path><path d="M343.672 390.99C344.306 390.99 344.834 391.135 345.254 391.424C345.674 391.704 346.005 392.087 346.248 392.572C346.49 393.057 346.663 393.608 346.766 394.224C346.868 394.831 346.92 395.461 346.92 396.114C346.92 396.767 346.868 397.402 346.766 398.018C346.663 398.625 346.49 399.175 346.248 399.67C346.005 400.155 345.674 400.543 345.254 400.832C344.834 401.112 344.306 401.252 343.672 401.252C343.037 401.252 342.51 401.112 342.09 400.832C341.67 400.543 341.338 400.155 341.096 399.67C340.853 399.175 340.68 398.625 340.578 398.018C340.475 397.402 340.424 396.767 340.424 396.114C340.424 395.461 340.475 394.831 340.578 394.224C340.68 393.608 340.853 393.057 341.096 392.572C341.338 392.087 341.67 391.704 342.09 391.424C342.51 391.135 343.037 390.99 343.672 390.99ZM343.672 392.054C342.953 392.054 342.421 392.423 342.076 393.16C341.74 393.897 341.572 394.882 341.572 396.114C341.572 396.711 341.609 397.257 341.684 397.752C341.768 398.237 341.889 398.653 342.048 398.998L344.806 392.516C344.498 392.208 344.12 392.054 343.672 392.054ZM345.772 396.114C345.772 395.573 345.739 395.078 345.674 394.63C345.608 394.182 345.51 393.785 345.38 393.44L342.678 399.852C342.958 400.076 343.289 400.188 343.672 400.188C344.157 400.188 344.554 400.02 344.862 399.684C345.17 399.348 345.398 398.877 345.548 398.27C345.697 397.654 345.772 396.935 345.772 396.114Z" fill="rgb(var(--colour-main-500))"></path><rect x="18" y="378" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="36" cy="396" r="6" fill="#EC3425"></circle><path d="M34.1 392.505V399.495H38.36V398.675H35.03V392.505H34.1Z" fill="rgb(var(--colour-negative))"></path><path d="M49.736 391.214H51.038V399.852H55.7V401H49.736V391.214ZM60.4063 392.614V391.214H61.8063V392.614H60.4063ZM61.6803 393.664V400.048H63.9343V401H58.0123V400.048H60.5323V394.616H58.0123V393.664H61.6803ZM73.2746 400.23V401.112C72.9853 401.196 72.7519 401.238 72.5746 401.238C71.7906 401.238 71.3566 400.869 71.2726 400.132C70.8619 400.533 70.4606 400.823 70.0686 401C69.6766 401.168 69.2473 401.252 68.7806 401.252C68.0713 401.252 67.4926 401.065 67.0446 400.692C66.6059 400.309 66.3866 399.777 66.3866 399.096C66.3866 398.592 66.4939 398.191 66.7086 397.892C66.9233 397.584 67.1846 397.355 67.4926 397.206C67.8099 397.047 68.1086 396.945 68.3886 396.898C68.5193 396.879 68.7199 396.851 68.9906 396.814C69.2613 396.767 69.6019 396.716 70.0126 396.66C70.4793 396.595 70.8013 396.506 70.9786 396.394C71.1653 396.282 71.2586 396.109 71.2586 395.876V395.624C71.2586 394.896 70.6986 394.532 69.5786 394.532C69.0373 394.532 68.6266 394.639 68.3466 394.854C68.0759 395.059 67.9173 395.386 67.8706 395.834H66.6946C66.7133 394.985 66.9886 394.378 67.5206 394.014C68.0619 393.641 68.7666 393.454 69.6346 393.454C70.5399 393.454 71.2259 393.627 71.6926 393.972C72.1593 394.308 72.3926 394.803 72.3926 395.456V399.684C72.3926 400.067 72.6026 400.258 73.0226 400.258C73.0973 400.258 73.1813 400.249 73.2746 400.23ZM71.2586 398.452V397.29C71.0159 397.402 70.7126 397.491 70.3486 397.556C69.9939 397.621 69.6626 397.673 69.3546 397.71C68.8133 397.775 68.3793 397.901 68.0526 398.088C67.7353 398.275 67.5766 398.601 67.5766 399.068C67.5766 399.432 67.7073 399.717 67.9686 399.922C68.2393 400.127 68.6079 400.23 69.0746 400.23C69.4199 400.23 69.7559 400.155 70.0826 400.006C70.4186 399.847 70.6986 399.633 70.9226 399.362C71.1466 399.091 71.2586 398.788 71.2586 398.452ZM75.1809 401V390.794H76.3429V394.644C76.8749 393.841 77.6309 393.44 78.6109 393.44C79.3296 393.44 79.9176 393.613 80.3749 393.958C80.8416 394.294 81.1869 394.751 81.4109 395.33C81.6349 395.909 81.7469 396.553 81.7469 397.262C81.7469 398.009 81.6256 398.685 81.3829 399.292C81.1402 399.899 80.7809 400.379 80.3049 400.734C79.8382 401.079 79.2549 401.252 78.5549 401.252C77.5562 401.252 76.7816 400.832 76.2309 399.992V401H75.1809ZM78.4009 394.532C77.9062 394.532 77.5049 394.672 77.1969 394.952C76.8982 395.232 76.6789 395.591 76.5389 396.03C76.4082 396.459 76.3429 396.912 76.3429 397.388C76.3429 397.845 76.4082 398.289 76.5389 398.718C76.6789 399.138 76.8982 399.483 77.1969 399.754C77.5049 400.025 77.9062 400.16 78.4009 400.16C78.8956 400.16 79.2969 400.029 79.6049 399.768C79.9222 399.507 80.1556 399.166 80.3049 398.746C80.4636 398.317 80.5429 397.864 80.5429 397.388C80.5429 396.875 80.4636 396.403 80.3049 395.974C80.1556 395.545 79.9222 395.199 79.6049 394.938C79.2876 394.667 78.8862 394.532 78.4009 394.532ZM86.3692 392.614V391.214H87.7692V392.614H86.3692ZM87.6432 393.664V400.048H89.8972V401H83.9752V400.048H86.4952V394.616H83.9752V393.664H87.6432ZM96.5775 390.794V400.048H98.8315V401H92.9095V400.048H95.4435V391.746H92.9095V390.794H96.5775ZM103.678 392.614V391.214H105.078V392.614H103.678ZM104.952 393.664V400.048H107.206V401H101.284V400.048H103.804V394.616H101.284V393.664H104.952ZM112.962 393.664H115.846V394.616H112.962V398.704C112.962 399.245 113.102 399.623 113.382 399.838C113.662 400.043 114.068 400.146 114.6 400.146C114.843 400.146 115.067 400.137 115.272 400.118C115.477 400.09 115.669 400.053 115.846 400.006V401.028C115.613 401.093 115.384 401.135 115.16 401.154C114.936 401.182 114.726 401.196 114.53 401.196C113.643 401.196 112.967 401.014 112.5 400.65C112.033 400.286 111.8 399.707 111.8 398.914V394.616H109.686V393.664H111.8V391.648H112.962V393.664ZM120.986 392.614V391.214H122.386V392.614H120.986ZM122.26 393.664V400.048H124.514V401H118.592V400.048H121.112V394.616H118.592V393.664H122.26ZM133.407 398.732C133.285 399.497 132.945 400.109 132.385 400.566C131.834 401.023 131.129 401.252 130.271 401.252C129.533 401.252 128.917 401.089 128.423 400.762C127.928 400.426 127.555 399.969 127.303 399.39C127.06 398.811 126.939 398.149 126.939 397.402C126.939 396.581 127.079 395.876 127.359 395.288C127.639 394.7 128.031 394.247 128.535 393.93C129.039 393.603 129.627 393.44 130.299 393.44C131.055 393.44 131.671 393.617 132.147 393.972C132.632 394.327 132.987 394.821 133.211 395.456C133.444 396.091 133.561 396.833 133.561 397.682H128.157C128.175 398.401 128.362 398.998 128.717 399.474C129.071 399.941 129.603 400.174 130.313 400.174C131.274 400.174 131.913 399.693 132.231 398.732H133.407ZM130.285 394.518C129.631 394.518 129.132 394.733 128.787 395.162C128.441 395.591 128.241 396.114 128.185 396.73H132.301C132.301 396.319 132.217 395.951 132.049 395.624C131.89 395.288 131.661 395.022 131.363 394.826C131.064 394.621 130.705 394.518 130.285 394.518ZM141.557 395.666H140.339C140.33 395.302 140.19 395.013 139.919 394.798C139.658 394.583 139.308 394.476 138.869 394.476C138.393 394.476 138.006 394.574 137.707 394.77C137.418 394.966 137.273 395.227 137.273 395.554C137.273 395.815 137.362 396.025 137.539 396.184C137.716 396.343 137.978 396.469 138.323 396.562L139.989 396.996C140.605 397.155 141.067 397.393 141.375 397.71C141.692 398.018 141.851 398.433 141.851 398.956C141.851 399.665 141.59 400.225 141.067 400.636C140.544 401.047 139.826 401.252 138.911 401.252C136.988 401.252 135.985 400.426 135.901 398.774H137.133C137.189 399.269 137.366 399.633 137.665 399.866C137.973 400.099 138.398 400.216 138.939 400.216C139.462 400.216 139.877 400.123 140.185 399.936C140.502 399.749 140.661 399.483 140.661 399.138C140.661 398.821 140.577 398.583 140.409 398.424C140.241 398.265 139.956 398.135 139.555 398.032L138.015 397.626C137.352 397.449 136.862 397.211 136.545 396.912C136.237 396.604 136.083 396.17 136.083 395.61C136.083 394.947 136.335 394.42 136.839 394.028C137.352 393.636 138.038 393.44 138.897 393.44C139.756 393.44 140.409 393.641 140.857 394.042C141.314 394.434 141.548 394.975 141.557 395.666Z" fill="rgb(var(--colour-main))"></path><path d="M163.933 401V393.902H161.315V392.978C161.894 392.95 162.351 392.913 162.687 392.866C163.033 392.819 163.299 392.735 163.485 392.614C163.672 392.493 163.817 392.315 163.919 392.082C164.031 391.839 164.139 391.513 164.241 391.102H165.165V401H163.933ZM172.672 390.99C173.306 390.99 173.834 391.135 174.254 391.424C174.674 391.704 175.005 392.087 175.248 392.572C175.49 393.057 175.663 393.608 175.766 394.224C175.868 394.831 175.92 395.461 175.92 396.114C175.92 396.767 175.868 397.402 175.766 398.018C175.663 398.625 175.49 399.175 175.248 399.67C175.005 400.155 174.674 400.543 174.254 400.832C173.834 401.112 173.306 401.252 172.672 401.252C172.037 401.252 171.51 401.112 171.09 400.832C170.67 400.543 170.338 400.155 170.096 399.67C169.853 399.175 169.68 398.625 169.578 398.018C169.475 397.402 169.424 396.767 169.424 396.114C169.424 395.461 169.475 394.831 169.578 394.224C169.68 393.608 169.853 393.057 170.096 392.572C170.338 392.087 170.67 391.704 171.09 391.424C171.51 391.135 172.037 390.99 172.672 390.99ZM172.672 392.054C171.953 392.054 171.421 392.423 171.076 393.16C170.74 393.897 170.572 394.882 170.572 396.114C170.572 396.711 170.609 397.257 170.684 397.752C170.768 398.237 170.889 398.653 171.048 398.998L173.806 392.516C173.498 392.208 173.12 392.054 172.672 392.054ZM174.772 396.114C174.772 395.573 174.739 395.078 174.674 394.63C174.608 394.182 174.51 393.785 174.38 393.44L171.678 399.852C171.958 400.076 172.289 400.188 172.672 400.188C173.157 400.188 173.554 400.02 173.862 399.684C174.17 399.348 174.398 398.877 174.548 398.27C174.697 397.654 174.772 396.935 174.772 396.114Z" fill="rgb(var(--colour-main))"></path><path d="M25.084 108.562H20.884V111.852H25.546V113H19.582V103.214H25.294V104.362H20.884V107.414H25.084V108.562ZM28.0683 113V105.664H29.1463V106.882C29.7203 105.986 30.4203 105.454 31.5823 105.454C32.8563 105.454 33.9063 106.098 33.9063 107.456V113H32.7443V107.918C32.7443 106.938 32.0443 106.476 31.2323 106.476C29.9163 106.476 29.2303 107.61 29.2303 108.87V113H28.0683ZM39.6906 105.664H42.5746V106.616H39.6906V110.704C39.6906 111.782 40.2646 112.146 41.3286 112.146C41.8046 112.146 42.2246 112.104 42.5746 112.006V113.028C42.1126 113.168 41.6506 113.196 41.2586 113.196C39.4806 113.196 38.5286 112.51 38.5286 110.914V106.616H36.4146V105.664H38.5286V103.648H39.6906V105.664ZM45.6989 113V105.664H46.7769V107.246C47.2669 106.196 48.2049 105.454 49.4089 105.454C51.0889 105.454 51.9569 106.378 52.0969 107.834H50.9349C50.7669 106.952 50.2909 106.476 49.2969 106.476C47.8269 106.476 46.8749 107.722 46.8749 109.444V113H45.6989ZM56.9992 114.54C56.6212 115.548 55.9072 116.052 54.9972 116.052C54.6472 116.052 54.3392 116.01 54.0452 115.912V114.82C54.3532 114.89 54.6052 114.904 54.8432 114.904C55.3752 114.904 55.6692 114.708 55.8792 114.19L56.3272 113.112L53.6112 105.664H54.8432L56.9852 111.614L59.0992 105.664H60.3032L56.9992 114.54Z" fill="rgb(var(--colour-main-500))"></path><path d="M24.874 329L24.006 326.074H20.632L19.764 329H18.42L21.514 319.214H23.152L26.232 329H24.874ZM20.954 324.982H23.684L22.312 320.39L20.954 324.982ZM34.1163 324.086H32.9403C32.8143 323.12 32.1703 322.518 31.1483 322.518C29.6363 322.518 29.0483 323.96 29.0483 325.416C29.0483 326.872 29.7063 328.174 31.1763 328.174C32.1983 328.174 32.8283 327.6 33.0243 326.438H34.2003C34.0463 328.202 32.9543 329.252 31.1483 329.252C29.0063 329.252 27.8303 327.572 27.8303 325.416C27.8303 323.218 28.9783 321.44 31.1623 321.44C32.9543 321.44 34.0743 322.532 34.1163 324.086ZM42.7706 324.086H41.5946C41.4686 323.12 40.8246 322.518 39.8026 322.518C38.2906 322.518 37.7026 323.96 37.7026 325.416C37.7026 326.872 38.3606 328.174 39.8306 328.174C40.8526 328.174 41.4826 327.6 41.6786 326.438H42.8546C42.7006 328.202 41.6086 329.252 39.8026 329.252C37.6606 329.252 36.4846 327.572 36.4846 325.416C36.4846 323.218 37.6326 321.44 39.8166 321.44C41.6086 321.44 42.7286 322.532 42.7706 324.086ZM48.2889 321.44C50.5429 321.44 51.6069 323.12 51.6069 325.346C51.6069 327.572 50.5429 329.252 48.2889 329.252C46.0349 329.252 44.9709 327.572 44.9709 325.346C44.9709 323.12 46.0349 321.44 48.2889 321.44ZM48.2889 322.518C46.8049 322.518 46.1889 323.848 46.1889 325.346C46.1889 326.844 46.8049 328.174 48.2889 328.174C49.7729 328.174 50.3889 326.844 50.3889 325.346C50.3889 323.848 49.7729 322.518 48.2889 322.518ZM59.8692 321.664V329H58.8192V327.908C58.1472 328.874 57.4472 329.252 56.3692 329.252C55.7392 329.252 55.2072 329.112 54.7872 328.818C54.2832 328.454 54.0312 327.936 54.0312 327.25V321.664H55.1932V326.788C55.1932 327.278 55.3612 327.656 55.6832 327.908C55.9492 328.118 56.2992 328.23 56.7052 328.23C57.2512 328.23 57.7132 328.034 58.0912 327.628C58.4972 327.194 58.7072 326.564 58.7072 325.738V321.664H59.8692ZM62.6855 329V321.664H63.7635V322.882C64.3375 321.986 65.0375 321.454 66.1995 321.454C67.4735 321.454 68.5235 322.098 68.5235 323.456V329H67.3615V323.918C67.3615 322.938 66.6615 322.476 65.8495 322.476C64.5335 322.476 63.8475 323.61 63.8475 324.87V329H62.6855ZM74.3078 321.664H77.1918V322.616H74.3078V326.704C74.3078 327.782 74.8818 328.146 75.9458 328.146C76.4218 328.146 76.8418 328.104 77.1918 328.006V329.028C76.7298 329.168 76.2678 329.196 75.8758 329.196C74.0978 329.196 73.1458 328.51 73.1458 326.914V322.616H71.0318V321.664H73.1458V319.648H74.3078V321.664ZM82.3321 320.614V319.214H83.7321V320.614H82.3321ZM83.6061 321.664V328.048H85.8601V329H79.9381V328.048H82.4581V322.616H79.9381V321.664H83.6061ZM88.6484 329V321.664H89.7264V322.882C90.3004 321.986 91.0004 321.454 92.1624 321.454C93.4364 321.454 94.4864 322.098 94.4864 323.456V329H93.3244V323.918C93.3244 322.938 92.6244 322.476 91.8124 322.476C90.4964 322.476 89.8104 323.61 89.8104 324.87V329H88.6484ZM100.033 332.052C98.4367 332.052 97.2327 331.394 97.0367 329.84H98.2547C98.4227 330.666 98.9967 331.072 100.061 331.072C101.531 331.072 102.133 330.344 102.133 328.384V327.964C101.699 328.818 100.915 329.252 99.9487 329.252C97.7787 329.252 96.7567 327.558 96.7567 325.304C96.7567 323.148 97.8207 321.44 99.9067 321.44C100.901 321.44 101.657 321.818 102.161 322.574V321.664H103.323V327.81C103.323 328.832 103.239 329.602 103.071 330.134C102.665 331.408 101.615 332.052 100.033 332.052ZM100.117 328.16C101.587 328.16 102.161 326.746 102.161 325.388C102.161 323.918 101.573 322.532 100.103 322.532C98.7307 322.532 97.9747 323.764 97.9747 325.346C97.9747 326.844 98.6187 328.16 100.117 328.16ZM120.281 324.562H116.081V327.852H120.743V329H114.779V319.214H120.491V320.362H116.081V323.414H120.281V324.562ZM129.286 321.664V332.052H128.124V328.076C127.578 328.916 126.864 329.252 125.856 329.252C123.882 329.252 122.72 327.74 122.72 325.43C122.72 323.204 123.798 321.44 125.912 321.44C126.878 321.44 127.704 321.86 128.25 322.63V321.664H129.286ZM126.08 322.532C124.694 322.532 123.938 323.764 123.938 325.346C123.938 326.844 124.61 328.16 126.08 328.16C127.55 328.16 128.124 326.746 128.124 325.388C128.124 323.932 127.536 322.532 126.08 322.532ZM137.758 321.664V329H136.708V327.908C136.036 328.874 135.336 329.252 134.258 329.252C133.628 329.252 133.096 329.112 132.676 328.818C132.172 328.454 131.92 327.936 131.92 327.25V321.664H133.082V326.788C133.082 327.278 133.25 327.656 133.572 327.908C133.838 328.118 134.188 328.23 134.594 328.23C135.14 328.23 135.602 328.034 135.98 327.628C136.386 327.194 136.596 326.564 136.596 325.738V321.664H137.758ZM147.126 328.23V329.112C146.832 329.196 146.608 329.238 146.426 329.238C145.614 329.238 145.208 328.888 145.124 328.132C144.298 328.944 143.57 329.252 142.632 329.252C141.204 329.252 140.238 328.454 140.238 327.096C140.238 325.584 141.386 325.038 142.24 324.898C142.492 324.856 143.038 324.772 143.864 324.66C144.802 324.534 145.11 324.352 145.11 323.876V323.624C145.11 322.896 144.536 322.532 143.43 322.532C142.352 322.532 141.82 322.938 141.722 323.834H140.546C140.574 322.14 141.75 321.454 143.486 321.454C145.292 321.454 146.244 322.154 146.244 323.456V327.684C146.244 328.062 146.454 328.258 146.874 328.258C146.944 328.258 147.056 328.244 147.126 328.23ZM145.11 326.452V325.29C144.62 325.514 143.822 325.64 143.206 325.71C142.114 325.836 141.428 326.144 141.428 327.068C141.428 327.796 141.988 328.23 142.926 328.23C143.948 328.23 145.11 327.474 145.11 326.452ZM152.196 321.664H155.08V322.616H152.196V326.704C152.196 327.782 152.77 328.146 153.834 328.146C154.31 328.146 154.73 328.104 155.08 328.006V329.028C154.618 329.168 154.156 329.196 153.764 329.196C151.986 329.196 151.034 328.51 151.034 326.914V322.616H148.92V321.664H151.034V319.648H152.196V321.664ZM160.221 320.614V319.214H161.621V320.614H160.221ZM161.495 321.664V328.048H163.749V329H157.827V328.048H160.347V322.616H157.827V321.664H161.495ZM169.449 321.44C171.703 321.44 172.767 323.12 172.767 325.346C172.767 327.572 171.703 329.252 169.449 329.252C167.195 329.252 166.131 327.572 166.131 325.346C166.131 323.12 167.195 321.44 169.449 321.44ZM169.449 322.518C167.965 322.518 167.349 323.848 167.349 325.346C167.349 326.844 167.965 328.174 169.449 328.174C170.933 328.174 171.549 326.844 171.549 325.346C171.549 323.848 170.933 322.518 169.449 322.518ZM175.191 329V321.664H176.269V322.882C176.843 321.986 177.543 321.454 178.705 321.454C179.979 321.454 181.029 322.098 181.029 323.456V329H179.867V323.918C179.867 322.938 179.167 322.476 178.355 322.476C177.039 322.476 176.353 323.61 176.353 324.87V329H175.191Z" fill="rgb(var(--colour-main-500))"></path><rect x="18" y="414" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M37.728 430.042H36.468C36.4493 429.482 36.272 429.02 35.936 428.656C35.6 428.283 35.0913 428.096 34.41 428.096C33.738 428.096 33.2247 428.245 32.87 428.544C32.5247 428.843 32.352 429.211 32.352 429.65C32.352 430.434 32.7953 430.929 33.682 431.134L35.684 431.596C36.4493 431.773 37.028 432.095 37.42 432.562C37.812 433.029 38.008 433.579 38.008 434.214C38.008 434.858 37.8587 435.409 37.56 435.866C37.2707 436.314 36.8647 436.659 36.342 436.902C35.8287 437.135 35.2267 437.252 34.536 437.252C33.3227 437.252 32.394 436.953 31.75 436.356C31.1153 435.749 30.7887 434.923 30.77 433.878H32.03C32.0393 434.531 32.2587 435.063 32.688 435.474C33.1173 435.885 33.7427 436.09 34.564 436.09C35.3013 436.09 35.838 435.931 36.174 435.614C36.5193 435.297 36.692 434.891 36.692 434.396C36.692 433.957 36.5707 433.612 36.328 433.36C36.0947 433.108 35.7353 432.926 35.25 432.814L33.22 432.338C32.5107 432.17 31.9693 431.871 31.596 431.442C31.2227 431.003 31.036 430.448 31.036 429.776C31.036 429.225 31.176 428.745 31.456 428.334C31.736 427.914 32.128 427.587 32.632 427.354C33.1453 427.111 33.752 426.99 34.452 426.99C35.1333 426.99 35.7167 427.116 36.202 427.368C36.6967 427.62 37.0747 427.965 37.336 428.404C37.5973 428.833 37.728 429.319 37.728 429.86V430.042ZM43.0363 429.664H45.9203V430.616H43.0363V434.704C43.0363 435.245 43.1763 435.623 43.4563 435.838C43.7363 436.043 44.1423 436.146 44.6743 436.146C44.917 436.146 45.141 436.137 45.3463 436.118C45.5516 436.09 45.743 436.053 45.9203 436.006V437.028C45.687 437.093 45.4583 437.135 45.2343 437.154C45.0103 437.182 44.8003 437.196 44.6043 437.196C43.7176 437.196 43.041 437.014 42.5743 436.65C42.1076 436.286 41.8743 435.707 41.8743 434.914V430.616H39.7603V429.664H41.8743V427.648H43.0363V429.664ZM55.2746 436.23V437.112C54.9853 437.196 54.7519 437.238 54.5746 437.238C53.7906 437.238 53.3566 436.869 53.2726 436.132C52.8619 436.533 52.4606 436.823 52.0686 437C51.6766 437.168 51.2473 437.252 50.7806 437.252C50.0713 437.252 49.4926 437.065 49.0446 436.692C48.6059 436.309 48.3866 435.777 48.3866 435.096C48.3866 434.592 48.4939 434.191 48.7086 433.892C48.9233 433.584 49.1846 433.355 49.4926 433.206C49.8099 433.047 50.1086 432.945 50.3886 432.898C50.5193 432.879 50.7199 432.851 50.9906 432.814C51.2613 432.767 51.6019 432.716 52.0126 432.66C52.4793 432.595 52.8013 432.506 52.9786 432.394C53.1653 432.282 53.2586 432.109 53.2586 431.876V431.624C53.2586 430.896 52.6986 430.532 51.5786 430.532C51.0373 430.532 50.6266 430.639 50.3466 430.854C50.0759 431.059 49.9173 431.386 49.8706 431.834H48.6946C48.7133 430.985 48.9886 430.378 49.5206 430.014C50.0619 429.641 50.7666 429.454 51.6346 429.454C52.5399 429.454 53.2259 429.627 53.6926 429.972C54.1593 430.308 54.3926 430.803 54.3926 431.456V435.684C54.3926 436.067 54.6026 436.258 55.0226 436.258C55.0973 436.258 55.1813 436.249 55.2746 436.23ZM53.2586 434.452V433.29C53.0159 433.402 52.7126 433.491 52.3486 433.556C51.9939 433.621 51.6626 433.673 51.3546 433.71C50.8133 433.775 50.3793 433.901 50.0526 434.088C49.7353 434.275 49.5766 434.601 49.5766 435.068C49.5766 435.432 49.7073 435.717 49.9686 435.922C50.2393 436.127 50.6079 436.23 51.0746 436.23C51.4199 436.23 51.7559 436.155 52.0826 436.006C52.4186 435.847 52.6986 435.633 52.9226 435.362C53.1466 435.091 53.2586 434.788 53.2586 434.452ZM60.3449 429.664H63.2289V430.616H60.3449V434.704C60.3449 435.245 60.4849 435.623 60.7649 435.838C61.0449 436.043 61.4509 436.146 61.9829 436.146C62.2256 436.146 62.4496 436.137 62.6549 436.118C62.8602 436.09 63.0516 436.053 63.2289 436.006V437.028C62.9956 437.093 62.7669 437.135 62.5429 437.154C62.3189 437.182 62.1089 437.196 61.9129 437.196C61.0262 437.196 60.3496 437.014 59.8829 436.65C59.4162 436.286 59.1829 435.707 59.1829 434.914V430.616H57.0689V429.664H59.1829V427.648H60.3449V429.664ZM72.1352 434.732C72.0139 435.497 71.6732 436.109 71.1132 436.566C70.5625 437.023 69.8579 437.252 68.9992 437.252C68.2619 437.252 67.6459 437.089 67.1512 436.762C66.6565 436.426 66.2832 435.969 66.0312 435.39C65.7885 434.811 65.6672 434.149 65.6672 433.402C65.6672 432.581 65.8072 431.876 66.0872 431.288C66.3672 430.7 66.7592 430.247 67.2632 429.93C67.7672 429.603 68.3552 429.44 69.0272 429.44C69.7832 429.44 70.3992 429.617 70.8752 429.972C71.3605 430.327 71.7152 430.821 71.9392 431.456C72.1725 432.091 72.2892 432.833 72.2892 433.682H66.8852C66.9039 434.401 67.0905 434.998 67.4452 435.474C67.7999 435.941 68.3319 436.174 69.0412 436.174C70.0025 436.174 70.6419 435.693 70.9592 434.732H72.1352ZM69.0132 430.518C68.3599 430.518 67.8605 430.733 67.5152 431.162C67.1699 431.591 66.9692 432.114 66.9132 432.73H71.0292C71.0292 432.319 70.9452 431.951 70.7772 431.624C70.6185 431.288 70.3899 431.022 70.0912 430.826C69.7925 430.621 69.4332 430.518 69.0132 430.518Z" fill="rgb(var(--colour-main))"></path><path d="M172.672 426.99C173.306 426.99 173.834 427.135 174.254 427.424C174.674 427.704 175.005 428.087 175.248 428.572C175.49 429.057 175.663 429.608 175.766 430.224C175.868 430.831 175.92 431.461 175.92 432.114C175.92 432.767 175.868 433.402 175.766 434.018C175.663 434.625 175.49 435.175 175.248 435.67C175.005 436.155 174.674 436.543 174.254 436.832C173.834 437.112 173.306 437.252 172.672 437.252C172.037 437.252 171.51 437.112 171.09 436.832C170.67 436.543 170.338 436.155 170.096 435.67C169.853 435.175 169.68 434.625 169.578 434.018C169.475 433.402 169.424 432.767 169.424 432.114C169.424 431.461 169.475 430.831 169.578 430.224C169.68 429.608 169.853 429.057 170.096 428.572C170.338 428.087 170.67 427.704 171.09 427.424C171.51 427.135 172.037 426.99 172.672 426.99ZM172.672 428.054C171.953 428.054 171.421 428.423 171.076 429.16C170.74 429.897 170.572 430.882 170.572 432.114C170.572 432.711 170.609 433.257 170.684 433.752C170.768 434.237 170.889 434.653 171.048 434.998L173.806 428.516C173.498 428.208 173.12 428.054 172.672 428.054ZM174.772 432.114C174.772 431.573 174.739 431.078 174.674 430.63C174.608 430.182 174.51 429.785 174.38 429.44L171.678 435.852C171.958 436.076 172.289 436.188 172.672 436.188C173.157 436.188 173.554 436.02 173.862 435.684C174.17 435.348 174.398 434.877 174.548 434.27C174.697 433.654 174.772 432.935 174.772 432.114Z" fill="rgb(var(--colour-main))"></path><rect x="189" y="414" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M209.05 429.944H207.72C207.58 429.412 207.361 428.978 207.062 428.642C206.763 428.306 206.301 428.138 205.676 428.138C205.06 428.138 204.561 428.306 204.178 428.642C203.805 428.978 203.534 429.449 203.366 430.056C203.198 430.653 203.114 431.344 203.114 432.128C203.114 433.453 203.333 434.447 203.772 435.11C204.211 435.773 204.845 436.104 205.676 436.104C206.329 436.104 206.815 435.899 207.132 435.488C207.449 435.077 207.678 434.475 207.818 433.682H209.148C209.017 434.867 208.644 435.759 208.028 436.356C207.412 436.953 206.623 437.252 205.662 437.252C204.813 437.252 204.099 437.047 203.52 436.636C202.941 436.216 202.503 435.623 202.204 434.858C201.905 434.093 201.756 433.187 201.756 432.142C201.756 431.442 201.826 430.779 201.966 430.154C202.115 429.529 202.344 428.983 202.652 428.516C202.96 428.04 203.366 427.667 203.87 427.396C204.374 427.125 204.99 426.99 205.718 426.99C206.371 426.99 206.927 427.121 207.384 427.382C207.841 427.643 208.21 427.998 208.49 428.446C208.77 428.885 208.957 429.384 209.05 429.944ZM211.068 437V426.794H212.23V430.756C212.492 430.373 212.804 430.061 213.168 429.818C213.532 429.575 214.004 429.454 214.582 429.454C215.012 429.454 215.399 429.529 215.744 429.678C216.099 429.818 216.379 430.037 216.584 430.336C216.799 430.625 216.906 430.999 216.906 431.456V437H215.744V431.918C215.744 431.423 215.595 431.059 215.296 430.826C214.998 430.593 214.643 430.476 214.232 430.476C213.794 430.476 213.425 430.588 213.126 430.812C212.828 431.036 212.604 431.33 212.454 431.694C212.305 432.058 212.23 432.45 212.23 432.87V437H211.068ZM226.275 436.23V437.112C225.985 437.196 225.752 437.238 225.575 437.238C224.791 437.238 224.357 436.869 224.273 436.132C223.862 436.533 223.461 436.823 223.069 437C222.677 437.168 222.247 437.252 221.781 437.252C221.071 437.252 220.493 437.065 220.045 436.692C219.606 436.309 219.387 435.777 219.387 435.096C219.387 434.592 219.494 434.191 219.709 433.892C219.923 433.584 220.185 433.355 220.493 433.206C220.81 433.047 221.109 432.945 221.389 432.898C221.519 432.879 221.72 432.851 221.991 432.814C222.261 432.767 222.602 432.716 223.013 432.66C223.479 432.595 223.801 432.506 223.979 432.394C224.165 432.282 224.259 432.109 224.259 431.876V431.624C224.259 430.896 223.699 430.532 222.579 430.532C222.037 430.532 221.627 430.639 221.347 430.854C221.076 431.059 220.917 431.386 220.871 431.834H219.695C219.713 430.985 219.989 430.378 220.521 430.014C221.062 429.641 221.767 429.454 222.635 429.454C223.54 429.454 224.226 429.627 224.693 429.972C225.159 430.308 225.393 430.803 225.393 431.456V435.684C225.393 436.067 225.603 436.258 226.023 436.258C226.097 436.258 226.181 436.249 226.275 436.23ZM224.259 434.452V433.29C224.016 433.402 223.713 433.491 223.349 433.556C222.994 433.621 222.663 433.673 222.355 433.71C221.813 433.775 221.379 433.901 221.053 434.088C220.735 434.275 220.577 434.601 220.577 435.068C220.577 435.432 220.707 435.717 220.969 435.922C221.239 436.127 221.608 436.23 222.075 436.23C222.42 436.23 222.756 436.155 223.083 436.006C223.419 435.847 223.699 435.633 223.923 435.362C224.147 435.091 224.259 434.788 224.259 434.452ZM228.377 437V429.664H229.455V430.882C229.744 430.434 230.076 430.084 230.449 429.832C230.832 429.58 231.312 429.454 231.891 429.454C232.32 429.454 232.708 429.529 233.053 429.678C233.408 429.818 233.688 430.037 233.893 430.336C234.108 430.625 234.215 430.999 234.215 431.456V437H233.053V431.918C233.053 431.423 232.904 431.059 232.605 430.826C232.306 430.593 231.952 430.476 231.541 430.476C231.102 430.476 230.734 430.588 230.435 430.812C230.136 431.036 229.912 431.33 229.763 431.694C229.614 432.058 229.539 432.45 229.539 432.87V437H228.377ZM239.761 440.052C238.968 440.052 238.296 439.875 237.745 439.52C237.195 439.175 236.868 438.615 236.765 437.84H237.983C238.151 438.661 238.753 439.072 239.789 439.072C240.527 439.072 241.054 438.867 241.371 438.456C241.698 438.055 241.861 437.364 241.861 436.384V435.964C241.647 436.393 241.348 436.715 240.965 436.93C240.592 437.145 240.163 437.252 239.677 437.252C238.959 437.252 238.361 437.079 237.885 436.734C237.409 436.389 237.055 435.917 236.821 435.32C236.597 434.723 236.485 434.051 236.485 433.304C236.485 432.585 236.602 431.937 236.835 431.358C237.069 430.77 237.419 430.303 237.885 429.958C238.361 429.613 238.945 429.44 239.635 429.44C240.634 429.44 241.385 429.818 241.889 430.574V429.664H243.051V435.81C243.051 436.827 242.967 437.602 242.799 438.134C242.594 438.769 242.235 439.245 241.721 439.562C241.208 439.889 240.555 440.052 239.761 440.052ZM239.845 436.16C240.34 436.16 240.737 436.025 241.035 435.754C241.334 435.474 241.549 435.124 241.679 434.704C241.819 434.275 241.889 433.836 241.889 433.388C241.889 432.893 241.819 432.431 241.679 432.002C241.539 431.563 241.32 431.209 241.021 430.938C240.723 430.667 240.326 430.532 239.831 430.532C239.374 430.532 238.987 430.658 238.669 430.91C238.352 431.153 238.109 431.489 237.941 431.918C237.783 432.338 237.703 432.814 237.703 433.346C237.703 433.841 237.778 434.303 237.927 434.732C238.077 435.161 238.305 435.507 238.613 435.768C238.931 436.029 239.341 436.16 239.845 436.16ZM251.789 434.732C251.668 435.497 251.327 436.109 250.767 436.566C250.217 437.023 249.512 437.252 248.653 437.252C247.916 437.252 247.3 437.089 246.805 436.762C246.311 436.426 245.937 435.969 245.685 435.39C245.443 434.811 245.321 434.149 245.321 433.402C245.321 432.581 245.461 431.876 245.741 431.288C246.021 430.7 246.413 430.247 246.917 429.93C247.421 429.603 248.009 429.44 248.681 429.44C249.437 429.44 250.053 429.617 250.529 429.972C251.015 430.327 251.369 430.821 251.593 431.456C251.827 432.091 251.943 432.833 251.943 433.682H246.539C246.558 434.401 246.745 434.998 247.099 435.474C247.454 435.941 247.986 436.174 248.695 436.174C249.657 436.174 250.296 435.693 250.613 434.732H251.789ZM248.667 430.518C248.014 430.518 247.515 430.733 247.169 431.162C246.824 431.591 246.623 432.114 246.567 432.73H250.683C250.683 432.319 250.599 431.951 250.431 431.624C250.273 431.288 250.044 431.022 249.745 430.826C249.447 430.621 249.087 430.518 248.667 430.518Z" fill="rgb(var(--colour-main))"></path><path d="M343.672 426.99C344.306 426.99 344.834 427.135 345.254 427.424C345.674 427.704 346.005 428.087 346.248 428.572C346.49 429.057 346.663 429.608 346.766 430.224C346.868 430.831 346.92 431.461 346.92 432.114C346.92 432.767 346.868 433.402 346.766 434.018C346.663 434.625 346.49 435.175 346.248 435.67C346.005 436.155 345.674 436.543 345.254 436.832C344.834 437.112 344.306 437.252 343.672 437.252C343.037 437.252 342.51 437.112 342.09 436.832C341.67 436.543 341.338 436.155 341.096 435.67C340.853 435.175 340.68 434.625 340.578 434.018C340.475 433.402 340.424 432.767 340.424 432.114C340.424 431.461 340.475 430.831 340.578 430.224C340.68 429.608 340.853 429.057 341.096 428.572C341.338 428.087 341.67 427.704 342.09 427.424C342.51 427.135 343.037 426.99 343.672 426.99ZM343.672 428.054C342.953 428.054 342.421 428.423 342.076 429.16C341.74 429.897 341.572 430.882 341.572 432.114C341.572 432.711 341.609 433.257 341.684 433.752C341.768 434.237 341.889 434.653 342.048 434.998L344.806 428.516C344.498 428.208 344.12 428.054 343.672 428.054ZM345.772 432.114C345.772 431.573 345.739 431.078 345.674 430.63C345.608 430.182 345.51 429.785 345.38 429.44L342.678 435.852C342.958 436.076 343.289 436.188 343.672 436.188C344.157 436.188 344.554 436.02 344.862 435.684C345.17 435.348 345.398 434.877 345.548 434.27C345.697 433.654 345.772 432.935 345.772 432.114Z" fill="rgb(var(--colour-main))"></path></svg></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">When the net change to the State Ledger Accounts is non-zero, the financial event being recorded made a profit or loss. In this example, a difference in asset and liability accounts is balanced by an increase in an income account.</p><div class="pt-f2"><div class="hidden tablet:block"><svg width="100%" height="100%" viewBox="0 0 621 549" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="621" height="549" fill="rgb(var(--colour-negative))"></rect><path d="M23.096 32H19.288V22.214H22.774C24.524 22.214 25.728 23.166 25.728 24.706C25.728 25.644 25.28 26.582 24.426 26.89C25.448 27.226 26.05 28.038 26.05 29.214C26.05 30.684 25.028 32 23.096 32ZM20.562 23.32V26.414H22.578C23.628 26.414 24.398 26.078 24.398 24.888C24.398 23.684 23.628 23.32 22.578 23.32H20.562ZM20.562 27.52V30.894H22.942C24.174 30.894 24.72 30.194 24.72 29.2C24.72 28.22 24.174 27.52 22.942 27.52H20.562ZM34.6203 31.23V32.112C34.3263 32.196 34.1023 32.238 33.9203 32.238C33.1083 32.238 32.7023 31.888 32.6183 31.132C31.7923 31.944 31.0643 32.252 30.1263 32.252C28.6983 32.252 27.7323 31.454 27.7323 30.096C27.7323 28.584 28.8803 28.038 29.7343 27.898C29.9863 27.856 30.5323 27.772 31.3583 27.66C32.2963 27.534 32.6043 27.352 32.6043 26.876V26.624C32.6043 25.896 32.0303 25.532 30.9243 25.532C29.8463 25.532 29.3143 25.938 29.2163 26.834H28.0403C28.0683 25.14 29.2443 24.454 30.9803 24.454C32.7863 24.454 33.7383 25.154 33.7383 26.456V30.684C33.7383 31.062 33.9483 31.258 34.3683 31.258C34.4383 31.258 34.5503 31.244 34.6203 31.23ZM32.6043 29.452V28.29C32.1143 28.514 31.3163 28.64 30.7003 28.71C29.6083 28.836 28.9223 29.144 28.9223 30.068C28.9223 30.796 29.4823 31.23 30.4203 31.23C31.4423 31.23 32.6043 30.474 32.6043 29.452ZM40.6146 21.794V31.048H42.8686V32H36.9466V31.048H39.4806V22.746H36.9466V21.794H40.6146ZM51.9289 31.23V32.112C51.6349 32.196 51.4109 32.238 51.2289 32.238C50.4169 32.238 50.0109 31.888 49.9269 31.132C49.1009 31.944 48.3729 32.252 47.4349 32.252C46.0069 32.252 45.0409 31.454 45.0409 30.096C45.0409 28.584 46.1889 28.038 47.0429 27.898C47.2949 27.856 47.8409 27.772 48.6669 27.66C49.6049 27.534 49.9129 27.352 49.9129 26.876V26.624C49.9129 25.896 49.3389 25.532 48.2329 25.532C47.1549 25.532 46.6229 25.938 46.5249 26.834H45.3489C45.3769 25.14 46.5529 24.454 48.2889 24.454C50.0949 24.454 51.0469 25.154 51.0469 26.456V30.684C51.0469 31.062 51.2569 31.258 51.6769 31.258C51.7469 31.258 51.8589 31.244 51.9289 31.23ZM49.9129 29.452V28.29C49.4229 28.514 48.6249 28.64 48.0089 28.71C46.9169 28.836 46.2309 29.144 46.2309 30.068C46.2309 30.796 46.7909 31.23 47.7289 31.23C48.7509 31.23 49.9129 30.474 49.9129 29.452ZM54.0312 32V24.664H55.1092V25.882C55.6832 24.986 56.3832 24.454 57.5452 24.454C58.8192 24.454 59.8692 25.098 59.8692 26.456V32H58.7072V26.918C58.7072 25.938 58.0072 25.476 57.1952 25.476C55.8792 25.476 55.1932 26.61 55.1932 27.87V32H54.0312ZM68.7335 27.086H67.5575C67.4315 26.12 66.7875 25.518 65.7655 25.518C64.2535 25.518 63.6655 26.96 63.6655 28.416C63.6655 29.872 64.3235 31.174 65.7935 31.174C66.8155 31.174 67.4455 30.6 67.6415 29.438H68.8175C68.6635 31.202 67.5715 32.252 65.7655 32.252C63.6235 32.252 62.4475 30.572 62.4475 28.416C62.4475 26.218 63.5955 24.44 65.7795 24.44C67.5715 24.44 68.6915 25.532 68.7335 27.086ZM77.4438 29.732C77.1918 31.272 76.0298 32.252 74.3078 32.252C72.0958 32.252 70.9758 30.642 70.9758 28.402C70.9758 25.952 72.3058 24.44 74.3358 24.44C76.6038 24.44 77.5978 26.134 77.5978 28.682H72.1938C72.2358 30.124 72.9358 31.174 74.3498 31.174C75.3018 31.174 75.9458 30.712 76.2678 29.732H77.4438ZM74.3218 25.518C73.0058 25.518 72.3198 26.498 72.2218 27.73H76.3378C76.3378 26.512 75.5818 25.518 74.3218 25.518ZM84.8521 21.794H86.0141V32H84.9781V30.964C84.3901 31.818 83.6061 32.252 82.6401 32.252C80.4701 32.252 79.4481 30.516 79.4481 28.262C79.4481 26.148 80.5121 24.44 82.5981 24.44C83.5921 24.44 84.3481 24.818 84.8521 25.574V21.794ZM82.7941 25.532C81.4221 25.532 80.6661 26.764 80.6661 28.346C80.6661 29.844 81.3101 31.16 82.8081 31.16C84.2781 31.16 84.8521 29.746 84.8521 28.388C84.8521 26.918 84.2641 25.532 82.7941 25.532ZM102.973 27.562H98.7727V30.852H103.435V32H97.4707V22.214H103.183V23.362H98.7727V26.414H102.973V27.562ZM105.957 32V24.664H107.035V25.882C107.609 24.986 108.309 24.454 109.471 24.454C110.745 24.454 111.795 25.098 111.795 26.456V32H110.633V26.918C110.633 25.938 109.933 25.476 109.121 25.476C107.805 25.476 107.119 26.61 107.119 27.87V32H105.957ZM117.579 24.664H120.463V25.616H117.579V29.704C117.579 30.782 118.153 31.146 119.217 31.146C119.693 31.146 120.113 31.104 120.463 31.006V32.028C120.001 32.168 119.539 32.196 119.147 32.196C117.369 32.196 116.417 31.51 116.417 29.914V25.616H114.303V24.664H116.417V22.648H117.579V24.664ZM123.588 32V24.664H124.666V26.246C125.156 25.196 126.094 24.454 127.298 24.454C128.978 24.454 129.846 25.378 129.986 26.834H128.824C128.656 25.952 128.18 25.476 127.186 25.476C125.716 25.476 124.764 26.722 124.764 28.444V32H123.588ZM134.888 33.54C134.51 34.548 133.796 35.052 132.886 35.052C132.536 35.052 132.228 35.01 131.934 34.912V33.82C132.242 33.89 132.494 33.904 132.732 33.904C133.264 33.904 133.558 33.708 133.768 33.19L134.216 32.112L131.5 24.664H132.732L134.874 30.614L136.988 24.664H138.192L134.888 33.54Z" fill="rgb(var(--colour-main))"></path><rect x="139" y="126" width="344" height="54" stroke="rgb(var(--colour-main-500))"></rect><path d="M157 144H163C163 147.314 160.314 150 157 150V144Z" fill="rgb(var(--colour-inactive-br))"></path><path d="M157 138C160.314 138 163 140.686 163 144H157V138Z" fill="rgb(var(--colour-inactive-tr))"></path><path d="M151 144H157V150C153.686 150 151 147.314 151 144Z" fill="rgb(var(--colour-inactive-bl))"></path><path d="M151 144C151 140.686 153.686 138 157 138V144H151Z" fill="rgb(var(--colour-inactive-tl))"></path><path d="M157 144H163C163 147.314 160.314 150 157 150V144Z" fill="#FFE000"></path><path d="M157 138C160.314 138 163 140.686 163 144H157V138Z" fill="rgb(var(--colour-income-blue))"></path><path d="M151 144H157V150C153.686 150 151 147.314 151 144Z" fill="#EC3425"></path><path d="M151 144C151 140.686 153.686 138 157 138V144H151Z" fill="#5AC93B"></path><path d="M175.084 144.562H170.884V147.852H175.546V149H169.582V139.214H175.294V140.362H170.884V143.414H175.084V144.562ZM178.068 149V141.664H179.146V142.882C179.436 142.434 179.767 142.084 180.14 141.832C180.523 141.58 181.004 141.454 181.582 141.454C182.012 141.454 182.399 141.529 182.744 141.678C183.099 141.818 183.379 142.037 183.584 142.336C183.799 142.625 183.906 142.999 183.906 143.456V149H182.744V143.918C182.744 143.423 182.595 143.059 182.296 142.826C181.998 142.593 181.643 142.476 181.232 142.476C180.794 142.476 180.425 142.588 180.126 142.812C179.828 143.036 179.604 143.33 179.454 143.694C179.305 144.058 179.23 144.45 179.23 144.87V149H178.068ZM189.691 141.664H192.575V142.616H189.691V146.704C189.691 147.245 189.831 147.623 190.111 147.838C190.391 148.043 190.797 148.146 191.329 148.146C191.571 148.146 191.795 148.137 192.001 148.118C192.206 148.09 192.397 148.053 192.575 148.006V149.028C192.341 149.093 192.113 149.135 191.889 149.154C191.665 149.182 191.455 149.196 191.259 149.196C190.372 149.196 189.695 149.014 189.229 148.65C188.762 148.286 188.529 147.707 188.529 146.914V142.616H186.415V141.664H188.529V139.648H189.691V141.664ZM195.699 149V141.664H196.777V143.246C197.02 142.723 197.37 142.294 197.827 141.958C198.284 141.622 198.812 141.454 199.409 141.454C200.249 141.454 200.888 141.669 201.327 142.098C201.775 142.527 202.032 143.106 202.097 143.834H200.935C200.851 143.395 200.678 143.059 200.417 142.826C200.165 142.593 199.792 142.476 199.297 142.476C198.812 142.476 198.387 142.607 198.023 142.868C197.659 143.12 197.374 143.47 197.169 143.918C196.973 144.357 196.875 144.865 196.875 145.444V149H195.699ZM206.999 150.54C206.813 151.044 206.547 151.422 206.201 151.674C205.856 151.926 205.455 152.052 204.997 152.052C204.643 152.052 204.325 152.005 204.045 151.912V150.82C204.204 150.857 204.344 150.881 204.465 150.89C204.596 150.899 204.722 150.904 204.843 150.904C205.114 150.904 205.329 150.848 205.487 150.736C205.646 150.633 205.777 150.451 205.879 150.19L206.327 149.112L203.611 141.664H204.843L206.985 147.614L209.099 141.664H210.303L206.999 150.54Z" fill="rgb(var(--colour-main))"></path><rect x="139" y="216" width="344" height="36" fill="rgb(var(--colour-negative))"></rect><rect x="139" y="216" width="344" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="157" y="228" width="12" height="12" rx="6" fill="rgb(var(--colour-negative))"></rect><path d="M157 234H163V240C159.686 240 157 237.314 157 234Z" fill="#EC3425"></path><path d="M176.736 229.214H178.038V237.852H182.7V239H176.736V229.214ZM187.406 230.614V229.214H188.806V230.614H187.406ZM188.68 231.664V238.048H190.934V239H185.012V238.048H187.532V232.616H185.012V231.664H188.68ZM193.723 239V231.664H194.801V232.882C195.09 232.434 195.421 232.084 195.795 231.832C196.177 231.58 196.658 231.454 197.237 231.454C197.666 231.454 198.053 231.529 198.399 231.678C198.753 231.818 199.033 232.037 199.239 232.336C199.453 232.625 199.561 232.999 199.561 233.456V239H198.399V233.918C198.399 233.423 198.249 233.059 197.951 232.826C197.652 232.593 197.297 232.476 196.887 232.476C196.448 232.476 196.079 232.588 195.781 232.812C195.482 233.036 195.258 233.33 195.109 233.694C194.959 234.058 194.885 234.45 194.885 234.87V239H193.723ZM208.481 236.732C208.36 237.497 208.019 238.109 207.459 238.566C206.908 239.023 206.204 239.252 205.345 239.252C204.608 239.252 203.992 239.089 203.497 238.762C203.002 238.426 202.629 237.969 202.377 237.39C202.134 236.811 202.013 236.149 202.013 235.402C202.013 234.581 202.153 233.876 202.433 233.288C202.713 232.7 203.105 232.247 203.609 231.93C204.113 231.603 204.701 231.44 205.373 231.44C206.129 231.44 206.745 231.617 207.221 231.972C207.706 232.327 208.061 232.821 208.285 233.456C208.518 234.091 208.635 234.833 208.635 235.682H203.231C203.25 236.401 203.436 236.998 203.791 237.474C204.146 237.941 204.678 238.174 205.387 238.174C206.348 238.174 206.988 237.693 207.305 236.732H208.481ZM205.359 232.518C204.706 232.518 204.206 232.733 203.861 233.162C203.516 233.591 203.315 234.114 203.259 234.73H207.375C207.375 234.319 207.291 233.951 207.123 233.624C206.964 233.288 206.736 233.022 206.437 232.826C206.138 232.621 205.779 232.518 205.359 232.518Z" fill="rgb(var(--colour-main))"></path><path d="M457.946 229.214H463.07V230.292H458.954L458.548 233.148C458.819 232.905 459.117 232.737 459.444 232.644C459.771 232.551 460.102 232.504 460.438 232.504C461.026 232.504 461.558 232.639 462.034 232.91C462.51 233.171 462.888 233.549 463.168 234.044C463.448 234.529 463.588 235.113 463.588 235.794C463.588 236.457 463.448 237.049 463.168 237.572C462.897 238.095 462.51 238.505 462.006 238.804C461.502 239.103 460.895 239.252 460.186 239.252C459.906 239.252 459.593 239.215 459.248 239.14C458.903 239.065 458.562 238.935 458.226 238.748C457.899 238.552 457.615 238.281 457.372 237.936C457.129 237.591 456.971 237.147 456.896 236.606H458.142C458.422 237.651 459.103 238.174 460.186 238.174C460.895 238.174 461.427 237.959 461.782 237.53C462.146 237.091 462.328 236.531 462.328 235.85C462.328 235.169 462.155 234.613 461.81 234.184C461.474 233.755 460.947 233.54 460.228 233.54C459.836 233.54 459.486 233.619 459.178 233.778C458.879 233.927 458.599 234.175 458.338 234.52H457.218L457.946 229.214Z" fill="rgb(var(--colour-main))"></path><rect x="139" y="252" width="344" height="36" fill="rgb(var(--colour-negative))"></rect><rect x="139" y="252" width="344" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="157" y="264" width="12" height="12" rx="6" fill="rgb(var(--colour-negative))"></rect><path d="M163 264C166.314 264 169 266.686 169 270H163V264Z" fill="rgb(var(--colour-income-blue))"></path><path d="M176.736 265.214H178.038V273.852H182.7V275H176.736V265.214ZM187.406 266.614V265.214H188.806V266.614H187.406ZM188.68 267.664V274.048H190.934V275H185.012V274.048H187.532V268.616H185.012V267.664H188.68ZM193.723 275V267.664H194.801V268.882C195.09 268.434 195.421 268.084 195.795 267.832C196.177 267.58 196.658 267.454 197.237 267.454C197.666 267.454 198.053 267.529 198.399 267.678C198.753 267.818 199.033 268.037 199.239 268.336C199.453 268.625 199.561 268.999 199.561 269.456V275H198.399V269.918C198.399 269.423 198.249 269.059 197.951 268.826C197.652 268.593 197.297 268.476 196.887 268.476C196.448 268.476 196.079 268.588 195.781 268.812C195.482 269.036 195.258 269.33 195.109 269.694C194.959 270.058 194.885 270.45 194.885 270.87V275H193.723ZM208.481 272.732C208.36 273.497 208.019 274.109 207.459 274.566C206.908 275.023 206.204 275.252 205.345 275.252C204.608 275.252 203.992 275.089 203.497 274.762C203.002 274.426 202.629 273.969 202.377 273.39C202.134 272.811 202.013 272.149 202.013 271.402C202.013 270.581 202.153 269.876 202.433 269.288C202.713 268.7 203.105 268.247 203.609 267.93C204.113 267.603 204.701 267.44 205.373 267.44C206.129 267.44 206.745 267.617 207.221 267.972C207.706 268.327 208.061 268.821 208.285 269.456C208.518 270.091 208.635 270.833 208.635 271.682H203.231C203.25 272.401 203.436 272.998 203.791 273.474C204.146 273.941 204.678 274.174 205.387 274.174C206.348 274.174 206.988 273.693 207.305 272.732H208.481ZM205.359 268.518C204.706 268.518 204.206 268.733 203.861 269.162C203.516 269.591 203.315 270.114 203.259 270.73H207.375C207.375 270.319 207.291 269.951 207.123 269.624C206.964 269.288 206.736 269.022 206.437 268.826C206.138 268.621 205.779 268.518 205.359 268.518Z" fill="rgb(var(--colour-main))"></path><path d="M457.946 265.214H463.07V266.292H458.954L458.548 269.148C458.819 268.905 459.117 268.737 459.444 268.644C459.771 268.551 460.102 268.504 460.438 268.504C461.026 268.504 461.558 268.639 462.034 268.91C462.51 269.171 462.888 269.549 463.168 270.044C463.448 270.529 463.588 271.113 463.588 271.794C463.588 272.457 463.448 273.049 463.168 273.572C462.897 274.095 462.51 274.505 462.006 274.804C461.502 275.103 460.895 275.252 460.186 275.252C459.906 275.252 459.593 275.215 459.248 275.14C458.903 275.065 458.562 274.935 458.226 274.748C457.899 274.552 457.615 274.281 457.372 273.936C457.129 273.591 456.971 273.147 456.896 272.606H458.142C458.422 273.651 459.103 274.174 460.186 274.174C460.895 274.174 461.427 273.959 461.782 273.53C462.146 273.091 462.328 272.531 462.328 271.85C462.328 271.169 462.155 270.613 461.81 270.184C461.474 269.755 460.947 269.54 460.228 269.54C459.836 269.54 459.486 269.619 459.178 269.778C458.879 269.927 458.599 270.175 458.338 270.52H457.218L457.946 265.214Z" fill="rgb(var(--colour-main))"></path><rect x="139" y="180" width="344" height="36" fill="rgb(var(--colour-negative))"></rect><rect x="139" y="180" width="344" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="157" y="192" width="12" height="12" rx="6" fill="rgb(var(--colour-negative))"></rect><path d="M157 198C157 194.686 159.686 192 163 192V198H157Z" fill="#5AC93B"></path><path d="M176.736 193.214H178.038V201.852H182.7V203H176.736V193.214ZM187.406 194.614V193.214H188.806V194.614H187.406ZM188.68 195.664V202.048H190.934V203H185.012V202.048H187.532V196.616H185.012V195.664H188.68ZM193.723 203V195.664H194.801V196.882C195.09 196.434 195.421 196.084 195.795 195.832C196.177 195.58 196.658 195.454 197.237 195.454C197.666 195.454 198.053 195.529 198.399 195.678C198.753 195.818 199.033 196.037 199.239 196.336C199.453 196.625 199.561 196.999 199.561 197.456V203H198.399V197.918C198.399 197.423 198.249 197.059 197.951 196.826C197.652 196.593 197.297 196.476 196.887 196.476C196.448 196.476 196.079 196.588 195.781 196.812C195.482 197.036 195.258 197.33 195.109 197.694C194.959 198.058 194.885 198.45 194.885 198.87V203H193.723ZM208.481 200.732C208.36 201.497 208.019 202.109 207.459 202.566C206.908 203.023 206.204 203.252 205.345 203.252C204.608 203.252 203.992 203.089 203.497 202.762C203.002 202.426 202.629 201.969 202.377 201.39C202.134 200.811 202.013 200.149 202.013 199.402C202.013 198.581 202.153 197.876 202.433 197.288C202.713 196.7 203.105 196.247 203.609 195.93C204.113 195.603 204.701 195.44 205.373 195.44C206.129 195.44 206.745 195.617 207.221 195.972C207.706 196.327 208.061 196.821 208.285 197.456C208.518 198.091 208.635 198.833 208.635 199.682H203.231C203.25 200.401 203.436 200.998 203.791 201.474C204.146 201.941 204.678 202.174 205.387 202.174C206.348 202.174 206.988 201.693 207.305 200.732H208.481ZM205.359 196.518C204.706 196.518 204.206 196.733 203.861 197.162C203.516 197.591 203.315 198.114 203.259 198.73H207.375C207.375 198.319 207.291 197.951 207.123 197.624C206.964 197.288 206.736 197.022 206.437 196.826C206.138 196.621 205.779 196.518 205.359 196.518Z" fill="rgb(var(--colour-main))"></path><path d="M451.242 203V195.902H448.624V194.978C449.203 194.95 449.66 194.913 449.996 194.866C450.341 194.819 450.607 194.735 450.794 194.614C450.981 194.493 451.125 194.315 451.228 194.082C451.34 193.839 451.447 193.513 451.55 193.102H452.474V203H451.242ZM459.98 192.99C460.615 192.99 461.142 193.135 461.562 193.424C461.982 193.704 462.314 194.087 462.556 194.572C462.799 195.057 462.972 195.608 463.074 196.224C463.177 196.831 463.228 197.461 463.228 198.114C463.228 198.767 463.177 199.402 463.074 200.018C462.972 200.625 462.799 201.175 462.556 201.67C462.314 202.155 461.982 202.543 461.562 202.832C461.142 203.112 460.615 203.252 459.98 203.252C459.346 203.252 458.818 203.112 458.398 202.832C457.978 202.543 457.647 202.155 457.404 201.67C457.162 201.175 456.989 200.625 456.886 200.018C456.784 199.402 456.732 198.767 456.732 198.114C456.732 197.461 456.784 196.831 456.886 196.224C456.989 195.608 457.162 195.057 457.404 194.572C457.647 194.087 457.978 193.704 458.398 193.424C458.818 193.135 459.346 192.99 459.98 192.99ZM459.98 194.054C459.262 194.054 458.73 194.423 458.384 195.16C458.048 195.897 457.88 196.882 457.88 198.114C457.88 198.711 457.918 199.257 457.992 199.752C458.076 200.237 458.198 200.653 458.356 200.998L461.114 194.516C460.806 194.208 460.428 194.054 459.98 194.054ZM462.08 198.114C462.08 197.573 462.048 197.078 461.982 196.63C461.917 196.182 461.819 195.785 461.688 195.44L458.986 201.852C459.266 202.076 459.598 202.188 459.98 202.188C460.466 202.188 460.862 202.02 461.17 201.684C461.478 201.348 461.707 200.877 461.856 200.27C462.006 199.654 462.08 198.935 462.08 198.114Z" fill="rgb(var(--colour-main))"></path><rect x="138.5" y="342" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="156.5" cy="360" r="6" fill="#5AC93B"></circle><path d="M158.32 363.495H159.29L157.09 356.505H155.92L153.71 363.495H154.67L155.29 361.405H157.7L158.32 363.495ZM155.52 360.625L156.49 357.345L157.47 360.625H155.52Z" fill="rgb(var(--colour-negative))"></path><path d="M175.374 365L174.506 362.074H171.132L170.264 365H168.92L172.014 355.214H173.652L176.732 365H175.374ZM171.454 360.982H174.184L172.812 356.39L171.454 360.982ZM184.168 359.666H182.95C182.941 359.302 182.801 359.013 182.53 358.798C182.269 358.583 181.919 358.476 181.48 358.476C181.004 358.476 180.617 358.574 180.318 358.77C180.029 358.966 179.884 359.227 179.884 359.554C179.884 359.815 179.973 360.025 180.15 360.184C180.328 360.343 180.589 360.469 180.934 360.562L182.6 360.996C183.216 361.155 183.678 361.393 183.986 361.71C184.304 362.018 184.462 362.433 184.462 362.956C184.462 363.665 184.201 364.225 183.678 364.636C183.156 365.047 182.437 365.252 181.522 365.252C179.6 365.252 178.596 364.426 178.512 362.774H179.744C179.8 363.269 179.978 363.633 180.276 363.866C180.584 364.099 181.009 364.216 181.55 364.216C182.073 364.216 182.488 364.123 182.796 363.936C183.114 363.749 183.272 363.483 183.272 363.138C183.272 362.821 183.188 362.583 183.02 362.424C182.852 362.265 182.568 362.135 182.166 362.032L180.626 361.626C179.964 361.449 179.474 361.211 179.156 360.912C178.848 360.604 178.694 360.17 178.694 359.61C178.694 358.947 178.946 358.42 179.45 358.028C179.964 357.636 180.65 357.44 181.508 357.44C182.367 357.44 183.02 357.641 183.468 358.042C183.926 358.434 184.159 358.975 184.168 359.666ZM192.823 359.666H191.605C191.595 359.302 191.455 359.013 191.185 358.798C190.923 358.583 190.573 358.476 190.135 358.476C189.659 358.476 189.271 358.574 188.973 358.77C188.683 358.966 188.539 359.227 188.539 359.554C188.539 359.815 188.627 360.025 188.805 360.184C188.982 360.343 189.243 360.469 189.589 360.562L191.255 360.996C191.871 361.155 192.333 361.393 192.641 361.71C192.958 362.018 193.117 362.433 193.117 362.956C193.117 363.665 192.855 364.225 192.333 364.636C191.81 365.047 191.091 365.252 190.177 365.252C188.254 365.252 187.251 364.426 187.167 362.774H188.399C188.455 363.269 188.632 363.633 188.931 363.866C189.239 364.099 189.663 364.216 190.205 364.216C190.727 364.216 191.143 364.123 191.451 363.936C191.768 363.749 191.927 363.483 191.927 363.138C191.927 362.821 191.843 362.583 191.675 362.424C191.507 362.265 191.222 362.135 190.821 362.032L189.281 361.626C188.618 361.449 188.128 361.211 187.811 360.912C187.503 360.604 187.349 360.17 187.349 359.61C187.349 358.947 187.601 358.42 188.105 358.028C188.618 357.636 189.304 357.44 190.163 357.44C191.021 357.44 191.675 357.641 192.123 358.042C192.58 358.434 192.813 358.975 192.823 359.666ZM201.981 362.732C201.86 363.497 201.519 364.109 200.959 364.566C200.408 365.023 199.704 365.252 198.845 365.252C198.108 365.252 197.492 365.089 196.997 364.762C196.502 364.426 196.129 363.969 195.877 363.39C195.634 362.811 195.513 362.149 195.513 361.402C195.513 360.581 195.653 359.876 195.933 359.288C196.213 358.7 196.605 358.247 197.109 357.93C197.613 357.603 198.201 357.44 198.873 357.44C199.629 357.44 200.245 357.617 200.721 357.972C201.206 358.327 201.561 358.821 201.785 359.456C202.018 360.091 202.135 360.833 202.135 361.682H196.731C196.75 362.401 196.936 362.998 197.291 363.474C197.646 363.941 198.178 364.174 198.887 364.174C199.848 364.174 200.488 363.693 200.805 362.732H201.981ZM198.859 358.518C198.206 358.518 197.706 358.733 197.361 359.162C197.016 359.591 196.815 360.114 196.759 360.73H200.875C200.875 360.319 200.791 359.951 200.623 359.624C200.464 359.288 200.236 359.022 199.937 358.826C199.638 358.621 199.279 358.518 198.859 358.518ZM207.499 357.664H210.383V358.616H207.499V362.704C207.499 363.245 207.639 363.623 207.919 363.838C208.199 364.043 208.605 364.146 209.137 364.146C209.38 364.146 209.604 364.137 209.809 364.118C210.015 364.09 210.206 364.053 210.383 364.006V365.028C210.15 365.093 209.921 365.135 209.697 365.154C209.473 365.182 209.263 365.196 209.067 365.196C208.181 365.196 207.504 365.014 207.037 364.65C206.571 364.286 206.337 363.707 206.337 362.914V358.616H204.223V357.664H206.337V355.648H207.499V357.664ZM218.785 359.666H217.567C217.558 359.302 217.418 359.013 217.147 358.798C216.886 358.583 216.536 358.476 216.097 358.476C215.621 358.476 215.234 358.574 214.935 358.77C214.646 358.966 214.501 359.227 214.501 359.554C214.501 359.815 214.59 360.025 214.767 360.184C214.945 360.343 215.206 360.469 215.551 360.562L217.217 360.996C217.833 361.155 218.295 361.393 218.603 361.71C218.921 362.018 219.079 362.433 219.079 362.956C219.079 363.665 218.818 364.225 218.295 364.636C217.773 365.047 217.054 365.252 216.139 365.252C214.217 365.252 213.213 364.426 213.129 362.774H214.361C214.417 363.269 214.595 363.633 214.893 363.866C215.201 364.099 215.626 364.216 216.167 364.216C216.69 364.216 217.105 364.123 217.413 363.936C217.731 363.749 217.889 363.483 217.889 363.138C217.889 362.821 217.805 362.583 217.637 362.424C217.469 362.265 217.185 362.135 216.783 362.032L215.243 361.626C214.581 361.449 214.091 361.211 213.773 360.912C213.465 360.604 213.311 360.17 213.311 359.61C213.311 358.947 213.563 358.42 214.067 358.028C214.581 357.636 215.267 357.44 216.125 357.44C216.984 357.44 217.637 357.641 218.085 358.042C218.543 358.434 218.776 358.975 218.785 359.666Z" fill="rgb(var(--colour-main))"></path><path d="M285.433 365V357.902H282.815V356.978C283.394 356.95 283.851 356.913 284.187 356.866C284.533 356.819 284.799 356.735 284.985 356.614C285.172 356.493 285.317 356.315 285.419 356.082C285.531 355.839 285.639 355.513 285.741 355.102H286.665V365H285.433ZM294.172 354.99C294.806 354.99 295.334 355.135 295.754 355.424C296.174 355.704 296.505 356.087 296.748 356.572C296.99 357.057 297.163 357.608 297.266 358.224C297.368 358.831 297.42 359.461 297.42 360.114C297.42 360.767 297.368 361.402 297.266 362.018C297.163 362.625 296.99 363.175 296.748 363.67C296.505 364.155 296.174 364.543 295.754 364.832C295.334 365.112 294.806 365.252 294.172 365.252C293.537 365.252 293.01 365.112 292.59 364.832C292.17 364.543 291.838 364.155 291.596 363.67C291.353 363.175 291.18 362.625 291.078 362.018C290.975 361.402 290.924 360.767 290.924 360.114C290.924 359.461 290.975 358.831 291.078 358.224C291.18 357.608 291.353 357.057 291.596 356.572C291.838 356.087 292.17 355.704 292.59 355.424C293.01 355.135 293.537 354.99 294.172 354.99ZM294.172 356.054C293.453 356.054 292.921 356.423 292.576 357.16C292.24 357.897 292.072 358.882 292.072 360.114C292.072 360.711 292.109 361.257 292.184 361.752C292.268 362.237 292.389 362.653 292.548 362.998L295.306 356.516C294.998 356.208 294.62 356.054 294.172 356.054ZM296.272 360.114C296.272 359.573 296.239 359.078 296.174 358.63C296.108 358.182 296.01 357.785 295.88 357.44L293.178 363.852C293.458 364.076 293.789 364.188 294.172 364.188C294.657 364.188 295.054 364.02 295.362 363.684C295.67 363.348 295.898 362.877 296.048 362.27C296.197 361.654 296.272 360.935 296.272 360.114Z" fill="rgb(var(--colour-main))"></path><rect x="310.5" y="342" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="328.5" cy="360" r="6" fill="rgb(var(--colour-income-blue))"></circle><path d="M326.545 363.495H330.455V362.715H328.965V357.285H330.455V356.505H326.545V357.285H328.025V362.715H326.545V363.495Z" fill="rgb(var(--colour-main))"></path><path d="M342.096 365V363.908H344.168V356.306H342.096V355.214H347.57V356.306H345.484V363.908H347.57V365H342.096ZM350.568 365V357.664H351.646V358.882C351.936 358.434 352.267 358.084 352.64 357.832C353.023 357.58 353.504 357.454 354.082 357.454C354.512 357.454 354.899 357.529 355.244 357.678C355.599 357.818 355.879 358.037 356.084 358.336C356.299 358.625 356.406 358.999 356.406 359.456V365H355.244V359.918C355.244 359.423 355.095 359.059 354.796 358.826C354.498 358.593 354.143 358.476 353.732 358.476C353.294 358.476 352.925 358.588 352.626 358.812C352.328 359.036 352.104 359.33 351.954 359.694C351.805 360.058 351.73 360.45 351.73 360.87V365H350.568ZM365.271 360.086H364.095C364.029 359.601 363.843 359.218 363.535 358.938C363.227 358.658 362.816 358.518 362.303 358.518C361.799 358.518 361.393 358.658 361.085 358.938C360.777 359.218 360.553 359.582 360.413 360.03C360.273 360.469 360.203 360.931 360.203 361.416C360.203 361.901 360.277 362.354 360.427 362.774C360.576 363.194 360.809 363.535 361.127 363.796C361.444 364.048 361.845 364.174 362.331 364.174C363.367 364.174 363.983 363.595 364.179 362.438H365.355C365.28 363.315 364.977 364.006 364.445 364.51C363.922 365.005 363.208 365.252 362.303 365.252C361.593 365.252 360.991 365.084 360.497 364.748C360.002 364.403 359.624 363.941 359.363 363.362C359.111 362.783 358.985 362.135 358.985 361.416C358.985 360.679 359.111 360.011 359.363 359.414C359.615 358.817 359.988 358.341 360.483 357.986C360.977 357.622 361.589 357.44 362.317 357.44C363.213 357.44 363.922 357.687 364.445 358.182C364.977 358.677 365.252 359.311 365.271 360.086ZM370.789 357.44C371.545 357.44 372.166 357.613 372.651 357.958C373.146 358.294 373.51 358.756 373.743 359.344C373.986 359.932 374.107 360.599 374.107 361.346C374.107 362.083 373.986 362.751 373.743 363.348C373.51 363.936 373.146 364.403 372.651 364.748C372.166 365.084 371.545 365.252 370.789 365.252C370.042 365.252 369.422 365.084 368.927 364.748C368.432 364.403 368.064 363.936 367.821 363.348C367.588 362.751 367.471 362.083 367.471 361.346C367.471 360.599 367.588 359.932 367.821 359.344C368.064 358.756 368.432 358.294 368.927 357.958C369.422 357.613 370.042 357.44 370.789 357.44ZM370.789 358.518C370.294 358.518 369.893 358.649 369.585 358.91C369.277 359.171 369.048 359.517 368.899 359.946C368.759 360.375 368.689 360.842 368.689 361.346C368.689 361.841 368.759 362.307 368.899 362.746C369.048 363.175 369.277 363.521 369.585 363.782C369.893 364.043 370.294 364.174 370.789 364.174C371.284 364.174 371.685 364.043 371.993 363.782C372.301 363.521 372.525 363.175 372.665 362.746C372.814 362.307 372.889 361.841 372.889 361.346C372.889 360.842 372.814 360.375 372.665 359.946C372.525 359.517 372.301 359.171 371.993 358.91C371.685 358.649 371.284 358.518 370.789 358.518ZM375.663 365V357.664H376.755V358.42C376.914 358.187 377.133 357.977 377.413 357.79C377.703 357.594 378.043 357.496 378.435 357.496C378.79 357.496 379.098 357.585 379.359 357.762C379.63 357.93 379.821 358.168 379.933 358.476C380.083 358.233 380.302 358.009 380.591 357.804C380.881 357.599 381.231 357.496 381.641 357.496C382.099 357.496 382.477 357.636 382.775 357.916C383.074 358.187 383.223 358.555 383.223 359.022V365H382.075V359.26C382.075 358.999 382.001 358.803 381.851 358.672C381.702 358.541 381.506 358.476 381.263 358.476C380.871 358.476 380.563 358.588 380.339 358.812C380.125 359.027 380.017 359.325 380.017 359.708V365H378.869V359.26C378.869 358.999 378.795 358.803 378.645 358.672C378.496 358.541 378.3 358.476 378.057 358.476C377.665 358.476 377.357 358.588 377.133 358.812C376.919 359.027 376.811 359.325 376.811 359.708V365H375.663ZM391.289 362.732C391.168 363.497 390.827 364.109 390.267 364.566C389.717 365.023 389.012 365.252 388.153 365.252C387.416 365.252 386.8 365.089 386.305 364.762C385.811 364.426 385.437 363.969 385.185 363.39C384.943 362.811 384.821 362.149 384.821 361.402C384.821 360.581 384.961 359.876 385.241 359.288C385.521 358.7 385.913 358.247 386.417 357.93C386.921 357.603 387.509 357.44 388.181 357.44C388.937 357.44 389.553 357.617 390.029 357.972C390.515 358.327 390.869 358.821 391.093 359.456C391.327 360.091 391.443 360.833 391.443 361.682H386.039C386.058 362.401 386.245 362.998 386.599 363.474C386.954 363.941 387.486 364.174 388.195 364.174C389.157 364.174 389.796 363.693 390.113 362.732H391.289ZM388.167 358.518C387.514 358.518 387.015 358.733 386.669 359.162C386.324 359.591 386.123 360.114 386.067 360.73H390.183C390.183 360.319 390.099 359.951 389.931 359.624C389.773 359.288 389.544 359.022 389.245 358.826C388.947 358.621 388.587 358.518 388.167 358.518Z" fill="rgb(var(--colour-main))"></path><path d="M463.792 355.214H468.916V356.292H464.8L464.394 359.148C464.664 358.905 464.963 358.737 465.29 358.644C465.616 358.551 465.948 358.504 466.284 358.504C466.872 358.504 467.404 358.639 467.88 358.91C468.356 359.171 468.734 359.549 469.014 360.044C469.294 360.529 469.434 361.113 469.434 361.794C469.434 362.457 469.294 363.049 469.014 363.572C468.743 364.095 468.356 364.505 467.852 364.804C467.348 365.103 466.741 365.252 466.032 365.252C465.752 365.252 465.439 365.215 465.094 365.14C464.748 365.065 464.408 364.935 464.072 364.748C463.745 364.552 463.46 364.281 463.218 363.936C462.975 363.591 462.816 363.147 462.742 362.606H463.988C464.268 363.651 464.949 364.174 466.032 364.174C466.741 364.174 467.273 363.959 467.628 363.53C467.992 363.091 468.174 362.531 468.174 361.85C468.174 361.169 468.001 360.613 467.656 360.184C467.32 359.755 466.792 359.54 466.074 359.54C465.682 359.54 465.332 359.619 465.024 359.778C464.725 359.927 464.445 360.175 464.184 360.52H463.064L463.792 355.214Z" fill="rgb(var(--colour-main))"></path><rect x="310.5" y="378" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="328.5" cy="396" r="6" fill="#FFE000"></circle><path d="M330.3 396.325V395.505H327.3V393.325H330.45V392.505H326.37V399.495H330.63V398.675H327.3V396.325H330.3Z" fill="rgb(var(--colour-main))"></path><path d="M347.584 396.562H343.384V399.852H348.046V401H342.082V391.214H347.794V392.362H343.384V395.414H347.584V396.562ZM356.602 393.664L354.138 397.206L356.672 401H355.286L353.48 398.214L351.646 401H350.288L352.878 397.262L350.428 393.664H351.8L353.522 396.296L355.272 393.664H356.602ZM360.203 404.052H359.027V393.664H360.105V394.756C360.646 393.879 361.425 393.44 362.443 393.44C363.171 393.44 363.763 393.627 364.221 394C364.687 394.364 365.033 394.849 365.257 395.456C365.481 396.053 365.593 396.707 365.593 397.416C365.593 398.116 365.476 398.76 365.243 399.348C365.019 399.927 364.673 400.389 364.207 400.734C363.74 401.079 363.157 401.252 362.457 401.252C361.981 401.252 361.561 401.168 361.197 401C360.842 400.823 360.511 400.543 360.203 400.16V404.052ZM362.247 394.532C361.761 394.532 361.369 394.667 361.071 394.938C360.772 395.209 360.553 395.559 360.413 395.988C360.273 396.417 360.203 396.87 360.203 397.346C360.203 397.822 360.273 398.275 360.413 398.704C360.553 399.133 360.772 399.483 361.071 399.754C361.369 400.025 361.761 400.16 362.247 400.16C362.741 400.16 363.143 400.029 363.451 399.768C363.768 399.497 364.001 399.152 364.151 398.732C364.3 398.303 364.375 397.855 364.375 397.388C364.375 396.893 364.3 396.431 364.151 396.002C364.001 395.563 363.768 395.209 363.451 394.938C363.143 394.667 362.741 394.532 362.247 394.532ZM373.981 398.732C373.86 399.497 373.519 400.109 372.959 400.566C372.408 401.023 371.704 401.252 370.845 401.252C370.108 401.252 369.492 401.089 368.997 400.762C368.502 400.426 368.129 399.969 367.877 399.39C367.634 398.811 367.513 398.149 367.513 397.402C367.513 396.581 367.653 395.876 367.933 395.288C368.213 394.7 368.605 394.247 369.109 393.93C369.613 393.603 370.201 393.44 370.873 393.44C371.629 393.44 372.245 393.617 372.721 393.972C373.206 394.327 373.561 394.821 373.785 395.456C374.018 396.091 374.135 396.833 374.135 397.682H368.731C368.75 398.401 368.936 398.998 369.291 399.474C369.646 399.941 370.178 400.174 370.887 400.174C371.848 400.174 372.488 399.693 372.805 398.732H373.981ZM370.859 394.518C370.206 394.518 369.706 394.733 369.361 395.162C369.016 395.591 368.815 396.114 368.759 396.73H372.875C372.875 396.319 372.791 395.951 372.623 395.624C372.464 395.288 372.236 395.022 371.937 394.826C371.638 394.621 371.279 394.518 370.859 394.518ZM376.531 401V393.664H377.609V394.882C377.899 394.434 378.23 394.084 378.603 393.832C378.986 393.58 379.467 393.454 380.045 393.454C380.475 393.454 380.862 393.529 381.207 393.678C381.562 393.818 381.842 394.037 382.047 394.336C382.262 394.625 382.369 394.999 382.369 395.456V401H381.207V395.918C381.207 395.423 381.058 395.059 380.759 394.826C380.461 394.593 380.106 394.476 379.695 394.476C379.257 394.476 378.888 394.588 378.589 394.812C378.291 395.036 378.067 395.33 377.917 395.694C377.768 396.058 377.693 396.45 377.693 396.87V401H376.531ZM390.785 395.666H389.567C389.558 395.302 389.418 395.013 389.147 394.798C388.886 394.583 388.536 394.476 388.097 394.476C387.621 394.476 387.234 394.574 386.935 394.77C386.646 394.966 386.501 395.227 386.501 395.554C386.501 395.815 386.59 396.025 386.767 396.184C386.945 396.343 387.206 396.469 387.551 396.562L389.217 396.996C389.833 397.155 390.295 397.393 390.603 397.71C390.921 398.018 391.079 398.433 391.079 398.956C391.079 399.665 390.818 400.225 390.295 400.636C389.773 401.047 389.054 401.252 388.139 401.252C386.217 401.252 385.213 400.426 385.129 398.774H386.361C386.417 399.269 386.595 399.633 386.893 399.866C387.201 400.099 387.626 400.216 388.167 400.216C388.69 400.216 389.105 400.123 389.413 399.936C389.731 399.749 389.889 399.483 389.889 399.138C389.889 398.821 389.805 398.583 389.637 398.424C389.469 398.265 389.185 398.135 388.783 398.032L387.243 397.626C386.581 397.449 386.091 397.211 385.773 396.912C385.465 396.604 385.311 396.17 385.311 395.61C385.311 394.947 385.563 394.42 386.067 394.028C386.581 393.636 387.267 393.44 388.125 393.44C388.984 393.44 389.637 393.641 390.085 394.042C390.543 394.434 390.776 394.975 390.785 395.666ZM399.944 398.732C399.822 399.497 399.482 400.109 398.922 400.566C398.371 401.023 397.666 401.252 396.808 401.252C396.07 401.252 395.454 401.089 394.96 400.762C394.465 400.426 394.092 399.969 393.84 399.39C393.597 398.811 393.476 398.149 393.476 397.402C393.476 396.581 393.616 395.876 393.896 395.288C394.176 394.7 394.568 394.247 395.072 393.93C395.576 393.603 396.164 393.44 396.836 393.44C397.592 393.44 398.208 393.617 398.684 393.972C399.169 394.327 399.524 394.821 399.748 395.456C399.981 396.091 400.098 396.833 400.098 397.682H394.694C394.712 398.401 394.899 398.998 395.254 399.474C395.608 399.941 396.14 400.174 396.85 400.174C397.811 400.174 398.45 399.693 398.768 398.732H399.944ZM396.822 394.518C396.168 394.518 395.669 394.733 395.324 395.162C394.978 395.591 394.778 396.114 394.722 396.73H398.838C398.838 396.319 398.754 395.951 398.586 395.624C398.427 395.288 398.198 395.022 397.9 394.826C397.601 394.621 397.242 394.518 396.822 394.518Z" fill="rgb(var(--colour-main-500))"></path><path d="M466.172 390.99C466.806 390.99 467.334 391.135 467.754 391.424C468.174 391.704 468.505 392.087 468.748 392.572C468.99 393.057 469.163 393.608 469.266 394.224C469.368 394.831 469.42 395.461 469.42 396.114C469.42 396.767 469.368 397.402 469.266 398.018C469.163 398.625 468.99 399.175 468.748 399.67C468.505 400.155 468.174 400.543 467.754 400.832C467.334 401.112 466.806 401.252 466.172 401.252C465.537 401.252 465.01 401.112 464.59 400.832C464.17 400.543 463.838 400.155 463.596 399.67C463.353 399.175 463.18 398.625 463.078 398.018C462.975 397.402 462.924 396.767 462.924 396.114C462.924 395.461 462.975 394.831 463.078 394.224C463.18 393.608 463.353 393.057 463.596 392.572C463.838 392.087 464.17 391.704 464.59 391.424C465.01 391.135 465.537 390.99 466.172 390.99ZM466.172 392.054C465.453 392.054 464.921 392.423 464.576 393.16C464.24 393.897 464.072 394.882 464.072 396.114C464.072 396.711 464.109 397.257 464.184 397.752C464.268 398.237 464.389 398.653 464.548 398.998L467.306 392.516C466.998 392.208 466.62 392.054 466.172 392.054ZM468.272 396.114C468.272 395.573 468.239 395.078 468.174 394.63C468.108 394.182 468.01 393.785 467.88 393.44L465.178 399.852C465.458 400.076 465.789 400.188 466.172 400.188C466.657 400.188 467.054 400.02 467.362 399.684C467.67 399.348 467.898 398.877 468.048 398.27C468.197 397.654 468.272 396.935 468.272 396.114Z" fill="rgb(var(--colour-main-500))"></path><rect x="138.5" y="378" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="156.5" cy="396" r="6" fill="#EC3425"></circle><path d="M154.6 392.505V399.495H158.86V398.675H155.53V392.505H154.6Z" fill="rgb(var(--colour-negative))"></path><path d="M170.236 391.214H171.538V399.852H176.2V401H170.236V391.214ZM180.906 392.614V391.214H182.306V392.614H180.906ZM182.18 393.664V400.048H184.434V401H178.512V400.048H181.032V394.616H178.512V393.664H182.18ZM193.775 400.23V401.112C193.485 401.196 193.252 401.238 193.075 401.238C192.291 401.238 191.857 400.869 191.773 400.132C191.362 400.533 190.961 400.823 190.569 401C190.177 401.168 189.747 401.252 189.281 401.252C188.571 401.252 187.993 401.065 187.545 400.692C187.106 400.309 186.887 399.777 186.887 399.096C186.887 398.592 186.994 398.191 187.209 397.892C187.423 397.584 187.685 397.355 187.993 397.206C188.31 397.047 188.609 396.945 188.889 396.898C189.019 396.879 189.22 396.851 189.491 396.814C189.761 396.767 190.102 396.716 190.513 396.66C190.979 396.595 191.301 396.506 191.479 396.394C191.665 396.282 191.759 396.109 191.759 395.876V395.624C191.759 394.896 191.199 394.532 190.079 394.532C189.537 394.532 189.127 394.639 188.847 394.854C188.576 395.059 188.417 395.386 188.371 395.834H187.195C187.213 394.985 187.489 394.378 188.021 394.014C188.562 393.641 189.267 393.454 190.135 393.454C191.04 393.454 191.726 393.627 192.193 393.972C192.659 394.308 192.893 394.803 192.893 395.456V399.684C192.893 400.067 193.103 400.258 193.523 400.258C193.597 400.258 193.681 400.249 193.775 400.23ZM191.759 398.452V397.29C191.516 397.402 191.213 397.491 190.849 397.556C190.494 397.621 190.163 397.673 189.855 397.71C189.313 397.775 188.879 397.901 188.553 398.088C188.235 398.275 188.077 398.601 188.077 399.068C188.077 399.432 188.207 399.717 188.469 399.922C188.739 400.127 189.108 400.23 189.575 400.23C189.92 400.23 190.256 400.155 190.583 400.006C190.919 399.847 191.199 399.633 191.423 399.362C191.647 399.091 191.759 398.788 191.759 398.452ZM195.681 401V390.794H196.843V394.644C197.375 393.841 198.131 393.44 199.111 393.44C199.83 393.44 200.418 393.613 200.875 393.958C201.342 394.294 201.687 394.751 201.911 395.33C202.135 395.909 202.247 396.553 202.247 397.262C202.247 398.009 202.126 398.685 201.883 399.292C201.64 399.899 201.281 400.379 200.805 400.734C200.338 401.079 199.755 401.252 199.055 401.252C198.056 401.252 197.282 400.832 196.731 399.992V401H195.681ZM198.901 394.532C198.406 394.532 198.005 394.672 197.697 394.952C197.398 395.232 197.179 395.591 197.039 396.03C196.908 396.459 196.843 396.912 196.843 397.388C196.843 397.845 196.908 398.289 197.039 398.718C197.179 399.138 197.398 399.483 197.697 399.754C198.005 400.025 198.406 400.16 198.901 400.16C199.396 400.16 199.797 400.029 200.105 399.768C200.422 399.507 200.656 399.166 200.805 398.746C200.964 398.317 201.043 397.864 201.043 397.388C201.043 396.875 200.964 396.403 200.805 395.974C200.656 395.545 200.422 395.199 200.105 394.938C199.788 394.667 199.386 394.532 198.901 394.532ZM206.869 392.614V391.214H208.269V392.614H206.869ZM208.143 393.664V400.048H210.397V401H204.475V400.048H206.995V394.616H204.475V393.664H208.143ZM217.077 390.794V400.048H219.331V401H213.409V400.048H215.943V391.746H213.409V390.794H217.077ZM224.178 392.614V391.214H225.578V392.614H224.178ZM225.452 393.664V400.048H227.706V401H221.784V400.048H224.304V394.616H221.784V393.664H225.452ZM233.462 393.664H236.346V394.616H233.462V398.704C233.462 399.245 233.602 399.623 233.882 399.838C234.162 400.043 234.568 400.146 235.1 400.146C235.343 400.146 235.567 400.137 235.772 400.118C235.977 400.09 236.169 400.053 236.346 400.006V401.028C236.113 401.093 235.884 401.135 235.66 401.154C235.436 401.182 235.226 401.196 235.03 401.196C234.143 401.196 233.467 401.014 233 400.65C232.533 400.286 232.3 399.707 232.3 398.914V394.616H230.186V393.664H232.3V391.648H233.462V393.664ZM241.486 392.614V391.214H242.886V392.614H241.486ZM242.76 393.664V400.048H245.014V401H239.092V400.048H241.612V394.616H239.092V393.664H242.76ZM253.907 398.732C253.785 399.497 253.445 400.109 252.885 400.566C252.334 401.023 251.629 401.252 250.771 401.252C250.033 401.252 249.417 401.089 248.923 400.762C248.428 400.426 248.055 399.969 247.803 399.39C247.56 398.811 247.439 398.149 247.439 397.402C247.439 396.581 247.579 395.876 247.859 395.288C248.139 394.7 248.531 394.247 249.035 393.93C249.539 393.603 250.127 393.44 250.799 393.44C251.555 393.44 252.171 393.617 252.647 393.972C253.132 394.327 253.487 394.821 253.711 395.456C253.944 396.091 254.061 396.833 254.061 397.682H248.657C248.675 398.401 248.862 398.998 249.217 399.474C249.571 399.941 250.103 400.174 250.813 400.174C251.774 400.174 252.413 399.693 252.731 398.732H253.907ZM250.785 394.518C250.131 394.518 249.632 394.733 249.287 395.162C248.941 395.591 248.741 396.114 248.685 396.73H252.801C252.801 396.319 252.717 395.951 252.549 395.624C252.39 395.288 252.161 395.022 251.863 394.826C251.564 394.621 251.205 394.518 250.785 394.518ZM262.057 395.666H260.839C260.83 395.302 260.69 395.013 260.419 394.798C260.158 394.583 259.808 394.476 259.369 394.476C258.893 394.476 258.506 394.574 258.207 394.77C257.918 394.966 257.773 395.227 257.773 395.554C257.773 395.815 257.862 396.025 258.039 396.184C258.216 396.343 258.478 396.469 258.823 396.562L260.489 396.996C261.105 397.155 261.567 397.393 261.875 397.71C262.192 398.018 262.351 398.433 262.351 398.956C262.351 399.665 262.09 400.225 261.567 400.636C261.044 401.047 260.326 401.252 259.411 401.252C257.488 401.252 256.485 400.426 256.401 398.774H257.633C257.689 399.269 257.866 399.633 258.165 399.866C258.473 400.099 258.898 400.216 259.439 400.216C259.962 400.216 260.377 400.123 260.685 399.936C261.002 399.749 261.161 399.483 261.161 399.138C261.161 398.821 261.077 398.583 260.909 398.424C260.741 398.265 260.456 398.135 260.055 398.032L258.515 397.626C257.852 397.449 257.362 397.211 257.045 396.912C256.737 396.604 256.583 396.17 256.583 395.61C256.583 394.947 256.835 394.42 257.339 394.028C257.852 393.636 258.538 393.44 259.397 393.44C260.256 393.44 260.909 393.641 261.357 394.042C261.814 394.434 262.048 394.975 262.057 395.666Z" fill="rgb(var(--colour-main))"></path><path d="M291.792 391.214H296.916V392.292H292.8L292.394 395.148C292.664 394.905 292.963 394.737 293.29 394.644C293.616 394.551 293.948 394.504 294.284 394.504C294.872 394.504 295.404 394.639 295.88 394.91C296.356 395.171 296.734 395.549 297.014 396.044C297.294 396.529 297.434 397.113 297.434 397.794C297.434 398.457 297.294 399.049 297.014 399.572C296.743 400.095 296.356 400.505 295.852 400.804C295.348 401.103 294.741 401.252 294.032 401.252C293.752 401.252 293.439 401.215 293.094 401.14C292.748 401.065 292.408 400.935 292.072 400.748C291.745 400.552 291.46 400.281 291.218 399.936C290.975 399.591 290.816 399.147 290.742 398.606H291.988C292.268 399.651 292.949 400.174 294.032 400.174C294.741 400.174 295.273 399.959 295.628 399.53C295.992 399.091 296.174 398.531 296.174 397.85C296.174 397.169 296.001 396.613 295.656 396.184C295.32 395.755 294.792 395.54 294.074 395.54C293.682 395.54 293.332 395.619 293.024 395.778C292.725 395.927 292.445 396.175 292.184 396.52H291.064L291.792 391.214Z" fill="rgb(var(--colour-main))"></path><path d="M145.584 108.562H141.384V111.852H146.046V113H140.082V103.214H145.794V104.362H141.384V107.414H145.584V108.562ZM148.568 113V105.664H149.646V106.882C150.22 105.986 150.92 105.454 152.082 105.454C153.356 105.454 154.406 106.098 154.406 107.456V113H153.244V107.918C153.244 106.938 152.544 106.476 151.732 106.476C150.416 106.476 149.73 107.61 149.73 108.87V113H148.568ZM160.191 105.664H163.075V106.616H160.191V110.704C160.191 111.782 160.765 112.146 161.829 112.146C162.305 112.146 162.725 112.104 163.075 112.006V113.028C162.613 113.168 162.151 113.196 161.759 113.196C159.981 113.196 159.029 112.51 159.029 110.914V106.616H156.915V105.664H159.029V103.648H160.191V105.664ZM166.199 113V105.664H167.277V107.246C167.767 106.196 168.705 105.454 169.909 105.454C171.589 105.454 172.457 106.378 172.597 107.834H171.435C171.267 106.952 170.791 106.476 169.797 106.476C168.327 106.476 167.375 107.722 167.375 109.444V113H166.199ZM177.499 114.54C177.121 115.548 176.407 116.052 175.497 116.052C175.147 116.052 174.839 116.01 174.545 115.912V114.82C174.853 114.89 175.105 114.904 175.343 114.904C175.875 114.904 176.169 114.708 176.379 114.19L176.827 113.112L174.111 105.664H175.343L177.485 111.614L179.599 105.664H180.803L177.499 114.54Z" fill="rgb(var(--colour-main-500))"></path><path d="M145.374 329L144.506 326.074H141.132L140.264 329H138.92L142.014 319.214H143.652L146.732 329H145.374ZM141.454 324.982H144.184L142.812 320.39L141.454 324.982ZM154.616 324.086H153.44C153.314 323.12 152.67 322.518 151.648 322.518C150.136 322.518 149.548 323.96 149.548 325.416C149.548 326.872 150.206 328.174 151.676 328.174C152.698 328.174 153.328 327.6 153.524 326.438H154.7C154.546 328.202 153.454 329.252 151.648 329.252C149.506 329.252 148.33 327.572 148.33 325.416C148.33 323.218 149.478 321.44 151.662 321.44C153.454 321.44 154.574 322.532 154.616 324.086ZM163.271 324.086H162.095C161.969 323.12 161.325 322.518 160.303 322.518C158.791 322.518 158.203 323.96 158.203 325.416C158.203 326.872 158.861 328.174 160.331 328.174C161.353 328.174 161.983 327.6 162.179 326.438H163.355C163.201 328.202 162.109 329.252 160.303 329.252C158.161 329.252 156.985 327.572 156.985 325.416C156.985 323.218 158.133 321.44 160.317 321.44C162.109 321.44 163.229 322.532 163.271 324.086ZM168.789 321.44C171.043 321.44 172.107 323.12 172.107 325.346C172.107 327.572 171.043 329.252 168.789 329.252C166.535 329.252 165.471 327.572 165.471 325.346C165.471 323.12 166.535 321.44 168.789 321.44ZM168.789 322.518C167.305 322.518 166.689 323.848 166.689 325.346C166.689 326.844 167.305 328.174 168.789 328.174C170.273 328.174 170.889 326.844 170.889 325.346C170.889 323.848 170.273 322.518 168.789 322.518ZM180.369 321.664V329H179.319V327.908C178.647 328.874 177.947 329.252 176.869 329.252C176.239 329.252 175.707 329.112 175.287 328.818C174.783 328.454 174.531 327.936 174.531 327.25V321.664H175.693V326.788C175.693 327.278 175.861 327.656 176.183 327.908C176.449 328.118 176.799 328.23 177.205 328.23C177.751 328.23 178.213 328.034 178.591 327.628C178.997 327.194 179.207 326.564 179.207 325.738V321.664H180.369ZM183.185 329V321.664H184.263V322.882C184.837 321.986 185.537 321.454 186.699 321.454C187.973 321.454 189.023 322.098 189.023 323.456V329H187.861V323.918C187.861 322.938 187.161 322.476 186.349 322.476C185.033 322.476 184.347 323.61 184.347 324.87V329H183.185ZM194.808 321.664H197.692V322.616H194.808V326.704C194.808 327.782 195.382 328.146 196.446 328.146C196.922 328.146 197.342 328.104 197.692 328.006V329.028C197.23 329.168 196.768 329.196 196.376 329.196C194.598 329.196 193.646 328.51 193.646 326.914V322.616H191.532V321.664H193.646V319.648H194.808V321.664ZM202.832 320.614V319.214H204.232V320.614H202.832ZM204.106 321.664V328.048H206.36V329H200.438V328.048H202.958V322.616H200.438V321.664H204.106ZM209.148 329V321.664H210.226V322.882C210.8 321.986 211.5 321.454 212.662 321.454C213.936 321.454 214.986 322.098 214.986 323.456V329H213.824V323.918C213.824 322.938 213.124 322.476 212.312 322.476C210.996 322.476 210.31 323.61 210.31 324.87V329H209.148ZM220.533 332.052C218.937 332.052 217.733 331.394 217.537 329.84H218.755C218.923 330.666 219.497 331.072 220.561 331.072C222.031 331.072 222.633 330.344 222.633 328.384V327.964C222.199 328.818 221.415 329.252 220.449 329.252C218.279 329.252 217.257 327.558 217.257 325.304C217.257 323.148 218.321 321.44 220.407 321.44C221.401 321.44 222.157 321.818 222.661 322.574V321.664H223.823V327.81C223.823 328.832 223.739 329.602 223.571 330.134C223.165 331.408 222.115 332.052 220.533 332.052ZM220.617 328.16C222.087 328.16 222.661 326.746 222.661 325.388C222.661 323.918 222.073 322.532 220.603 322.532C219.231 322.532 218.475 323.764 218.475 325.346C218.475 326.844 219.119 328.16 220.617 328.16ZM240.781 324.562H236.581V327.852H241.243V329H235.279V319.214H240.991V320.362H236.581V323.414H240.781V324.562ZM249.786 321.664V332.052H248.624V328.076C248.078 328.916 247.364 329.252 246.356 329.252C244.382 329.252 243.22 327.74 243.22 325.43C243.22 323.204 244.298 321.44 246.412 321.44C247.378 321.44 248.204 321.86 248.75 322.63V321.664H249.786ZM246.58 322.532C245.194 322.532 244.438 323.764 244.438 325.346C244.438 326.844 245.11 328.16 246.58 328.16C248.05 328.16 248.624 326.746 248.624 325.388C248.624 323.932 248.036 322.532 246.58 322.532ZM258.258 321.664V329H257.208V327.908C256.536 328.874 255.836 329.252 254.758 329.252C254.128 329.252 253.596 329.112 253.176 328.818C252.672 328.454 252.42 327.936 252.42 327.25V321.664H253.582V326.788C253.582 327.278 253.75 327.656 254.072 327.908C254.338 328.118 254.688 328.23 255.094 328.23C255.64 328.23 256.102 328.034 256.48 327.628C256.886 327.194 257.096 326.564 257.096 325.738V321.664H258.258ZM267.626 328.23V329.112C267.332 329.196 267.108 329.238 266.926 329.238C266.114 329.238 265.708 328.888 265.624 328.132C264.798 328.944 264.07 329.252 263.132 329.252C261.704 329.252 260.738 328.454 260.738 327.096C260.738 325.584 261.886 325.038 262.74 324.898C262.992 324.856 263.538 324.772 264.364 324.66C265.302 324.534 265.61 324.352 265.61 323.876V323.624C265.61 322.896 265.036 322.532 263.93 322.532C262.852 322.532 262.32 322.938 262.222 323.834H261.046C261.074 322.14 262.25 321.454 263.986 321.454C265.792 321.454 266.744 322.154 266.744 323.456V327.684C266.744 328.062 266.954 328.258 267.374 328.258C267.444 328.258 267.556 328.244 267.626 328.23ZM265.61 326.452V325.29C265.12 325.514 264.322 325.64 263.706 325.71C262.614 325.836 261.928 326.144 261.928 327.068C261.928 327.796 262.488 328.23 263.426 328.23C264.448 328.23 265.61 327.474 265.61 326.452ZM272.696 321.664H275.58V322.616H272.696V326.704C272.696 327.782 273.27 328.146 274.334 328.146C274.81 328.146 275.23 328.104 275.58 328.006V329.028C275.118 329.168 274.656 329.196 274.264 329.196C272.486 329.196 271.534 328.51 271.534 326.914V322.616H269.42V321.664H271.534V319.648H272.696V321.664ZM280.721 320.614V319.214H282.121V320.614H280.721ZM281.995 321.664V328.048H284.249V329H278.327V328.048H280.847V322.616H278.327V321.664H281.995ZM289.949 321.44C292.203 321.44 293.267 323.12 293.267 325.346C293.267 327.572 292.203 329.252 289.949 329.252C287.695 329.252 286.631 327.572 286.631 325.346C286.631 323.12 287.695 321.44 289.949 321.44ZM289.949 322.518C288.465 322.518 287.849 323.848 287.849 325.346C287.849 326.844 288.465 328.174 289.949 328.174C291.433 328.174 292.049 326.844 292.049 325.346C292.049 323.848 291.433 322.518 289.949 322.518ZM295.691 329V321.664H296.769V322.882C297.343 321.986 298.043 321.454 299.205 321.454C300.479 321.454 301.529 322.098 301.529 323.456V329H300.367V323.918C300.367 322.938 299.667 322.476 298.855 322.476C297.539 322.476 296.853 323.61 296.853 324.87V329H295.691Z" fill="rgb(var(--colour-main-500))"></path><rect x="138.5" y="414" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M158.228 430.042H156.968C156.949 429.482 156.772 429.02 156.436 428.656C156.1 428.283 155.591 428.096 154.91 428.096C154.238 428.096 153.725 428.245 153.37 428.544C153.025 428.843 152.852 429.211 152.852 429.65C152.852 430.434 153.295 430.929 154.182 431.134L156.184 431.596C156.949 431.773 157.528 432.095 157.92 432.562C158.312 433.029 158.508 433.579 158.508 434.214C158.508 434.858 158.359 435.409 158.06 435.866C157.771 436.314 157.365 436.659 156.842 436.902C156.329 437.135 155.727 437.252 155.036 437.252C153.823 437.252 152.894 436.953 152.25 436.356C151.615 435.749 151.289 434.923 151.27 433.878H152.53C152.539 434.531 152.759 435.063 153.188 435.474C153.617 435.885 154.243 436.09 155.064 436.09C155.801 436.09 156.338 435.931 156.674 435.614C157.019 435.297 157.192 434.891 157.192 434.396C157.192 433.957 157.071 433.612 156.828 433.36C156.595 433.108 156.235 432.926 155.75 432.814L153.72 432.338C153.011 432.17 152.469 431.871 152.096 431.442C151.723 431.003 151.536 430.448 151.536 429.776C151.536 429.225 151.676 428.745 151.956 428.334C152.236 427.914 152.628 427.587 153.132 427.354C153.645 427.111 154.252 426.99 154.952 426.99C155.633 426.99 156.217 427.116 156.702 427.368C157.197 427.62 157.575 427.965 157.836 428.404C158.097 428.833 158.228 429.319 158.228 429.86V430.042ZM163.536 429.664H166.42V430.616H163.536V434.704C163.536 435.245 163.676 435.623 163.956 435.838C164.236 436.043 164.642 436.146 165.174 436.146C165.417 436.146 165.641 436.137 165.846 436.118C166.052 436.09 166.243 436.053 166.42 436.006V437.028C166.187 437.093 165.958 437.135 165.734 437.154C165.51 437.182 165.3 437.196 165.104 437.196C164.218 437.196 163.541 437.014 163.074 436.65C162.608 436.286 162.374 435.707 162.374 434.914V430.616H160.26V429.664H162.374V427.648H163.536V429.664ZM175.775 436.23V437.112C175.485 437.196 175.252 437.238 175.075 437.238C174.291 437.238 173.857 436.869 173.773 436.132C173.362 436.533 172.961 436.823 172.569 437C172.177 437.168 171.747 437.252 171.281 437.252C170.571 437.252 169.993 437.065 169.545 436.692C169.106 436.309 168.887 435.777 168.887 435.096C168.887 434.592 168.994 434.191 169.209 433.892C169.423 433.584 169.685 433.355 169.993 433.206C170.31 433.047 170.609 432.945 170.889 432.898C171.019 432.879 171.22 432.851 171.491 432.814C171.761 432.767 172.102 432.716 172.513 432.66C172.979 432.595 173.301 432.506 173.479 432.394C173.665 432.282 173.759 432.109 173.759 431.876V431.624C173.759 430.896 173.199 430.532 172.079 430.532C171.537 430.532 171.127 430.639 170.847 430.854C170.576 431.059 170.417 431.386 170.371 431.834H169.195C169.213 430.985 169.489 430.378 170.021 430.014C170.562 429.641 171.267 429.454 172.135 429.454C173.04 429.454 173.726 429.627 174.193 429.972C174.659 430.308 174.893 430.803 174.893 431.456V435.684C174.893 436.067 175.103 436.258 175.523 436.258C175.597 436.258 175.681 436.249 175.775 436.23ZM173.759 434.452V433.29C173.516 433.402 173.213 433.491 172.849 433.556C172.494 433.621 172.163 433.673 171.855 433.71C171.313 433.775 170.879 433.901 170.553 434.088C170.235 434.275 170.077 434.601 170.077 435.068C170.077 435.432 170.207 435.717 170.469 435.922C170.739 436.127 171.108 436.23 171.575 436.23C171.92 436.23 172.256 436.155 172.583 436.006C172.919 435.847 173.199 435.633 173.423 435.362C173.647 435.091 173.759 434.788 173.759 434.452ZM180.845 429.664H183.729V430.616H180.845V434.704C180.845 435.245 180.985 435.623 181.265 435.838C181.545 436.043 181.951 436.146 182.483 436.146C182.726 436.146 182.95 436.137 183.155 436.118C183.36 436.09 183.552 436.053 183.729 436.006V437.028C183.496 437.093 183.267 437.135 183.043 437.154C182.819 437.182 182.609 437.196 182.413 437.196C181.526 437.196 180.85 437.014 180.383 436.65C179.916 436.286 179.683 435.707 179.683 434.914V430.616H177.569V429.664H179.683V427.648H180.845V429.664ZM192.635 434.732C192.514 435.497 192.173 436.109 191.613 436.566C191.063 437.023 190.358 437.252 189.499 437.252C188.762 437.252 188.146 437.089 187.651 436.762C187.157 436.426 186.783 435.969 186.531 435.39C186.289 434.811 186.167 434.149 186.167 433.402C186.167 432.581 186.307 431.876 186.587 431.288C186.867 430.7 187.259 430.247 187.763 429.93C188.267 429.603 188.855 429.44 189.527 429.44C190.283 429.44 190.899 429.617 191.375 429.972C191.861 430.327 192.215 430.821 192.439 431.456C192.673 432.091 192.789 432.833 192.789 433.682H187.385C187.404 434.401 187.591 434.998 187.945 435.474C188.3 435.941 188.832 436.174 189.541 436.174C190.503 436.174 191.142 435.693 191.459 434.732H192.635ZM189.513 430.518C188.86 430.518 188.361 430.733 188.015 431.162C187.67 431.591 187.469 432.114 187.413 432.73H191.529C191.529 432.319 191.445 431.951 191.277 431.624C191.119 431.288 190.89 431.022 190.591 430.826C190.293 430.621 189.933 430.518 189.513 430.518Z" fill="rgb(var(--colour-main))"></path><path d="M291.792 427.214H296.916V428.292H292.8L292.394 431.148C292.664 430.905 292.963 430.737 293.29 430.644C293.616 430.551 293.948 430.504 294.284 430.504C294.872 430.504 295.404 430.639 295.88 430.91C296.356 431.171 296.734 431.549 297.014 432.044C297.294 432.529 297.434 433.113 297.434 433.794C297.434 434.457 297.294 435.049 297.014 435.572C296.743 436.095 296.356 436.505 295.852 436.804C295.348 437.103 294.741 437.252 294.032 437.252C293.752 437.252 293.439 437.215 293.094 437.14C292.748 437.065 292.408 436.935 292.072 436.748C291.745 436.552 291.46 436.281 291.218 435.936C290.975 435.591 290.816 435.147 290.742 434.606H291.988C292.268 435.651 292.949 436.174 294.032 436.174C294.741 436.174 295.273 435.959 295.628 435.53C295.992 435.091 296.174 434.531 296.174 433.85C296.174 433.169 296.001 432.613 295.656 432.184C295.32 431.755 294.792 431.54 294.074 431.54C293.682 431.54 293.332 431.619 293.024 431.778C292.725 431.927 292.445 432.175 292.184 432.52H291.064L291.792 427.214Z" fill="rgb(var(--colour-main))"></path><rect x="310.5" y="414" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M330.55 429.944H329.22C329.08 429.412 328.861 428.978 328.562 428.642C328.263 428.306 327.801 428.138 327.176 428.138C326.56 428.138 326.061 428.306 325.678 428.642C325.305 428.978 325.034 429.449 324.866 430.056C324.698 430.653 324.614 431.344 324.614 432.128C324.614 433.453 324.833 434.447 325.272 435.11C325.711 435.773 326.345 436.104 327.176 436.104C327.829 436.104 328.315 435.899 328.632 435.488C328.949 435.077 329.178 434.475 329.318 433.682H330.648C330.517 434.867 330.144 435.759 329.528 436.356C328.912 436.953 328.123 437.252 327.162 437.252C326.313 437.252 325.599 437.047 325.02 436.636C324.441 436.216 324.003 435.623 323.704 434.858C323.405 434.093 323.256 433.187 323.256 432.142C323.256 431.442 323.326 430.779 323.466 430.154C323.615 429.529 323.844 428.983 324.152 428.516C324.46 428.04 324.866 427.667 325.37 427.396C325.874 427.125 326.49 426.99 327.218 426.99C327.871 426.99 328.427 427.121 328.884 427.382C329.341 427.643 329.71 427.998 329.99 428.446C330.27 428.885 330.457 429.384 330.55 429.944ZM332.568 437V426.794H333.73V430.756C333.992 430.373 334.304 430.061 334.668 429.818C335.032 429.575 335.504 429.454 336.082 429.454C336.512 429.454 336.899 429.529 337.244 429.678C337.599 429.818 337.879 430.037 338.084 430.336C338.299 430.625 338.406 430.999 338.406 431.456V437H337.244V431.918C337.244 431.423 337.095 431.059 336.796 430.826C336.498 430.593 336.143 430.476 335.732 430.476C335.294 430.476 334.925 430.588 334.626 430.812C334.328 431.036 334.104 431.33 333.954 431.694C333.805 432.058 333.73 432.45 333.73 432.87V437H332.568ZM347.775 436.23V437.112C347.485 437.196 347.252 437.238 347.075 437.238C346.291 437.238 345.857 436.869 345.773 436.132C345.362 436.533 344.961 436.823 344.569 437C344.177 437.168 343.747 437.252 343.281 437.252C342.571 437.252 341.993 437.065 341.545 436.692C341.106 436.309 340.887 435.777 340.887 435.096C340.887 434.592 340.994 434.191 341.209 433.892C341.423 433.584 341.685 433.355 341.993 433.206C342.31 433.047 342.609 432.945 342.889 432.898C343.019 432.879 343.22 432.851 343.491 432.814C343.761 432.767 344.102 432.716 344.513 432.66C344.979 432.595 345.301 432.506 345.479 432.394C345.665 432.282 345.759 432.109 345.759 431.876V431.624C345.759 430.896 345.199 430.532 344.079 430.532C343.537 430.532 343.127 430.639 342.847 430.854C342.576 431.059 342.417 431.386 342.371 431.834H341.195C341.213 430.985 341.489 430.378 342.021 430.014C342.562 429.641 343.267 429.454 344.135 429.454C345.04 429.454 345.726 429.627 346.193 429.972C346.659 430.308 346.893 430.803 346.893 431.456V435.684C346.893 436.067 347.103 436.258 347.523 436.258C347.597 436.258 347.681 436.249 347.775 436.23ZM345.759 434.452V433.29C345.516 433.402 345.213 433.491 344.849 433.556C344.494 433.621 344.163 433.673 343.855 433.71C343.313 433.775 342.879 433.901 342.553 434.088C342.235 434.275 342.077 434.601 342.077 435.068C342.077 435.432 342.207 435.717 342.469 435.922C342.739 436.127 343.108 436.23 343.575 436.23C343.92 436.23 344.256 436.155 344.583 436.006C344.919 435.847 345.199 435.633 345.423 435.362C345.647 435.091 345.759 434.788 345.759 434.452ZM349.877 437V429.664H350.955V430.882C351.244 430.434 351.576 430.084 351.949 429.832C352.332 429.58 352.812 429.454 353.391 429.454C353.82 429.454 354.208 429.529 354.553 429.678C354.908 429.818 355.188 430.037 355.393 430.336C355.608 430.625 355.715 430.999 355.715 431.456V437H354.553V431.918C354.553 431.423 354.404 431.059 354.105 430.826C353.806 430.593 353.452 430.476 353.041 430.476C352.602 430.476 352.234 430.588 351.935 430.812C351.636 431.036 351.412 431.33 351.263 431.694C351.114 432.058 351.039 432.45 351.039 432.87V437H349.877ZM361.261 440.052C360.468 440.052 359.796 439.875 359.245 439.52C358.695 439.175 358.368 438.615 358.265 437.84H359.483C359.651 438.661 360.253 439.072 361.289 439.072C362.027 439.072 362.554 438.867 362.871 438.456C363.198 438.055 363.361 437.364 363.361 436.384V435.964C363.147 436.393 362.848 436.715 362.465 436.93C362.092 437.145 361.663 437.252 361.177 437.252C360.459 437.252 359.861 437.079 359.385 436.734C358.909 436.389 358.555 435.917 358.321 435.32C358.097 434.723 357.985 434.051 357.985 433.304C357.985 432.585 358.102 431.937 358.335 431.358C358.569 430.77 358.919 430.303 359.385 429.958C359.861 429.613 360.445 429.44 361.135 429.44C362.134 429.44 362.885 429.818 363.389 430.574V429.664H364.551V435.81C364.551 436.827 364.467 437.602 364.299 438.134C364.094 438.769 363.735 439.245 363.221 439.562C362.708 439.889 362.055 440.052 361.261 440.052ZM361.345 436.16C361.84 436.16 362.237 436.025 362.535 435.754C362.834 435.474 363.049 435.124 363.179 434.704C363.319 434.275 363.389 433.836 363.389 433.388C363.389 432.893 363.319 432.431 363.179 432.002C363.039 431.563 362.82 431.209 362.521 430.938C362.223 430.667 361.826 430.532 361.331 430.532C360.874 430.532 360.487 430.658 360.169 430.91C359.852 431.153 359.609 431.489 359.441 431.918C359.283 432.338 359.203 432.814 359.203 433.346C359.203 433.841 359.278 434.303 359.427 434.732C359.577 435.161 359.805 435.507 360.113 435.768C360.431 436.029 360.841 436.16 361.345 436.16ZM373.289 434.732C373.168 435.497 372.827 436.109 372.267 436.566C371.717 437.023 371.012 437.252 370.153 437.252C369.416 437.252 368.8 437.089 368.305 436.762C367.811 436.426 367.437 435.969 367.185 435.39C366.943 434.811 366.821 434.149 366.821 433.402C366.821 432.581 366.961 431.876 367.241 431.288C367.521 430.7 367.913 430.247 368.417 429.93C368.921 429.603 369.509 429.44 370.181 429.44C370.937 429.44 371.553 429.617 372.029 429.972C372.515 430.327 372.869 430.821 373.093 431.456C373.327 432.091 373.443 432.833 373.443 433.682H368.039C368.058 434.401 368.245 434.998 368.599 435.474C368.954 435.941 369.486 436.174 370.195 436.174C371.157 436.174 371.796 435.693 372.113 434.732H373.289ZM370.167 430.518C369.514 430.518 369.015 430.733 368.669 431.162C368.324 431.591 368.123 432.114 368.067 432.73H372.183C372.183 432.319 372.099 431.951 371.931 431.624C371.773 431.288 371.544 431.022 371.245 430.826C370.947 430.621 370.587 430.518 370.167 430.518Z" fill="rgb(var(--colour-main))"></path><path d="M463.792 427.214H468.916V428.292H464.8L464.394 431.148C464.664 430.905 464.963 430.737 465.29 430.644C465.616 430.551 465.948 430.504 466.284 430.504C466.872 430.504 467.404 430.639 467.88 430.91C468.356 431.171 468.734 431.549 469.014 432.044C469.294 432.529 469.434 433.113 469.434 433.794C469.434 434.457 469.294 435.049 469.014 435.572C468.743 436.095 468.356 436.505 467.852 436.804C467.348 437.103 466.741 437.252 466.032 437.252C465.752 437.252 465.439 437.215 465.094 437.14C464.748 437.065 464.408 436.935 464.072 436.748C463.745 436.552 463.46 436.281 463.218 435.936C462.975 435.591 462.816 435.147 462.742 434.606H463.988C464.268 435.651 464.949 436.174 466.032 436.174C466.741 436.174 467.273 435.959 467.628 435.53C467.992 435.091 468.174 434.531 468.174 433.85C468.174 433.169 468.001 432.613 467.656 432.184C467.32 431.755 466.792 431.54 466.074 431.54C465.682 431.54 465.332 431.619 465.024 431.778C464.725 431.927 464.445 432.175 464.184 432.52H463.064L463.792 427.214Z" fill="rgb(var(--colour-main))"></path></svg></div><div class="block tablet:hidden"><svg width="100%" height="100%" viewBox="0 0 378 549" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="378" height="549" fill="rgb(var(--colour-negative))"></rect><path d="M23.096 32H19.288V22.214H22.774C23.6513 22.214 24.3607 22.438 24.902 22.886C25.4527 23.3247 25.728 23.9313 25.728 24.706C25.728 25.1727 25.616 25.616 25.392 26.036C25.1773 26.456 24.8553 26.7407 24.426 26.89C24.93 27.058 25.3267 27.3427 25.616 27.744C25.9053 28.136 26.05 28.626 26.05 29.214C26.05 29.6993 25.938 30.1567 25.714 30.586C25.49 31.006 25.1587 31.3467 24.72 31.608C24.2813 31.8693 23.74 32 23.096 32ZM20.562 23.32V26.414H22.578C23.1007 26.414 23.5347 26.3113 23.88 26.106C24.2253 25.8913 24.398 25.4853 24.398 24.888C24.398 24.2813 24.2253 23.8707 23.88 23.656C23.5347 23.432 23.1007 23.32 22.578 23.32H20.562ZM20.562 27.52V30.894H22.942C23.558 30.894 24.006 30.7353 24.286 30.418C24.5753 30.1007 24.72 29.6947 24.72 29.2C24.72 28.7053 24.5753 28.304 24.286 27.996C24.006 27.6787 23.558 27.52 22.942 27.52H20.562ZM34.6203 31.23V32.112C34.331 32.196 34.0976 32.238 33.9203 32.238C33.1363 32.238 32.7023 31.8693 32.6183 31.132C32.2076 31.5333 31.8063 31.8227 31.4143 32C31.0223 32.168 30.593 32.252 30.1263 32.252C29.417 32.252 28.8383 32.0653 28.3903 31.692C27.9516 31.3093 27.7323 30.7773 27.7323 30.096C27.7323 29.592 27.8396 29.1907 28.0543 28.892C28.269 28.584 28.5303 28.3553 28.8383 28.206C29.1556 28.0473 29.4543 27.9447 29.7343 27.898C29.865 27.8793 30.0656 27.8513 30.3363 27.814C30.607 27.7673 30.9476 27.716 31.3583 27.66C31.825 27.5947 32.147 27.506 32.3243 27.394C32.511 27.282 32.6043 27.1093 32.6043 26.876V26.624C32.6043 25.896 32.0443 25.532 30.9243 25.532C30.383 25.532 29.9723 25.6393 29.6923 25.854C29.4216 26.0593 29.263 26.386 29.2163 26.834H28.0403C28.059 25.9847 28.3343 25.378 28.8663 25.014C29.4076 24.6407 30.1123 24.454 30.9803 24.454C31.8856 24.454 32.5716 24.6267 33.0383 24.972C33.505 25.308 33.7383 25.8027 33.7383 26.456V30.684C33.7383 31.0667 33.9483 31.258 34.3683 31.258C34.443 31.258 34.527 31.2487 34.6203 31.23ZM32.6043 29.452V28.29C32.3616 28.402 32.0583 28.4907 31.6943 28.556C31.3396 28.6213 31.0083 28.6727 30.7003 28.71C30.159 28.7753 29.725 28.9013 29.3983 29.088C29.081 29.2747 28.9223 29.6013 28.9223 30.068C28.9223 30.432 29.053 30.7167 29.3143 30.922C29.585 31.1273 29.9536 31.23 30.4203 31.23C30.7656 31.23 31.1016 31.1553 31.4283 31.006C31.7643 30.8473 32.0443 30.6327 32.2683 30.362C32.4923 30.0913 32.6043 29.788 32.6043 29.452ZM40.6146 21.794V31.048H42.8686V32H36.9466V31.048H39.4806V22.746H36.9466V21.794H40.6146ZM51.9289 31.23V32.112C51.6396 32.196 51.4062 32.238 51.2289 32.238C50.4449 32.238 50.0109 31.8693 49.9269 31.132C49.5162 31.5333 49.1149 31.8227 48.7229 32C48.3309 32.168 47.9016 32.252 47.4349 32.252C46.7256 32.252 46.1469 32.0653 45.6989 31.692C45.2602 31.3093 45.0409 30.7773 45.0409 30.096C45.0409 29.592 45.1482 29.1907 45.3629 28.892C45.5776 28.584 45.8389 28.3553 46.1469 28.206C46.4642 28.0473 46.7629 27.9447 47.0429 27.898C47.1736 27.8793 47.3742 27.8513 47.6449 27.814C47.9156 27.7673 48.2562 27.716 48.6669 27.66C49.1336 27.5947 49.4556 27.506 49.6329 27.394C49.8196 27.282 49.9129 27.1093 49.9129 26.876V26.624C49.9129 25.896 49.3529 25.532 48.2329 25.532C47.6916 25.532 47.2809 25.6393 47.0009 25.854C46.7302 26.0593 46.5716 26.386 46.5249 26.834H45.3489C45.3676 25.9847 45.6429 25.378 46.1749 25.014C46.7162 24.6407 47.4209 24.454 48.2889 24.454C49.1942 24.454 49.8802 24.6267 50.3469 24.972C50.8136 25.308 51.0469 25.8027 51.0469 26.456V30.684C51.0469 31.0667 51.2569 31.258 51.6769 31.258C51.7516 31.258 51.8356 31.2487 51.9289 31.23ZM49.9129 29.452V28.29C49.6702 28.402 49.3669 28.4907 49.0029 28.556C48.6482 28.6213 48.3169 28.6727 48.0089 28.71C47.4676 28.7753 47.0336 28.9013 46.7069 29.088C46.3896 29.2747 46.2309 29.6013 46.2309 30.068C46.2309 30.432 46.3616 30.7167 46.6229 30.922C46.8936 31.1273 47.2622 31.23 47.7289 31.23C48.0742 31.23 48.4102 31.1553 48.7369 31.006C49.0729 30.8473 49.3529 30.6327 49.5769 30.362C49.8009 30.0913 49.9129 29.788 49.9129 29.452ZM54.0312 32V24.664H55.1092V25.882C55.3985 25.434 55.7299 25.084 56.1032 24.832C56.4859 24.58 56.9665 24.454 57.5452 24.454C57.9745 24.454 58.3619 24.5287 58.7072 24.678C59.0619 24.818 59.3419 25.0373 59.5472 25.336C59.7619 25.6253 59.8692 25.9987 59.8692 26.456V32H58.7072V26.918C58.7072 26.4233 58.5579 26.0593 58.2592 25.826C57.9605 25.5927 57.6059 25.476 57.1952 25.476C56.7565 25.476 56.3879 25.588 56.0892 25.812C55.7905 26.036 55.5665 26.33 55.4172 26.694C55.2679 27.058 55.1932 27.45 55.1932 27.87V32H54.0312ZM68.7335 27.086H67.5575C67.4922 26.6007 67.3055 26.218 66.9975 25.938C66.6895 25.658 66.2788 25.518 65.7655 25.518C65.2615 25.518 64.8555 25.658 64.5475 25.938C64.2395 26.218 64.0155 26.582 63.8755 27.03C63.7355 27.4687 63.6655 27.9307 63.6655 28.416C63.6655 28.9013 63.7402 29.354 63.8895 29.774C64.0388 30.194 64.2722 30.5347 64.5895 30.796C64.9068 31.048 65.3082 31.174 65.7935 31.174C66.8295 31.174 67.4455 30.5953 67.6415 29.438H68.8175C68.7428 30.3153 68.4395 31.006 67.9075 31.51C67.3848 32.0047 66.6708 32.252 65.7655 32.252C65.0562 32.252 64.4542 32.084 63.9595 31.748C63.4648 31.4027 63.0868 30.9407 62.8255 30.362C62.5735 29.7833 62.4475 29.1347 62.4475 28.416C62.4475 27.6787 62.5735 27.0113 62.8255 26.414C63.0775 25.8167 63.4508 25.3407 63.9455 24.986C64.4402 24.622 65.0515 24.44 65.7795 24.44C66.6755 24.44 67.3848 24.6873 67.9075 25.182C68.4395 25.6767 68.7148 26.3113 68.7335 27.086ZM77.4438 29.732C77.3224 30.4973 76.9818 31.1087 76.4218 31.566C75.8711 32.0233 75.1664 32.252 74.3078 32.252C73.5704 32.252 72.9544 32.0887 72.4598 31.762C71.9651 31.426 71.5918 30.9687 71.3398 30.39C71.0971 29.8113 70.9758 29.1487 70.9758 28.402C70.9758 27.5807 71.1158 26.876 71.3958 26.288C71.6758 25.7 72.0678 25.2473 72.5718 24.93C73.0758 24.6033 73.6638 24.44 74.3358 24.44C75.0918 24.44 75.7078 24.6173 76.1838 24.972C76.6691 25.3267 77.0238 25.8213 77.2478 26.456C77.4811 27.0907 77.5978 27.8327 77.5978 28.682H72.1938C72.2124 29.4007 72.3991 29.998 72.7538 30.474C73.1084 30.9407 73.6404 31.174 74.3498 31.174C75.3111 31.174 75.9504 30.6933 76.2678 29.732H77.4438ZM74.3218 25.518C73.6684 25.518 73.1691 25.7327 72.8238 26.162C72.4784 26.5913 72.2778 27.114 72.2218 27.73H76.3378C76.3378 27.3193 76.2538 26.9507 76.0858 26.624C75.9271 26.288 75.6984 26.022 75.3998 25.826C75.1011 25.6207 74.7418 25.518 74.3218 25.518ZM84.8521 21.794H86.0141V32H84.9781V30.964C84.3901 31.8227 83.6107 32.252 82.6401 32.252C81.9214 32.252 81.3241 32.0793 80.8481 31.734C80.3721 31.3793 80.0174 30.8987 79.7841 30.292C79.5601 29.6853 79.4481 29.0087 79.4481 28.262C79.4481 27.5527 79.5647 26.9133 79.7981 26.344C80.0314 25.7653 80.3814 25.3033 80.8481 24.958C81.3241 24.6127 81.9074 24.44 82.5981 24.44C83.5967 24.44 84.3481 24.818 84.8521 25.574V21.794ZM82.7941 25.532C82.3367 25.532 81.9494 25.658 81.6321 25.91C81.3147 26.1527 81.0721 26.4887 80.9041 26.918C80.7454 27.338 80.6661 27.814 80.6661 28.346C80.6661 28.8407 80.7407 29.3027 80.8901 29.732C81.0394 30.1613 81.2681 30.5067 81.5761 30.768C81.8934 31.0293 82.3041 31.16 82.8081 31.16C83.3027 31.16 83.6994 31.0247 83.9981 30.754C84.2967 30.474 84.5114 30.124 84.6421 29.704C84.7821 29.2747 84.8521 28.836 84.8521 28.388C84.8521 27.8933 84.7821 27.4313 84.6421 27.002C84.5021 26.5633 84.2827 26.2087 83.9841 25.938C83.6854 25.6673 83.2887 25.532 82.7941 25.532ZM102.973 27.562H98.7727V30.852H103.435V32H97.4707V22.214H103.183V23.362H98.7727V26.414H102.973V27.562ZM105.957 32V24.664H107.035V25.882C107.324 25.434 107.656 25.084 108.029 24.832C108.412 24.58 108.892 24.454 109.471 24.454C109.9 24.454 110.288 24.5287 110.633 24.678C110.988 24.818 111.268 25.0373 111.473 25.336C111.688 25.6253 111.795 25.9987 111.795 26.456V32H110.633V26.918C110.633 26.4233 110.484 26.0593 110.185 25.826C109.886 25.5927 109.532 25.476 109.121 25.476C108.682 25.476 108.314 25.588 108.015 25.812C107.716 26.036 107.492 26.33 107.343 26.694C107.194 27.058 107.119 27.45 107.119 27.87V32H105.957ZM117.579 24.664H120.463V25.616H117.579V29.704C117.579 30.2453 117.719 30.6233 117.999 30.838C118.279 31.0433 118.685 31.146 119.217 31.146C119.46 31.146 119.684 31.1367 119.889 31.118C120.095 31.09 120.286 31.0527 120.463 31.006V32.028C120.23 32.0933 120.001 32.1353 119.777 32.154C119.553 32.182 119.343 32.196 119.147 32.196C118.261 32.196 117.584 32.014 117.117 31.65C116.651 31.286 116.417 30.7073 116.417 29.914V25.616H114.303V24.664H116.417V22.648H117.579V24.664ZM123.588 32V24.664H124.666V26.246C124.908 25.7233 125.258 25.294 125.716 24.958C126.173 24.622 126.7 24.454 127.298 24.454C128.138 24.454 128.777 24.6687 129.216 25.098C129.664 25.5273 129.92 26.106 129.986 26.834H128.824C128.74 26.3953 128.567 26.0593 128.306 25.826C128.054 25.5927 127.68 25.476 127.186 25.476C126.7 25.476 126.276 25.6067 125.912 25.868C125.548 26.12 125.263 26.47 125.058 26.918C124.862 27.3567 124.764 27.8653 124.764 28.444V32H123.588ZM134.888 33.54C134.701 34.044 134.435 34.422 134.09 34.674C133.745 34.926 133.343 35.052 132.886 35.052C132.531 35.052 132.214 35.0053 131.934 34.912V33.82C132.093 33.8573 132.233 33.8807 132.354 33.89C132.485 33.8993 132.611 33.904 132.732 33.904C133.003 33.904 133.217 33.848 133.376 33.736C133.535 33.6333 133.665 33.4513 133.768 33.19L134.216 32.112L131.5 24.664H132.732L134.874 30.614L136.988 24.664H138.192L134.888 33.54Z" fill="rgb(var(--colour-main))"></path><rect x="18" y="126" width="342" height="54" stroke="rgb(var(--colour-main-500))"></rect><path d="M36 144H42C42 147.314 39.3137 150 36 150V144Z" fill="rgb(var(--colour-inactive-br))"></path><path d="M36 138C39.3137 138 42 140.686 42 144H36V138Z" fill="rgb(var(--colour-inactive-tr))"></path><path d="M30 144H36V150C32.6863 150 30 147.314 30 144Z" fill="rgb(var(--colour-inactive-bl))"></path><path d="M30 144C30 140.686 32.6863 138 36 138V144H30Z" fill="rgb(var(--colour-inactive-tl))"></path><path d="M36 144H42C42 147.314 39.3137 150 36 150V144Z" fill="#FFE000"></path><path d="M36 138C39.3137 138 42 140.686 42 144H36V138Z" fill="rgb(var(--colour-income-blue))"></path><path d="M30 144H36V150C32.6863 150 30 147.314 30 144Z" fill="#EC3425"></path><path d="M30 144C30 140.686 32.6863 138 36 138V144H30Z" fill="#5AC93B"></path><path d="M54.084 144.562H49.884V147.852H54.546V149H48.582V139.214H54.294V140.362H49.884V143.414H54.084V144.562ZM57.0683 149V141.664H58.1463V142.882C58.4356 142.434 58.767 142.084 59.1403 141.832C59.523 141.58 60.0036 141.454 60.5823 141.454C61.0116 141.454 61.399 141.529 61.7443 141.678C62.099 141.818 62.379 142.037 62.5843 142.336C62.799 142.625 62.9063 142.999 62.9063 143.456V149H61.7443V143.918C61.7443 143.423 61.595 143.059 61.2963 142.826C60.9976 142.593 60.643 142.476 60.2323 142.476C59.7936 142.476 59.425 142.588 59.1263 142.812C58.8276 143.036 58.6036 143.33 58.4543 143.694C58.305 144.058 58.2303 144.45 58.2303 144.87V149H57.0683ZM68.6906 141.664H71.5746V142.616H68.6906V146.704C68.6906 147.245 68.8306 147.623 69.1106 147.838C69.3906 148.043 69.7966 148.146 70.3286 148.146C70.5713 148.146 70.7953 148.137 71.0006 148.118C71.2059 148.09 71.3973 148.053 71.5746 148.006V149.028C71.3413 149.093 71.1126 149.135 70.8886 149.154C70.6646 149.182 70.4546 149.196 70.2586 149.196C69.3719 149.196 68.6953 149.014 68.2286 148.65C67.7619 148.286 67.5286 147.707 67.5286 146.914V142.616H65.4146V141.664H67.5286V139.648H68.6906V141.664ZM74.6989 149V141.664H75.7769V143.246C76.0196 142.723 76.3696 142.294 76.8269 141.958C77.2842 141.622 77.8116 141.454 78.4089 141.454C79.2489 141.454 79.8882 141.669 80.3269 142.098C80.7749 142.527 81.0316 143.106 81.0969 143.834H79.9349C79.8509 143.395 79.6782 143.059 79.4169 142.826C79.1649 142.593 78.7916 142.476 78.2969 142.476C77.8116 142.476 77.3869 142.607 77.0229 142.868C76.6589 143.12 76.3742 143.47 76.1689 143.918C75.9729 144.357 75.8749 144.865 75.8749 145.444V149H74.6989ZM85.9992 150.54C85.8125 151.044 85.5465 151.422 85.2012 151.674C84.8559 151.926 84.4545 152.052 83.9972 152.052C83.6425 152.052 83.3252 152.005 83.0452 151.912V150.82C83.2039 150.857 83.3439 150.881 83.4652 150.89C83.5959 150.899 83.7219 150.904 83.8432 150.904C84.1139 150.904 84.3285 150.848 84.4872 150.736C84.6459 150.633 84.7765 150.451 84.8792 150.19L85.3272 149.112L82.6112 141.664H83.8432L85.9852 147.614L88.0992 141.664H89.3032L85.9992 150.54Z" fill="rgb(var(--colour-main))"></path><rect x="18" y="216" width="342" height="36" fill="rgb(var(--colour-negative))"></rect><rect x="18" y="216" width="342" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="36" y="228" width="12" height="12" rx="6" fill="rgb(var(--colour-negative))"></rect><path d="M36 234H42V240C38.6863 240 36 237.314 36 234Z" fill="#EC3425"></path><path d="M55.736 229.214H57.038V237.852H61.7V239H55.736V229.214ZM66.4063 230.614V229.214H67.8063V230.614H66.4063ZM67.6803 231.664V238.048H69.9343V239H64.0123V238.048H66.5323V232.616H64.0123V231.664H67.6803ZM72.7226 239V231.664H73.8006V232.882C74.0899 232.434 74.4213 232.084 74.7946 231.832C75.1773 231.58 75.6579 231.454 76.2366 231.454C76.6659 231.454 77.0533 231.529 77.3986 231.678C77.7533 231.818 78.0333 232.037 78.2386 232.336C78.4533 232.625 78.5606 232.999 78.5606 233.456V239H77.3986V233.918C77.3986 233.423 77.2493 233.059 76.9506 232.826C76.6519 232.593 76.2973 232.476 75.8866 232.476C75.4479 232.476 75.0793 232.588 74.7806 232.812C74.4819 233.036 74.2579 233.33 74.1086 233.694C73.9593 234.058 73.8846 234.45 73.8846 234.87V239H72.7226ZM87.4809 236.732C87.3596 237.497 87.0189 238.109 86.4589 238.566C85.9082 239.023 85.2036 239.252 84.3449 239.252C83.6076 239.252 82.9916 239.089 82.4969 238.762C82.0022 238.426 81.6289 237.969 81.3769 237.39C81.1342 236.811 81.0129 236.149 81.0129 235.402C81.0129 234.581 81.1529 233.876 81.4329 233.288C81.7129 232.7 82.1049 232.247 82.6089 231.93C83.1129 231.603 83.7009 231.44 84.3729 231.44C85.1289 231.44 85.7449 231.617 86.2209 231.972C86.7062 232.327 87.0609 232.821 87.2849 233.456C87.5182 234.091 87.6349 234.833 87.6349 235.682H82.2309C82.2496 236.401 82.4362 236.998 82.7909 237.474C83.1456 237.941 83.6776 238.174 84.3869 238.174C85.3482 238.174 85.9876 237.693 86.3049 236.732H87.4809ZM84.3589 232.518C83.7056 232.518 83.2062 232.733 82.8609 233.162C82.5156 233.591 82.3149 234.114 82.2589 234.73H86.3749C86.3749 234.319 86.2909 233.951 86.1229 233.624C85.9642 233.288 85.7356 233.022 85.4369 232.826C85.1382 232.621 84.7789 232.518 84.3589 232.518Z" fill="rgb(var(--colour-main))"></path><path d="M334.946 229.214H340.07V230.292H335.954L335.548 233.148C335.819 232.905 336.117 232.737 336.444 232.644C336.771 232.551 337.102 232.504 337.438 232.504C338.026 232.504 338.558 232.639 339.034 232.91C339.51 233.171 339.888 233.549 340.168 234.044C340.448 234.529 340.588 235.113 340.588 235.794C340.588 236.457 340.448 237.049 340.168 237.572C339.897 238.095 339.51 238.505 339.006 238.804C338.502 239.103 337.895 239.252 337.186 239.252C336.906 239.252 336.593 239.215 336.248 239.14C335.903 239.065 335.562 238.935 335.226 238.748C334.899 238.552 334.615 238.281 334.372 237.936C334.129 237.591 333.971 237.147 333.896 236.606H335.142C335.422 237.651 336.103 238.174 337.186 238.174C337.895 238.174 338.427 237.959 338.782 237.53C339.146 237.091 339.328 236.531 339.328 235.85C339.328 235.169 339.155 234.613 338.81 234.184C338.474 233.755 337.947 233.54 337.228 233.54C336.836 233.54 336.486 233.619 336.178 233.778C335.879 233.927 335.599 234.175 335.338 234.52H334.218L334.946 229.214Z" fill="rgb(var(--colour-main))"></path><rect x="18" y="252" width="342" height="36" fill="rgb(var(--colour-negative))"></rect><rect x="18" y="252" width="342" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="36" y="264" width="12" height="12" rx="6" fill="rgb(var(--colour-negative))"></rect><path d="M42 264C45.3137 264 48 266.686 48 270H42V264Z" fill="rgb(var(--colour-income-blue))"></path><path d="M55.736 265.214H57.038V273.852H61.7V275H55.736V265.214ZM66.4063 266.614V265.214H67.8063V266.614H66.4063ZM67.6803 267.664V274.048H69.9343V275H64.0123V274.048H66.5323V268.616H64.0123V267.664H67.6803ZM72.7226 275V267.664H73.8006V268.882C74.0899 268.434 74.4213 268.084 74.7946 267.832C75.1773 267.58 75.6579 267.454 76.2366 267.454C76.6659 267.454 77.0533 267.529 77.3986 267.678C77.7533 267.818 78.0333 268.037 78.2386 268.336C78.4533 268.625 78.5606 268.999 78.5606 269.456V275H77.3986V269.918C77.3986 269.423 77.2493 269.059 76.9506 268.826C76.6519 268.593 76.2973 268.476 75.8866 268.476C75.4479 268.476 75.0793 268.588 74.7806 268.812C74.4819 269.036 74.2579 269.33 74.1086 269.694C73.9593 270.058 73.8846 270.45 73.8846 270.87V275H72.7226ZM87.4809 272.732C87.3596 273.497 87.0189 274.109 86.4589 274.566C85.9082 275.023 85.2036 275.252 84.3449 275.252C83.6076 275.252 82.9916 275.089 82.4969 274.762C82.0022 274.426 81.6289 273.969 81.3769 273.39C81.1342 272.811 81.0129 272.149 81.0129 271.402C81.0129 270.581 81.1529 269.876 81.4329 269.288C81.7129 268.7 82.1049 268.247 82.6089 267.93C83.1129 267.603 83.7009 267.44 84.3729 267.44C85.1289 267.44 85.7449 267.617 86.2209 267.972C86.7062 268.327 87.0609 268.821 87.2849 269.456C87.5182 270.091 87.6349 270.833 87.6349 271.682H82.2309C82.2496 272.401 82.4362 272.998 82.7909 273.474C83.1456 273.941 83.6776 274.174 84.3869 274.174C85.3482 274.174 85.9876 273.693 86.3049 272.732H87.4809ZM84.3589 268.518C83.7056 268.518 83.2062 268.733 82.8609 269.162C82.5156 269.591 82.3149 270.114 82.2589 270.73H86.3749C86.3749 270.319 86.2909 269.951 86.1229 269.624C85.9642 269.288 85.7356 269.022 85.4369 268.826C85.1382 268.621 84.7789 268.518 84.3589 268.518Z" fill="rgb(var(--colour-main))"></path><path d="M334.946 265.214H340.07V266.292H335.954L335.548 269.148C335.819 268.905 336.117 268.737 336.444 268.644C336.771 268.551 337.102 268.504 337.438 268.504C338.026 268.504 338.558 268.639 339.034 268.91C339.51 269.171 339.888 269.549 340.168 270.044C340.448 270.529 340.588 271.113 340.588 271.794C340.588 272.457 340.448 273.049 340.168 273.572C339.897 274.095 339.51 274.505 339.006 274.804C338.502 275.103 337.895 275.252 337.186 275.252C336.906 275.252 336.593 275.215 336.248 275.14C335.903 275.065 335.562 274.935 335.226 274.748C334.899 274.552 334.615 274.281 334.372 273.936C334.129 273.591 333.971 273.147 333.896 272.606H335.142C335.422 273.651 336.103 274.174 337.186 274.174C337.895 274.174 338.427 273.959 338.782 273.53C339.146 273.091 339.328 272.531 339.328 271.85C339.328 271.169 339.155 270.613 338.81 270.184C338.474 269.755 337.947 269.54 337.228 269.54C336.836 269.54 336.486 269.619 336.178 269.778C335.879 269.927 335.599 270.175 335.338 270.52H334.218L334.946 265.214Z" fill="rgb(var(--colour-main))"></path><rect x="18" y="180" width="342" height="36" fill="rgb(var(--colour-negative))"></rect><rect x="18" y="180" width="342" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="36" y="192" width="12" height="12" rx="6" fill="rgb(var(--colour-negative))"></rect><path d="M36 198C36 194.686 38.6863 192 42 192V198H36Z" fill="#5AC93B"></path><path d="M55.736 193.214H57.038V201.852H61.7V203H55.736V193.214ZM66.4063 194.614V193.214H67.8063V194.614H66.4063ZM67.6803 195.664V202.048H69.9343V203H64.0123V202.048H66.5323V196.616H64.0123V195.664H67.6803ZM72.7226 203V195.664H73.8006V196.882C74.0899 196.434 74.4213 196.084 74.7946 195.832C75.1773 195.58 75.6579 195.454 76.2366 195.454C76.6659 195.454 77.0533 195.529 77.3986 195.678C77.7533 195.818 78.0333 196.037 78.2386 196.336C78.4533 196.625 78.5606 196.999 78.5606 197.456V203H77.3986V197.918C77.3986 197.423 77.2493 197.059 76.9506 196.826C76.6519 196.593 76.2973 196.476 75.8866 196.476C75.4479 196.476 75.0793 196.588 74.7806 196.812C74.4819 197.036 74.2579 197.33 74.1086 197.694C73.9593 198.058 73.8846 198.45 73.8846 198.87V203H72.7226ZM87.4809 200.732C87.3596 201.497 87.0189 202.109 86.4589 202.566C85.9082 203.023 85.2036 203.252 84.3449 203.252C83.6076 203.252 82.9916 203.089 82.4969 202.762C82.0022 202.426 81.6289 201.969 81.3769 201.39C81.1342 200.811 81.0129 200.149 81.0129 199.402C81.0129 198.581 81.1529 197.876 81.4329 197.288C81.7129 196.7 82.1049 196.247 82.6089 195.93C83.1129 195.603 83.7009 195.44 84.3729 195.44C85.1289 195.44 85.7449 195.617 86.2209 195.972C86.7062 196.327 87.0609 196.821 87.2849 197.456C87.5182 198.091 87.6349 198.833 87.6349 199.682H82.2309C82.2496 200.401 82.4362 200.998 82.7909 201.474C83.1456 201.941 83.6776 202.174 84.3869 202.174C85.3482 202.174 85.9876 201.693 86.3049 200.732H87.4809ZM84.3589 196.518C83.7056 196.518 83.2062 196.733 82.8609 197.162C82.5156 197.591 82.3149 198.114 82.2589 198.73H86.3749C86.3749 198.319 86.2909 197.951 86.1229 197.624C85.9642 197.288 85.7356 197.022 85.4369 196.826C85.1382 196.621 84.7789 196.518 84.3589 196.518Z" fill="rgb(var(--colour-main))"></path><path d="M328.242 203V195.902H325.624V194.978C326.203 194.95 326.66 194.913 326.996 194.866C327.341 194.819 327.607 194.735 327.794 194.614C327.981 194.493 328.125 194.315 328.228 194.082C328.34 193.839 328.447 193.513 328.55 193.102H329.474V203H328.242ZM336.98 192.99C337.615 192.99 338.142 193.135 338.562 193.424C338.982 193.704 339.314 194.087 339.556 194.572C339.799 195.057 339.972 195.608 340.074 196.224C340.177 196.831 340.228 197.461 340.228 198.114C340.228 198.767 340.177 199.402 340.074 200.018C339.972 200.625 339.799 201.175 339.556 201.67C339.314 202.155 338.982 202.543 338.562 202.832C338.142 203.112 337.615 203.252 336.98 203.252C336.346 203.252 335.818 203.112 335.398 202.832C334.978 202.543 334.647 202.155 334.404 201.67C334.162 201.175 333.989 200.625 333.886 200.018C333.784 199.402 333.732 198.767 333.732 198.114C333.732 197.461 333.784 196.831 333.886 196.224C333.989 195.608 334.162 195.057 334.404 194.572C334.647 194.087 334.978 193.704 335.398 193.424C335.818 193.135 336.346 192.99 336.98 192.99ZM336.98 194.054C336.262 194.054 335.73 194.423 335.384 195.16C335.048 195.897 334.88 196.882 334.88 198.114C334.88 198.711 334.918 199.257 334.992 199.752C335.076 200.237 335.198 200.653 335.356 200.998L338.114 194.516C337.806 194.208 337.428 194.054 336.98 194.054ZM339.08 198.114C339.08 197.573 339.048 197.078 338.982 196.63C338.917 196.182 338.819 195.785 338.688 195.44L335.986 201.852C336.266 202.076 336.598 202.188 336.98 202.188C337.466 202.188 337.862 202.02 338.17 201.684C338.478 201.348 338.707 200.877 338.856 200.27C339.006 199.654 339.08 198.935 339.08 198.114Z" fill="rgb(var(--colour-main))"></path><rect x="18" y="342" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="36" cy="360" r="6" fill="#5AC93B"></circle><path d="M37.82 363.495H38.79L36.59 356.505H35.42L33.21 363.495H34.17L34.79 361.405H37.2L37.82 363.495ZM35.02 360.625L35.99 357.345L36.97 360.625H35.02Z" fill="rgb(var(--colour-negative))"></path><path d="M54.874 365L54.006 362.074H50.632L49.764 365H48.42L51.514 355.214H53.152L56.232 365H54.874ZM50.954 360.982H53.684L52.312 356.39L50.954 360.982ZM63.6683 359.666H62.4503C62.441 359.302 62.301 359.013 62.0303 358.798C61.769 358.583 61.419 358.476 60.9803 358.476C60.5043 358.476 60.117 358.574 59.8183 358.77C59.529 358.966 59.3843 359.227 59.3843 359.554C59.3843 359.815 59.473 360.025 59.6503 360.184C59.8276 360.343 60.089 360.469 60.4343 360.562L62.1003 360.996C62.7163 361.155 63.1783 361.393 63.4863 361.71C63.8036 362.018 63.9623 362.433 63.9623 362.956C63.9623 363.665 63.701 364.225 63.1783 364.636C62.6556 365.047 61.937 365.252 61.0223 365.252C59.0996 365.252 58.0963 364.426 58.0123 362.774H59.2443C59.3003 363.269 59.4776 363.633 59.7763 363.866C60.0843 364.099 60.509 364.216 61.0503 364.216C61.573 364.216 61.9883 364.123 62.2963 363.936C62.6136 363.749 62.7723 363.483 62.7723 363.138C62.7723 362.821 62.6883 362.583 62.5203 362.424C62.3523 362.265 62.0676 362.135 61.6663 362.032L60.1263 361.626C59.4636 361.449 58.9736 361.211 58.6563 360.912C58.3483 360.604 58.1943 360.17 58.1943 359.61C58.1943 358.947 58.4463 358.42 58.9503 358.028C59.4636 357.636 60.1496 357.44 61.0083 357.44C61.867 357.44 62.5203 357.641 62.9683 358.042C63.4256 358.434 63.659 358.975 63.6683 359.666ZM72.3226 359.666H71.1046C71.0953 359.302 70.9553 359.013 70.6846 358.798C70.4233 358.583 70.0733 358.476 69.6346 358.476C69.1586 358.476 68.7713 358.574 68.4726 358.77C68.1833 358.966 68.0386 359.227 68.0386 359.554C68.0386 359.815 68.1273 360.025 68.3046 360.184C68.4819 360.343 68.7433 360.469 69.0886 360.562L70.7546 360.996C71.3706 361.155 71.8326 361.393 72.1406 361.71C72.4579 362.018 72.6166 362.433 72.6166 362.956C72.6166 363.665 72.3553 364.225 71.8326 364.636C71.3099 365.047 70.5913 365.252 69.6766 365.252C67.7539 365.252 66.7506 364.426 66.6666 362.774H67.8986C67.9546 363.269 68.1319 363.633 68.4306 363.866C68.7386 364.099 69.1633 364.216 69.7046 364.216C70.2273 364.216 70.6426 364.123 70.9506 363.936C71.2679 363.749 71.4266 363.483 71.4266 363.138C71.4266 362.821 71.3426 362.583 71.1746 362.424C71.0066 362.265 70.7219 362.135 70.3206 362.032L68.7806 361.626C68.1179 361.449 67.6279 361.211 67.3106 360.912C67.0026 360.604 66.8486 360.17 66.8486 359.61C66.8486 358.947 67.1006 358.42 67.6046 358.028C68.1179 357.636 68.8039 357.44 69.6626 357.44C70.5213 357.44 71.1746 357.641 71.6226 358.042C72.0799 358.434 72.3133 358.975 72.3226 359.666ZM81.4809 362.732C81.3596 363.497 81.0189 364.109 80.4589 364.566C79.9082 365.023 79.2036 365.252 78.3449 365.252C77.6076 365.252 76.9916 365.089 76.4969 364.762C76.0022 364.426 75.6289 363.969 75.3769 363.39C75.1342 362.811 75.0129 362.149 75.0129 361.402C75.0129 360.581 75.1529 359.876 75.4329 359.288C75.7129 358.7 76.1049 358.247 76.6089 357.93C77.1129 357.603 77.7009 357.44 78.3729 357.44C79.1289 357.44 79.7449 357.617 80.2209 357.972C80.7062 358.327 81.0609 358.821 81.2849 359.456C81.5182 360.091 81.6349 360.833 81.6349 361.682H76.2309C76.2496 362.401 76.4362 362.998 76.7909 363.474C77.1456 363.941 77.6776 364.174 78.3869 364.174C79.3482 364.174 79.9876 363.693 80.3049 362.732H81.4809ZM78.3589 358.518C77.7056 358.518 77.2062 358.733 76.8609 359.162C76.5156 359.591 76.3149 360.114 76.2589 360.73H80.3749C80.3749 360.319 80.2909 359.951 80.1229 359.624C79.9642 359.288 79.7356 359.022 79.4369 358.826C79.1382 358.621 78.7789 358.518 78.3589 358.518ZM86.9992 357.664H89.8832V358.616H86.9992V362.704C86.9992 363.245 87.1392 363.623 87.4192 363.838C87.6992 364.043 88.1052 364.146 88.6372 364.146C88.8799 364.146 89.1039 364.137 89.3092 364.118C89.5145 364.09 89.7059 364.053 89.8832 364.006V365.028C89.6499 365.093 89.4212 365.135 89.1972 365.154C88.9732 365.182 88.7632 365.196 88.5672 365.196C87.6805 365.196 87.0039 365.014 86.5372 364.65C86.0705 364.286 85.8372 363.707 85.8372 362.914V358.616H83.7232V357.664H85.8372V355.648H86.9992V357.664ZM98.2855 359.666H97.0675C97.0582 359.302 96.9182 359.013 96.6475 358.798C96.3862 358.583 96.0362 358.476 95.5975 358.476C95.1215 358.476 94.7342 358.574 94.4355 358.77C94.1462 358.966 94.0015 359.227 94.0015 359.554C94.0015 359.815 94.0902 360.025 94.2675 360.184C94.4448 360.343 94.7062 360.469 95.0515 360.562L96.7175 360.996C97.3335 361.155 97.7955 361.393 98.1035 361.71C98.4208 362.018 98.5795 362.433 98.5795 362.956C98.5795 363.665 98.3182 364.225 97.7955 364.636C97.2728 365.047 96.5542 365.252 95.6395 365.252C93.7168 365.252 92.7135 364.426 92.6295 362.774H93.8615C93.9175 363.269 94.0948 363.633 94.3935 363.866C94.7015 364.099 95.1262 364.216 95.6675 364.216C96.1902 364.216 96.6055 364.123 96.9135 363.936C97.2308 363.749 97.3895 363.483 97.3895 363.138C97.3895 362.821 97.3055 362.583 97.1375 362.424C96.9695 362.265 96.6848 362.135 96.2835 362.032L94.7435 361.626C94.0808 361.449 93.5908 361.211 93.2735 360.912C92.9655 360.604 92.8115 360.17 92.8115 359.61C92.8115 358.947 93.0635 358.42 93.5675 358.028C94.0808 357.636 94.7668 357.44 95.6255 357.44C96.4842 357.44 97.1375 357.641 97.5855 358.042C98.0428 358.434 98.2762 358.975 98.2855 359.666Z" fill="rgb(var(--colour-main))"></path><path d="M163.933 365V357.902H161.315V356.978C161.894 356.95 162.351 356.913 162.687 356.866C163.033 356.819 163.299 356.735 163.485 356.614C163.672 356.493 163.817 356.315 163.919 356.082C164.031 355.839 164.139 355.513 164.241 355.102H165.165V365H163.933ZM172.672 354.99C173.306 354.99 173.834 355.135 174.254 355.424C174.674 355.704 175.005 356.087 175.248 356.572C175.49 357.057 175.663 357.608 175.766 358.224C175.868 358.831 175.92 359.461 175.92 360.114C175.92 360.767 175.868 361.402 175.766 362.018C175.663 362.625 175.49 363.175 175.248 363.67C175.005 364.155 174.674 364.543 174.254 364.832C173.834 365.112 173.306 365.252 172.672 365.252C172.037 365.252 171.51 365.112 171.09 364.832C170.67 364.543 170.338 364.155 170.096 363.67C169.853 363.175 169.68 362.625 169.578 362.018C169.475 361.402 169.424 360.767 169.424 360.114C169.424 359.461 169.475 358.831 169.578 358.224C169.68 357.608 169.853 357.057 170.096 356.572C170.338 356.087 170.67 355.704 171.09 355.424C171.51 355.135 172.037 354.99 172.672 354.99ZM172.672 356.054C171.953 356.054 171.421 356.423 171.076 357.16C170.74 357.897 170.572 358.882 170.572 360.114C170.572 360.711 170.609 361.257 170.684 361.752C170.768 362.237 170.889 362.653 171.048 362.998L173.806 356.516C173.498 356.208 173.12 356.054 172.672 356.054ZM174.772 360.114C174.772 359.573 174.739 359.078 174.674 358.63C174.608 358.182 174.51 357.785 174.38 357.44L171.678 363.852C171.958 364.076 172.289 364.188 172.672 364.188C173.157 364.188 173.554 364.02 173.862 363.684C174.17 363.348 174.398 362.877 174.548 362.27C174.697 361.654 174.772 360.935 174.772 360.114Z" fill="rgb(var(--colour-main))"></path><rect x="189" y="342" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="207" cy="360" r="6" fill="rgb(var(--colour-income-blue))"></circle><path d="M205.045 363.495H208.955V362.715H207.465V357.285H208.955V356.505H205.045V357.285H206.525V362.715H205.045V363.495Z" fill="rgb(var(--colour-main))"></path><path d="M220.596 365V363.908H222.668V356.306H220.596V355.214H226.07V356.306H223.984V363.908H226.07V365H220.596ZM229.068 365V357.664H230.146V358.882C230.436 358.434 230.767 358.084 231.14 357.832C231.523 357.58 232.004 357.454 232.582 357.454C233.012 357.454 233.399 357.529 233.744 357.678C234.099 357.818 234.379 358.037 234.584 358.336C234.799 358.625 234.906 358.999 234.906 359.456V365H233.744V359.918C233.744 359.423 233.595 359.059 233.296 358.826C232.998 358.593 232.643 358.476 232.232 358.476C231.794 358.476 231.425 358.588 231.126 358.812C230.828 359.036 230.604 359.33 230.454 359.694C230.305 360.058 230.23 360.45 230.23 360.87V365H229.068ZM243.771 360.086H242.595C242.529 359.601 242.343 359.218 242.035 358.938C241.727 358.658 241.316 358.518 240.803 358.518C240.299 358.518 239.893 358.658 239.585 358.938C239.277 359.218 239.053 359.582 238.913 360.03C238.773 360.469 238.703 360.931 238.703 361.416C238.703 361.901 238.777 362.354 238.927 362.774C239.076 363.194 239.309 363.535 239.627 363.796C239.944 364.048 240.345 364.174 240.831 364.174C241.867 364.174 242.483 363.595 242.679 362.438H243.855C243.78 363.315 243.477 364.006 242.945 364.51C242.422 365.005 241.708 365.252 240.803 365.252C240.093 365.252 239.491 365.084 238.997 364.748C238.502 364.403 238.124 363.941 237.863 363.362C237.611 362.783 237.485 362.135 237.485 361.416C237.485 360.679 237.611 360.011 237.863 359.414C238.115 358.817 238.488 358.341 238.983 357.986C239.477 357.622 240.089 357.44 240.817 357.44C241.713 357.44 242.422 357.687 242.945 358.182C243.477 358.677 243.752 359.311 243.771 360.086ZM249.289 357.44C250.045 357.44 250.666 357.613 251.151 357.958C251.646 358.294 252.01 358.756 252.243 359.344C252.486 359.932 252.607 360.599 252.607 361.346C252.607 362.083 252.486 362.751 252.243 363.348C252.01 363.936 251.646 364.403 251.151 364.748C250.666 365.084 250.045 365.252 249.289 365.252C248.542 365.252 247.922 365.084 247.427 364.748C246.932 364.403 246.564 363.936 246.321 363.348C246.088 362.751 245.971 362.083 245.971 361.346C245.971 360.599 246.088 359.932 246.321 359.344C246.564 358.756 246.932 358.294 247.427 357.958C247.922 357.613 248.542 357.44 249.289 357.44ZM249.289 358.518C248.794 358.518 248.393 358.649 248.085 358.91C247.777 359.171 247.548 359.517 247.399 359.946C247.259 360.375 247.189 360.842 247.189 361.346C247.189 361.841 247.259 362.307 247.399 362.746C247.548 363.175 247.777 363.521 248.085 363.782C248.393 364.043 248.794 364.174 249.289 364.174C249.784 364.174 250.185 364.043 250.493 363.782C250.801 363.521 251.025 363.175 251.165 362.746C251.314 362.307 251.389 361.841 251.389 361.346C251.389 360.842 251.314 360.375 251.165 359.946C251.025 359.517 250.801 359.171 250.493 358.91C250.185 358.649 249.784 358.518 249.289 358.518ZM254.163 365V357.664H255.255V358.42C255.414 358.187 255.633 357.977 255.913 357.79C256.203 357.594 256.543 357.496 256.935 357.496C257.29 357.496 257.598 357.585 257.859 357.762C258.13 357.93 258.321 358.168 258.433 358.476C258.583 358.233 258.802 358.009 259.091 357.804C259.381 357.599 259.731 357.496 260.141 357.496C260.599 357.496 260.977 357.636 261.275 357.916C261.574 358.187 261.723 358.555 261.723 359.022V365H260.575V359.26C260.575 358.999 260.501 358.803 260.351 358.672C260.202 358.541 260.006 358.476 259.763 358.476C259.371 358.476 259.063 358.588 258.839 358.812C258.625 359.027 258.517 359.325 258.517 359.708V365H257.369V359.26C257.369 358.999 257.295 358.803 257.145 358.672C256.996 358.541 256.8 358.476 256.557 358.476C256.165 358.476 255.857 358.588 255.633 358.812C255.419 359.027 255.311 359.325 255.311 359.708V365H254.163ZM269.789 362.732C269.668 363.497 269.327 364.109 268.767 364.566C268.217 365.023 267.512 365.252 266.653 365.252C265.916 365.252 265.3 365.089 264.805 364.762C264.311 364.426 263.937 363.969 263.685 363.39C263.443 362.811 263.321 362.149 263.321 361.402C263.321 360.581 263.461 359.876 263.741 359.288C264.021 358.7 264.413 358.247 264.917 357.93C265.421 357.603 266.009 357.44 266.681 357.44C267.437 357.44 268.053 357.617 268.529 357.972C269.015 358.327 269.369 358.821 269.593 359.456C269.827 360.091 269.943 360.833 269.943 361.682H264.539C264.558 362.401 264.745 362.998 265.099 363.474C265.454 363.941 265.986 364.174 266.695 364.174C267.657 364.174 268.296 363.693 268.613 362.732H269.789ZM266.667 358.518C266.014 358.518 265.515 358.733 265.169 359.162C264.824 359.591 264.623 360.114 264.567 360.73H268.683C268.683 360.319 268.599 359.951 268.431 359.624C268.273 359.288 268.044 359.022 267.745 358.826C267.447 358.621 267.087 358.518 266.667 358.518Z" fill="rgb(var(--colour-main))"></path><path d="M341.292 355.214H346.416V356.292H342.3L341.894 359.148C342.164 358.905 342.463 358.737 342.79 358.644C343.116 358.551 343.448 358.504 343.784 358.504C344.372 358.504 344.904 358.639 345.38 358.91C345.856 359.171 346.234 359.549 346.514 360.044C346.794 360.529 346.934 361.113 346.934 361.794C346.934 362.457 346.794 363.049 346.514 363.572C346.243 364.095 345.856 364.505 345.352 364.804C344.848 365.103 344.241 365.252 343.532 365.252C343.252 365.252 342.939 365.215 342.594 365.14C342.248 365.065 341.908 364.935 341.572 364.748C341.245 364.552 340.96 364.281 340.718 363.936C340.475 363.591 340.316 363.147 340.242 362.606H341.488C341.768 363.651 342.449 364.174 343.532 364.174C344.241 364.174 344.773 363.959 345.128 363.53C345.492 363.091 345.674 362.531 345.674 361.85C345.674 361.169 345.501 360.613 345.156 360.184C344.82 359.755 344.292 359.54 343.574 359.54C343.182 359.54 342.832 359.619 342.524 359.778C342.225 359.927 341.945 360.175 341.684 360.52H340.564L341.292 355.214Z" fill="rgb(var(--colour-main))"></path><rect x="189" y="378" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="207" cy="396" r="6" fill="#FFE000"></circle><path d="M208.8 396.325V395.505H205.8V393.325H208.95V392.505H204.87V399.495H209.13V398.675H205.8V396.325H208.8Z" fill="rgb(var(--colour-main))"></path><path d="M226.084 396.562H221.884V399.852H226.546V401H220.582V391.214H226.294V392.362H221.884V395.414H226.084V396.562ZM235.102 393.664L232.638 397.206L235.172 401H233.786L231.98 398.214L230.146 401H228.788L231.378 397.262L228.928 393.664H230.3L232.022 396.296L233.772 393.664H235.102ZM238.703 404.052H237.527V393.664H238.605V394.756C239.146 393.879 239.925 393.44 240.943 393.44C241.671 393.44 242.263 393.627 242.721 394C243.187 394.364 243.533 394.849 243.757 395.456C243.981 396.053 244.093 396.707 244.093 397.416C244.093 398.116 243.976 398.76 243.743 399.348C243.519 399.927 243.173 400.389 242.707 400.734C242.24 401.079 241.657 401.252 240.957 401.252C240.481 401.252 240.061 401.168 239.697 401C239.342 400.823 239.011 400.543 238.703 400.16V404.052ZM240.747 394.532C240.261 394.532 239.869 394.667 239.571 394.938C239.272 395.209 239.053 395.559 238.913 395.988C238.773 396.417 238.703 396.87 238.703 397.346C238.703 397.822 238.773 398.275 238.913 398.704C239.053 399.133 239.272 399.483 239.571 399.754C239.869 400.025 240.261 400.16 240.747 400.16C241.241 400.16 241.643 400.029 241.951 399.768C242.268 399.497 242.501 399.152 242.651 398.732C242.8 398.303 242.875 397.855 242.875 397.388C242.875 396.893 242.8 396.431 242.651 396.002C242.501 395.563 242.268 395.209 241.951 394.938C241.643 394.667 241.241 394.532 240.747 394.532ZM252.481 398.732C252.36 399.497 252.019 400.109 251.459 400.566C250.908 401.023 250.204 401.252 249.345 401.252C248.608 401.252 247.992 401.089 247.497 400.762C247.002 400.426 246.629 399.969 246.377 399.39C246.134 398.811 246.013 398.149 246.013 397.402C246.013 396.581 246.153 395.876 246.433 395.288C246.713 394.7 247.105 394.247 247.609 393.93C248.113 393.603 248.701 393.44 249.373 393.44C250.129 393.44 250.745 393.617 251.221 393.972C251.706 394.327 252.061 394.821 252.285 395.456C252.518 396.091 252.635 396.833 252.635 397.682H247.231C247.25 398.401 247.436 398.998 247.791 399.474C248.146 399.941 248.678 400.174 249.387 400.174C250.348 400.174 250.988 399.693 251.305 398.732H252.481ZM249.359 394.518C248.706 394.518 248.206 394.733 247.861 395.162C247.516 395.591 247.315 396.114 247.259 396.73H251.375C251.375 396.319 251.291 395.951 251.123 395.624C250.964 395.288 250.736 395.022 250.437 394.826C250.138 394.621 249.779 394.518 249.359 394.518ZM255.031 401V393.664H256.109V394.882C256.399 394.434 256.73 394.084 257.103 393.832C257.486 393.58 257.967 393.454 258.545 393.454C258.975 393.454 259.362 393.529 259.707 393.678C260.062 393.818 260.342 394.037 260.547 394.336C260.762 394.625 260.869 394.999 260.869 395.456V401H259.707V395.918C259.707 395.423 259.558 395.059 259.259 394.826C258.961 394.593 258.606 394.476 258.195 394.476C257.757 394.476 257.388 394.588 257.089 394.812C256.791 395.036 256.567 395.33 256.417 395.694C256.268 396.058 256.193 396.45 256.193 396.87V401H255.031ZM269.285 395.666H268.067C268.058 395.302 267.918 395.013 267.647 394.798C267.386 394.583 267.036 394.476 266.597 394.476C266.121 394.476 265.734 394.574 265.435 394.77C265.146 394.966 265.001 395.227 265.001 395.554C265.001 395.815 265.09 396.025 265.267 396.184C265.445 396.343 265.706 396.469 266.051 396.562L267.717 396.996C268.333 397.155 268.795 397.393 269.103 397.71C269.421 398.018 269.579 398.433 269.579 398.956C269.579 399.665 269.318 400.225 268.795 400.636C268.273 401.047 267.554 401.252 266.639 401.252C264.717 401.252 263.713 400.426 263.629 398.774H264.861C264.917 399.269 265.095 399.633 265.393 399.866C265.701 400.099 266.126 400.216 266.667 400.216C267.19 400.216 267.605 400.123 267.913 399.936C268.231 399.749 268.389 399.483 268.389 399.138C268.389 398.821 268.305 398.583 268.137 398.424C267.969 398.265 267.685 398.135 267.283 398.032L265.743 397.626C265.081 397.449 264.591 397.211 264.273 396.912C263.965 396.604 263.811 396.17 263.811 395.61C263.811 394.947 264.063 394.42 264.567 394.028C265.081 393.636 265.767 393.44 266.625 393.44C267.484 393.44 268.137 393.641 268.585 394.042C269.043 394.434 269.276 394.975 269.285 395.666ZM278.444 398.732C278.322 399.497 277.982 400.109 277.422 400.566C276.871 401.023 276.166 401.252 275.308 401.252C274.57 401.252 273.954 401.089 273.46 400.762C272.965 400.426 272.592 399.969 272.34 399.39C272.097 398.811 271.976 398.149 271.976 397.402C271.976 396.581 272.116 395.876 272.396 395.288C272.676 394.7 273.068 394.247 273.572 393.93C274.076 393.603 274.664 393.44 275.336 393.44C276.092 393.44 276.708 393.617 277.184 393.972C277.669 394.327 278.024 394.821 278.248 395.456C278.481 396.091 278.598 396.833 278.598 397.682H273.194C273.212 398.401 273.399 398.998 273.754 399.474C274.108 399.941 274.64 400.174 275.35 400.174C276.311 400.174 276.95 399.693 277.268 398.732H278.444ZM275.322 394.518C274.668 394.518 274.169 394.733 273.824 395.162C273.478 395.591 273.278 396.114 273.222 396.73H277.338C277.338 396.319 277.254 395.951 277.086 395.624C276.927 395.288 276.698 395.022 276.4 394.826C276.101 394.621 275.742 394.518 275.322 394.518Z" fill="rgb(var(--colour-main-500))"></path><path d="M343.672 390.99C344.306 390.99 344.834 391.135 345.254 391.424C345.674 391.704 346.005 392.087 346.248 392.572C346.49 393.057 346.663 393.608 346.766 394.224C346.868 394.831 346.92 395.461 346.92 396.114C346.92 396.767 346.868 397.402 346.766 398.018C346.663 398.625 346.49 399.175 346.248 399.67C346.005 400.155 345.674 400.543 345.254 400.832C344.834 401.112 344.306 401.252 343.672 401.252C343.037 401.252 342.51 401.112 342.09 400.832C341.67 400.543 341.338 400.155 341.096 399.67C340.853 399.175 340.68 398.625 340.578 398.018C340.475 397.402 340.424 396.767 340.424 396.114C340.424 395.461 340.475 394.831 340.578 394.224C340.68 393.608 340.853 393.057 341.096 392.572C341.338 392.087 341.67 391.704 342.09 391.424C342.51 391.135 343.037 390.99 343.672 390.99ZM343.672 392.054C342.953 392.054 342.421 392.423 342.076 393.16C341.74 393.897 341.572 394.882 341.572 396.114C341.572 396.711 341.609 397.257 341.684 397.752C341.768 398.237 341.889 398.653 342.048 398.998L344.806 392.516C344.498 392.208 344.12 392.054 343.672 392.054ZM345.772 396.114C345.772 395.573 345.739 395.078 345.674 394.63C345.608 394.182 345.51 393.785 345.38 393.44L342.678 399.852C342.958 400.076 343.289 400.188 343.672 400.188C344.157 400.188 344.554 400.02 344.862 399.684C345.17 399.348 345.398 398.877 345.548 398.27C345.697 397.654 345.772 396.935 345.772 396.114Z" fill="rgb(var(--colour-main-500))"></path><rect x="18" y="378" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="36" cy="396" r="6" fill="#EC3425"></circle><path d="M34.1001 392.505V399.495H38.3601V398.675H35.0301V392.505H34.1001Z" fill="rgb(var(--colour-negative))"></path><path d="M49.736 391.214H51.038V399.852H55.7V401H49.736V391.214ZM60.4063 392.614V391.214H61.8063V392.614H60.4063ZM61.6803 393.664V400.048H63.9343V401H58.0123V400.048H60.5323V394.616H58.0123V393.664H61.6803ZM73.2746 400.23V401.112C72.9853 401.196 72.7519 401.238 72.5746 401.238C71.7906 401.238 71.3566 400.869 71.2726 400.132C70.8619 400.533 70.4606 400.823 70.0686 401C69.6766 401.168 69.2473 401.252 68.7806 401.252C68.0713 401.252 67.4926 401.065 67.0446 400.692C66.6059 400.309 66.3866 399.777 66.3866 399.096C66.3866 398.592 66.4939 398.191 66.7086 397.892C66.9233 397.584 67.1846 397.355 67.4926 397.206C67.8099 397.047 68.1086 396.945 68.3886 396.898C68.5193 396.879 68.7199 396.851 68.9906 396.814C69.2613 396.767 69.6019 396.716 70.0126 396.66C70.4793 396.595 70.8013 396.506 70.9786 396.394C71.1653 396.282 71.2586 396.109 71.2586 395.876V395.624C71.2586 394.896 70.6986 394.532 69.5786 394.532C69.0373 394.532 68.6266 394.639 68.3466 394.854C68.0759 395.059 67.9173 395.386 67.8706 395.834H66.6946C66.7133 394.985 66.9886 394.378 67.5206 394.014C68.0619 393.641 68.7666 393.454 69.6346 393.454C70.5399 393.454 71.2259 393.627 71.6926 393.972C72.1593 394.308 72.3926 394.803 72.3926 395.456V399.684C72.3926 400.067 72.6026 400.258 73.0226 400.258C73.0973 400.258 73.1813 400.249 73.2746 400.23ZM71.2586 398.452V397.29C71.0159 397.402 70.7126 397.491 70.3486 397.556C69.9939 397.621 69.6626 397.673 69.3546 397.71C68.8133 397.775 68.3793 397.901 68.0526 398.088C67.7353 398.275 67.5766 398.601 67.5766 399.068C67.5766 399.432 67.7073 399.717 67.9686 399.922C68.2393 400.127 68.6079 400.23 69.0746 400.23C69.4199 400.23 69.7559 400.155 70.0826 400.006C70.4186 399.847 70.6986 399.633 70.9226 399.362C71.1466 399.091 71.2586 398.788 71.2586 398.452ZM75.1809 401V390.794H76.3429V394.644C76.8749 393.841 77.6309 393.44 78.6109 393.44C79.3296 393.44 79.9176 393.613 80.3749 393.958C80.8416 394.294 81.1869 394.751 81.4109 395.33C81.6349 395.909 81.7469 396.553 81.7469 397.262C81.7469 398.009 81.6256 398.685 81.3829 399.292C81.1402 399.899 80.7809 400.379 80.3049 400.734C79.8382 401.079 79.2549 401.252 78.5549 401.252C77.5562 401.252 76.7816 400.832 76.2309 399.992V401H75.1809ZM78.4009 394.532C77.9062 394.532 77.5049 394.672 77.1969 394.952C76.8982 395.232 76.6789 395.591 76.5389 396.03C76.4082 396.459 76.3429 396.912 76.3429 397.388C76.3429 397.845 76.4082 398.289 76.5389 398.718C76.6789 399.138 76.8982 399.483 77.1969 399.754C77.5049 400.025 77.9062 400.16 78.4009 400.16C78.8956 400.16 79.2969 400.029 79.6049 399.768C79.9222 399.507 80.1556 399.166 80.3049 398.746C80.4636 398.317 80.5429 397.864 80.5429 397.388C80.5429 396.875 80.4636 396.403 80.3049 395.974C80.1556 395.545 79.9222 395.199 79.6049 394.938C79.2876 394.667 78.8862 394.532 78.4009 394.532ZM86.3692 392.614V391.214H87.7692V392.614H86.3692ZM87.6432 393.664V400.048H89.8972V401H83.9752V400.048H86.4952V394.616H83.9752V393.664H87.6432ZM96.5775 390.794V400.048H98.8315V401H92.9095V400.048H95.4435V391.746H92.9095V390.794H96.5775ZM103.678 392.614V391.214H105.078V392.614H103.678ZM104.952 393.664V400.048H107.206V401H101.284V400.048H103.804V394.616H101.284V393.664H104.952ZM112.962 393.664H115.846V394.616H112.962V398.704C112.962 399.245 113.102 399.623 113.382 399.838C113.662 400.043 114.068 400.146 114.6 400.146C114.843 400.146 115.067 400.137 115.272 400.118C115.477 400.09 115.669 400.053 115.846 400.006V401.028C115.613 401.093 115.384 401.135 115.16 401.154C114.936 401.182 114.726 401.196 114.53 401.196C113.643 401.196 112.967 401.014 112.5 400.65C112.033 400.286 111.8 399.707 111.8 398.914V394.616H109.686V393.664H111.8V391.648H112.962V393.664ZM120.986 392.614V391.214H122.386V392.614H120.986ZM122.26 393.664V400.048H124.514V401H118.592V400.048H121.112V394.616H118.592V393.664H122.26ZM133.407 398.732C133.285 399.497 132.945 400.109 132.385 400.566C131.834 401.023 131.129 401.252 130.271 401.252C129.533 401.252 128.917 401.089 128.423 400.762C127.928 400.426 127.555 399.969 127.303 399.39C127.06 398.811 126.939 398.149 126.939 397.402C126.939 396.581 127.079 395.876 127.359 395.288C127.639 394.7 128.031 394.247 128.535 393.93C129.039 393.603 129.627 393.44 130.299 393.44C131.055 393.44 131.671 393.617 132.147 393.972C132.632 394.327 132.987 394.821 133.211 395.456C133.444 396.091 133.561 396.833 133.561 397.682H128.157C128.175 398.401 128.362 398.998 128.717 399.474C129.071 399.941 129.603 400.174 130.313 400.174C131.274 400.174 131.913 399.693 132.231 398.732H133.407ZM130.285 394.518C129.631 394.518 129.132 394.733 128.787 395.162C128.441 395.591 128.241 396.114 128.185 396.73H132.301C132.301 396.319 132.217 395.951 132.049 395.624C131.89 395.288 131.661 395.022 131.363 394.826C131.064 394.621 130.705 394.518 130.285 394.518ZM141.557 395.666H140.339C140.33 395.302 140.19 395.013 139.919 394.798C139.658 394.583 139.308 394.476 138.869 394.476C138.393 394.476 138.006 394.574 137.707 394.77C137.418 394.966 137.273 395.227 137.273 395.554C137.273 395.815 137.362 396.025 137.539 396.184C137.716 396.343 137.978 396.469 138.323 396.562L139.989 396.996C140.605 397.155 141.067 397.393 141.375 397.71C141.692 398.018 141.851 398.433 141.851 398.956C141.851 399.665 141.59 400.225 141.067 400.636C140.544 401.047 139.826 401.252 138.911 401.252C136.988 401.252 135.985 400.426 135.901 398.774H137.133C137.189 399.269 137.366 399.633 137.665 399.866C137.973 400.099 138.398 400.216 138.939 400.216C139.462 400.216 139.877 400.123 140.185 399.936C140.502 399.749 140.661 399.483 140.661 399.138C140.661 398.821 140.577 398.583 140.409 398.424C140.241 398.265 139.956 398.135 139.555 398.032L138.015 397.626C137.352 397.449 136.862 397.211 136.545 396.912C136.237 396.604 136.083 396.17 136.083 395.61C136.083 394.947 136.335 394.42 136.839 394.028C137.352 393.636 138.038 393.44 138.897 393.44C139.756 393.44 140.409 393.641 140.857 394.042C141.314 394.434 141.548 394.975 141.557 395.666Z" fill="rgb(var(--colour-main))"></path><path d="M170.292 391.214H175.416V392.292H171.3L170.894 395.148C171.164 394.905 171.463 394.737 171.79 394.644C172.116 394.551 172.448 394.504 172.784 394.504C173.372 394.504 173.904 394.639 174.38 394.91C174.856 395.171 175.234 395.549 175.514 396.044C175.794 396.529 175.934 397.113 175.934 397.794C175.934 398.457 175.794 399.049 175.514 399.572C175.243 400.095 174.856 400.505 174.352 400.804C173.848 401.103 173.241 401.252 172.532 401.252C172.252 401.252 171.939 401.215 171.594 401.14C171.248 401.065 170.908 400.935 170.572 400.748C170.245 400.552 169.96 400.281 169.718 399.936C169.475 399.591 169.316 399.147 169.242 398.606H170.488C170.768 399.651 171.449 400.174 172.532 400.174C173.241 400.174 173.773 399.959 174.128 399.53C174.492 399.091 174.674 398.531 174.674 397.85C174.674 397.169 174.501 396.613 174.156 396.184C173.82 395.755 173.292 395.54 172.574 395.54C172.182 395.54 171.832 395.619 171.524 395.778C171.225 395.927 170.945 396.175 170.684 396.52H169.564L170.292 391.214Z" fill="rgb(var(--colour-main))"></path><path d="M25.084 108.562H20.884V111.852H25.546V113H19.582V103.214H25.294V104.362H20.884V107.414H25.084V108.562ZM28.0683 113V105.664H29.1463V106.882C29.7203 105.986 30.4203 105.454 31.5823 105.454C32.8563 105.454 33.9063 106.098 33.9063 107.456V113H32.7443V107.918C32.7443 106.938 32.0443 106.476 31.2323 106.476C29.9163 106.476 29.2303 107.61 29.2303 108.87V113H28.0683ZM39.6906 105.664H42.5746V106.616H39.6906V110.704C39.6906 111.782 40.2646 112.146 41.3286 112.146C41.8046 112.146 42.2246 112.104 42.5746 112.006V113.028C42.1126 113.168 41.6506 113.196 41.2586 113.196C39.4806 113.196 38.5286 112.51 38.5286 110.914V106.616H36.4146V105.664H38.5286V103.648H39.6906V105.664ZM45.6989 113V105.664H46.7769V107.246C47.2669 106.196 48.2049 105.454 49.4089 105.454C51.0889 105.454 51.9569 106.378 52.0969 107.834H50.9349C50.7669 106.952 50.2909 106.476 49.2969 106.476C47.8269 106.476 46.8749 107.722 46.8749 109.444V113H45.6989ZM56.9992 114.54C56.6212 115.548 55.9072 116.052 54.9972 116.052C54.6472 116.052 54.3392 116.01 54.0452 115.912V114.82C54.3532 114.89 54.6052 114.904 54.8432 114.904C55.3752 114.904 55.6692 114.708 55.8792 114.19L56.3272 113.112L53.6112 105.664H54.8432L56.9852 111.614L59.0992 105.664H60.3032L56.9992 114.54Z" fill="rgb(var(--colour-main-500))"></path><path d="M24.874 329L24.006 326.074H20.632L19.764 329H18.42L21.514 319.214H23.152L26.232 329H24.874ZM20.954 324.982H23.684L22.312 320.39L20.954 324.982ZM34.1163 324.086H32.9403C32.8143 323.12 32.1703 322.518 31.1483 322.518C29.6363 322.518 29.0483 323.96 29.0483 325.416C29.0483 326.872 29.7063 328.174 31.1763 328.174C32.1983 328.174 32.8283 327.6 33.0243 326.438H34.2003C34.0463 328.202 32.9543 329.252 31.1483 329.252C29.0063 329.252 27.8303 327.572 27.8303 325.416C27.8303 323.218 28.9783 321.44 31.1623 321.44C32.9543 321.44 34.0743 322.532 34.1163 324.086ZM42.7706 324.086H41.5946C41.4686 323.12 40.8246 322.518 39.8026 322.518C38.2906 322.518 37.7026 323.96 37.7026 325.416C37.7026 326.872 38.3606 328.174 39.8306 328.174C40.8526 328.174 41.4826 327.6 41.6786 326.438H42.8546C42.7006 328.202 41.6086 329.252 39.8026 329.252C37.6606 329.252 36.4846 327.572 36.4846 325.416C36.4846 323.218 37.6326 321.44 39.8166 321.44C41.6086 321.44 42.7286 322.532 42.7706 324.086ZM48.2889 321.44C50.5429 321.44 51.6069 323.12 51.6069 325.346C51.6069 327.572 50.5429 329.252 48.2889 329.252C46.0349 329.252 44.9709 327.572 44.9709 325.346C44.9709 323.12 46.0349 321.44 48.2889 321.44ZM48.2889 322.518C46.8049 322.518 46.1889 323.848 46.1889 325.346C46.1889 326.844 46.8049 328.174 48.2889 328.174C49.7729 328.174 50.3889 326.844 50.3889 325.346C50.3889 323.848 49.7729 322.518 48.2889 322.518ZM59.8692 321.664V329H58.8192V327.908C58.1472 328.874 57.4472 329.252 56.3692 329.252C55.7392 329.252 55.2072 329.112 54.7872 328.818C54.2832 328.454 54.0312 327.936 54.0312 327.25V321.664H55.1932V326.788C55.1932 327.278 55.3612 327.656 55.6832 327.908C55.9492 328.118 56.2992 328.23 56.7052 328.23C57.2512 328.23 57.7132 328.034 58.0912 327.628C58.4972 327.194 58.7072 326.564 58.7072 325.738V321.664H59.8692ZM62.6855 329V321.664H63.7635V322.882C64.3375 321.986 65.0375 321.454 66.1995 321.454C67.4735 321.454 68.5235 322.098 68.5235 323.456V329H67.3615V323.918C67.3615 322.938 66.6615 322.476 65.8495 322.476C64.5335 322.476 63.8475 323.61 63.8475 324.87V329H62.6855ZM74.3078 321.664H77.1918V322.616H74.3078V326.704C74.3078 327.782 74.8818 328.146 75.9458 328.146C76.4218 328.146 76.8418 328.104 77.1918 328.006V329.028C76.7298 329.168 76.2678 329.196 75.8758 329.196C74.0978 329.196 73.1458 328.51 73.1458 326.914V322.616H71.0318V321.664H73.1458V319.648H74.3078V321.664ZM82.3321 320.614V319.214H83.7321V320.614H82.3321ZM83.6061 321.664V328.048H85.8601V329H79.9381V328.048H82.4581V322.616H79.9381V321.664H83.6061ZM88.6484 329V321.664H89.7264V322.882C90.3004 321.986 91.0004 321.454 92.1624 321.454C93.4364 321.454 94.4864 322.098 94.4864 323.456V329H93.3244V323.918C93.3244 322.938 92.6244 322.476 91.8124 322.476C90.4964 322.476 89.8104 323.61 89.8104 324.87V329H88.6484ZM100.033 332.052C98.4367 332.052 97.2327 331.394 97.0367 329.84H98.2547C98.4227 330.666 98.9967 331.072 100.061 331.072C101.531 331.072 102.133 330.344 102.133 328.384V327.964C101.699 328.818 100.915 329.252 99.9487 329.252C97.7787 329.252 96.7567 327.558 96.7567 325.304C96.7567 323.148 97.8207 321.44 99.9067 321.44C100.901 321.44 101.657 321.818 102.161 322.574V321.664H103.323V327.81C103.323 328.832 103.239 329.602 103.071 330.134C102.665 331.408 101.615 332.052 100.033 332.052ZM100.117 328.16C101.587 328.16 102.161 326.746 102.161 325.388C102.161 323.918 101.573 322.532 100.103 322.532C98.7307 322.532 97.9747 323.764 97.9747 325.346C97.9747 326.844 98.6187 328.16 100.117 328.16ZM120.281 324.562H116.081V327.852H120.743V329H114.779V319.214H120.491V320.362H116.081V323.414H120.281V324.562ZM129.286 321.664V332.052H128.124V328.076C127.578 328.916 126.864 329.252 125.856 329.252C123.882 329.252 122.72 327.74 122.72 325.43C122.72 323.204 123.798 321.44 125.912 321.44C126.878 321.44 127.704 321.86 128.25 322.63V321.664H129.286ZM126.08 322.532C124.694 322.532 123.938 323.764 123.938 325.346C123.938 326.844 124.61 328.16 126.08 328.16C127.55 328.16 128.124 326.746 128.124 325.388C128.124 323.932 127.536 322.532 126.08 322.532ZM137.758 321.664V329H136.708V327.908C136.036 328.874 135.336 329.252 134.258 329.252C133.628 329.252 133.096 329.112 132.676 328.818C132.172 328.454 131.92 327.936 131.92 327.25V321.664H133.082V326.788C133.082 327.278 133.25 327.656 133.572 327.908C133.838 328.118 134.188 328.23 134.594 328.23C135.14 328.23 135.602 328.034 135.98 327.628C136.386 327.194 136.596 326.564 136.596 325.738V321.664H137.758ZM147.126 328.23V329.112C146.832 329.196 146.608 329.238 146.426 329.238C145.614 329.238 145.208 328.888 145.124 328.132C144.298 328.944 143.57 329.252 142.632 329.252C141.204 329.252 140.238 328.454 140.238 327.096C140.238 325.584 141.386 325.038 142.24 324.898C142.492 324.856 143.038 324.772 143.864 324.66C144.802 324.534 145.11 324.352 145.11 323.876V323.624C145.11 322.896 144.536 322.532 143.43 322.532C142.352 322.532 141.82 322.938 141.722 323.834H140.546C140.574 322.14 141.75 321.454 143.486 321.454C145.292 321.454 146.244 322.154 146.244 323.456V327.684C146.244 328.062 146.454 328.258 146.874 328.258C146.944 328.258 147.056 328.244 147.126 328.23ZM145.11 326.452V325.29C144.62 325.514 143.822 325.64 143.206 325.71C142.114 325.836 141.428 326.144 141.428 327.068C141.428 327.796 141.988 328.23 142.926 328.23C143.948 328.23 145.11 327.474 145.11 326.452ZM152.196 321.664H155.08V322.616H152.196V326.704C152.196 327.782 152.77 328.146 153.834 328.146C154.31 328.146 154.73 328.104 155.08 328.006V329.028C154.618 329.168 154.156 329.196 153.764 329.196C151.986 329.196 151.034 328.51 151.034 326.914V322.616H148.92V321.664H151.034V319.648H152.196V321.664ZM160.221 320.614V319.214H161.621V320.614H160.221ZM161.495 321.664V328.048H163.749V329H157.827V328.048H160.347V322.616H157.827V321.664H161.495ZM169.449 321.44C171.703 321.44 172.767 323.12 172.767 325.346C172.767 327.572 171.703 329.252 169.449 329.252C167.195 329.252 166.131 327.572 166.131 325.346C166.131 323.12 167.195 321.44 169.449 321.44ZM169.449 322.518C167.965 322.518 167.349 323.848 167.349 325.346C167.349 326.844 167.965 328.174 169.449 328.174C170.933 328.174 171.549 326.844 171.549 325.346C171.549 323.848 170.933 322.518 169.449 322.518ZM175.191 329V321.664H176.269V322.882C176.843 321.986 177.543 321.454 178.705 321.454C179.979 321.454 181.029 322.098 181.029 323.456V329H179.867V323.918C179.867 322.938 179.167 322.476 178.355 322.476C177.039 322.476 176.353 323.61 176.353 324.87V329H175.191Z" fill="rgb(var(--colour-main-500))"></path><rect x="18" y="414" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M37.728 430.042H36.468C36.4493 429.482 36.272 429.02 35.936 428.656C35.6 428.283 35.0913 428.096 34.41 428.096C33.738 428.096 33.2247 428.245 32.87 428.544C32.5247 428.843 32.352 429.211 32.352 429.65C32.352 430.434 32.7953 430.929 33.682 431.134L35.684 431.596C36.4493 431.773 37.028 432.095 37.42 432.562C37.812 433.029 38.008 433.579 38.008 434.214C38.008 434.858 37.8587 435.409 37.56 435.866C37.2707 436.314 36.8647 436.659 36.342 436.902C35.8287 437.135 35.2267 437.252 34.536 437.252C33.3227 437.252 32.394 436.953 31.75 436.356C31.1153 435.749 30.7887 434.923 30.77 433.878H32.03C32.0393 434.531 32.2587 435.063 32.688 435.474C33.1173 435.885 33.7427 436.09 34.564 436.09C35.3013 436.09 35.838 435.931 36.174 435.614C36.5193 435.297 36.692 434.891 36.692 434.396C36.692 433.957 36.5707 433.612 36.328 433.36C36.0947 433.108 35.7353 432.926 35.25 432.814L33.22 432.338C32.5107 432.17 31.9693 431.871 31.596 431.442C31.2227 431.003 31.036 430.448 31.036 429.776C31.036 429.225 31.176 428.745 31.456 428.334C31.736 427.914 32.128 427.587 32.632 427.354C33.1453 427.111 33.752 426.99 34.452 426.99C35.1333 426.99 35.7167 427.116 36.202 427.368C36.6967 427.62 37.0747 427.965 37.336 428.404C37.5973 428.833 37.728 429.319 37.728 429.86V430.042ZM43.0363 429.664H45.9203V430.616H43.0363V434.704C43.0363 435.245 43.1763 435.623 43.4563 435.838C43.7363 436.043 44.1423 436.146 44.6743 436.146C44.917 436.146 45.141 436.137 45.3463 436.118C45.5516 436.09 45.743 436.053 45.9203 436.006V437.028C45.687 437.093 45.4583 437.135 45.2343 437.154C45.0103 437.182 44.8003 437.196 44.6043 437.196C43.7176 437.196 43.041 437.014 42.5743 436.65C42.1076 436.286 41.8743 435.707 41.8743 434.914V430.616H39.7603V429.664H41.8743V427.648H43.0363V429.664ZM55.2746 436.23V437.112C54.9853 437.196 54.7519 437.238 54.5746 437.238C53.7906 437.238 53.3566 436.869 53.2726 436.132C52.8619 436.533 52.4606 436.823 52.0686 437C51.6766 437.168 51.2473 437.252 50.7806 437.252C50.0713 437.252 49.4926 437.065 49.0446 436.692C48.6059 436.309 48.3866 435.777 48.3866 435.096C48.3866 434.592 48.4939 434.191 48.7086 433.892C48.9233 433.584 49.1846 433.355 49.4926 433.206C49.8099 433.047 50.1086 432.945 50.3886 432.898C50.5193 432.879 50.7199 432.851 50.9906 432.814C51.2613 432.767 51.6019 432.716 52.0126 432.66C52.4793 432.595 52.8013 432.506 52.9786 432.394C53.1653 432.282 53.2586 432.109 53.2586 431.876V431.624C53.2586 430.896 52.6986 430.532 51.5786 430.532C51.0373 430.532 50.6266 430.639 50.3466 430.854C50.0759 431.059 49.9173 431.386 49.8706 431.834H48.6946C48.7133 430.985 48.9886 430.378 49.5206 430.014C50.0619 429.641 50.7666 429.454 51.6346 429.454C52.5399 429.454 53.2259 429.627 53.6926 429.972C54.1593 430.308 54.3926 430.803 54.3926 431.456V435.684C54.3926 436.067 54.6026 436.258 55.0226 436.258C55.0973 436.258 55.1813 436.249 55.2746 436.23ZM53.2586 434.452V433.29C53.0159 433.402 52.7126 433.491 52.3486 433.556C51.9939 433.621 51.6626 433.673 51.3546 433.71C50.8133 433.775 50.3793 433.901 50.0526 434.088C49.7353 434.275 49.5766 434.601 49.5766 435.068C49.5766 435.432 49.7073 435.717 49.9686 435.922C50.2393 436.127 50.6079 436.23 51.0746 436.23C51.4199 436.23 51.7559 436.155 52.0826 436.006C52.4186 435.847 52.6986 435.633 52.9226 435.362C53.1466 435.091 53.2586 434.788 53.2586 434.452ZM60.3449 429.664H63.2289V430.616H60.3449V434.704C60.3449 435.245 60.4849 435.623 60.7649 435.838C61.0449 436.043 61.4509 436.146 61.9829 436.146C62.2256 436.146 62.4496 436.137 62.6549 436.118C62.8602 436.09 63.0516 436.053 63.2289 436.006V437.028C62.9956 437.093 62.7669 437.135 62.5429 437.154C62.3189 437.182 62.1089 437.196 61.9129 437.196C61.0262 437.196 60.3496 437.014 59.8829 436.65C59.4162 436.286 59.1829 435.707 59.1829 434.914V430.616H57.0689V429.664H59.1829V427.648H60.3449V429.664ZM72.1352 434.732C72.0139 435.497 71.6732 436.109 71.1132 436.566C70.5625 437.023 69.8579 437.252 68.9992 437.252C68.2619 437.252 67.6459 437.089 67.1512 436.762C66.6565 436.426 66.2832 435.969 66.0312 435.39C65.7885 434.811 65.6672 434.149 65.6672 433.402C65.6672 432.581 65.8072 431.876 66.0872 431.288C66.3672 430.7 66.7592 430.247 67.2632 429.93C67.7672 429.603 68.3552 429.44 69.0272 429.44C69.7832 429.44 70.3992 429.617 70.8752 429.972C71.3605 430.327 71.7152 430.821 71.9392 431.456C72.1725 432.091 72.2892 432.833 72.2892 433.682H66.8852C66.9039 434.401 67.0905 434.998 67.4452 435.474C67.7999 435.941 68.3319 436.174 69.0412 436.174C70.0025 436.174 70.6419 435.693 70.9592 434.732H72.1352ZM69.0132 430.518C68.3599 430.518 67.8605 430.733 67.5152 431.162C67.1699 431.591 66.9692 432.114 66.9132 432.73H71.0292C71.0292 432.319 70.9452 431.951 70.7772 431.624C70.6185 431.288 70.3899 431.022 70.0912 430.826C69.7925 430.621 69.4332 430.518 69.0132 430.518Z" fill="rgb(var(--colour-main))"></path><path d="M170.292 427.214H175.416V428.292H171.3L170.894 431.148C171.164 430.905 171.463 430.737 171.79 430.644C172.116 430.551 172.448 430.504 172.784 430.504C173.372 430.504 173.904 430.639 174.38 430.91C174.856 431.171 175.234 431.549 175.514 432.044C175.794 432.529 175.934 433.113 175.934 433.794C175.934 434.457 175.794 435.049 175.514 435.572C175.243 436.095 174.856 436.505 174.352 436.804C173.848 437.103 173.241 437.252 172.532 437.252C172.252 437.252 171.939 437.215 171.594 437.14C171.248 437.065 170.908 436.935 170.572 436.748C170.245 436.552 169.96 436.281 169.718 435.936C169.475 435.591 169.316 435.147 169.242 434.606H170.488C170.768 435.651 171.449 436.174 172.532 436.174C173.241 436.174 173.773 435.959 174.128 435.53C174.492 435.091 174.674 434.531 174.674 433.85C174.674 433.169 174.501 432.613 174.156 432.184C173.82 431.755 173.292 431.54 172.574 431.54C172.182 431.54 171.832 431.619 171.524 431.778C171.225 431.927 170.945 432.175 170.684 432.52H169.564L170.292 427.214Z" fill="rgb(var(--colour-main))"></path><rect x="189" y="414" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M209.05 429.944H207.72C207.58 429.412 207.361 428.978 207.062 428.642C206.763 428.306 206.301 428.138 205.676 428.138C205.06 428.138 204.561 428.306 204.178 428.642C203.805 428.978 203.534 429.449 203.366 430.056C203.198 430.653 203.114 431.344 203.114 432.128C203.114 433.453 203.333 434.447 203.772 435.11C204.211 435.773 204.845 436.104 205.676 436.104C206.329 436.104 206.815 435.899 207.132 435.488C207.449 435.077 207.678 434.475 207.818 433.682H209.148C209.017 434.867 208.644 435.759 208.028 436.356C207.412 436.953 206.623 437.252 205.662 437.252C204.813 437.252 204.099 437.047 203.52 436.636C202.941 436.216 202.503 435.623 202.204 434.858C201.905 434.093 201.756 433.187 201.756 432.142C201.756 431.442 201.826 430.779 201.966 430.154C202.115 429.529 202.344 428.983 202.652 428.516C202.96 428.04 203.366 427.667 203.87 427.396C204.374 427.125 204.99 426.99 205.718 426.99C206.371 426.99 206.927 427.121 207.384 427.382C207.841 427.643 208.21 427.998 208.49 428.446C208.77 428.885 208.957 429.384 209.05 429.944ZM211.068 437V426.794H212.23V430.756C212.492 430.373 212.804 430.061 213.168 429.818C213.532 429.575 214.004 429.454 214.582 429.454C215.012 429.454 215.399 429.529 215.744 429.678C216.099 429.818 216.379 430.037 216.584 430.336C216.799 430.625 216.906 430.999 216.906 431.456V437H215.744V431.918C215.744 431.423 215.595 431.059 215.296 430.826C214.998 430.593 214.643 430.476 214.232 430.476C213.794 430.476 213.425 430.588 213.126 430.812C212.828 431.036 212.604 431.33 212.454 431.694C212.305 432.058 212.23 432.45 212.23 432.87V437H211.068ZM226.275 436.23V437.112C225.985 437.196 225.752 437.238 225.575 437.238C224.791 437.238 224.357 436.869 224.273 436.132C223.862 436.533 223.461 436.823 223.069 437C222.677 437.168 222.247 437.252 221.781 437.252C221.071 437.252 220.493 437.065 220.045 436.692C219.606 436.309 219.387 435.777 219.387 435.096C219.387 434.592 219.494 434.191 219.709 433.892C219.923 433.584 220.185 433.355 220.493 433.206C220.81 433.047 221.109 432.945 221.389 432.898C221.519 432.879 221.72 432.851 221.991 432.814C222.261 432.767 222.602 432.716 223.013 432.66C223.479 432.595 223.801 432.506 223.979 432.394C224.165 432.282 224.259 432.109 224.259 431.876V431.624C224.259 430.896 223.699 430.532 222.579 430.532C222.037 430.532 221.627 430.639 221.347 430.854C221.076 431.059 220.917 431.386 220.871 431.834H219.695C219.713 430.985 219.989 430.378 220.521 430.014C221.062 429.641 221.767 429.454 222.635 429.454C223.54 429.454 224.226 429.627 224.693 429.972C225.159 430.308 225.393 430.803 225.393 431.456V435.684C225.393 436.067 225.603 436.258 226.023 436.258C226.097 436.258 226.181 436.249 226.275 436.23ZM224.259 434.452V433.29C224.016 433.402 223.713 433.491 223.349 433.556C222.994 433.621 222.663 433.673 222.355 433.71C221.813 433.775 221.379 433.901 221.053 434.088C220.735 434.275 220.577 434.601 220.577 435.068C220.577 435.432 220.707 435.717 220.969 435.922C221.239 436.127 221.608 436.23 222.075 436.23C222.42 436.23 222.756 436.155 223.083 436.006C223.419 435.847 223.699 435.633 223.923 435.362C224.147 435.091 224.259 434.788 224.259 434.452ZM228.377 437V429.664H229.455V430.882C229.744 430.434 230.076 430.084 230.449 429.832C230.832 429.58 231.312 429.454 231.891 429.454C232.32 429.454 232.708 429.529 233.053 429.678C233.408 429.818 233.688 430.037 233.893 430.336C234.108 430.625 234.215 430.999 234.215 431.456V437H233.053V431.918C233.053 431.423 232.904 431.059 232.605 430.826C232.306 430.593 231.952 430.476 231.541 430.476C231.102 430.476 230.734 430.588 230.435 430.812C230.136 431.036 229.912 431.33 229.763 431.694C229.614 432.058 229.539 432.45 229.539 432.87V437H228.377ZM239.761 440.052C238.968 440.052 238.296 439.875 237.745 439.52C237.195 439.175 236.868 438.615 236.765 437.84H237.983C238.151 438.661 238.753 439.072 239.789 439.072C240.527 439.072 241.054 438.867 241.371 438.456C241.698 438.055 241.861 437.364 241.861 436.384V435.964C241.647 436.393 241.348 436.715 240.965 436.93C240.592 437.145 240.163 437.252 239.677 437.252C238.959 437.252 238.361 437.079 237.885 436.734C237.409 436.389 237.055 435.917 236.821 435.32C236.597 434.723 236.485 434.051 236.485 433.304C236.485 432.585 236.602 431.937 236.835 431.358C237.069 430.77 237.419 430.303 237.885 429.958C238.361 429.613 238.945 429.44 239.635 429.44C240.634 429.44 241.385 429.818 241.889 430.574V429.664H243.051V435.81C243.051 436.827 242.967 437.602 242.799 438.134C242.594 438.769 242.235 439.245 241.721 439.562C241.208 439.889 240.555 440.052 239.761 440.052ZM239.845 436.16C240.34 436.16 240.737 436.025 241.035 435.754C241.334 435.474 241.549 435.124 241.679 434.704C241.819 434.275 241.889 433.836 241.889 433.388C241.889 432.893 241.819 432.431 241.679 432.002C241.539 431.563 241.32 431.209 241.021 430.938C240.723 430.667 240.326 430.532 239.831 430.532C239.374 430.532 238.987 430.658 238.669 430.91C238.352 431.153 238.109 431.489 237.941 431.918C237.783 432.338 237.703 432.814 237.703 433.346C237.703 433.841 237.778 434.303 237.927 434.732C238.077 435.161 238.305 435.507 238.613 435.768C238.931 436.029 239.341 436.16 239.845 436.16ZM251.789 434.732C251.668 435.497 251.327 436.109 250.767 436.566C250.217 437.023 249.512 437.252 248.653 437.252C247.916 437.252 247.3 437.089 246.805 436.762C246.311 436.426 245.937 435.969 245.685 435.39C245.443 434.811 245.321 434.149 245.321 433.402C245.321 432.581 245.461 431.876 245.741 431.288C246.021 430.7 246.413 430.247 246.917 429.93C247.421 429.603 248.009 429.44 248.681 429.44C249.437 429.44 250.053 429.617 250.529 429.972C251.015 430.327 251.369 430.821 251.593 431.456C251.827 432.091 251.943 432.833 251.943 433.682H246.539C246.558 434.401 246.745 434.998 247.099 435.474C247.454 435.941 247.986 436.174 248.695 436.174C249.657 436.174 250.296 435.693 250.613 434.732H251.789ZM248.667 430.518C248.014 430.518 247.515 430.733 247.169 431.162C246.824 431.591 246.623 432.114 246.567 432.73H250.683C250.683 432.319 250.599 431.951 250.431 431.624C250.273 431.288 250.044 431.022 249.745 430.826C249.447 430.621 249.087 430.518 248.667 430.518Z" fill="rgb(var(--colour-main))"></path><path d="M341.292 427.214H346.416V428.292H342.3L341.894 431.148C342.164 430.905 342.463 430.737 342.79 430.644C343.116 430.551 343.448 430.504 343.784 430.504C344.372 430.504 344.904 430.639 345.38 430.91C345.856 431.171 346.234 431.549 346.514 432.044C346.794 432.529 346.934 433.113 346.934 433.794C346.934 434.457 346.794 435.049 346.514 435.572C346.243 436.095 345.856 436.505 345.352 436.804C344.848 437.103 344.241 437.252 343.532 437.252C343.252 437.252 342.939 437.215 342.594 437.14C342.248 437.065 341.908 436.935 341.572 436.748C341.245 436.552 340.96 436.281 340.718 435.936C340.475 435.591 340.316 435.147 340.242 434.606H341.488C341.768 435.651 342.449 436.174 343.532 436.174C344.241 436.174 344.773 435.959 345.128 435.53C345.492 435.091 345.674 434.531 345.674 433.85C345.674 433.169 345.501 432.613 345.156 432.184C344.82 431.755 344.292 431.54 343.574 431.54C343.182 431.54 342.832 431.619 342.524 431.778C342.225 431.927 341.945 432.175 341.684 432.52H340.564L341.292 427.214Z" fill="rgb(var(--colour-main))"></path></svg></div></div></div></div></section></div></section>
<section id="deploy-your-ledger" class="first:0 pt-f6 tablet:pt-f3 pb-[2em] scroll-mt-[90px]"><span class="TopicContainer-title group-one text-s20 tablet:text-fnormal laptop:text-s20 block mb-[1em] "><span class="text-main-500">C<!-- --> </span>Deploy your Ledger<span class="pl-[0.5em] phone:invisible phone:group-one-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#deploy-your-ledger">#</a></span></span><div class="TopicContainer-content py-[2em] first-of-type:pt-0 ml-0 phone:ml-[1.8em] tablet:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Once you&#x27;ve designed your Ledger, you can deploy it using the dashboard, the API, or by embedding our CLI in your CI.</p><section id="deploy-your-ledger-dashboard" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">a. </span>Dashboard</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#deploy-your-ledger-dashboard">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can edit and store your Schema and create Ledgers directly from the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> Dashboard. This is useful during development, but is not recommended for production workflows.</p></div></div></section><section id="deploy-your-ledger-api" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">b. </span>API</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#deploy-your-ledger-api">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can call the API to store your Schema and create Ledgers. This is useful if you want to automate your Ledger deployment or have multiple environments which you want to keep in-sync. If you are creating many Schemas and Ledgers, you can also call the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">storeSchema</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">createLedger</code> APIs directly from your product.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Call <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">storeSchema</code> to store a Schema. Depending on your use case, you may share one Schema for all your users, or create a Schema per user.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">storeSchema query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation QuickstartStoreSchema($schema: SchemaInput!) {
  storeSchema(schema: $schema) {
    ... on StoreSchemaResult {
      schema {
        key
        name
        version {
          version
          created
          json
        }
      }
    }
    ... on Error {
      code
      message
    }
  }
}</code></pre></div></div></div><div class="pt-f2"><div class="relative flex min-w-f0"><div class="flex group-one bg-negative flex-col min-w-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div data-test-role="title" class="px-[1.25em] py-f2 flex flex-row flex-auto truncate hover:cursor-pointer group-two" role="button" tabindex="0"><div class="flex-initial"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">storeSchema variables </span></div><div class="pl-f2 group-two-hover:text-main group-one-hover:block transition-colors"><div class="hidden laptop:block"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-s20 no-underline leading-none text-inherit bg-inherit border-none">↓</span></div><div class="laptop:hidden"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-fnormal no-underline leading-none text-inherit bg-inherit border-none">↓</span></div></div></div><div class="py-f2 px-[1.25em] hover:cursor-pointer hidden group-one-hover:block"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 hover:text-main bg-inherit border-none">Show</span></div></div><div class="max-h-f20 flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;schema&quot;: {
    &quot;key&quot;: &quot;quickstart-schema&quot;,
    &quot;name&quot;: &quot;Quickstart Schema&quot;,
    &quot;chartOfAccounts&quot;: {
      &quot;defaultCurrency&quot;: {
        &quot;code&quot;: &quot;USD&quot;
      },
      &quot;defaultCurrencyMode&quot;: &quot;single&quot;,
      &quot;accounts&quot;: [
        {
          &quot;key&quot;: &quot;assets&quot;,
          &quot;type&quot;: &quot;asset&quot;,
          &quot;children&quot;: [
            {
              &quot;key&quot;: &quot;banks&quot;,
              &quot;children&quot;: [
                {
                  &quot;key&quot;: &quot;user-cash&quot;
                }
              ]
            }
          ]
        },
        {
          &quot;key&quot;: &quot;liabilities&quot;,
          &quot;type&quot;: &quot;liability&quot;,
          &quot;children&quot;: [
            {
              &quot;key&quot;: &quot;users&quot;,
              &quot;template&quot;: true,
              &quot;consistencyConfig&quot;: {
                &quot;ownBalanceUpdates&quot;: &quot;strong&quot;
              },
              &quot;children&quot;: [
                {
                  &quot;key&quot;: &quot;available&quot;
                },
                {
                  &quot;key&quot;: &quot;pending&quot;
                }
              ]
            }
          ]
        },
        {
          &quot;key&quot;: &quot;income&quot;,
          &quot;type&quot;: &quot;income&quot;
        },
        {
          &quot;key&quot;: &quot;expense&quot;,
          &quot;type&quot;: &quot;expense&quot;,
          &quot;children&quot;: []
        }
      ]
    },
    &quot;ledgerEntries&quot;: {
      &quot;types&quot;: [
        {
          &quot;type&quot;: &quot;user_funds_account&quot;,
          &quot;description&quot;: &quot;Funding {{user_id}} for {{funding_amount}}.&quot;,
          &quot;lines&quot;: [
            {
              &quot;account&quot;: { &quot;path&quot;: &quot;assets/banks/user-cash&quot; },
              &quot;key&quot;: &quot;funds_arrive_in_bank&quot;,
              &quot;amount&quot;: &quot;{{funding_amount}}&quot;
            },
            {
              &quot;account&quot;: { &quot;path&quot;: &quot;liabilities/users:{{user_id}}/available&quot; },
              &quot;key&quot;: &quot;increase_user_balance&quot;,
              &quot;amount&quot;: &quot;{{funding_amount}}&quot;
            }
          ]
        },
        {
          &quot;type&quot;: &quot;p2p_transfer&quot;,
          &quot;description&quot;: &quot;P2P of {{transfer_amount}} from {{from_user_id}} to {{to_user_id}}.&quot;,
          &quot;lines&quot;: [
            {
              &quot;account&quot;: {
                &quot;path&quot;: &quot;liabilities/users:{{from_user_id}}/available&quot;
              },
              &quot;key&quot;: &quot;decrease_from_user&quot;,
              &quot;amount&quot;: &quot;-{{transfer_amount}}&quot;
            },
            {
              &quot;account&quot;: { &quot;path&quot;: &quot;liabilities/users:{{to_user_id}}/available&quot; },
              &quot;key&quot;: &quot;increase_to_user&quot;,
              &quot;amount&quot;: &quot;{{transfer_amount}}&quot;
            }
          ],
          &quot;conditions&quot;: [
            {
              &quot;account&quot;: {
                &quot;path&quot;: &quot;liabilities/users:{{from_user_id}}/available&quot;
              },
              &quot;postcondition&quot;: {
                &quot;ownBalance&quot;: {
                  &quot;gte&quot;: &quot;0&quot;
                }
              }
            }
          ]
        }
      ]
    }
  }
}</code></pre></div></div><div class="absolute w-full left-f0 bottom-f0 min-h-f20 bg-gradient-to-b from-transparent to-negative"> <!-- --> </div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Create a Ledger using the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">createLedger</code> mutation.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">createLedger</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation QuickstartCreateLedger(
  $ik: SafeString!
  $ledger: CreateLedgerInput!
  $schema: SchemaMatchInput
) {
  createLedger(
    ik: $ik,
    ledger: $ledger,
    schema:$schema
  ) {
    ... on CreateLedgerResult {
      ledger {
        ik
        name
        created
        schema {
          key
        }
      }
    }
    ... on Error {
      code
      message
    }
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">schema.key</code> field is set to the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">key</code> from the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">storeSchema</code> API call.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">createLedger variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ik&quot;: &quot;quickstart-ledger&quot;,
  &quot;ledger&quot;: {
    &quot;name&quot;: &quot;Quickstart Ledger&quot;
  },
  &quot;schema&quot;: {
    &quot;key&quot;: &quot;quickstart-schema&quot;
  }
}</code></pre></div></div></div></div></div></section><section id="deploy-your-ledger-cli" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">c. </span>CLI</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#deploy-your-ledger-cli">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> CLI can be installed in your CI and used to store your Schema.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Here&#x27;s an example of how you can use the CLI in a Github Action workflow:</p><div class="pt-f2"><div class="relative flex min-w-f0"><div class="flex group-one bg-negative flex-col min-w-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div data-test-role="title" class="px-[1.25em] py-f2 flex flex-row flex-auto truncate hover:cursor-pointer group-two" role="button" tabindex="0"><div class="flex-initial"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Fragment CLI in Github Actions </span></div><div class="pl-f2 group-two-hover:text-main group-one-hover:block transition-colors"><div class="hidden laptop:block"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-s20 no-underline leading-none text-inherit bg-inherit border-none">↓</span></div><div class="laptop:hidden"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-fnormal no-underline leading-none text-inherit bg-inherit border-none">↓</span></div></div></div><div class="py-f2 px-[1.25em] hover:cursor-pointer hidden group-one-hover:block"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 hover:text-main bg-inherit border-none">Show</span></div></div><div class="max-h-f20 flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-text" style="white-space:pre">- name: Set up Homebrew
  id: set-up-homebrew
  uses: Homebrew/actions/setup-homebrew@master
- name: Install Fragment CLI
  run: |
    brew tap fragment-dev/tap
    brew install fragment-dev/tap/fragment-cli
    echo &quot;Fragment CLI installed&quot;
- name: Authenticate with Fragment
  run: |
    fragment login \
      --client-id ${{ vars.FRAGMENT_CLIENT_ID }} \
      --client-secret ${{ vars.FRAGMENT_CLIENT_SECRET }} \
      --api-url ${{ vars.FRAGMENT_API_URL }} \
      --oauth-url ${{ vars.FRAGMENT_OAUTH_URL }} \
      --oauth-scope ${{ vars.FRAGMENT_OAUTH_SCOPE }}
- name: Store Schema
  run: |
    fragment store-schema --path my-schema.jsonc
</code></pre></div></div><div class="absolute w-full left-f0 bottom-f0 min-h-f20 bg-gradient-to-b from-transparent to-negative"> <!-- --> </div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Read the <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#cli-commands">CLI Command Reference</a> to learn more about the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> CLI.</p></div></div></section></div></section>
<section id="install-the-sdk" class="first:0 pt-f6 tablet:pt-f3 pb-[2em] scroll-mt-[90px]"><span class="TopicContainer-title group-one text-s20 tablet:text-fnormal laptop:text-s20 block mb-[1em] "><span class="text-main-500">D<!-- --> </span>Install the SDK<span class="pl-[0.5em] phone:invisible phone:group-one-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#install-the-sdk">#</a></span></span><div class="TopicContainer-content py-[2em] first-of-type:pt-0 ml-0 phone:ml-[1.8em] tablet:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2"><span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> publishes SDKs in TypeScript, Go, and Ruby. The SDKs are open-source, implement authentication, and come with predefined GraphQL queries to help you get started.</p><section id="install-the-sdk-setup-the-cli" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">a. </span>Setup the CLI</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#install-the-sdk-setup-the-cli">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> CLI is used to generate GraphQL queries specific to your Schema. The SDKs use the generated queries to give you a strongly-typed interface for posting Ledger Entries defined in your Ledger.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Install the CLI using <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://brew.sh/">Homebrew</a>:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">brew tap fragment-dev/tap &amp;&amp;\
  brew install fragment-dev/tap/fragment-cli</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Authenticate the CLI to your <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> workspace, run the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">login</code> command:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">fragment login</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div></div></div></section><section id="install-the-sdk-typescript" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">b. </span>TypeScript</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#install-the-sdk-typescript">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The TypeScript Node SDK is available at <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">@fragment-dev/node-client</code>.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Using npm</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-text" style="white-space:pre">npm install --save @fragment-dev/node-client</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Using yarn</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-text" style="white-space:pre">yarn add @fragment-dev/node-client</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Create an API client in the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://dashboard.fragment.dev/go/s/api-clients">dashboard</a>. Initialize the SDK using the credentials:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-typescript" style="white-space:pre">import {
  createFragmentClient
} from &#x27;@fragment-dev/node-client&#x27;;

const fragment = createFragmentClient({
  params: {
    clientId: &quot;&lt;Client ID&gt;&quot;,
    clientSecret: &quot;&lt;Client Secret&gt;&quot;,
    apiUrl: &quot;&lt;API URL&gt;&quot;,
    authUrl: &quot;&lt;OAuth URL&gt;&quot;,
    scope: &quot;&lt;OAuth Scope&gt;&quot;,
  },
});

// Verify the SDK is authenticated by retrieving
// the workspace
const { workspace } = await fragment.getWorkspace();
console.log(&#x27;Workspace Name:&#x27;, workspace.name);
</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Read the SDK&#x27;s <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://github.com/fragment-dev/node-client/blob/dev/README.md">README</a> for additional code examples.</p><section id="install-the-sdk-typescript-generate-queries" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Generate Queries</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#install-the-sdk-typescript-generate-queries">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">This workflow is a two-step process:</p><ol data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2 ml-[1.875em] list-decimal list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Use the CLI to generate GraphQL queries.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Use the SDK to translate these queries to a TypeScript GraphQL client you can embed within your application.</li>
</ol><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Run the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">get-schema</code> CLI command to download your Schema locally to <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">fragment/schema.jsonc</code>:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">fragment get-schema --output=fragment/schema.jsonc</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Run the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">gen-graphql</code> CLI command to generate the GraphQL queries:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">fragment gen-graphql \
  --path=fragment/schema.jsonc \
  --output=fragment/queries.graphql</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">This will create a <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">queries.graphql</code> file which you will use to generate the GraphQL client.</p></div></section><section id="install-the-sdk-typescript-generate-client" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Generate Client</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#install-the-sdk-typescript-generate-client">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Run the TypeScript codegen to generate the GraphQL client code:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Using npx</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-text" style="white-space:pre">npx fragment-node-client-codegen \
  --input=fragment/queries.graphql \
  --outputFilename=fragment/fragment-client.ts</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Using yarn</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-text" style="white-space:pre">yarn fragment-node-client-codegen \
  --input=fragment/queries.graphql \
  --outputFilename=fragment/fragment-client.ts</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Pass the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">getSdk</code> function from the generated file to <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">createFragmentClient</code> to use the queries:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-typescript" style="white-space:pre">import {
  createFragmentClient
} from &quot;@fragment-dev/node-client&quot;;

import {
  getSdk
} from &#x27;./fragment/fragment-client&#x27;;

const fragment = createFragmentClient({
  params: {
    clientId: &quot;&lt;Client ID&gt;&quot;,
    clientSecret: &quot;&lt;Client Secret&gt;&quot;,
    apiUrl: &quot;&lt;API URL&gt;&quot;,
    authUrl: &quot;&lt;OAuth URL&gt;&quot;,
    scope: &quot;&lt;OAuth Scope&gt;&quot;,
  },
  getSdk,
});

// The returned client includes the
// pre-defined queries as well as
// the queries generated by the CLI.
await fragment.Post_YourLedgerEntry({});</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div></div></section></div></div></section><section id="install-the-sdk-go" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">c. </span>Go</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#install-the-sdk-go">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The Go SDK is available at <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">github.com/fragment-dev/fragment-go</code>.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To install, run:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">go get &#x27;github.com/fragment-dev/fragment-go&#x27;</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Create an API client in the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://dashboard.fragment.dev/go/s/api-clients">dashboard</a>. Initialize the SDK using the credentials:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-go" style="white-space:pre">package main

import (
  &quot;context&quot;
  &quot;fmt&quot;

  &quot;github.com/fragment-dev/fragment-go/auth&quot;
  &quot;github.com/fragment-dev/fragment-go/queries&quot;
)

func main() {
  ctx, err := auth.GetAuthenticatedContext(
    context.Background(),
    &amp;auth.GetTokenParams{
      ClientID: &quot;&lt;Client ID&gt;&quot;,
      ClientSecret: &quot;&lt;Client Secret&gt;&quot;,
      ApiUrl: &quot;&lt;API URL&gt;&quot;,
      AuthUrl: &quot;&lt;OAuth URL&gt;&quot;,
      Scope: &quot;&lt;OAuth Scope&gt;&quot;,
    }
  )
  if err != nil {
    fmt.Println(err)
    return
  }

  // Verify the SDK is authenticated by retrieving
  // the workspace
  response, _ := queries.GetWorkspace(ctx)
}</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Read the SDK&#x27;s <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://github.com/fragment-dev/fragment-go/blob/dev/README.md">README</a> for additional code examples.</p><section id="install-the-sdk-go-generate-queries" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Generate Queries</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#install-the-sdk-go-generate-queries">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">This workflow is a two-step process:</p><ol data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2 ml-[1.875em] list-decimal list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Use the CLI to generate GraphQL queries.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Use the SDK to translate these queries to methods you can embed within your application.</li>
</ol><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Run the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">get-schema</code> CLI command to download your Schema locally to <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">fragment/schema.jsonc</code>:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">fragment get-schema --output=fragment/schema.jsonc</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Run the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">gen-graphql</code> CLI command to generate the GraphQL queries:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">fragment gen-graphql \
  --path=fragment/schema.jsonc \
  --output=fragment/queries.graphql</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">This will create a <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">queries.graphql</code> file which you will use to generate the corresponding Go methods.</p></div></section><section id="install-the-sdk-go-generate-code" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Generate Code</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#install-the-sdk-go-generate-code">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Run the Go SDK codegen to generate methods for each GraphQL query:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">go run github.com/fragment-dev/fragment-go \
  --input=fragment/queries.graphql \
  --output=fragment/generated.go \
  --package=main</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can then issue the GraphQL request from your <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">main</code> package:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-go" style="white-space:pre">package main

import (
  &quot;context&quot;
  &quot;fmt&quot;

  &quot;github.com/fragment-dev/fragment-go/auth&quot;
)

func main() {
  ctx, err := auth.GetAuthenticatedContext(
    context.Background(),
    &amp;auth.GetTokenParams{
      ClientID: &quot;&lt;Client ID&gt;&quot;,
      ClientSecret: &quot;&lt;Client Secret&gt;&quot;,
      ApiUrl: &quot;&lt;API URL&gt;&quot;,
      AuthUrl: &quot;&lt;OAuth URL&gt;&quot;,
      Scope: &quot;&lt;OAuth Scope&gt;&quot;,
    }
  )
  if err != nil {
    fmt.Println(err)
    return
  }

  response, _ := Post_YourLedgerEntryType(
    ctx,
    ...
  )
}</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div></div></section></div></div></section><section id="install-the-sdk-ruby" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">d. </span>Ruby</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#install-the-sdk-ruby">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The Ruby SDK is available at <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">fragment-dev</code>.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To install, run:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">gem install fragment-dev</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Create an API client in the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://dashboard.fragment.dev/go/s/api-clients">dashboard</a>. Initialize the SDK using the credentials:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-ruby" style="white-space:pre">require &#x27;fragment_client&#x27;

fragment = FragmentClient.new(
  &quot;&lt;Client ID&gt;&quot;,
  &quot;&lt;Client Secret&gt;&quot;,
  api_url: &quot;&lt;API URL&gt;&quot;,
  oauth_url: &quot;&lt;OAuth URL&gt;&quot;,
  oauth_scope: &quot;&lt;OAuth Scope&gt;&quot;
)

// Verify the SDK is authenticated by retrieving
// the workspace
workspace = fragment.get_workspace()
</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Read the SDK&#x27;s <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://github.com/fragment-dev/fragment-ruby/blob/dev/README.md">README</a> for additional code examples.</p><section id="install-the-sdk-ruby-generate-queries" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Generate Queries</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#install-the-sdk-ruby-generate-queries">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">This workflow is a two-step process:</p><ol data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2 ml-[1.875em] list-decimal list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Use the CLI to generate GraphQL queries.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Use the SDK to translate these queries to methods you can embed within your application.</li>
</ol><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Run the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">get-schema</code> CLI command to download your Schema locally to <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">fragment/schema.jsonc</code>:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">fragment get-schema --output=fragment/schema.jsonc</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Run the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">gen-graphql</code> CLI command to generate the GraphQL queries:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">fragment gen-graphql \
  --path=fragment/schema.jsonc \
  --output=fragment/queries.graphql</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">This will create a <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">queries.graphql</code> file which you will provide as input to <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">FragmentClient</code>.</p></div></section><section id="install-the-sdk-ruby-use-custom-queries" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Use custom queries</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#install-the-sdk-ruby-use-custom-queries">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Initialize <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">FragmentClient</code> with the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">extra_queries_filenames</code> keyword argument set to the path of the generated <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">queries.graphql</code> file:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-ruby" style="white-space:pre">require &#x27;fragment_client&#x27;

fragment = FragmentClient.new(
  &quot;&lt;Client ID&gt;&quot;,
  &quot;&lt;Client Secret&gt;&quot;,
  api_url: &quot;&lt;API URL&gt;&quot;,
  oauth_url: &quot;&lt;OAuth URL&gt;&quot;,
  oauth_scope: &quot;&lt;OAuth Scope&gt;&quot;,
  extra_queries_filenames:
    [&quot;path/to/queries.graphql&quot;]
)

fragment.post_your_ledger_entry_type()</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div></div></section></div></div></section><section id="install-the-sdk-other-languages" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">e. </span>Other Languages</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#install-the-sdk-other-languages">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2"><span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> exposes a GraphQL API to write and read your data. The latest GraphQL schema is hosted at:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-bash" style="white-space:pre">https://api.fragment.dev/schema.graphql</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To create an SDK in a language not listed above:</p><ol data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2 ml-[1.875em] list-decimal list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Use the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> CLI to generate GraphQL queries from your Schema</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Generate an SDK using a GraphQL codegen tool for your langauge</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Implement authentication, retry and error handling logic</li>
</ol><section id="install-the-sdk-other-languages-generate-queries" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Generate Queries</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#install-the-sdk-other-languages-generate-queries">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Run the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">get-schema</code> CLI command to download your Schema locally to <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">fragment/schema.jsonc</code>:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">fragment get-schema --output=fragment/schema.jsonc</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Run the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">gen-graphql</code> CLI command to generate the GraphQL queries:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-text" style="white-space:pre">fragment gen-graphql \
  --path=fragment/schema.jsonc \
  --output=fragment/queries.graphql</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Provide the optional <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">--include-standard-queries</code> flag to include the set of standard GraphQL queries in the output.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">This will create a <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">queries.graphql</code> file which you will provide as input to your codegen tool.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Some codegen tools require each GraphQL query to be in a separate file. You can use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">--output-file-per-query</code> flag:</p><div class="pt-f2"><div class="group-one" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between"><div class="min-w-[75%] grow"><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full py-[1.25em]"><code class="language-bash" style="white-space:pre">fragment gen-graphql \
  --path=fragment/schema.jsonc \
  --output=fragment/queries \
  --output-file-per-query</code></pre></div></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit bg-codeblock-copy-texture pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div></div></div></div></section><section id="install-the-sdk-other-languages-generate-sdk" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Generate SDK</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#install-the-sdk-other-languages-generate-sdk">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use a GraphQL codegen tool to generate the SDK. A list of clients is available on the <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://graphql.org/community/tools-and-libraries/?tags=client">GraphQL website</a>.</p></div></section><section id="install-the-sdk-other-languages-implement-logic" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Implement logic</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#install-the-sdk-other-languages-implement-logic">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You will need to implement authentication by customizing the generated SDK. <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> uses OAuth2&#x27;s <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://www.oauth.com/oauth2-servers/access-tokens/client-credentials/">client credentials flow</a> to authenticate API clients. Read the <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#api-overview-authentication">API Authentication</a> section to learn more.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You should also add support for handling errors and retries. See the <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#api-overview-errors">API Errors</a> section.</p></div></section></div></div></section></div></section>
<section id="post-ledger-entries" class="first:0 pt-f6 tablet:pt-f3 pb-[2em] scroll-mt-[90px]"><span class="TopicContainer-title group-one text-s20 tablet:text-fnormal laptop:text-s20 block mb-[1em] "><span class="text-main-500">E<!-- --> </span>Post Ledger Entries<span class="pl-[0.5em] phone:invisible phone:group-one-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#post-ledger-entries">#</a></span></span><div class="TopicContainer-content py-[2em] first-of-type:pt-0 ml-0 phone:ml-[1.8em] tablet:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Posting a Ledger Entry to your Ledger is a two-step process:</p><ol data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2 ml-[1.875em] list-decimal list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Define the structure of the Ledger Entry in your Schema.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Post the Ledger Entry using the API.</li>
</ol><div class="pt-f2"><div class="hidden tablet:block"><svg width="100%" height="100%" viewBox="0 0 621 450" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="621" height="450" fill="rgb(var(--colour-negative))"></rect><path d="M19.274 32V22.214H22.844C24.594 22.214 25.994 23.208 25.994 25.14C25.994 27.072 24.594 28.066 22.844 28.066H20.548V32H19.274ZM20.548 26.96H22.676C23.922 26.96 24.664 26.26 24.664 25.14C24.664 24.02 23.922 23.32 22.676 23.32H20.548V26.96ZM30.9803 24.44C33.2343 24.44 34.2983 26.12 34.2983 28.346C34.2983 30.572 33.2343 32.252 30.9803 32.252C28.7263 32.252 27.6623 30.572 27.6623 28.346C27.6623 26.12 28.7263 24.44 30.9803 24.44ZM30.9803 25.518C29.4963 25.518 28.8803 26.848 28.8803 28.346C28.8803 29.844 29.4963 31.174 30.9803 31.174C32.4643 31.174 33.0803 29.844 33.0803 28.346C33.0803 26.848 32.4643 25.518 30.9803 25.518ZM42.3226 26.666H41.1046C41.0766 25.938 40.5166 25.476 39.6346 25.476C38.6826 25.476 38.0386 25.896 38.0386 26.554C38.0386 27.072 38.4026 27.38 39.0886 27.562L40.7546 27.996C41.9866 28.318 42.6166 28.92 42.6166 29.956C42.6166 31.384 41.4966 32.252 39.6766 32.252C37.7586 32.252 36.7506 31.412 36.6666 29.774H37.8986C38.0106 30.768 38.6126 31.216 39.7046 31.216C40.7406 31.216 41.4266 30.824 41.4266 30.138C41.4266 29.508 41.1186 29.242 40.3206 29.032L38.7806 28.626C37.4506 28.276 36.8486 27.73 36.8486 26.61C36.8486 25.28 37.9406 24.44 39.6626 24.44C41.3706 24.44 42.2946 25.28 42.3226 26.666ZM48.3449 24.664H51.2289V25.616H48.3449V29.704C48.3449 30.782 48.9189 31.146 49.9829 31.146C50.4589 31.146 50.8789 31.104 51.2289 31.006V32.028C50.7669 32.168 50.3049 32.196 49.9129 32.196C48.1349 32.196 47.1829 31.51 47.1829 29.914V25.616H45.0689V24.664H47.1829V22.648H48.3449V24.664ZM63.0075 22.214H64.3095V30.852H68.9715V32H63.0075V22.214ZM77.4438 29.732C77.1918 31.272 76.0298 32.252 74.3078 32.252C72.0958 32.252 70.9758 30.642 70.9758 28.402C70.9758 25.952 72.3058 24.44 74.3358 24.44C76.6038 24.44 77.5978 26.134 77.5978 28.682H72.1938C72.2358 30.124 72.9358 31.174 74.3498 31.174C75.3018 31.174 75.9458 30.712 76.2678 29.732H77.4438ZM74.3218 25.518C73.0058 25.518 72.3198 26.498 72.2218 27.73H76.3378C76.3378 26.512 75.5818 25.518 74.3218 25.518ZM84.8521 21.794H86.0141V32H84.9781V30.964C84.3901 31.818 83.6061 32.252 82.6401 32.252C80.4701 32.252 79.4481 30.516 79.4481 28.262C79.4481 26.148 80.5121 24.44 82.5981 24.44C83.5921 24.44 84.3481 24.818 84.8521 25.574V21.794ZM82.7941 25.532C81.4221 25.532 80.6661 26.764 80.6661 28.346C80.6661 29.844 81.3101 31.16 82.8081 31.16C84.2781 31.16 84.8521 29.746 84.8521 28.388C84.8521 26.918 84.2641 25.532 82.7941 25.532ZM91.3784 35.052C89.7824 35.052 88.5784 34.394 88.3824 32.84H89.6004C89.7684 33.666 90.3424 34.072 91.4064 34.072C92.8764 34.072 93.4784 33.344 93.4784 31.384V30.964C93.0444 31.818 92.2604 32.252 91.2944 32.252C89.1244 32.252 88.1024 30.558 88.1024 28.304C88.1024 26.148 89.1664 24.44 91.2524 24.44C92.2464 24.44 93.0024 24.818 93.5064 25.574V24.664H94.6684V30.81C94.6684 31.832 94.5844 32.602 94.4164 33.134C94.0104 34.408 92.9604 35.052 91.3784 35.052ZM91.4624 31.16C92.9324 31.16 93.5064 29.746 93.5064 28.388C93.5064 26.918 92.9184 25.532 91.4484 25.532C90.0764 25.532 89.3204 26.764 89.3204 28.346C89.3204 29.844 89.9644 31.16 91.4624 31.16ZM103.407 29.732C103.155 31.272 101.993 32.252 100.271 32.252C98.0587 32.252 96.9387 30.642 96.9387 28.402C96.9387 25.952 98.2687 24.44 100.299 24.44C102.567 24.44 103.561 26.134 103.561 28.682H98.1567C98.1987 30.124 98.8987 31.174 100.313 31.174C101.265 31.174 101.909 30.712 102.231 29.732H103.407ZM100.285 25.518C98.9687 25.518 98.2827 26.498 98.1847 27.73H102.301C102.301 26.512 101.545 25.518 100.285 25.518ZM106.279 32V24.664H107.357V26.246C107.847 25.196 108.785 24.454 109.989 24.454C111.669 24.454 112.537 25.378 112.677 26.834H111.515C111.347 25.952 110.871 25.476 109.877 25.476C108.407 25.476 107.455 26.722 107.455 28.444V32H106.279ZM128.936 27.562H124.736V30.852H129.398V32H123.434V22.214H129.146V23.362H124.736V26.414H128.936V27.562ZM131.92 32V24.664H132.998V25.882C133.572 24.986 134.272 24.454 135.434 24.454C136.708 24.454 137.758 25.098 137.758 26.456V32H136.596V26.918C136.596 25.938 135.896 25.476 135.084 25.476C133.768 25.476 133.082 26.61 133.082 27.87V32H131.92ZM143.542 24.664H146.426V25.616H143.542V29.704C143.542 30.782 144.116 31.146 145.18 31.146C145.656 31.146 146.076 31.104 146.426 31.006V32.028C145.964 32.168 145.502 32.196 145.11 32.196C143.332 32.196 142.38 31.51 142.38 29.914V25.616H140.266V24.664H142.38V22.648H143.542V24.664ZM149.55 32V24.664H150.628V26.246C151.118 25.196 152.056 24.454 153.26 24.454C154.94 24.454 155.808 25.378 155.948 26.834H154.786C154.618 25.952 154.142 25.476 153.148 25.476C151.678 25.476 150.726 26.722 150.726 28.444V32H149.55ZM160.221 23.614V22.214H161.621V23.614H160.221ZM161.495 24.664V31.048H163.749V32H157.827V31.048H160.347V25.616H157.827V24.664H161.495ZM172.641 29.732C172.389 31.272 171.227 32.252 169.505 32.252C167.293 32.252 166.173 30.642 166.173 28.402C166.173 25.952 167.503 24.44 169.533 24.44C171.801 24.44 172.795 26.134 172.795 28.682H167.391C167.433 30.124 168.133 31.174 169.547 31.174C170.499 31.174 171.143 30.712 171.465 29.732H172.641ZM169.519 25.518C168.203 25.518 167.517 26.498 167.419 27.73H171.535C171.535 26.512 170.779 25.518 169.519 25.518ZM180.791 26.666H179.573C179.545 25.938 178.985 25.476 178.103 25.476C177.151 25.476 176.507 25.896 176.507 26.554C176.507 27.072 176.871 27.38 177.557 27.562L179.223 27.996C180.455 28.318 181.085 28.92 181.085 29.956C181.085 31.384 179.965 32.252 178.145 32.252C176.227 32.252 175.219 31.412 175.135 29.774H176.367C176.479 30.768 177.081 31.216 178.173 31.216C179.209 31.216 179.895 30.824 179.895 30.138C179.895 29.508 179.587 29.242 178.789 29.032L177.249 28.626C175.919 28.276 175.317 27.73 175.317 26.61C175.317 25.28 176.409 24.44 178.131 24.44C179.839 24.44 180.763 25.28 180.791 26.666Z" fill="rgb(var(--colour-main))"></path><path d="M324.42 113L327.514 103.214H329.152L332.232 113H330.874L330.006 110.074H326.632L325.764 113H324.42ZM326.954 108.982H329.684L328.312 104.39L326.954 108.982ZM333.928 113V103.214H337.498C339.248 103.214 340.648 104.208 340.648 106.14C340.648 108.072 339.248 109.066 337.498 109.066H335.202V113H333.928ZM335.202 107.96H337.33C338.576 107.96 339.318 107.26 339.318 106.14C339.318 105.02 338.576 104.32 337.33 104.32H335.202V107.96ZM342.905 113V111.908H344.977V104.306H342.905V103.214H348.379V104.306H346.293V111.908H348.379V113H342.905Z" fill="rgb(var(--colour-main))"></path><path d="M69.468 106.042C69.426 104.922 68.768 104.096 67.41 104.096C66.066 104.096 65.352 104.768 65.352 105.65C65.352 106.462 65.772 106.924 66.682 107.134L68.684 107.596C70.21 107.946 71.008 108.954 71.008 110.214C71.008 112.16 69.594 113.252 67.536 113.252C65.1 113.252 63.798 111.964 63.77 109.878H65.03C65.044 111.18 65.912 112.09 67.564 112.09C69.034 112.09 69.692 111.39 69.692 110.396C69.692 109.528 69.216 109.038 68.25 108.814L66.22 108.338C64.806 108.002 64.036 107.12 64.036 105.776C64.036 104.138 65.352 102.99 67.452 102.99C69.496 102.99 70.728 104.236 70.728 105.86V106.042H69.468ZM77.9403 108.086C77.8143 107.12 77.1703 106.518 76.1483 106.518C74.6363 106.518 74.0483 107.96 74.0483 109.416C74.0483 110.872 74.7063 112.174 76.1763 112.174C77.1983 112.174 77.8283 111.6 78.0243 110.438H79.2003C79.0463 112.202 77.9543 113.252 76.1483 113.252C74.0063 113.252 72.8303 111.572 72.8303 109.416C72.8303 107.218 73.9783 105.44 76.1623 105.44C77.9543 105.44 79.0743 106.532 79.1163 108.086H77.9403ZM81.7226 113V102.794H82.8846V106.756C83.4026 105.986 84.0746 105.454 85.2366 105.454C86.5106 105.454 87.5606 106.098 87.5606 107.456V113H86.3986V107.918C86.3986 106.938 85.6986 106.476 84.8866 106.476C83.5706 106.476 82.8846 107.61 82.8846 108.87V113H81.7226ZM95.3749 108.73C95.3749 107.512 94.6189 106.518 93.3589 106.518C92.0429 106.518 91.3569 107.498 91.2589 108.73H95.3749ZM90.0129 109.402C90.0129 106.952 91.3429 105.44 93.3729 105.44C95.6409 105.44 96.6349 107.134 96.6349 109.682H91.2309C91.2729 111.124 91.9729 112.174 93.3869 112.174C94.3389 112.174 94.9829 111.712 95.3049 110.732H96.4809C96.2289 112.272 95.0669 113.252 93.3449 113.252C91.1329 113.252 90.0129 111.642 90.0129 109.402ZM98.1632 113V105.664H99.2552V106.42C99.5632 105.958 100.151 105.496 100.935 105.496C101.649 105.496 102.223 105.874 102.433 106.476C102.727 105.986 103.315 105.496 104.141 105.496C105.051 105.496 105.723 106.098 105.723 107.022V113H104.575V107.26C104.575 106.742 104.239 106.476 103.763 106.476C102.979 106.476 102.517 106.938 102.517 107.708V113H101.369V107.26C101.369 106.742 101.033 106.476 100.557 106.476C99.7732 106.476 99.3112 106.938 99.3112 107.708V113H98.1632ZM114.237 113.112C113.943 113.196 113.719 113.238 113.537 113.238C112.725 113.238 112.319 112.888 112.235 112.132C111.409 112.944 110.681 113.252 109.743 113.252C108.315 113.252 107.349 112.454 107.349 111.096C107.349 109.584 108.497 109.038 109.351 108.898C109.603 108.856 110.149 108.772 110.975 108.66C111.913 108.534 112.221 108.352 112.221 107.876V107.624C112.221 106.896 111.647 106.532 110.541 106.532C109.463 106.532 108.931 106.938 108.833 107.834H107.657C107.685 106.14 108.861 105.454 110.597 105.454C112.403 105.454 113.355 106.154 113.355 107.456V111.684C113.355 112.062 113.565 112.258 113.985 112.258C114.055 112.258 114.167 112.244 114.237 112.23V113.112ZM108.539 111.068C108.539 111.796 109.099 112.23 110.037 112.23C111.059 112.23 112.221 111.474 112.221 110.452V109.29C111.731 109.514 110.933 109.64 110.317 109.71C109.225 109.836 108.539 110.144 108.539 111.068Z" fill="rgb(var(--colour-main))"></path><rect x="324" y="126" width="234" height="216" stroke="rgb(var(--colour-main-500))"></rect><rect x="63" y="126" width="234" height="216" stroke="rgb(var(--colour-main-500))"></rect><path d="M336.546 149V141.664H337.638V142.42C337.946 141.958 338.534 141.496 339.318 141.496C340.032 141.496 340.606 141.874 340.816 142.476C341.11 141.986 341.698 141.496 342.524 141.496C343.434 141.496 344.106 142.098 344.106 143.022V149H342.958V143.26C342.958 142.742 342.622 142.476 342.146 142.476C341.362 142.476 340.9 142.938 340.9 143.708V149H339.752V143.26C339.752 142.742 339.416 142.476 338.94 142.476C338.156 142.476 337.694 142.938 337.694 143.708V149H336.546ZM351.906 141.664V149H350.856V147.908C350.184 148.874 349.484 149.252 348.406 149.252C347.776 149.252 347.244 149.112 346.824 148.818C346.32 148.454 346.068 147.936 346.068 147.25V141.664H347.23V146.788C347.23 147.278 347.398 147.656 347.72 147.908C347.986 148.118 348.336 148.23 348.742 148.23C349.288 148.23 349.75 148.034 350.128 147.628C350.534 147.194 350.744 146.564 350.744 145.738V141.664H351.906ZM357.691 141.664H360.575V142.616H357.691V146.704C357.691 147.782 358.265 148.146 359.329 148.146C359.805 148.146 360.225 148.104 360.575 148.006V149.028C360.113 149.168 359.651 149.196 359.259 149.196C357.481 149.196 356.529 148.51 356.529 146.914V142.616H354.415V141.664H356.529V139.648H357.691V141.664ZM369.929 148.23V149.112C369.635 149.196 369.411 149.238 369.229 149.238C368.417 149.238 368.011 148.888 367.927 148.132C367.101 148.944 366.373 149.252 365.435 149.252C364.007 149.252 363.041 148.454 363.041 147.096C363.041 145.584 364.189 145.038 365.043 144.898C365.295 144.856 365.841 144.772 366.667 144.66C367.605 144.534 367.913 144.352 367.913 143.876V143.624C367.913 142.896 367.339 142.532 366.233 142.532C365.155 142.532 364.623 142.938 364.525 143.834H363.349C363.377 142.14 364.553 141.454 366.289 141.454C368.095 141.454 369.047 142.154 369.047 143.456V147.684C369.047 148.062 369.257 148.258 369.677 148.258C369.747 148.258 369.859 148.244 369.929 148.23ZM367.913 146.452V145.29C367.423 145.514 366.625 145.64 366.009 145.71C364.917 145.836 364.231 146.144 364.231 147.068C364.231 147.796 364.791 148.23 365.729 148.23C366.751 148.23 367.913 147.474 367.913 146.452ZM374.999 141.664H377.883V142.616H374.999V146.704C374.999 147.782 375.573 148.146 376.637 148.146C377.113 148.146 377.533 148.104 377.883 148.006V149.028C377.421 149.168 376.959 149.196 376.567 149.196C374.789 149.196 373.837 148.51 373.837 146.914V142.616H371.723V141.664H373.837V139.648H374.999V141.664ZM383.023 140.614V139.214H384.423V140.614H383.023ZM384.297 141.664V148.048H386.551V149H380.629V148.048H383.149V142.616H380.629V141.664H384.297ZM392.252 141.44C394.506 141.44 395.57 143.12 395.57 145.346C395.57 147.572 394.506 149.252 392.252 149.252C389.998 149.252 388.934 147.572 388.934 145.346C388.934 143.12 389.998 141.44 392.252 141.44ZM392.252 142.518C390.768 142.518 390.152 143.848 390.152 145.346C390.152 146.844 390.768 148.174 392.252 148.174C393.736 148.174 394.352 146.844 394.352 145.346C394.352 143.848 393.736 142.518 392.252 142.518ZM397.994 149V141.664H399.072V142.882C399.646 141.986 400.346 141.454 401.508 141.454C402.782 141.454 403.832 142.098 403.832 143.456V149H402.67V143.918C402.67 142.938 401.97 142.476 401.158 142.476C399.842 142.476 399.156 143.61 399.156 144.87V149H397.994Z" fill="rgb(var(--colour-purple))"></path><path d="M540.327 138.08H541.587C540.047 139.844 539.249 141.888 539.249 144.1C539.249 146.312 540.047 148.356 541.587 150.12H540.327C538.983 148.608 538.115 146.41 538.115 144.1C538.115 141.79 538.983 139.592 540.327 138.08ZM393.204 161.568H391.3V159.664H393.204V161.568ZM391.3 165.096H393.204V167H391.3V165.096ZM434.571 167V165.096H436.475V167.49C436.475 168.61 435.845 169.31 434.613 169.31H434.361V168.596H434.585C435.341 168.596 435.691 168.246 435.691 167.532V167H434.571ZM419.167 179.568H417.263V177.664H419.167V179.568ZM417.263 183.096H419.167V185H417.263V183.096ZM339.374 204.134H338.114C339.654 202.37 340.452 200.326 340.452 198.114C340.452 195.902 339.654 193.858 338.114 192.094H339.374C340.718 193.606 341.586 195.804 341.586 198.114C341.586 200.424 340.718 202.622 339.374 204.134ZM355.703 197.638C356.599 197.638 356.935 197.246 356.935 196.238V193.928C356.935 192.794 357.523 192.094 358.461 192.094H359.749V193.018H358.867C358.181 193.018 357.985 193.214 357.985 193.942V196.182C357.985 197.316 357.705 197.764 356.725 198.1C357.705 198.422 357.985 198.898 357.985 200.032V202.272C357.985 203 358.181 203.196 358.867 203.196H359.749V204.12H358.461C357.523 204.12 356.935 203.42 356.935 202.286V199.976C356.935 198.968 356.599 198.562 355.703 198.562H355.311V197.638H355.703ZM342.258 234.576C341.362 234.576 341.026 234.968 341.026 235.976V238.286C341.026 239.42 340.438 240.12 339.5 240.12H338.212V239.196H339.094C339.78 239.196 339.976 239 339.976 238.272V236.032C339.976 234.898 340.256 234.45 341.236 234.114C340.256 233.792 339.976 233.316 339.976 232.182V229.942C339.976 229.214 339.78 229.018 339.094 229.018H338.212V228.094H339.5C340.438 228.094 341.026 228.794 341.026 229.928V232.238C341.026 233.246 341.362 233.652 342.258 233.652H342.65V234.576H342.258Z" fill="rgb(var(--colour-main-500))"></path><path d="M421.855 148.23V149.112C421.561 149.196 421.337 149.238 421.155 149.238C420.343 149.238 419.937 148.888 419.853 148.132C419.027 148.944 418.299 149.252 417.361 149.252C415.933 149.252 414.967 148.454 414.967 147.096C414.967 145.584 416.115 145.038 416.969 144.898C417.221 144.856 417.767 144.772 418.593 144.66C419.531 144.534 419.839 144.352 419.839 143.876V143.624C419.839 142.896 419.265 142.532 418.159 142.532C417.081 142.532 416.549 142.938 416.451 143.834H415.275C415.303 142.14 416.479 141.454 418.215 141.454C420.021 141.454 420.973 142.154 420.973 143.456V147.684C420.973 148.062 421.183 148.258 421.603 148.258C421.673 148.258 421.785 148.244 421.855 148.23ZM419.839 146.452V145.29C419.349 145.514 418.551 145.64 417.935 145.71C416.843 145.836 416.157 146.144 416.157 147.068C416.157 147.796 416.717 148.23 417.655 148.23C418.677 148.23 419.839 147.474 419.839 146.452ZM428.815 138.794H429.977V149H428.941V147.964C428.353 148.818 427.569 149.252 426.603 149.252C424.433 149.252 423.411 147.516 423.411 145.262C423.411 143.148 424.475 141.44 426.561 141.44C427.555 141.44 428.311 141.818 428.815 142.574V138.794ZM426.757 142.532C425.385 142.532 424.629 143.764 424.629 145.346C424.629 146.844 425.273 148.16 426.771 148.16C428.241 148.16 428.815 146.746 428.815 145.388C428.815 143.918 428.227 142.532 426.757 142.532ZM437.469 138.794H438.631V149H437.595V147.964C437.007 148.818 436.223 149.252 435.257 149.252C433.087 149.252 432.065 147.516 432.065 145.262C432.065 143.148 433.129 141.44 435.215 141.44C436.209 141.44 436.965 141.818 437.469 142.574V138.794ZM435.411 142.532C434.039 142.532 433.283 143.764 433.283 145.346C433.283 146.844 433.927 148.16 435.425 148.16C436.895 148.16 437.469 146.746 437.469 145.388C437.469 143.918 436.881 142.532 435.411 142.532ZM441.588 139.214H442.89V147.852H447.552V149H441.588V139.214ZM456.024 146.732C455.772 148.272 454.61 149.252 452.888 149.252C450.676 149.252 449.556 147.642 449.556 145.402C449.556 142.952 450.886 141.44 452.916 141.44C455.184 141.44 456.178 143.134 456.178 145.682H450.774C450.816 147.124 451.516 148.174 452.93 148.174C453.882 148.174 454.526 147.712 454.848 146.732H456.024ZM452.902 142.518C451.586 142.518 450.9 143.498 450.802 144.73H454.918C454.918 143.512 454.162 142.518 452.902 142.518ZM463.432 138.794H464.594V149H463.558V147.964C462.97 148.818 462.186 149.252 461.22 149.252C459.05 149.252 458.028 147.516 458.028 145.262C458.028 143.148 459.092 141.44 461.178 141.44C462.172 141.44 462.928 141.818 463.432 142.574V138.794ZM461.374 142.532C460.002 142.532 459.246 143.764 459.246 145.346C459.246 146.844 459.89 148.16 461.388 148.16C462.858 148.16 463.432 146.746 463.432 145.388C463.432 143.918 462.844 142.532 461.374 142.532ZM469.958 152.052C468.362 152.052 467.158 151.394 466.962 149.84H468.18C468.348 150.666 468.922 151.072 469.986 151.072C471.456 151.072 472.058 150.344 472.058 148.384V147.964C471.624 148.818 470.84 149.252 469.874 149.252C467.704 149.252 466.682 147.558 466.682 145.304C466.682 143.148 467.746 141.44 469.832 141.44C470.826 141.44 471.582 141.818 472.086 142.574V141.664H473.248V147.81C473.248 148.832 473.164 149.602 472.996 150.134C472.59 151.408 471.54 152.052 469.958 152.052ZM470.042 148.16C471.512 148.16 472.086 146.746 472.086 145.388C472.086 143.918 471.498 142.532 470.028 142.532C468.656 142.532 467.9 143.764 467.9 145.346C467.9 146.844 468.544 148.16 470.042 148.16ZM481.987 146.732C481.735 148.272 480.573 149.252 478.851 149.252C476.639 149.252 475.519 147.642 475.519 145.402C475.519 142.952 476.849 141.44 478.879 141.44C481.147 141.44 482.141 143.134 482.141 145.682H476.737C476.779 147.124 477.479 148.174 478.893 148.174C479.845 148.174 480.489 147.712 480.811 146.732H481.987ZM478.865 142.518C477.549 142.518 476.863 143.498 476.765 144.73H480.881C480.881 143.512 480.125 142.518 478.865 142.518ZM484.859 149V141.664H485.937V143.246C486.427 142.196 487.365 141.454 488.569 141.454C490.249 141.454 491.117 142.378 491.257 143.834H490.095C489.927 142.952 489.451 142.476 488.457 142.476C486.987 142.476 486.035 143.722 486.035 145.444V149H484.859ZM498.861 144.562H494.661V147.852H499.323V149H493.359V139.214H499.071V140.362H494.661V143.414H498.861V144.562ZM501.846 149V141.664H502.924V142.882C503.498 141.986 504.198 141.454 505.36 141.454C506.634 141.454 507.684 142.098 507.684 143.456V149H506.522V143.918C506.522 142.938 505.822 142.476 505.01 142.476C503.694 142.476 503.008 143.61 503.008 144.87V149H501.846ZM513.468 141.664H516.352V142.616H513.468V146.704C513.468 147.782 514.042 148.146 515.106 148.146C515.582 148.146 516.002 148.104 516.352 148.006V149.028C515.89 149.168 515.428 149.196 515.036 149.196C513.258 149.196 512.306 148.51 512.306 146.914V142.616H510.192V141.664H512.306V139.648H513.468V141.664ZM519.476 149V141.664H520.554V143.246C521.044 142.196 521.982 141.454 523.186 141.454C524.866 141.454 525.734 142.378 525.874 143.834H524.712C524.544 142.952 524.068 142.476 523.074 142.476C521.604 142.476 520.652 143.722 520.652 145.444V149H519.476ZM530.777 150.54C530.399 151.548 529.685 152.052 528.775 152.052C528.425 152.052 528.117 152.01 527.823 151.912V150.82C528.131 150.89 528.383 150.904 528.621 150.904C529.153 150.904 529.447 150.708 529.657 150.19L530.105 149.112L527.389 141.664H528.621L530.763 147.614L532.877 141.664H534.081L530.777 150.54Z" fill="rgb(var(--colour-royal))"></path><path d="M374.369 158.614V157.214H375.769V158.614H374.369ZM375.643 159.664V166.048H377.897V167H371.975V166.048H374.495V160.616H371.975V159.664H375.643ZM382.337 167H381.189V156.794H382.337V162.73L385.487 159.664H386.971L384.325 162.282L387.405 167H386.019L383.457 163.052L382.337 164.144V167ZM378.135 182.732C377.883 184.272 376.721 185.252 374.999 185.252C372.787 185.252 371.667 183.642 371.667 181.402C371.667 178.952 372.997 177.44 375.027 177.44C377.295 177.44 378.289 179.134 378.289 181.682H372.885C372.927 183.124 373.627 184.174 375.041 184.174C375.993 184.174 376.637 183.712 376.959 182.732H378.135ZM375.013 178.518C373.697 178.518 373.011 179.498 372.913 180.73H377.029C377.029 179.512 376.273 178.518 375.013 178.518ZM380.685 185V177.664H381.763V178.882C382.337 177.986 383.037 177.454 384.199 177.454C385.473 177.454 386.523 178.098 386.523 179.456V185H385.361V179.918C385.361 178.938 384.661 178.476 383.849 178.476C382.533 178.476 381.847 179.61 381.847 180.87V185H380.685ZM392.308 177.664H395.192V178.616H392.308V182.704C392.308 183.782 392.882 184.146 393.946 184.146C394.422 184.146 394.842 184.104 395.192 184.006V185.028C394.73 185.168 394.268 185.196 393.876 185.196C392.098 185.196 391.146 184.51 391.146 182.914V178.616H389.032V177.664H391.146V175.648H392.308V177.664ZM398.316 185V177.664H399.394V179.246C399.884 178.196 400.822 177.454 402.026 177.454C403.706 177.454 404.574 178.378 404.714 179.834H403.552C403.384 178.952 402.908 178.476 401.914 178.476C400.444 178.476 399.492 179.722 399.492 181.444V185H398.316ZM409.616 186.54C409.238 187.548 408.524 188.052 407.614 188.052C407.264 188.052 406.956 188.01 406.662 187.912V186.82C406.97 186.89 407.222 186.904 407.46 186.904C407.992 186.904 408.286 186.708 408.496 186.19L408.944 185.112L406.228 177.664H407.46L409.602 183.614L411.716 177.664H412.92L409.616 186.54ZM358.927 219.096H360.831V221H358.927V219.096ZM365.339 219.096H367.243V221H365.339V219.096ZM371.751 219.096H373.655V221H371.751V219.096Z" fill="rgb(var(--colour-main))"></path><path d="M409.154 168.358V167.084C407.376 166.916 406.284 165.656 406.242 164.004H407.306C407.348 165.138 407.964 165.964 409.154 166.118V162.492L408.524 162.324C407.25 161.988 406.438 161.036 406.438 159.804C406.438 158.348 407.446 157.298 409.154 157.158V155.884H409.952V157.158C411.548 157.298 412.514 158.306 412.584 159.86H411.52C411.464 158.964 410.946 158.278 409.952 158.124V161.582L410.862 161.834C412.136 162.184 412.878 163.094 412.878 164.27C412.878 165.866 411.73 166.944 409.952 167.084V168.358H409.154ZM408.72 161.246L409.154 161.372V158.11C408.188 158.222 407.516 158.754 407.516 159.692C407.516 160.434 407.936 161.036 408.72 161.246ZM410.498 162.856L409.952 162.702V166.132C411.128 166.02 411.8 165.376 411.8 164.424C411.8 163.64 411.408 163.094 410.498 162.856ZM417.641 158.614V157.214H419.041V158.614H417.641ZM418.915 159.664V166.048H421.169V167H415.247V166.048H417.767V160.616H415.247V159.664H418.915ZM425.609 167H424.461V156.794H425.609V162.73L428.759 159.664H430.243L427.597 162.282L430.677 167H429.291L426.729 163.052L425.609 164.144V167ZM435.117 186.358V185.084C433.339 184.916 432.247 183.656 432.205 182.004H433.269C433.311 183.138 433.927 183.964 435.117 184.118V180.492L434.487 180.324C433.213 179.988 432.401 179.036 432.401 177.804C432.401 176.348 433.409 175.298 435.117 175.158V173.884H435.915V175.158C437.511 175.298 438.477 176.306 438.547 177.86H437.483C437.427 176.964 436.909 176.278 435.915 176.124V179.582L436.825 179.834C438.099 180.184 438.841 181.094 438.841 182.27C438.841 183.866 437.693 184.944 435.915 185.084V186.358H435.117ZM434.683 179.246L435.117 179.372V176.11C434.151 176.222 433.479 176.754 433.479 177.692C433.479 178.434 433.899 179.036 434.683 179.246ZM436.461 180.856L435.915 180.702V184.132C437.091 184.02 437.763 183.376 437.763 182.424C437.763 181.64 437.371 181.094 436.461 180.856ZM447.37 182.732C447.118 184.272 445.956 185.252 444.234 185.252C442.022 185.252 440.902 183.642 440.902 181.402C440.902 178.952 442.232 177.44 444.262 177.44C446.53 177.44 447.524 179.134 447.524 181.682H442.12C442.162 183.124 442.862 184.174 444.276 184.174C445.228 184.174 445.872 183.712 446.194 182.732H447.37ZM444.248 178.518C442.932 178.518 442.246 179.498 442.148 180.73H446.264C446.264 179.512 445.508 178.518 444.248 178.518ZM449.92 185V177.664H450.998V178.882C451.572 177.986 452.272 177.454 453.434 177.454C454.708 177.454 455.758 178.098 455.758 179.456V185H454.596V179.918C454.596 178.938 453.896 178.476 453.084 178.476C451.768 178.476 451.082 179.61 451.082 180.87V185H449.92ZM461.542 177.664H464.426V178.616H461.542V182.704C461.542 183.782 462.116 184.146 463.18 184.146C463.656 184.146 464.076 184.104 464.426 184.006V185.028C463.964 185.168 463.502 185.196 463.11 185.196C461.332 185.196 460.38 184.51 460.38 182.914V178.616H458.266V177.664H460.38V175.648H461.542V177.664ZM467.55 185V177.664H468.628V179.246C469.118 178.196 470.056 177.454 471.26 177.454C472.94 177.454 473.808 178.378 473.948 179.834H472.786C472.618 178.952 472.142 178.476 471.148 178.476C469.678 178.476 468.726 179.722 468.726 181.444V185H467.55ZM478.851 186.54C478.473 187.548 477.759 188.052 476.849 188.052C476.499 188.052 476.191 188.01 475.897 187.912V186.82C476.205 186.89 476.457 186.904 476.695 186.904C477.227 186.904 477.521 186.708 477.731 186.19L478.179 185.112L475.463 177.664H476.695L478.837 183.614L480.951 177.664H482.155L478.851 186.54Z" fill="rgb(var(--colour-forest))"></path><path d="M77.394 143.638C78.29 143.638 78.626 143.246 78.626 142.238V139.928C78.626 138.794 79.214 138.094 80.152 138.094H81.44V139.018H80.558C79.872 139.018 79.676 139.214 79.676 139.942V142.182C79.676 143.316 79.396 143.764 78.416 144.1C79.396 144.422 79.676 144.898 79.676 146.032V148.272C79.676 149 79.872 149.196 80.558 149.196H81.44V150.12H80.152C79.214 150.12 78.626 149.42 78.626 148.286V145.976C78.626 144.968 78.29 144.562 77.394 144.562H77.002V143.638H77.394ZM218.747 161.568H216.843V159.664H218.747V161.568ZM216.843 167V165.096H218.747V167H216.843ZM233.171 161.638C234.067 161.638 234.403 161.246 234.403 160.238V157.928C234.403 156.794 234.991 156.094 235.929 156.094H237.217V157.018H236.335C235.649 157.018 235.453 157.214 235.453 157.942V160.182C235.453 161.316 235.173 161.764 234.193 162.1C235.173 162.422 235.453 162.898 235.453 164.032V166.272C235.453 167 235.649 167.196 236.335 167.196H237.217V168.12H235.929C234.991 168.12 234.403 167.42 234.403 166.286V163.976C234.403 162.968 234.067 162.562 233.171 162.562H232.779V161.638H233.171ZM175.475 179.568H173.571V177.664H175.475V179.568ZM173.571 185V183.096H175.475V185H173.571ZM190.95 174.094H193.834V175.018H191.958V185.196H193.834V186.12H190.95V174.094ZM129.32 197.638C130.216 197.638 130.552 197.246 130.552 196.238V193.928C130.552 192.794 131.14 192.094 132.078 192.094H133.366V193.018H132.484C131.798 193.018 131.602 193.214 131.602 193.942V196.182C131.602 197.316 131.322 197.764 130.342 198.1C131.322 198.422 131.602 198.898 131.602 200.032V202.272C131.602 203 131.798 203.196 132.484 203.196H133.366V204.12H132.078C131.14 204.12 130.552 203.42 130.552 202.286V199.976C130.552 198.968 130.216 198.562 129.32 198.562H128.928V197.638H129.32ZM192.784 215.568H190.88V213.664H192.784V215.568ZM190.88 221V219.096H192.784V221H190.88ZM270.673 233.568H268.769V231.664H270.673V233.568ZM268.769 239V237.096H270.673V239H268.769ZM218.747 251.568H216.843V249.664H218.747V251.568ZM216.843 257V255.096H218.747V257H216.843ZM233.171 251.638C234.067 251.638 234.403 251.246 234.403 250.238V247.928C234.403 246.794 234.991 246.094 235.929 246.094H237.217V247.018H236.335C235.649 247.018 235.453 247.214 235.453 247.942V250.182C235.453 251.316 235.173 251.764 234.193 252.1C235.173 252.422 235.453 252.898 235.453 254.032V256.272C235.453 257 235.649 257.196 236.335 257.196H237.217V258.12H235.929C234.991 258.12 234.403 257.42 234.403 256.286V253.976C234.403 252.968 234.067 252.562 233.171 252.562H232.779V251.638H233.171ZM271.653 252.576C270.757 252.576 270.421 252.968 270.421 253.976V256.286C270.421 257.42 269.833 258.12 268.895 258.12H267.607V257.196H268.489C269.175 257.196 269.371 257 269.371 256.272V254.032C269.371 252.898 269.651 252.45 270.631 252.114C269.651 251.792 269.371 251.316 269.371 250.182V247.942C269.371 247.214 269.175 247.018 268.489 247.018H267.607V246.094H268.895C269.833 246.094 270.421 246.794 270.421 247.928V250.238C270.421 251.246 270.757 251.652 271.653 251.652H272.045V252.576H271.653ZM133.184 270.576C132.288 270.576 131.952 270.968 131.952 271.976V274.286C131.952 275.42 131.364 276.12 130.426 276.12H129.138V275.196H130.02C130.706 275.196 130.902 275 130.902 274.272V272.032C130.902 270.898 131.182 270.45 132.162 270.114C131.182 269.792 130.902 269.316 130.902 268.182V265.942C130.902 265.214 130.706 265.018 130.02 265.018H129.138V264.094H130.426C131.364 264.094 131.952 264.794 131.952 265.928V268.238C131.952 269.246 132.288 269.652 133.184 269.652H133.576V270.576H133.184ZM114.825 294.12H111.941V293.196H113.817V283.018H111.941V282.094H114.825V294.12ZM98.5666 306.576C97.6706 306.576 97.3346 306.968 97.3346 307.976V310.286C97.3346 311.42 96.7466 312.12 95.8086 312.12H94.5206V311.196H95.4026C96.0886 311.196 96.2846 311 96.2846 310.272V308.032C96.2846 306.898 96.5646 306.45 97.5446 306.114C96.5646 305.792 96.2846 305.316 96.2846 304.182V301.942C96.2846 301.214 96.0886 301.018 95.4026 301.018H94.5206V300.094H95.8086C96.7466 300.094 97.3346 300.794 97.3346 301.928V304.238C97.3346 305.246 97.6706 305.652 98.5666 305.652H98.9586V306.576H98.5666ZM81.258 324.576C80.362 324.576 80.026 324.968 80.026 325.976V328.286C80.026 329.42 79.438 330.12 78.5 330.12H77.212V329.196H78.094C78.78 329.196 78.976 329 78.976 328.272V326.032C78.976 324.898 79.256 324.45 80.236 324.114C79.256 323.792 78.976 323.316 78.976 322.182V319.942C78.976 319.214 78.78 319.018 78.094 319.018H77.212V318.094H78.5C79.438 318.094 80.026 318.794 80.026 319.928V322.238C80.026 323.246 80.362 323.652 81.258 323.652H81.65V324.576H81.258Z" fill="rgb(var(--colour-main-500))"></path><path d="M85.8663 159.328V157.214H87.2943V159.328L86.9163 161.54H86.2443L85.8663 159.328ZM88.6663 159.328V157.214H90.0943V159.328L89.7163 161.54H89.0443L88.6663 159.328ZM97.6146 156.794V166.048H99.8686V167H93.9466V166.048H96.4806V157.746H93.9466V156.794H97.6146ZM107.375 162.73C107.375 161.512 106.619 160.518 105.359 160.518C104.043 160.518 103.357 161.498 103.259 162.73H107.375ZM102.013 163.402C102.013 160.952 103.343 159.44 105.373 159.44C107.641 159.44 108.635 161.134 108.635 163.682H103.231C103.273 165.124 103.973 166.174 105.387 166.174C106.339 166.174 106.983 165.712 107.305 164.732H108.481C108.229 166.272 107.067 167.252 105.345 167.252C103.133 167.252 102.013 165.642 102.013 163.402ZM115.889 156.794H117.051V167H116.015V165.964C115.427 166.818 114.643 167.252 113.677 167.252C111.507 167.252 110.485 165.516 110.485 163.262C110.485 161.148 111.549 159.44 113.635 159.44C114.629 159.44 115.385 159.818 115.889 160.574V156.794ZM111.703 163.346C111.703 164.844 112.347 166.16 113.845 166.16C115.315 166.16 115.889 164.746 115.889 163.388C115.889 161.918 115.301 160.532 113.831 160.532C112.459 160.532 111.703 161.764 111.703 163.346ZM122.415 170.052C120.819 170.052 119.615 169.394 119.419 167.84H120.637C120.805 168.666 121.379 169.072 122.443 169.072C123.913 169.072 124.515 168.344 124.515 166.384V165.964C124.081 166.818 123.297 167.252 122.331 167.252C120.161 167.252 119.139 165.558 119.139 163.304C119.139 161.148 120.203 159.44 122.289 159.44C123.283 159.44 124.039 159.818 124.543 160.574V159.664H125.705V165.81C125.705 166.832 125.621 167.602 125.453 168.134C125.047 169.408 123.997 170.052 122.415 170.052ZM120.357 163.346C120.357 164.844 121.001 166.16 122.499 166.16C123.969 166.16 124.543 164.746 124.543 163.388C124.543 161.918 123.955 160.532 122.485 160.532C121.113 160.532 120.357 161.764 120.357 163.346ZM133.338 162.73C133.338 161.512 132.582 160.518 131.322 160.518C130.006 160.518 129.32 161.498 129.222 162.73H133.338ZM127.976 163.402C127.976 160.952 129.306 159.44 131.336 159.44C133.604 159.44 134.598 161.134 134.598 163.682H129.194C129.236 165.124 129.936 166.174 131.35 166.174C132.302 166.174 132.946 165.712 133.268 164.732H134.444C134.192 166.272 133.03 167.252 131.308 167.252C129.096 167.252 127.976 165.642 127.976 163.402ZM137.316 167V159.664H138.394V161.246C138.884 160.196 139.822 159.454 141.026 159.454C142.706 159.454 143.574 160.378 143.714 161.834H142.552C142.384 160.952 141.908 160.476 140.914 160.476C139.444 160.476 138.492 161.722 138.492 163.444V167H137.316ZM151.318 162.562H147.118V165.852H151.78V167H145.816V157.214H151.528V158.362H147.118V161.414H151.318V162.562ZM154.303 167V159.664H155.381V160.882C155.955 159.986 156.655 159.454 157.817 159.454C159.091 159.454 160.141 160.098 160.141 161.456V167H158.979V161.918C158.979 160.938 158.279 160.476 157.467 160.476C156.151 160.476 155.465 161.61 155.465 162.87V167H154.303ZM165.925 159.664H168.809V160.616H165.925V164.704C165.925 165.782 166.499 166.16 167.563 166.16C168.039 166.16 168.459 166.132 168.809 166.034V167.028C168.347 167.168 167.885 167.196 167.493 167.196C165.715 167.196 164.763 166.51 164.763 164.914V160.616H162.649V159.664H164.763V157.648H165.925V159.664ZM171.933 167V159.664H173.011V161.246C173.501 160.196 174.439 159.454 175.643 159.454C177.323 159.454 178.191 160.378 178.331 161.834H177.169C177.001 160.952 176.525 160.476 175.531 160.476C174.061 160.476 173.109 161.722 173.109 163.444V167H171.933ZM182.604 158.614V157.214H184.004V158.614H182.604ZM180.21 167V166.048H182.73V160.616H180.21V159.664H183.878V166.048H186.132V167H180.21ZM193.918 162.73C193.918 161.512 193.162 160.518 191.902 160.518C190.586 160.518 189.9 161.498 189.802 162.73H193.918ZM188.556 163.402C188.556 160.952 189.886 159.44 191.916 159.44C194.184 159.44 195.178 161.134 195.178 163.682H189.774C189.816 165.124 190.516 166.174 191.93 166.174C192.882 166.174 193.526 165.712 193.848 164.732H195.024C194.772 166.272 193.61 167.252 191.888 167.252C189.676 167.252 188.556 165.642 188.556 163.402ZM201.956 161.666C201.928 160.938 201.368 160.476 200.486 160.476C199.534 160.476 198.89 160.896 198.89 161.554C198.89 162.072 199.254 162.38 199.94 162.562L201.606 162.996C202.838 163.318 203.468 163.92 203.468 164.956C203.468 166.384 202.348 167.252 200.528 167.252C198.61 167.252 197.602 166.412 197.518 164.774H198.75C198.862 165.768 199.464 166.216 200.556 166.216C201.592 166.216 202.278 165.824 202.278 165.138C202.278 164.508 201.97 164.242 201.172 164.032L199.632 163.626C198.302 163.276 197.7 162.73 197.7 161.61C197.7 160.28 198.792 159.44 200.514 159.44C202.222 159.44 203.146 160.28 203.174 161.666H201.956ZM207.026 159.328V157.214H208.454V159.328L208.076 161.54H207.404L207.026 159.328ZM209.826 159.328V157.214H211.254V159.328L210.876 161.54H210.204L209.826 159.328ZM111.829 177.328V175.214H113.257V177.328L112.879 179.54H112.207L111.829 177.328ZM114.629 177.328V175.214H116.057V177.328L115.679 179.54H115.007L114.629 177.328ZM122.653 177.664H125.537V178.616H122.653V182.704C122.653 183.782 123.227 184.16 124.291 184.16C124.767 184.16 125.187 184.132 125.537 184.034V185.028C125.075 185.168 124.613 185.196 124.221 185.196C122.443 185.196 121.491 184.51 121.491 182.914V178.616H119.377V177.664H121.491V175.648H122.653V177.664ZM127.92 177.664H129.152L131.294 183.614L133.408 177.664H134.612L131.308 186.54C130.93 187.548 130.216 188.052 129.306 188.052C128.956 188.052 128.648 188.01 128.354 187.912V186.82C128.662 186.89 128.914 186.904 129.152 186.904C129.684 186.904 129.978 186.708 130.188 186.19L130.636 185.112L127.92 177.664ZM137.974 188.052H136.798V177.664H137.876V178.756C138.422 177.874 139.192 177.44 140.214 177.44C142.398 177.44 143.364 179.302 143.364 181.416C143.364 183.516 142.328 185.252 140.228 185.252C139.276 185.252 138.59 184.93 137.974 184.16V188.052ZM137.974 181.346C137.974 182.774 138.562 184.16 140.018 184.16C141.488 184.16 142.146 182.802 142.146 181.388C142.146 179.904 141.502 178.532 140.018 178.532C138.562 178.532 137.974 179.918 137.974 181.346ZM150.646 180.73C150.646 179.512 149.89 178.518 148.63 178.518C147.314 178.518 146.628 179.498 146.53 180.73H150.646ZM145.284 181.402C145.284 178.952 146.614 177.44 148.644 177.44C150.912 177.44 151.906 179.134 151.906 181.682H146.502C146.544 183.124 147.244 184.174 148.658 184.174C149.61 184.174 150.254 183.712 150.576 182.732H151.752C151.5 184.272 150.338 185.252 148.616 185.252C146.404 185.252 145.284 183.642 145.284 181.402ZM158.685 179.666C158.657 178.938 158.097 178.476 157.215 178.476C156.263 178.476 155.619 178.896 155.619 179.554C155.619 180.072 155.983 180.38 156.669 180.562L158.335 180.996C159.567 181.318 160.197 181.92 160.197 182.956C160.197 184.384 159.077 185.252 157.257 185.252C155.339 185.252 154.331 184.412 154.247 182.774H155.479C155.591 183.768 156.193 184.216 157.285 184.216C158.321 184.216 159.007 183.824 159.007 183.138C159.007 182.508 158.699 182.242 157.901 182.032L156.361 181.626C155.031 181.276 154.429 180.73 154.429 179.61C154.429 178.28 155.521 177.44 157.243 177.44C158.951 177.44 159.875 178.28 159.903 179.666H158.685ZM163.755 177.328V175.214H165.183V177.328L164.805 179.54H164.133L163.755 177.328ZM166.555 177.328V175.214H167.983V177.328L167.605 179.54H166.933L166.555 177.328ZM137.792 213.328V211.214H139.22V213.328L138.842 215.54H138.17L137.792 213.328ZM140.592 213.328V211.214H142.02V213.328L141.642 215.54H140.97L140.592 213.328ZM148.616 213.664H151.5V214.616H148.616V218.704C148.616 219.782 149.19 220.16 150.254 220.16C150.73 220.16 151.15 220.132 151.5 220.034V221.028C151.038 221.168 150.576 221.196 150.184 221.196C148.406 221.196 147.454 220.51 147.454 218.914V214.616H145.34V213.664H147.454V211.648H148.616V213.664ZM153.883 213.664H155.115L157.257 219.614L159.371 213.664H160.575L157.271 222.54C156.893 223.548 156.179 224.052 155.269 224.052C154.919 224.052 154.611 224.01 154.317 223.912V222.82C154.625 222.89 154.877 222.904 155.115 222.904C155.647 222.904 155.941 222.708 156.151 222.19L156.599 221.112L153.883 213.664ZM163.937 224.052H162.761V213.664H163.839V214.756C164.385 213.874 165.155 213.44 166.177 213.44C168.361 213.44 169.327 215.302 169.327 217.416C169.327 219.516 168.291 221.252 166.191 221.252C165.239 221.252 164.553 220.93 163.937 220.16V224.052ZM163.937 217.346C163.937 218.774 164.525 220.16 165.981 220.16C167.451 220.16 168.109 218.802 168.109 217.388C168.109 215.904 167.465 214.532 165.981 214.532C164.525 214.532 163.937 215.918 163.937 217.346ZM176.609 216.73C176.609 215.512 175.853 214.518 174.593 214.518C173.277 214.518 172.591 215.498 172.493 216.73H176.609ZM171.247 217.402C171.247 214.952 172.577 213.44 174.607 213.44C176.875 213.44 177.869 215.134 177.869 217.682H172.465C172.507 219.124 173.207 220.174 174.621 220.174C175.573 220.174 176.217 219.712 176.539 218.732H177.715C177.463 220.272 176.301 221.252 174.579 221.252C172.367 221.252 171.247 219.642 171.247 217.402ZM181.064 213.328V211.214H182.492V213.328L182.114 215.54H181.442L181.064 213.328ZM183.864 213.328V211.214H185.292V213.328L184.914 215.54H184.242L183.864 213.328ZM155.101 231.328V229.214H156.529V231.328L156.151 233.54H155.479L155.101 231.328ZM157.901 231.328V229.214H159.329V231.328L158.951 233.54H158.279L157.901 231.328ZM167.815 228.794H168.977V239H167.941V237.964C167.353 238.818 166.569 239.252 165.603 239.252C163.433 239.252 162.411 237.516 162.411 235.262C162.411 233.148 163.475 231.44 165.561 231.44C166.555 231.44 167.311 231.818 167.815 232.574V228.794ZM163.629 235.346C163.629 236.844 164.273 238.16 165.771 238.16C167.241 238.16 167.815 236.746 167.815 235.388C167.815 233.918 167.227 232.532 165.757 232.532C164.385 232.532 163.629 233.764 163.629 235.346ZM176.609 234.73C176.609 233.512 175.853 232.518 174.593 232.518C173.277 232.518 172.591 233.498 172.493 234.73H176.609ZM171.247 235.402C171.247 232.952 172.577 231.44 174.607 231.44C176.875 231.44 177.869 233.134 177.869 235.682H172.465C172.507 237.124 173.207 238.174 174.621 238.174C175.573 238.174 176.217 237.712 176.539 236.732H177.715C177.463 238.272 176.301 239.252 174.579 239.252C172.367 239.252 171.247 237.642 171.247 235.402ZM184.648 233.666C184.62 232.938 184.06 232.476 183.178 232.476C182.226 232.476 181.582 232.896 181.582 233.554C181.582 234.072 181.946 234.38 182.632 234.562L184.298 234.996C185.53 235.318 186.16 235.92 186.16 236.956C186.16 238.384 185.04 239.252 183.22 239.252C181.302 239.252 180.294 238.412 180.21 236.774H181.442C181.554 237.768 182.156 238.216 183.248 238.216C184.284 238.216 184.97 237.824 184.97 237.138C184.97 236.508 184.662 236.242 183.864 236.032L182.324 235.626C180.994 235.276 180.392 234.73 180.392 233.61C180.392 232.28 181.484 231.44 183.206 231.44C184.914 231.44 185.838 232.28 185.866 233.666H184.648ZM193.792 234.086C193.666 233.12 193.022 232.518 192 232.518C190.488 232.518 189.9 233.96 189.9 235.416C189.9 236.872 190.558 238.174 192.028 238.174C193.05 238.174 193.68 237.6 193.876 236.438H195.052C194.898 238.202 193.806 239.252 192 239.252C189.858 239.252 188.682 237.572 188.682 235.416C188.682 233.218 189.83 231.44 192.014 231.44C193.806 231.44 194.926 232.532 194.968 234.086H193.792ZM197.896 239V231.664H198.974V233.246C199.464 232.196 200.402 231.454 201.606 231.454C203.286 231.454 204.154 232.378 204.294 233.834H203.132C202.964 232.952 202.488 232.476 201.494 232.476C200.024 232.476 199.072 233.722 199.072 235.444V239H197.896ZM208.566 230.614V229.214H209.966V230.614H208.566ZM206.172 239V238.048H208.692V232.616H206.172V231.664H209.84V238.048H212.094V239H206.172ZM215.863 242.052H214.687V231.664H215.765V232.756C216.311 231.874 217.081 231.44 218.103 231.44C220.287 231.44 221.253 233.302 221.253 235.416C221.253 237.516 220.217 239.252 218.117 239.252C217.165 239.252 216.479 238.93 215.863 238.16V242.052ZM215.863 235.346C215.863 236.774 216.451 238.16 217.907 238.16C219.377 238.16 220.035 236.802 220.035 235.388C220.035 233.904 219.391 232.532 217.907 232.532C216.451 232.532 215.863 233.918 215.863 235.346ZM226.505 231.664H229.389V232.616H226.505V236.704C226.505 237.782 227.079 238.16 228.143 238.16C228.619 238.16 229.039 238.132 229.389 238.034V239.028C228.927 239.168 228.465 239.196 228.073 239.196C226.295 239.196 225.343 238.51 225.343 236.914V232.616H223.229V231.664H225.343V229.648H226.505V231.664ZM234.529 230.614V229.214H235.929V230.614H234.529ZM232.135 239V238.048H234.655V232.616H232.135V231.664H235.803V238.048H238.057V239H232.135ZM243.758 231.44C246.012 231.44 247.076 233.12 247.076 235.346C247.076 237.572 246.012 239.252 243.758 239.252C241.504 239.252 240.44 237.572 240.44 235.346C240.44 233.12 241.504 231.44 243.758 231.44ZM241.658 235.346C241.658 236.844 242.274 238.174 243.758 238.174C245.242 238.174 245.858 236.844 245.858 235.346C245.858 233.848 245.242 232.518 243.758 232.518C242.274 232.518 241.658 233.848 241.658 235.346ZM249.5 239V231.664H250.578V232.882C251.152 231.986 251.852 231.454 253.014 231.454C254.288 231.454 255.338 232.098 255.338 233.456V239H254.176V233.918C254.176 232.938 253.476 232.476 252.664 232.476C251.348 232.476 250.662 233.61 250.662 234.87V239H249.5ZM258.952 231.328V229.214H260.38V231.328L260.002 233.54H259.33L258.952 231.328ZM261.752 231.328V229.214H263.18V231.328L262.802 233.54H262.13L261.752 231.328ZM155.101 249.328V247.214H156.529V249.328L156.151 251.54H155.479L155.101 249.328ZM157.901 249.328V247.214H159.329V249.328L158.951 251.54H158.279L157.901 249.328ZM166.849 246.794V256.048H169.103V257H163.181V256.048H165.715V247.746H163.181V246.794H166.849ZM173.949 248.614V247.214H175.349V248.614H173.949ZM171.555 257V256.048H174.075V250.616H171.555V249.664H175.223V256.048H177.477V257H171.555ZM180.266 257V249.664H181.344V250.882C181.918 249.986 182.618 249.454 183.78 249.454C185.054 249.454 186.104 250.098 186.104 251.456V257H184.942V251.918C184.942 250.938 184.242 250.476 183.43 250.476C182.114 250.476 181.428 251.61 181.428 252.87V257H180.266ZM193.918 252.73C193.918 251.512 193.162 250.518 191.902 250.518C190.586 250.518 189.9 251.498 189.802 252.73H193.918ZM188.556 253.402C188.556 250.952 189.886 249.44 191.916 249.44C194.184 249.44 195.178 251.134 195.178 253.682H189.774C189.816 255.124 190.516 256.174 191.93 256.174C192.882 256.174 193.526 255.712 193.848 254.732H195.024C194.772 256.272 193.61 257.252 191.888 257.252C189.676 257.252 188.556 255.642 188.556 253.402ZM201.956 251.666C201.928 250.938 201.368 250.476 200.486 250.476C199.534 250.476 198.89 250.896 198.89 251.554C198.89 252.072 199.254 252.38 199.94 252.562L201.606 252.996C202.838 253.318 203.468 253.92 203.468 254.956C203.468 256.384 202.348 257.252 200.528 257.252C198.61 257.252 197.602 256.412 197.518 254.774H198.75C198.862 255.768 199.464 256.216 200.556 256.216C201.592 256.216 202.278 255.824 202.278 255.138C202.278 254.508 201.97 254.242 201.172 254.032L199.632 253.626C198.302 253.276 197.7 252.73 197.7 251.61C197.7 250.28 198.792 249.44 200.514 249.44C202.222 249.44 203.146 250.28 203.174 251.666H201.956ZM207.026 249.328V247.214H208.454V249.328L208.076 251.54H207.404L207.026 249.328ZM209.826 249.328V247.214H211.254V249.328L210.876 251.54H210.204L209.826 249.328Z" fill="rgb(var(--colour-magenta))"></path><path d="M245.05 255.096H246.954V257H245.05V255.096ZM251.462 257V255.096H253.366V257H251.462ZM257.874 257V255.096H259.778V257H257.874Z" fill="rgb(var(--colour-main))"></path></svg></div><div class="block tablet:hidden"><svg width="100%" height="100%" viewBox="0 0 379 414" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="378" height="414" transform="translate(0.142578)" fill="rgb(var(--colour-negative))"></rect><path d="M19.4166 32V22.214H22.9866C24.7366 22.214 26.1366 23.208 26.1366 25.14C26.1366 27.072 24.7366 28.066 22.9866 28.066H20.6906V32H19.4166ZM20.6906 26.96H22.8186C24.0646 26.96 24.8066 26.26 24.8066 25.14C24.8066 24.02 24.0646 23.32 22.8186 23.32H20.6906V26.96ZM31.1229 24.44C33.3769 24.44 34.4409 26.12 34.4409 28.346C34.4409 30.572 33.3769 32.252 31.1229 32.252C28.8689 32.252 27.8049 30.572 27.8049 28.346C27.8049 26.12 28.8689 24.44 31.1229 24.44ZM29.0229 28.346C29.0229 29.844 29.6389 31.174 31.1229 31.174C32.6069 31.174 33.2229 29.844 33.2229 28.346C33.2229 26.848 32.6069 25.518 31.1229 25.518C29.6389 25.518 29.0229 26.848 29.0229 28.346ZM41.2472 26.666C41.2192 25.938 40.6592 25.476 39.7772 25.476C38.8252 25.476 38.1812 25.896 38.1812 26.554C38.1812 27.072 38.5452 27.38 39.2312 27.562L40.8972 27.996C42.1292 28.318 42.7592 28.92 42.7592 29.956C42.7592 31.384 41.6392 32.252 39.8192 32.252C37.9012 32.252 36.8932 31.412 36.8092 29.774H38.0412C38.1532 30.768 38.7552 31.216 39.8472 31.216C40.8832 31.216 41.5692 30.824 41.5692 30.138C41.5692 29.508 41.2612 29.242 40.4632 29.032L38.9232 28.626C37.5932 28.276 36.9912 27.73 36.9912 26.61C36.9912 25.28 38.0832 24.44 39.8052 24.44C41.5132 24.44 42.4372 25.28 42.4652 26.666H41.2472ZM48.4875 24.664H51.3715V25.616H48.4875V29.704C48.4875 30.782 49.0615 31.16 50.1255 31.16C50.6015 31.16 51.0215 31.132 51.3715 31.034V32.028C50.9095 32.168 50.4475 32.196 50.0555 32.196C48.2775 32.196 47.3255 31.51 47.3255 29.914V25.616H45.2115V24.664H47.3255V22.648H48.4875V24.664ZM63.1501 22.214H64.4521V30.852H69.1141V32H63.1501V22.214ZM76.4804 27.73C76.4804 26.512 75.7244 25.518 74.4644 25.518C73.1484 25.518 72.4624 26.498 72.3644 27.73H76.4804ZM71.1184 28.402C71.1184 25.952 72.4484 24.44 74.4784 24.44C76.7464 24.44 77.7404 26.134 77.7404 28.682H72.3364C72.3784 30.124 73.0784 31.174 74.4924 31.174C75.4444 31.174 76.0884 30.712 76.4104 29.732H77.5864C77.3344 31.272 76.1724 32.252 74.4504 32.252C72.2384 32.252 71.1184 30.642 71.1184 28.402ZM84.9947 21.794H86.1567V32H85.1207V30.964C84.5327 31.818 83.7487 32.252 82.7827 32.252C80.6127 32.252 79.5907 30.516 79.5907 28.262C79.5907 26.148 80.6547 24.44 82.7407 24.44C83.7347 24.44 84.4907 24.818 84.9947 25.574V21.794ZM80.8087 28.346C80.8087 29.844 81.4527 31.16 82.9507 31.16C84.4207 31.16 84.9947 29.746 84.9947 28.388C84.9947 26.918 84.4067 25.532 82.9367 25.532C81.5647 25.532 80.8087 26.764 80.8087 28.346ZM91.521 35.052C89.925 35.052 88.721 34.394 88.525 32.84H89.743C89.911 33.666 90.485 34.072 91.549 34.072C93.019 34.072 93.621 33.344 93.621 31.384V30.964C93.187 31.818 92.403 32.252 91.437 32.252C89.267 32.252 88.245 30.558 88.245 28.304C88.245 26.148 89.309 24.44 91.395 24.44C92.389 24.44 93.145 24.818 93.649 25.574V24.664H94.811V30.81C94.811 31.832 94.727 32.602 94.559 33.134C94.153 34.408 93.103 35.052 91.521 35.052ZM89.463 28.346C89.463 29.844 90.107 31.16 91.605 31.16C93.075 31.16 93.649 29.746 93.649 28.388C93.649 26.918 93.061 25.532 91.591 25.532C90.219 25.532 89.463 26.764 89.463 28.346ZM102.443 27.73C102.443 26.512 101.687 25.518 100.427 25.518C99.1113 25.518 98.4253 26.498 98.3273 27.73H102.443ZM97.0813 28.402C97.0813 25.952 98.4113 24.44 100.441 24.44C102.709 24.44 103.703 26.134 103.703 28.682H98.2993C98.3413 30.124 99.0413 31.174 100.455 31.174C101.407 31.174 102.051 30.712 102.373 29.732H103.549C103.297 31.272 102.135 32.252 100.413 32.252C98.2013 32.252 97.0813 30.642 97.0813 28.402ZM106.422 32V24.664H107.5V26.246C107.99 25.196 108.928 24.454 110.132 24.454C111.812 24.454 112.68 25.378 112.82 26.834H111.658C111.49 25.952 111.014 25.476 110.02 25.476C108.55 25.476 107.598 26.722 107.598 28.444V32H106.422ZM129.078 27.562H124.878V30.852H129.54V32H123.576V22.214H129.288V23.362H124.878V26.414H129.078V27.562ZM132.062 32V24.664H133.14V25.882C133.714 24.986 134.414 24.454 135.576 24.454C136.85 24.454 137.9 25.098 137.9 26.456V32H136.738V26.918C136.738 25.938 136.038 25.476 135.226 25.476C133.91 25.476 133.224 26.61 133.224 27.87V32H132.062ZM143.685 24.664H146.569V25.616H143.685V29.704C143.685 30.782 144.259 31.16 145.323 31.16C145.799 31.16 146.219 31.132 146.569 31.034V32.028C146.107 32.168 145.645 32.196 145.253 32.196C143.475 32.196 142.523 31.51 142.523 29.914V25.616H140.409V24.664H142.523V22.648H143.685V24.664ZM149.693 32V24.664H150.771V26.246C151.261 25.196 152.199 24.454 153.403 24.454C155.083 24.454 155.951 25.378 156.091 26.834H154.929C154.761 25.952 154.285 25.476 153.291 25.476C151.821 25.476 150.869 26.722 150.869 28.444V32H149.693ZM160.363 23.614V22.214H161.763V23.614H160.363ZM157.969 32V31.048H160.489V25.616H157.969V24.664H161.637V31.048H163.891V32H157.969ZM171.678 27.73C171.678 26.512 170.922 25.518 169.662 25.518C168.346 25.518 167.66 26.498 167.562 27.73H171.678ZM166.316 28.402C166.316 25.952 167.646 24.44 169.676 24.44C171.944 24.44 172.938 26.134 172.938 28.682H167.534C167.576 30.124 168.276 31.174 169.69 31.174C170.642 31.174 171.286 30.712 171.608 29.732H172.784C172.532 31.272 171.37 32.252 169.648 32.252C167.436 32.252 166.316 30.642 166.316 28.402ZM179.716 26.666C179.688 25.938 179.128 25.476 178.246 25.476C177.294 25.476 176.65 25.896 176.65 26.554C176.65 27.072 177.014 27.38 177.7 27.562L179.366 27.996C180.598 28.318 181.228 28.92 181.228 29.956C181.228 31.384 180.108 32.252 178.288 32.252C176.37 32.252 175.362 31.412 175.278 29.774H176.51C176.622 30.768 177.224 31.216 178.316 31.216C179.352 31.216 180.038 30.824 180.038 30.138C180.038 29.508 179.73 29.242 178.932 29.032L177.392 28.626C176.062 28.276 175.46 27.73 175.46 26.61C175.46 25.28 176.552 24.44 178.274 24.44C179.982 24.44 180.906 25.28 180.934 26.666H179.716Z" fill="rgb(var(--colour-main))"></path><path d="M198.563 104L201.657 94.214H203.295L206.375 104H205.017L204.149 101.074H200.775L199.907 104H198.563ZM201.097 99.982H203.827L202.455 95.39L201.097 99.982ZM208.071 104V94.214H211.641C213.391 94.214 214.791 95.208 214.791 97.14C214.791 99.072 213.391 100.066 211.641 100.066H209.345V104H208.071ZM209.345 98.96H211.473C212.719 98.96 213.461 98.26 213.461 97.14C213.461 96.02 212.719 95.32 211.473 95.32H209.345V98.96ZM217.047 104V102.908H219.119V95.306H217.047V94.214H222.521V95.306H220.435V102.908H222.521V104H217.047Z" fill="rgb(var(--colour-main))"></path><path d="M24.6106 97.042C24.5686 95.922 23.9106 95.096 22.5526 95.096C21.2086 95.096 20.4946 95.768 20.4946 96.65C20.4946 97.462 20.9146 97.924 21.8246 98.134L23.8266 98.596C25.3526 98.946 26.1506 99.954 26.1506 101.214C26.1506 103.16 24.7366 104.252 22.6786 104.252C20.2426 104.252 18.9406 102.964 18.9126 100.878H20.1726C20.1866 102.18 21.0546 103.09 22.7066 103.09C24.1766 103.09 24.8346 102.39 24.8346 101.396C24.8346 100.528 24.3586 100.038 23.3926 99.814L21.3626 99.338C19.9486 99.002 19.1786 98.12 19.1786 96.776C19.1786 95.138 20.4946 93.99 22.5946 93.99C24.6386 93.99 25.8706 95.236 25.8706 96.86V97.042H24.6106ZM33.0829 99.086C32.9569 98.12 32.3129 97.518 31.2909 97.518C29.7789 97.518 29.1909 98.96 29.1909 100.416C29.1909 101.872 29.8489 103.174 31.3189 103.174C32.3409 103.174 32.9709 102.6 33.1669 101.438H34.3429C34.1889 103.202 33.0969 104.252 31.2909 104.252C29.1489 104.252 27.9729 102.572 27.9729 100.416C27.9729 98.218 29.1209 96.44 31.3049 96.44C33.0969 96.44 34.2169 97.532 34.2589 99.086H33.0829ZM36.8652 104V93.794H38.0272V97.756C38.5452 96.986 39.2172 96.454 40.3792 96.454C41.6532 96.454 42.7032 97.098 42.7032 98.456V104H41.5412V98.918C41.5412 97.938 40.8412 97.476 40.0292 97.476C38.7132 97.476 38.0272 98.61 38.0272 99.87V104H36.8652ZM50.5175 99.73C50.5175 98.512 49.7615 97.518 48.5015 97.518C47.1855 97.518 46.4995 98.498 46.4015 99.73H50.5175ZM45.1555 100.402C45.1555 97.952 46.4855 96.44 48.5155 96.44C50.7835 96.44 51.7775 98.134 51.7775 100.682H46.3735C46.4155 102.124 47.1155 103.174 48.5295 103.174C49.4815 103.174 50.1255 102.712 50.4475 101.732H51.6235C51.3715 103.272 50.2095 104.252 48.4875 104.252C46.2755 104.252 45.1555 102.642 45.1555 100.402ZM53.3058 104V96.664H54.3978V97.42C54.7058 96.958 55.2938 96.496 56.0778 96.496C56.7918 96.496 57.3658 96.874 57.5758 97.476C57.8698 96.986 58.4578 96.496 59.2838 96.496C60.1938 96.496 60.8658 97.098 60.8658 98.022V104H59.7178V98.26C59.7178 97.742 59.3818 97.476 58.9058 97.476C58.1218 97.476 57.6598 97.938 57.6598 98.708V104H56.5118V98.26C56.5118 97.742 56.1758 97.476 55.6998 97.476C54.9158 97.476 54.4538 97.938 54.4538 98.708V104H53.3058ZM69.3801 104.112C69.0861 104.196 68.8621 104.238 68.6801 104.238C67.8681 104.238 67.4621 103.888 67.3781 103.132C66.5521 103.944 65.8241 104.252 64.8861 104.252C63.4581 104.252 62.4921 103.454 62.4921 102.096C62.4921 100.584 63.6401 100.038 64.4941 99.898C64.7461 99.856 65.2921 99.772 66.1181 99.66C67.0561 99.534 67.3641 99.352 67.3641 98.876V98.624C67.3641 97.896 66.7901 97.532 65.6841 97.532C64.6061 97.532 64.0741 97.938 63.9761 98.834H62.8001C62.8281 97.14 64.0041 96.454 65.7401 96.454C67.5461 96.454 68.4981 97.154 68.4981 98.456V102.684C68.4981 103.062 68.7081 103.258 69.1281 103.258C69.1981 103.258 69.3101 103.244 69.3801 103.23V104.112ZM63.6821 102.068C63.6821 102.796 64.2421 103.23 65.1801 103.23C66.2021 103.23 67.3641 102.474 67.3641 101.452V100.29C66.8741 100.514 66.0761 100.64 65.4601 100.71C64.3681 100.836 63.6821 101.144 63.6821 102.068Z" fill="rgb(var(--colour-main))"></path><rect x="198.143" y="117" width="162" height="216" stroke="rgb(var(--colour-main-500))"></rect><rect x="18.1426" y="117" width="171" height="216" stroke="rgb(var(--colour-main-500))"></rect><path d="M207.726 140V132.664H208.818V133.42C209.126 132.958 209.714 132.496 210.498 132.496C211.212 132.496 211.786 132.874 211.996 133.476C212.29 132.986 212.878 132.496 213.704 132.496C214.614 132.496 215.286 133.098 215.286 134.022V140H214.138V134.26C214.138 133.742 213.802 133.476 213.326 133.476C212.542 133.476 212.08 133.938 212.08 134.708V140H210.932V134.26C210.932 133.742 210.596 133.476 210.12 133.476C209.336 133.476 208.874 133.938 208.874 134.708V140H207.726ZM223.086 132.664V140H222.036V138.908C221.364 139.874 220.664 140.252 219.586 140.252C218.956 140.252 218.424 140.112 218.004 139.818C217.5 139.454 217.248 138.936 217.248 138.25V132.664H218.41V137.788C218.41 138.278 218.578 138.656 218.9 138.908C219.166 139.118 219.516 139.23 219.922 139.23C220.468 139.23 220.93 139.034 221.308 138.628C221.714 138.194 221.924 137.564 221.924 136.738V132.664H223.086ZM228.87 132.664H231.754V133.616H228.87V137.704C228.87 138.782 229.444 139.146 230.508 139.146C230.984 139.146 231.404 139.104 231.754 139.006V140.028C231.292 140.168 230.83 140.196 230.438 140.196C228.66 140.196 227.708 139.51 227.708 137.914V133.616H225.594V132.664H227.708V130.648H228.87V132.664ZM241.109 139.23V140.112C240.815 140.196 240.591 140.238 240.409 140.238C239.597 140.238 239.191 139.888 239.107 139.132C238.281 139.944 237.553 140.252 236.615 140.252C235.187 140.252 234.221 139.454 234.221 138.096C234.221 136.584 235.369 136.038 236.223 135.898C236.475 135.856 237.021 135.772 237.847 135.66C238.785 135.534 239.093 135.352 239.093 134.876V134.624C239.093 133.896 238.519 133.532 237.413 133.532C236.335 133.532 235.803 133.938 235.705 134.834H234.529C234.557 133.14 235.733 132.454 237.469 132.454C239.275 132.454 240.227 133.154 240.227 134.456V138.684C240.227 139.062 240.437 139.258 240.857 139.258C240.927 139.258 241.039 139.244 241.109 139.23ZM239.093 137.452V136.29C238.603 136.514 237.805 136.64 237.189 136.71C236.097 136.836 235.411 137.144 235.411 138.068C235.411 138.796 235.971 139.23 236.909 139.23C237.931 139.23 239.093 138.474 239.093 137.452ZM246.179 132.664H249.063V133.616H246.179V137.704C246.179 138.782 246.753 139.146 247.817 139.146C248.293 139.146 248.713 139.104 249.063 139.006V140.028C248.601 140.168 248.139 140.196 247.747 140.196C245.969 140.196 245.017 139.51 245.017 137.914V133.616H242.903V132.664H245.017V130.648H246.179V132.664ZM254.203 131.614V130.214H255.603V131.614H254.203ZM255.477 132.664V139.048H257.731V140H251.809V139.048H254.329V133.616H251.809V132.664H255.477ZM263.431 132.44C265.685 132.44 266.749 134.12 266.749 136.346C266.749 138.572 265.685 140.252 263.431 140.252C261.177 140.252 260.113 138.572 260.113 136.346C260.113 134.12 261.177 132.44 263.431 132.44ZM263.431 133.518C261.947 133.518 261.331 134.848 261.331 136.346C261.331 137.844 261.947 139.174 263.431 139.174C264.915 139.174 265.531 137.844 265.531 136.346C265.531 134.848 264.915 133.518 263.431 133.518ZM269.174 140V132.664H270.252V133.882C270.826 132.986 271.526 132.454 272.688 132.454C273.962 132.454 275.012 133.098 275.012 134.456V140H273.85V134.918C273.85 133.938 273.15 133.476 272.338 133.476C271.022 133.476 270.336 134.61 270.336 135.87V140H269.174Z" fill="rgb(var(--colour-purple))"></path><path d="M333.618 147.08H334.878C333.338 148.844 332.54 150.888 332.54 153.1C332.54 155.312 333.338 157.356 334.878 159.12H333.618C332.274 157.608 331.406 155.41 331.406 153.1C331.406 150.79 332.274 148.592 333.618 147.08ZM264.383 170.568H262.479V168.664H264.383V170.568ZM262.479 174.096H264.383V176H262.479V174.096ZM297.097 176V174.096H299.001V176.49C299.001 177.61 298.371 178.31 297.139 178.31H296.887V177.596H297.111C297.867 177.596 298.217 177.246 298.217 176.532V176H297.097ZM290.346 188.568H288.442V186.664H290.346V188.568ZM288.442 192.096H290.346V194H288.442V192.096ZM210.554 213.134H209.294C210.834 211.37 211.632 209.326 211.632 207.114C211.632 204.902 210.834 202.858 209.294 201.094H210.554C211.898 202.606 212.766 204.804 212.766 207.114C212.766 209.424 211.898 211.622 210.554 213.134ZM226.882 206.638C227.778 206.638 228.114 206.246 228.114 205.238V202.928C228.114 201.794 228.702 201.094 229.64 201.094H230.928V202.018H230.046C229.36 202.018 229.164 202.214 229.164 202.942V205.182C229.164 206.316 228.884 206.764 227.904 207.1C228.884 207.422 229.164 207.898 229.164 209.032V211.272C229.164 212 229.36 212.196 230.046 212.196H230.928V213.12H229.64C228.702 213.12 228.114 212.42 228.114 211.286V208.976C228.114 207.968 227.778 207.562 226.882 207.562H226.49V206.638H226.882ZM213.438 243.576C212.542 243.576 212.206 243.968 212.206 244.976V247.286C212.206 248.42 211.618 249.12 210.68 249.12H209.392V248.196H210.274C210.96 248.196 211.156 248 211.156 247.272V245.032C211.156 243.898 211.436 243.45 212.416 243.114C211.436 242.792 211.156 242.316 211.156 241.182V238.942C211.156 238.214 210.96 238.018 210.274 238.018H209.392V237.094H210.68C211.618 237.094 212.206 237.794 212.206 238.928V241.238C212.206 242.246 212.542 242.652 213.438 242.652H213.83V243.576H213.438Z" fill="rgb(var(--colour-main-500))"></path><path d="M215.146 157.23V158.112C214.852 158.196 214.628 158.238 214.446 158.238C213.634 158.238 213.228 157.888 213.144 157.132C212.318 157.944 211.59 158.252 210.652 158.252C209.224 158.252 208.258 157.454 208.258 156.096C208.258 154.584 209.406 154.038 210.26 153.898C210.512 153.856 211.058 153.772 211.884 153.66C212.822 153.534 213.13 153.352 213.13 152.876V152.624C213.13 151.896 212.556 151.532 211.45 151.532C210.372 151.532 209.84 151.938 209.742 152.834H208.566C208.594 151.14 209.77 150.454 211.506 150.454C213.312 150.454 214.264 151.154 214.264 152.456V156.684C214.264 157.062 214.474 157.258 214.894 157.258C214.964 157.258 215.076 157.244 215.146 157.23ZM213.13 155.452V154.29C212.64 154.514 211.842 154.64 211.226 154.71C210.134 154.836 209.448 155.144 209.448 156.068C209.448 156.796 210.008 157.23 210.946 157.23C211.968 157.23 213.13 156.474 213.13 155.452ZM222.106 147.794H223.268V158H222.232V156.964C221.644 157.818 220.86 158.252 219.894 158.252C217.724 158.252 216.702 156.516 216.702 154.262C216.702 152.148 217.766 150.44 219.852 150.44C220.846 150.44 221.602 150.818 222.106 151.574V147.794ZM220.048 151.532C218.676 151.532 217.92 152.764 217.92 154.346C217.92 155.844 218.564 157.16 220.062 157.16C221.532 157.16 222.106 155.746 222.106 154.388C222.106 152.918 221.518 151.532 220.048 151.532ZM230.76 147.794H231.922V158H230.886V156.964C230.298 157.818 229.514 158.252 228.548 158.252C226.378 158.252 225.356 156.516 225.356 154.262C225.356 152.148 226.42 150.44 228.506 150.44C229.5 150.44 230.256 150.818 230.76 151.574V147.794ZM228.702 151.532C227.33 151.532 226.574 152.764 226.574 154.346C226.574 155.844 227.218 157.16 228.716 157.16C230.186 157.16 230.76 155.746 230.76 154.388C230.76 152.918 230.172 151.532 228.702 151.532ZM234.879 148.214H236.181V156.852H240.843V158H234.879V148.214ZM249.315 155.732C249.063 157.272 247.901 158.252 246.179 158.252C243.967 158.252 242.847 156.642 242.847 154.402C242.847 151.952 244.177 150.44 246.207 150.44C248.475 150.44 249.469 152.134 249.469 154.682H244.065C244.107 156.124 244.807 157.174 246.221 157.174C247.173 157.174 247.817 156.712 248.139 155.732H249.315ZM246.193 151.518C244.877 151.518 244.191 152.498 244.093 153.73H248.209C248.209 152.512 247.453 151.518 246.193 151.518ZM256.723 147.794H257.885V158H256.849V156.964C256.261 157.818 255.477 158.252 254.511 158.252C252.341 158.252 251.319 156.516 251.319 154.262C251.319 152.148 252.383 150.44 254.469 150.44C255.463 150.44 256.219 150.818 256.723 151.574V147.794ZM254.665 151.532C253.293 151.532 252.537 152.764 252.537 154.346C252.537 155.844 253.181 157.16 254.679 157.16C256.149 157.16 256.723 155.746 256.723 154.388C256.723 152.918 256.135 151.532 254.665 151.532ZM263.249 161.052C261.653 161.052 260.449 160.394 260.253 158.84H261.471C261.639 159.666 262.213 160.072 263.277 160.072C264.747 160.072 265.349 159.344 265.349 157.384V156.964C264.915 157.818 264.131 158.252 263.165 158.252C260.995 158.252 259.973 156.558 259.973 154.304C259.973 152.148 261.037 150.44 263.123 150.44C264.117 150.44 264.873 150.818 265.377 151.574V150.664H266.539V156.81C266.539 157.832 266.455 158.602 266.287 159.134C265.881 160.408 264.831 161.052 263.249 161.052ZM263.333 157.16C264.803 157.16 265.377 155.746 265.377 154.388C265.377 152.918 264.789 151.532 263.319 151.532C261.947 151.532 261.191 152.764 261.191 154.346C261.191 155.844 261.835 157.16 263.333 157.16ZM275.278 155.732C275.026 157.272 273.864 158.252 272.142 158.252C269.93 158.252 268.81 156.642 268.81 154.402C268.81 151.952 270.14 150.44 272.17 150.44C274.438 150.44 275.432 152.134 275.432 154.682H270.028C270.07 156.124 270.77 157.174 272.184 157.174C273.136 157.174 273.78 156.712 274.102 155.732H275.278ZM272.156 151.518C270.84 151.518 270.154 152.498 270.056 153.73H274.172C274.172 152.512 273.416 151.518 272.156 151.518ZM278.15 158V150.664H279.228V152.246C279.718 151.196 280.656 150.454 281.86 150.454C283.54 150.454 284.408 151.378 284.548 152.834H283.386C283.218 151.952 282.742 151.476 281.748 151.476C280.278 151.476 279.326 152.722 279.326 154.444V158H278.15ZM292.152 153.562H287.952V156.852H292.614V158H286.65V148.214H292.362V149.362H287.952V152.414H292.152V153.562ZM295.137 158V150.664H296.215V151.882C296.789 150.986 297.489 150.454 298.651 150.454C299.925 150.454 300.975 151.098 300.975 152.456V158H299.813V152.918C299.813 151.938 299.113 151.476 298.301 151.476C296.985 151.476 296.299 152.61 296.299 153.87V158H295.137ZM306.759 150.664H309.643V151.616H306.759V155.704C306.759 156.782 307.333 157.146 308.397 157.146C308.873 157.146 309.293 157.104 309.643 157.006V158.028C309.181 158.168 308.719 158.196 308.327 158.196C306.549 158.196 305.597 157.51 305.597 155.914V151.616H303.483V150.664H305.597V148.648H306.759V150.664ZM312.767 158V150.664H313.845V152.246C314.335 151.196 315.273 150.454 316.477 150.454C318.157 150.454 319.025 151.378 319.165 152.834H318.003C317.835 151.952 317.359 151.476 316.365 151.476C314.895 151.476 313.943 152.722 313.943 154.444V158H312.767ZM324.068 159.54C323.69 160.548 322.976 161.052 322.066 161.052C321.716 161.052 321.408 161.01 321.114 160.912V159.82C321.422 159.89 321.674 159.904 321.912 159.904C322.444 159.904 322.738 159.708 322.948 159.19L323.396 158.112L320.68 150.664H321.912L324.054 156.614L326.168 150.664H327.372L324.068 159.54Z" fill="rgb(var(--colour-royal))"></path><path d="M245.549 167.614V166.214H246.949V167.614H245.549ZM246.823 168.664V175.048H249.077V176H243.155V175.048H245.675V169.616H243.155V168.664H246.823ZM253.517 176H252.369V165.794H253.517V171.73L256.667 168.664H258.151L255.505 171.282L258.585 176H257.199L254.637 172.052L253.517 173.144V176ZM249.315 191.732C249.063 193.272 247.901 194.252 246.179 194.252C243.967 194.252 242.847 192.642 242.847 190.402C242.847 187.952 244.177 186.44 246.207 186.44C248.475 186.44 249.469 188.134 249.469 190.682H244.065C244.107 192.124 244.807 193.174 246.221 193.174C247.173 193.174 247.817 192.712 248.139 191.732H249.315ZM246.193 187.518C244.877 187.518 244.191 188.498 244.093 189.73H248.209C248.209 188.512 247.453 187.518 246.193 187.518ZM251.865 194V186.664H252.943V187.882C253.517 186.986 254.217 186.454 255.379 186.454C256.653 186.454 257.703 187.098 257.703 188.456V194H256.541V188.918C256.541 187.938 255.841 187.476 255.029 187.476C253.713 187.476 253.027 188.61 253.027 189.87V194H251.865ZM263.487 186.664H266.371V187.616H263.487V191.704C263.487 192.782 264.061 193.146 265.125 193.146C265.601 193.146 266.021 193.104 266.371 193.006V194.028C265.909 194.168 265.447 194.196 265.055 194.196C263.277 194.196 262.325 193.51 262.325 191.914V187.616H260.211V186.664H262.325V184.648H263.487V186.664ZM269.496 194V186.664H270.574V188.246C271.064 187.196 272.002 186.454 273.206 186.454C274.886 186.454 275.754 187.378 275.894 188.834H274.732C274.564 187.952 274.088 187.476 273.094 187.476C271.624 187.476 270.672 188.722 270.672 190.444V194H269.496ZM280.796 195.54C280.418 196.548 279.704 197.052 278.794 197.052C278.444 197.052 278.136 197.01 277.842 196.912V195.82C278.15 195.89 278.402 195.904 278.64 195.904C279.172 195.904 279.466 195.708 279.676 195.19L280.124 194.112L277.408 186.664H278.64L280.782 192.614L282.896 186.664H284.1L280.796 195.54ZM230.107 228.096H232.011V230H230.107V228.096ZM236.519 228.096H238.423V230H236.519V228.096ZM242.931 228.096H244.835V230H242.931V228.096Z" fill="rgb(var(--colour-main))"></path><path d="M271.68 177.358V176.084C269.902 175.916 268.81 174.656 268.768 173.004H269.832C269.874 174.138 270.49 174.964 271.68 175.118V171.492L271.05 171.324C269.776 170.988 268.964 170.036 268.964 168.804C268.964 167.348 269.972 166.298 271.68 166.158V164.884H272.478V166.158C274.074 166.298 275.04 167.306 275.11 168.86H274.046C273.99 167.964 273.472 167.278 272.478 167.124V170.582L273.388 170.834C274.662 171.184 275.404 172.094 275.404 173.27C275.404 174.866 274.256 175.944 272.478 176.084V177.358H271.68ZM271.246 170.246L271.68 170.372V167.11C270.714 167.222 270.042 167.754 270.042 168.692C270.042 169.434 270.462 170.036 271.246 170.246ZM273.024 171.856L272.478 171.702V175.132C273.654 175.02 274.326 174.376 274.326 173.424C274.326 172.64 273.934 172.094 273.024 171.856ZM280.166 167.614V166.214H281.566V167.614H280.166ZM281.44 168.664V175.048H283.694V176H277.772V175.048H280.292V169.616H277.772V168.664H281.44ZM288.134 176H286.986V165.794H288.134V171.73L291.284 168.664H292.768L290.122 171.282L293.202 176H291.816L289.254 172.052L288.134 173.144V176ZM297.643 195.358V194.084C295.865 193.916 294.773 192.656 294.731 191.004H295.795C295.837 192.138 296.453 192.964 297.643 193.118V189.492L297.013 189.324C295.739 188.988 294.927 188.036 294.927 186.804C294.927 185.348 295.935 184.298 297.643 184.158V182.884H298.441V184.158C300.037 184.298 301.003 185.306 301.073 186.86H300.009C299.953 185.964 299.435 185.278 298.441 185.124V188.582L299.351 188.834C300.625 189.184 301.367 190.094 301.367 191.27C301.367 192.866 300.219 193.944 298.441 194.084V195.358H297.643ZM297.209 188.246L297.643 188.372V185.11C296.677 185.222 296.005 185.754 296.005 186.692C296.005 187.434 296.425 188.036 297.209 188.246ZM298.987 189.856L298.441 189.702V193.132C299.617 193.02 300.289 192.376 300.289 191.424C300.289 190.64 299.897 190.094 298.987 189.856ZM309.895 191.732C309.643 193.272 308.481 194.252 306.759 194.252C304.547 194.252 303.427 192.642 303.427 190.402C303.427 187.952 304.757 186.44 306.787 186.44C309.055 186.44 310.049 188.134 310.049 190.682H304.645C304.687 192.124 305.387 193.174 306.801 193.174C307.753 193.174 308.397 192.712 308.719 191.732H309.895ZM306.773 187.518C305.457 187.518 304.771 188.498 304.673 189.73H308.789C308.789 188.512 308.033 187.518 306.773 187.518ZM312.445 194V186.664H313.523V187.882C314.097 186.986 314.797 186.454 315.959 186.454C317.233 186.454 318.283 187.098 318.283 188.456V194H317.121V188.918C317.121 187.938 316.421 187.476 315.609 187.476C314.293 187.476 313.607 188.61 313.607 189.87V194H312.445ZM324.068 186.664H326.952V187.616H324.068V191.704C324.068 192.782 324.642 193.146 325.706 193.146C326.182 193.146 326.602 193.104 326.952 193.006V194.028C326.49 194.168 326.028 194.196 325.636 194.196C323.858 194.196 322.906 193.51 322.906 191.914V187.616H320.792V186.664H322.906V184.648H324.068V186.664ZM330.076 194V186.664H331.154V188.246C331.644 187.196 332.582 186.454 333.786 186.454C335.466 186.454 336.334 187.378 336.474 188.834H335.312C335.144 187.952 334.668 187.476 333.674 187.476C332.204 187.476 331.252 188.722 331.252 190.444V194H330.076ZM341.376 195.54C340.998 196.548 340.284 197.052 339.374 197.052C339.024 197.052 338.716 197.01 338.422 196.912V195.82C338.73 195.89 338.982 195.904 339.22 195.904C339.752 195.904 340.046 195.708 340.256 195.19L340.704 194.112L337.988 186.664H339.22L341.362 192.614L343.476 186.664H344.68L341.376 195.54Z" fill="rgb(var(--colour-forest))"></path><path d="M29.228 134.638C30.124 134.638 30.46 134.246 30.46 133.238V130.928C30.46 129.794 31.048 129.094 31.986 129.094H33.274V130.018H32.392C31.706 130.018 31.51 130.214 31.51 130.942V133.182C31.51 134.316 31.23 134.764 30.25 135.1C31.23 135.422 31.51 135.898 31.51 137.032V139.272C31.51 140 31.706 140.196 32.392 140.196H33.274V141.12H31.986C31.048 141.12 30.46 140.42 30.46 139.286V136.976C30.46 135.968 30.124 135.562 29.228 135.562H28.836V134.638H29.228ZM170.581 151.574H168.677V149.67H170.581V151.574ZM168.677 155.102H170.581V157.006H168.677V155.102ZM176.351 152.638C177.247 152.638 177.583 152.246 177.583 151.238V148.928C177.583 147.794 178.171 147.094 179.109 147.094H180.397V148.018H179.515C178.829 148.018 178.633 148.214 178.633 148.942V151.182C178.633 152.316 178.353 152.764 177.373 153.1C178.353 153.422 178.633 153.898 178.633 155.032V157.272C178.633 158 178.829 158.196 179.515 158.196H180.397V159.12H179.109C178.171 159.12 177.583 158.42 177.583 157.286V154.976C177.583 153.968 177.247 153.562 176.351 153.562H175.959V152.638H176.351ZM110.001 170.568H108.097V168.664H110.001V170.568ZM108.097 174.096H110.001V176H108.097V174.096ZM125.475 165.094H128.359V166.018H126.483V176.196H128.359V177.12H125.475V165.094ZM55.1909 188.638C56.0869 188.638 56.4229 188.246 56.4229 187.238V184.928C56.4229 183.794 57.0109 183.094 57.9489 183.094H59.2369V184.018H58.3549C57.6689 184.018 57.4729 184.214 57.4729 184.942V187.182C57.4729 188.316 57.1929 188.764 56.2129 189.1C57.1929 189.422 57.4729 189.898 57.4729 191.032V193.272C57.4729 194 57.6689 194.196 58.3549 194.196H59.2369V195.12H57.9489C57.0109 195.12 56.4229 194.42 56.4229 193.286V190.976C56.4229 189.968 56.0869 189.562 55.1909 189.562H54.7989V188.638H55.1909ZM118.655 206.568H116.751V204.664H118.655V206.568ZM116.751 210.096H118.655V212H116.751V210.096ZM179.235 224.568H177.331V222.664H179.235V224.568ZM177.331 228.096H179.235V230H177.331V228.096ZM127.309 242.568H125.405V240.664H127.309V242.568ZM125.405 246.096H127.309V248H125.405V246.096ZM141.734 242.638C142.63 242.638 142.966 242.246 142.966 241.238V238.928C142.966 237.794 143.554 237.094 144.492 237.094H145.78V238.018H144.898C144.212 238.018 144.016 238.214 144.016 238.942V241.182C144.016 242.316 143.736 242.764 142.756 243.1C143.736 243.422 144.016 243.898 144.016 245.032V247.272C144.016 248 144.212 248.196 144.898 248.196H145.78V249.12H144.492C143.554 249.12 142.966 248.42 142.966 247.286V244.976C142.966 243.968 142.63 243.562 141.734 243.562H141.342V242.638H141.734ZM180.215 243.576C179.319 243.576 178.983 243.968 178.983 244.976V247.286C178.983 248.42 178.395 249.12 177.457 249.12H176.169V248.196H177.051C177.737 248.196 177.933 248 177.933 247.272V245.032C177.933 243.898 178.213 243.45 179.193 243.114C178.213 242.792 177.933 242.316 177.933 241.182V238.942C177.933 238.214 177.737 238.018 177.051 238.018H176.169V237.094H177.457C178.395 237.094 178.983 237.794 178.983 238.928V241.238C178.983 242.246 179.319 242.652 180.215 242.652H180.607V243.576H180.215ZM59.0549 261.576C58.1589 261.576 57.8229 261.968 57.8229 262.976V265.286C57.8229 266.42 57.2349 267.12 56.2969 267.12H55.0089V266.196H55.8909C56.5769 266.196 56.7729 266 56.7729 265.272V263.032C56.7729 261.898 57.0529 261.45 58.0329 261.114C57.0529 260.792 56.7729 260.316 56.7729 259.182V256.942C56.7729 256.214 56.5769 256.018 55.8909 256.018H55.0089V255.094H56.2969C57.2349 255.094 57.8229 255.794 57.8229 256.928V259.238C57.8229 260.246 58.1589 260.652 59.0549 260.652H59.4469V261.576H59.0549ZM49.3506 285.12H46.4666V284.196H48.3426V274.018H46.4666V273.094H49.3506V285.12ZM41.7463 297.576C40.8503 297.576 40.5143 297.968 40.5143 298.976V301.286C40.5143 302.42 39.9263 303.12 38.9883 303.12H37.7003V302.196H38.5823C39.2683 302.196 39.4643 302 39.4643 301.272V299.032C39.4643 297.898 39.7443 297.45 40.7243 297.114C39.7443 296.792 39.4643 296.316 39.4643 295.182V292.942C39.4643 292.214 39.2683 292.018 38.5823 292.018H37.7003V291.094H38.9883C39.9263 291.094 40.5143 291.794 40.5143 292.928V295.238C40.5143 296.246 40.8503 296.652 41.7463 296.652H42.1383V297.576H41.7463ZM33.092 315.576C32.196 315.576 31.86 315.968 31.86 316.976V319.286C31.86 320.42 31.272 321.12 30.334 321.12H29.046V320.196H29.928C30.614 320.196 30.81 320 30.81 319.272V317.032C30.81 315.898 31.09 315.45 32.07 315.114C31.09 314.792 30.81 314.316 30.81 313.182V310.942C30.81 310.214 30.614 310.018 29.928 310.018H29.046V309.094H30.334C31.272 309.094 31.86 309.794 31.86 310.928V313.238C31.86 314.246 32.196 314.652 33.092 314.652H33.484V315.576H33.092Z" fill="rgb(var(--colour-main-500))"></path><path d="M37.7003 150.328V148.214H39.1283V150.328L38.7503 152.54H38.0783L37.7003 150.328ZM40.5003 150.328V148.214H41.9283V150.328L41.5503 152.54H40.8783L40.5003 150.328ZM49.4486 147.794V157.048H51.7026V158H45.7806V157.048H48.3146V148.746H45.7806V147.794H49.4486ZM60.3149 155.732C60.0629 157.272 58.9009 158.252 57.1789 158.252C54.9669 158.252 53.8469 156.642 53.8469 154.402C53.8469 151.952 55.1769 150.44 57.2069 150.44C59.4749 150.44 60.4689 152.134 60.4689 154.682H55.0649C55.1069 156.124 55.8069 157.174 57.2209 157.174C58.1729 157.174 58.8169 156.712 59.1389 155.732H60.3149ZM57.1929 151.518C55.8769 151.518 55.1909 152.498 55.0929 153.73H59.2089C59.2089 152.512 58.4529 151.518 57.1929 151.518ZM67.7232 147.794H68.8852V158H67.8492V156.964C67.2612 157.818 66.4772 158.252 65.5112 158.252C63.3412 158.252 62.3192 156.516 62.3192 154.262C62.3192 152.148 63.3832 150.44 65.4692 150.44C66.4632 150.44 67.2192 150.818 67.7232 151.574V147.794ZM65.6652 151.532C64.2932 151.532 63.5372 152.764 63.5372 154.346C63.5372 155.844 64.1812 157.16 65.6792 157.16C67.1492 157.16 67.7232 155.746 67.7232 154.388C67.7232 152.918 67.1352 151.532 65.6652 151.532ZM74.2495 161.052C72.6535 161.052 71.4495 160.394 71.2535 158.84H72.4715C72.6395 159.666 73.2135 160.072 74.2775 160.072C75.7475 160.072 76.3495 159.344 76.3495 157.384V156.964C75.9155 157.818 75.1315 158.252 74.1655 158.252C71.9955 158.252 70.9735 156.558 70.9735 154.304C70.9735 152.148 72.0375 150.44 74.1235 150.44C75.1175 150.44 75.8735 150.818 76.3775 151.574V150.664H77.5395V156.81C77.5395 157.832 77.4555 158.602 77.2875 159.134C76.8815 160.408 75.8315 161.052 74.2495 161.052ZM74.3335 157.16C75.8035 157.16 76.3775 155.746 76.3775 154.388C76.3775 152.918 75.7895 151.532 74.3195 151.532C72.9475 151.532 72.1915 152.764 72.1915 154.346C72.1915 155.844 72.8355 157.16 74.3335 157.16ZM86.2778 155.732C86.0258 157.272 84.8638 158.252 83.1418 158.252C80.9298 158.252 79.8098 156.642 79.8098 154.402C79.8098 151.952 81.1398 150.44 83.1698 150.44C85.4378 150.44 86.4318 152.134 86.4318 154.682H81.0278C81.0698 156.124 81.7698 157.174 83.1838 157.174C84.1358 157.174 84.7798 156.712 85.1018 155.732H86.2778ZM83.1558 151.518C81.8398 151.518 81.1538 152.498 81.0558 153.73H85.1718C85.1718 152.512 84.4158 151.518 83.1558 151.518ZM89.1501 158V150.664H90.2281V152.246C90.7181 151.196 91.6561 150.454 92.8601 150.454C94.5401 150.454 95.4081 151.378 95.5481 152.834H94.3861C94.2181 151.952 93.7421 151.476 92.7481 151.476C91.2781 151.476 90.3261 152.722 90.3261 154.444V158H89.1501ZM103.152 153.562H98.9524V156.852H103.614V158H97.6504V148.214H103.362V149.362H98.9524V152.414H103.152V153.562ZM106.137 158V150.664H107.215V151.882C107.789 150.986 108.489 150.454 109.651 150.454C110.925 150.454 111.975 151.098 111.975 152.456V158H110.813V152.918C110.813 151.938 110.113 151.476 109.301 151.476C107.985 151.476 107.299 152.61 107.299 153.87V158H106.137ZM117.759 150.664H120.643V151.616H117.759V155.704C117.759 156.782 118.333 157.146 119.397 157.146C119.873 157.146 120.293 157.104 120.643 157.006V158.028C120.181 158.168 119.719 158.196 119.327 158.196C117.549 158.196 116.597 157.51 116.597 155.914V151.616H114.483V150.664H116.597V148.648H117.759V150.664ZM123.767 158V150.664H124.845V152.246C125.335 151.196 126.273 150.454 127.477 150.454C129.157 150.454 130.025 151.378 130.165 152.834H129.003C128.835 151.952 128.359 151.476 127.365 151.476C125.895 151.476 124.943 152.722 124.943 154.444V158H123.767ZM134.438 149.614V148.214H135.838V149.614H134.438ZM135.712 150.664V157.048H137.966V158H132.044V157.048H134.564V151.616H132.044V150.664H135.712ZM146.858 155.732C146.606 157.272 145.444 158.252 143.722 158.252C141.51 158.252 140.39 156.642 140.39 154.402C140.39 151.952 141.72 150.44 143.75 150.44C146.018 150.44 147.012 152.134 147.012 154.682H141.608C141.65 156.124 142.35 157.174 143.764 157.174C144.716 157.174 145.36 156.712 145.682 155.732H146.858ZM143.736 151.518C142.42 151.518 141.734 152.498 141.636 153.73H145.752C145.752 152.512 144.996 151.518 143.736 151.518ZM155.008 152.666H153.79C153.762 151.938 153.202 151.476 152.32 151.476C151.368 151.476 150.724 151.896 150.724 152.554C150.724 153.072 151.088 153.38 151.774 153.562L153.44 153.996C154.672 154.318 155.302 154.92 155.302 155.956C155.302 157.384 154.182 158.252 152.362 158.252C150.444 158.252 149.436 157.412 149.352 155.774H150.584C150.696 156.768 151.298 157.216 152.39 157.216C153.426 157.216 154.112 156.824 154.112 156.138C154.112 155.508 153.804 155.242 153.006 155.032L151.466 154.626C150.136 154.276 149.534 153.73 149.534 152.61C149.534 151.28 150.626 150.44 152.348 150.44C154.056 150.44 154.98 151.28 155.008 152.666ZM158.86 150.328V148.214H160.288V150.328L159.91 152.54H159.238L158.86 150.328ZM161.66 150.328V148.214H163.088V150.328L162.71 152.54H162.038L161.66 150.328ZM46.3546 168.328V166.214H47.7826V168.328L47.4046 170.54H46.7326L46.3546 168.328ZM49.1546 168.328V166.214H50.5826V168.328L50.2046 170.54H49.5326L49.1546 168.328ZM57.1789 168.664H60.0629V169.616H57.1789V173.704C57.1789 174.782 57.7529 175.146 58.8169 175.146C59.2929 175.146 59.7129 175.104 60.0629 175.006V176.028C59.6009 176.168 59.1389 176.196 58.7469 176.196C56.9689 176.196 56.0169 175.51 56.0169 173.914V169.616H53.9029V168.664H56.0169V166.648H57.1789V168.664ZM65.8332 177.54C65.4552 178.548 64.7412 179.052 63.8312 179.052C63.4812 179.052 63.1732 179.01 62.8792 178.912V177.82C63.1872 177.89 63.4392 177.904 63.6772 177.904C64.2092 177.904 64.5032 177.708 64.7132 177.19L65.1612 176.112L62.4452 168.664H63.6772L65.8192 174.614L67.9332 168.664H69.1372L65.8332 177.54ZM72.4995 179.052H71.3235V168.664H72.4015V169.756C72.9475 168.874 73.7175 168.44 74.7395 168.44C76.9235 168.44 77.8895 170.302 77.8895 172.416C77.8895 174.516 76.8535 176.252 74.7535 176.252C73.8015 176.252 73.1155 175.93 72.4995 175.16V179.052ZM74.5435 169.532C73.0875 169.532 72.4995 170.918 72.4995 172.346C72.4995 173.774 73.0875 175.16 74.5435 175.16C76.0135 175.16 76.6715 173.802 76.6715 172.388C76.6715 170.904 76.0275 169.532 74.5435 169.532ZM86.2778 173.732C86.0258 175.272 84.8638 176.252 83.1418 176.252C80.9298 176.252 79.8098 174.642 79.8098 172.402C79.8098 169.952 81.1398 168.44 83.1698 168.44C85.4378 168.44 86.4318 170.134 86.4318 172.682H81.0278C81.0698 174.124 81.7698 175.174 83.1838 175.174C84.1358 175.174 84.7798 174.712 85.1018 173.732H86.2778ZM83.1558 169.518C81.8398 169.518 81.1538 170.498 81.0558 171.73H85.1718C85.1718 170.512 84.4158 169.518 83.1558 169.518ZM94.4281 170.666H93.2101C93.1821 169.938 92.6221 169.476 91.7401 169.476C90.7881 169.476 90.1441 169.896 90.1441 170.554C90.1441 171.072 90.5081 171.38 91.1941 171.562L92.8601 171.996C94.0921 172.318 94.7221 172.92 94.7221 173.956C94.7221 175.384 93.6021 176.252 91.7821 176.252C89.8641 176.252 88.8561 175.412 88.7721 173.774H90.0041C90.1161 174.768 90.7181 175.216 91.8101 175.216C92.8461 175.216 93.5321 174.824 93.5321 174.138C93.5321 173.508 93.2241 173.242 92.4261 173.032L90.8861 172.626C89.5561 172.276 88.9541 171.73 88.9541 170.61C88.9541 169.28 90.0461 168.44 91.7681 168.44C93.4761 168.44 94.4001 169.28 94.4281 170.666ZM98.2804 168.328V166.214H99.7084V168.328L99.3304 170.54H98.6584L98.2804 168.328ZM101.08 168.328V166.214H102.508V168.328L102.13 170.54H101.458L101.08 168.328ZM63.6632 204.328V202.214H65.0912V204.328L64.7132 206.54H64.0412L63.6632 204.328ZM66.4632 204.328V202.214H67.8912V204.328L67.5132 206.54H66.8412L66.4632 204.328ZM74.4875 204.664H77.3715V205.616H74.4875V209.704C74.4875 210.782 75.0615 211.146 76.1255 211.146C76.6015 211.146 77.0215 211.104 77.3715 211.006V212.028C76.9095 212.168 76.4475 212.196 76.0555 212.196C74.2775 212.196 73.3255 211.51 73.3255 209.914V205.616H71.2115V204.664H73.3255V202.648H74.4875V204.664ZM83.1418 213.54C82.7638 214.548 82.0498 215.052 81.1398 215.052C80.7898 215.052 80.4818 215.01 80.1878 214.912V213.82C80.4958 213.89 80.7478 213.904 80.9858 213.904C81.5178 213.904 81.8118 213.708 82.0218 213.19L82.4698 212.112L79.7538 204.664H80.9858L83.1278 210.614L85.2418 204.664H86.4458L83.1418 213.54ZM89.8081 215.052H88.6321V204.664H89.7101V205.756C90.2561 204.874 91.0261 204.44 92.0481 204.44C94.2321 204.44 95.1981 206.302 95.1981 208.416C95.1981 210.516 94.1621 212.252 92.0621 212.252C91.1101 212.252 90.4241 211.93 89.8081 211.16V215.052ZM91.8521 205.532C90.3961 205.532 89.8081 206.918 89.8081 208.346C89.8081 209.774 90.3961 211.16 91.8521 211.16C93.3221 211.16 93.9801 209.802 93.9801 208.388C93.9801 206.904 93.3361 205.532 91.8521 205.532ZM103.586 209.732C103.334 211.272 102.172 212.252 100.45 212.252C98.2384 212.252 97.1184 210.642 97.1184 208.402C97.1184 205.952 98.4484 204.44 100.478 204.44C102.746 204.44 103.74 206.134 103.74 208.682H98.3364C98.3784 210.124 99.0784 211.174 100.492 211.174C101.444 211.174 102.088 210.712 102.41 209.732H103.586ZM100.464 205.518C99.1484 205.518 98.4624 206.498 98.3644 207.73H102.48C102.48 206.512 101.724 205.518 100.464 205.518ZM106.935 204.328V202.214H108.363V204.328L107.985 206.54H107.313L106.935 204.328ZM109.735 204.328V202.214H111.163V204.328L110.785 206.54H110.113L109.735 204.328ZM63.6632 222.328V220.214H65.0912V222.328L64.7132 224.54H64.0412L63.6632 222.328ZM66.4632 222.328V220.214H67.8912V222.328L67.5132 224.54H66.8412L66.4632 222.328ZM76.3775 219.794H77.5395V230H76.5035V228.964C75.9155 229.818 75.1315 230.252 74.1655 230.252C71.9955 230.252 70.9735 228.516 70.9735 226.262C70.9735 224.148 72.0375 222.44 74.1235 222.44C75.1175 222.44 75.8735 222.818 76.3775 223.574V219.794ZM74.3195 223.532C72.9475 223.532 72.1915 224.764 72.1915 226.346C72.1915 227.844 72.8355 229.16 74.3335 229.16C75.8035 229.16 76.3775 227.746 76.3775 226.388C76.3775 224.918 75.7895 223.532 74.3195 223.532ZM86.2778 227.732C86.0258 229.272 84.8638 230.252 83.1418 230.252C80.9298 230.252 79.8098 228.642 79.8098 226.402C79.8098 223.952 81.1398 222.44 83.1698 222.44C85.4378 222.44 86.4318 224.134 86.4318 226.682H81.0278C81.0698 228.124 81.7698 229.174 83.1838 229.174C84.1358 229.174 84.7798 228.712 85.1018 227.732H86.2778ZM83.1558 223.518C81.8398 223.518 81.1538 224.498 81.0558 225.73H85.1718C85.1718 224.512 84.4158 223.518 83.1558 223.518ZM94.4281 224.666H93.2101C93.1821 223.938 92.6221 223.476 91.7401 223.476C90.7881 223.476 90.1441 223.896 90.1441 224.554C90.1441 225.072 90.5081 225.38 91.1941 225.562L92.8601 225.996C94.0921 226.318 94.7221 226.92 94.7221 227.956C94.7221 229.384 93.6021 230.252 91.7821 230.252C89.8641 230.252 88.8561 229.412 88.7721 227.774H90.0041C90.1161 228.768 90.7181 229.216 91.8101 229.216C92.8461 229.216 93.5321 228.824 93.5321 228.138C93.5321 227.508 93.2241 227.242 92.4261 227.032L90.8861 226.626C89.5561 226.276 88.9541 225.73 88.9541 224.61C88.9541 223.28 90.0461 222.44 91.7681 222.44C93.4761 222.44 94.4001 223.28 94.4281 224.666ZM103.53 225.086H102.354C102.228 224.12 101.584 223.518 100.562 223.518C99.0504 223.518 98.4624 224.96 98.4624 226.416C98.4624 227.872 99.1204 229.174 100.59 229.174C101.612 229.174 102.242 228.6 102.438 227.438H103.614C103.46 229.202 102.368 230.252 100.562 230.252C98.4204 230.252 97.2444 228.572 97.2444 226.416C97.2444 224.218 98.3924 222.44 100.576 222.44C102.368 222.44 103.488 223.532 103.53 225.086ZM106.459 230V222.664H107.537V224.246C108.027 223.196 108.965 222.454 110.169 222.454C111.849 222.454 112.717 223.378 112.857 224.834H111.695C111.527 223.952 111.051 223.476 110.057 223.476C108.587 223.476 107.635 224.722 107.635 226.444V230H106.459ZM117.129 221.614V220.214H118.529V221.614H117.129ZM118.403 222.664V229.048H120.657V230H114.735V229.048H117.255V223.616H114.735V222.664H118.403ZM124.425 233.052H123.249V222.664H124.327V223.756C124.873 222.874 125.643 222.44 126.665 222.44C128.849 222.44 129.815 224.302 129.815 226.416C129.815 228.516 128.779 230.252 126.679 230.252C125.727 230.252 125.041 229.93 124.425 229.16V233.052ZM126.469 223.532C125.013 223.532 124.425 224.918 124.425 226.346C124.425 227.774 125.013 229.16 126.469 229.16C127.939 229.16 128.597 227.802 128.597 226.388C128.597 224.904 127.953 223.532 126.469 223.532ZM135.068 222.664H137.952V223.616H135.068V227.704C135.068 228.782 135.642 229.146 136.706 229.146C137.182 229.146 137.602 229.104 137.952 229.006V230.028C137.49 230.168 137.028 230.196 136.636 230.196C134.858 230.196 133.906 229.51 133.906 227.914V223.616H131.792V222.664H133.906V220.648H135.068V222.664ZM143.092 221.614V220.214H144.492V221.614H143.092ZM144.366 222.664V229.048H146.62V230H140.698V229.048H143.218V223.616H140.698V222.664H144.366ZM152.32 222.44C154.574 222.44 155.638 224.12 155.638 226.346C155.638 228.572 154.574 230.252 152.32 230.252C150.066 230.252 149.002 228.572 149.002 226.346C149.002 224.12 150.066 222.44 152.32 222.44ZM152.32 223.518C150.836 223.518 150.22 224.848 150.22 226.346C150.22 227.844 150.836 229.174 152.32 229.174C153.804 229.174 154.42 227.844 154.42 226.346C154.42 224.848 153.804 223.518 152.32 223.518ZM158.062 230V222.664H159.14V223.882C159.714 222.986 160.414 222.454 161.576 222.454C162.85 222.454 163.9 223.098 163.9 224.456V230H162.738V224.918C162.738 223.938 162.038 223.476 161.226 223.476C159.91 223.476 159.224 224.61 159.224 225.87V230H158.062ZM167.515 222.328V220.214H168.943V222.328L168.565 224.54H167.893L167.515 222.328ZM170.315 222.328V220.214H171.743V222.328L171.365 224.54H170.693L170.315 222.328ZM63.6632 240.328V238.214H65.0912V240.328L64.7132 242.54H64.0412L63.6632 240.328ZM66.4632 240.328V238.214H67.8912V240.328L67.5132 242.54H66.8412L66.4632 240.328ZM75.4115 237.794V247.048H77.6655V248H71.7435V247.048H74.2775V238.746H71.7435V237.794H75.4115ZM82.5118 239.614V238.214H83.9118V239.614H82.5118ZM83.7858 240.664V247.048H86.0398V248H80.1178V247.048H82.6378V241.616H80.1178V240.664H83.7858ZM88.8281 248V240.664H89.9061V241.882C90.4801 240.986 91.1801 240.454 92.3421 240.454C93.6161 240.454 94.6661 241.098 94.6661 242.456V248H93.5041V242.918C93.5041 241.938 92.8041 241.476 91.9921 241.476C90.6761 241.476 89.9901 242.61 89.9901 243.87V248H88.8281ZM103.586 245.732C103.334 247.272 102.172 248.252 100.45 248.252C98.2384 248.252 97.1184 246.642 97.1184 244.402C97.1184 241.952 98.4484 240.44 100.478 240.44C102.746 240.44 103.74 242.134 103.74 244.682H98.3364C98.3784 246.124 99.0784 247.174 100.492 247.174C101.444 247.174 102.088 246.712 102.41 245.732H103.586ZM100.464 241.518C99.1484 241.518 98.4624 242.498 98.3644 243.73H102.48C102.48 242.512 101.724 241.518 100.464 241.518ZM111.737 242.666H110.519C110.491 241.938 109.931 241.476 109.049 241.476C108.097 241.476 107.453 241.896 107.453 242.554C107.453 243.072 107.817 243.38 108.503 243.562L110.169 243.996C111.401 244.318 112.031 244.92 112.031 245.956C112.031 247.384 110.911 248.252 109.091 248.252C107.173 248.252 106.165 247.412 106.081 245.774H107.313C107.425 246.768 108.027 247.216 109.119 247.216C110.155 247.216 110.841 246.824 110.841 246.138C110.841 245.508 110.533 245.242 109.735 245.032L108.195 244.626C106.865 244.276 106.263 243.73 106.263 242.61C106.263 241.28 107.355 240.44 109.077 240.44C110.785 240.44 111.709 241.28 111.737 242.666ZM115.589 240.328V238.214H117.017V240.328L116.639 242.54H115.967L115.589 240.328ZM118.389 240.328V238.214H119.817V240.328L119.439 242.54H118.767L118.389 240.328Z" fill="rgb(var(--colour-magenta))"></path><path d="M153.613 246.096H155.517V248H153.613V246.096ZM160.025 246.096H161.929V248H160.025V246.096ZM166.437 246.096H168.341V248H166.437V246.096Z" fill="rgb(var(--colour-main))"></path></svg></div></div><section id="post-ledger-entries-schema" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">a. </span>Schema</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#post-ledger-entries-schema">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Ledger Entries are defined in your Schema under the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ledgerEntries.types</code> key. Every Ledger Entry has a <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">type</code> that must be unique within the Schema.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Ledger Entry definition</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;key&quot;: &quot;schema-key&quot;,
  &quot;chartOfAccounts&quot;: {...},
  &quot;ledgerEntries&quot;: {
    &quot;types&quot;: [
      {
        &quot;type&quot;: &quot;user_funds_account&quot;,
        &quot;description&quot;: &quot;Fund {{user_id}} for {{funding_amount}}&quot;,
        &quot;lines&quot;: [
          {
            &quot;account&quot;: { 
              &quot;path&quot;: &quot;assets/banks/user-cash&quot;
            },
            &quot;key&quot;: &quot;funds_arrive_in_bank&quot;,
            &quot;amount&quot;: &quot;{{funding_amount}}&quot;
          },
          {
            &quot;account&quot;: { 
              &quot;path&quot;: &quot;liabilities/users:{{user_id}}/available&quot;
            },
            &quot;key&quot;: &quot;increase_user_balance&quot;,
            &quot;amount&quot;: &quot;{{funding_amount}}&quot;
          }
        ]
      }
    ]
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The amounts of a Ledger Line can be parameterized using <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">{{handlebar}}</code> syntax and can contain basic arithmetic (+ or -):</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Ledger Entry definition</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;key&quot;: &quot;schema-key&quot;,
  &quot;chartOfAccounts&quot;: {...},
  &quot;ledgerEntries&quot;: {
    &quot;types&quot;: [
      {
        &quot;type&quot;: &quot;user_funds_account_with_fee&quot;,
        &quot;description&quot;: &quot;Fund {{user_id}} for {{funding_amount}} with {{fee_amount}} fee&quot;,
        &quot;lines&quot;: [
          {
            &quot;account&quot;: { 
              &quot;path&quot;: &quot;assets/banks/user-cash&quot;
            },
            &quot;key&quot;: &quot;funds_arrive_in_bank&quot;,
            &quot;amount&quot;: &quot;{{funding_amount}}&quot;
          },
          {
            &quot;account&quot;: { 
              &quot;path&quot;: &quot;liabilities/users:{{user_id}}/available&quot;
            },
            &quot;key&quot;: &quot;increase_user_balance&quot;,
            &quot;amount&quot;: &quot;{{funding_amount}} - {{fee_amount}}&quot;
          },
          {
            &quot;account&quot;: { &quot;path&quot;: &quot;income/funding-fees&quot; },
            &quot;key&quot;: &quot;take_fee&quot;,
            &quot;amount&quot;: &quot;{{fee_amount}}&quot;
          }
        ]
      }
    ]
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Ledger Entries must be balanced by the Accounting Equation. If they are not, the Ledger designer throws an error.</p><div class="pt-f2"><div class="hidden tablet:block"><svg width="100%" height="100%" viewBox="0 0 621 306" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="621" height="306" fill="rgb(var(--colour-negative))"></rect><path d="M24.874 32L24.006 29.074H20.632L19.764 32H18.42L21.514 22.214H23.152L26.232 32H24.874ZM20.954 27.982H23.684L22.312 23.39L20.954 27.982ZM34.1163 27.086H32.9403C32.8143 26.12 32.1703 25.518 31.1483 25.518C29.6363 25.518 29.0483 26.96 29.0483 28.416C29.0483 29.872 29.7063 31.174 31.1763 31.174C32.1983 31.174 32.8283 30.6 33.0243 29.438H34.2003C34.0463 31.202 32.9543 32.252 31.1483 32.252C29.0063 32.252 27.8303 30.572 27.8303 28.416C27.8303 26.218 28.9783 24.44 31.1623 24.44C32.9543 24.44 34.0743 25.532 34.1163 27.086ZM42.7706 27.086H41.5946C41.4686 26.12 40.8246 25.518 39.8026 25.518C38.2906 25.518 37.7026 26.96 37.7026 28.416C37.7026 29.872 38.3606 31.174 39.8306 31.174C40.8526 31.174 41.4826 30.6 41.6786 29.438H42.8546C42.7006 31.202 41.6086 32.252 39.8026 32.252C37.6606 32.252 36.4846 30.572 36.4846 28.416C36.4846 26.218 37.6326 24.44 39.8166 24.44C41.6086 24.44 42.7286 25.532 42.7706 27.086ZM48.2889 24.44C50.5429 24.44 51.6069 26.12 51.6069 28.346C51.6069 30.572 50.5429 32.252 48.2889 32.252C46.0349 32.252 44.9709 30.572 44.9709 28.346C44.9709 26.12 46.0349 24.44 48.2889 24.44ZM48.2889 25.518C46.8049 25.518 46.1889 26.848 46.1889 28.346C46.1889 29.844 46.8049 31.174 48.2889 31.174C49.7729 31.174 50.3889 29.844 50.3889 28.346C50.3889 26.848 49.7729 25.518 48.2889 25.518ZM59.8692 24.664V32H58.8192V30.908C58.1472 31.874 57.4472 32.252 56.3692 32.252C55.7392 32.252 55.2072 32.112 54.7872 31.818C54.2832 31.454 54.0312 30.936 54.0312 30.25V24.664H55.1932V29.788C55.1932 30.278 55.3612 30.656 55.6832 30.908C55.9492 31.118 56.2992 31.23 56.7052 31.23C57.2512 31.23 57.7132 31.034 58.0912 30.628C58.4972 30.194 58.7072 29.564 58.7072 28.738V24.664H59.8692ZM62.6855 32V24.664H63.7635V25.882C64.3375 24.986 65.0375 24.454 66.1995 24.454C67.4735 24.454 68.5235 25.098 68.5235 26.456V32H67.3615V26.918C67.3615 25.938 66.6615 25.476 65.8495 25.476C64.5335 25.476 63.8475 26.61 63.8475 27.87V32H62.6855ZM74.3078 24.664H77.1918V25.616H74.3078V29.704C74.3078 30.782 74.8818 31.146 75.9458 31.146C76.4218 31.146 76.8418 31.104 77.1918 31.006V32.028C76.7298 32.168 76.2678 32.196 75.8758 32.196C74.0978 32.196 73.1458 31.51 73.1458 29.914V25.616H71.0318V24.664H73.1458V22.648H74.3078V24.664ZM82.3321 23.614V22.214H83.7321V23.614H82.3321ZM83.6061 24.664V31.048H85.8601V32H79.9381V31.048H82.4581V25.616H79.9381V24.664H83.6061ZM88.6484 32V24.664H89.7264V25.882C90.3004 24.986 91.0004 24.454 92.1624 24.454C93.4364 24.454 94.4864 25.098 94.4864 26.456V32H93.3244V26.918C93.3244 25.938 92.6244 25.476 91.8124 25.476C90.4964 25.476 89.8104 26.61 89.8104 27.87V32H88.6484ZM100.033 35.052C98.4367 35.052 97.2327 34.394 97.0367 32.84H98.2547C98.4227 33.666 98.9967 34.072 100.061 34.072C101.531 34.072 102.133 33.344 102.133 31.384V30.964C101.699 31.818 100.915 32.252 99.9487 32.252C97.7787 32.252 96.7567 30.558 96.7567 28.304C96.7567 26.148 97.8207 24.44 99.9067 24.44C100.901 24.44 101.657 24.818 102.161 25.574V24.664H103.323V30.81C103.323 31.832 103.239 32.602 103.071 33.134C102.665 34.408 101.615 35.052 100.033 35.052ZM100.117 31.16C101.587 31.16 102.161 29.746 102.161 28.388C102.161 26.918 101.573 25.532 100.103 25.532C98.7307 25.532 97.9747 26.764 97.9747 28.346C97.9747 29.844 98.6187 31.16 100.117 31.16ZM120.281 27.562H116.081V30.852H120.743V32H114.779V22.214H120.491V23.362H116.081V26.414H120.281V27.562ZM129.286 24.664V35.052H128.124V31.076C127.578 31.916 126.864 32.252 125.856 32.252C123.882 32.252 122.72 30.74 122.72 28.43C122.72 26.204 123.798 24.44 125.912 24.44C126.878 24.44 127.704 24.86 128.25 25.63V24.664H129.286ZM126.08 25.532C124.694 25.532 123.938 26.764 123.938 28.346C123.938 29.844 124.61 31.16 126.08 31.16C127.55 31.16 128.124 29.746 128.124 28.388C128.124 26.932 127.536 25.532 126.08 25.532ZM137.758 24.664V32H136.708V30.908C136.036 31.874 135.336 32.252 134.258 32.252C133.628 32.252 133.096 32.112 132.676 31.818C132.172 31.454 131.92 30.936 131.92 30.25V24.664H133.082V29.788C133.082 30.278 133.25 30.656 133.572 30.908C133.838 31.118 134.188 31.23 134.594 31.23C135.14 31.23 135.602 31.034 135.98 30.628C136.386 30.194 136.596 29.564 136.596 28.738V24.664H137.758ZM147.126 31.23V32.112C146.832 32.196 146.608 32.238 146.426 32.238C145.614 32.238 145.208 31.888 145.124 31.132C144.298 31.944 143.57 32.252 142.632 32.252C141.204 32.252 140.238 31.454 140.238 30.096C140.238 28.584 141.386 28.038 142.24 27.898C142.492 27.856 143.038 27.772 143.864 27.66C144.802 27.534 145.11 27.352 145.11 26.876V26.624C145.11 25.896 144.536 25.532 143.43 25.532C142.352 25.532 141.82 25.938 141.722 26.834H140.546C140.574 25.14 141.75 24.454 143.486 24.454C145.292 24.454 146.244 25.154 146.244 26.456V30.684C146.244 31.062 146.454 31.258 146.874 31.258C146.944 31.258 147.056 31.244 147.126 31.23ZM145.11 29.452V28.29C144.62 28.514 143.822 28.64 143.206 28.71C142.114 28.836 141.428 29.144 141.428 30.068C141.428 30.796 141.988 31.23 142.926 31.23C143.948 31.23 145.11 30.474 145.11 29.452ZM152.196 24.664H155.08V25.616H152.196V29.704C152.196 30.782 152.77 31.146 153.834 31.146C154.31 31.146 154.73 31.104 155.08 31.006V32.028C154.618 32.168 154.156 32.196 153.764 32.196C151.986 32.196 151.034 31.51 151.034 29.914V25.616H148.92V24.664H151.034V22.648H152.196V24.664ZM160.221 23.614V22.214H161.621V23.614H160.221ZM161.495 24.664V31.048H163.749V32H157.827V31.048H160.347V25.616H157.827V24.664H161.495ZM169.449 24.44C171.703 24.44 172.767 26.12 172.767 28.346C172.767 30.572 171.703 32.252 169.449 32.252C167.195 32.252 166.131 30.572 166.131 28.346C166.131 26.12 167.195 24.44 169.449 24.44ZM169.449 25.518C167.965 25.518 167.349 26.848 167.349 28.346C167.349 29.844 167.965 31.174 169.449 31.174C170.933 31.174 171.549 29.844 171.549 28.346C171.549 26.848 170.933 25.518 169.449 25.518ZM175.191 32V24.664H176.269V25.882C176.843 24.986 177.543 24.454 178.705 24.454C179.979 24.454 181.029 25.098 181.029 26.456V32H179.867V26.918C179.867 25.938 179.167 25.476 178.355 25.476C177.039 25.476 176.353 26.61 176.353 27.87V32H175.191Z" fill="rgb(var(--colour-main))"></path><rect x="138.5" y="108" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="156.5" cy="126" r="6" fill="#5AC93B"></circle><path d="M158.32 129.495H159.29L157.09 122.505H155.92L153.71 129.495H154.67L155.29 127.405H157.7L158.32 129.495ZM155.52 126.625L156.49 123.345L157.47 126.625H155.52Z" fill="rgb(var(--colour-negative))"></path><path d="M175.374 131L174.506 128.074H171.132L170.264 131H168.92L172.014 121.214H173.652L176.732 131H175.374ZM171.454 126.982H174.184L172.812 122.39L171.454 126.982ZM184.168 125.666H182.95C182.922 124.938 182.362 124.476 181.48 124.476C180.528 124.476 179.884 124.896 179.884 125.554C179.884 126.072 180.248 126.38 180.934 126.562L182.6 126.996C183.832 127.318 184.462 127.92 184.462 128.956C184.462 130.384 183.342 131.252 181.522 131.252C179.604 131.252 178.596 130.412 178.512 128.774H179.744C179.856 129.768 180.458 130.216 181.55 130.216C182.586 130.216 183.272 129.824 183.272 129.138C183.272 128.508 182.964 128.242 182.166 128.032L180.626 127.626C179.296 127.276 178.694 126.73 178.694 125.61C178.694 124.28 179.786 123.44 181.508 123.44C183.216 123.44 184.14 124.28 184.168 125.666ZM192.823 125.666H191.605C191.577 124.938 191.017 124.476 190.135 124.476C189.183 124.476 188.539 124.896 188.539 125.554C188.539 126.072 188.903 126.38 189.589 126.562L191.255 126.996C192.487 127.318 193.117 127.92 193.117 128.956C193.117 130.384 191.997 131.252 190.177 131.252C188.259 131.252 187.251 130.412 187.167 128.774H188.399C188.511 129.768 189.113 130.216 190.205 130.216C191.241 130.216 191.927 129.824 191.927 129.138C191.927 128.508 191.619 128.242 190.821 128.032L189.281 127.626C187.951 127.276 187.349 126.73 187.349 125.61C187.349 124.28 188.441 123.44 190.163 123.44C191.871 123.44 192.795 124.28 192.823 125.666ZM201.981 128.732C201.729 130.272 200.567 131.252 198.845 131.252C196.633 131.252 195.513 129.642 195.513 127.402C195.513 124.952 196.843 123.44 198.873 123.44C201.141 123.44 202.135 125.134 202.135 127.682H196.731C196.773 129.124 197.473 130.174 198.887 130.174C199.839 130.174 200.483 129.712 200.805 128.732H201.981ZM198.859 124.518C197.543 124.518 196.857 125.498 196.759 126.73H200.875C200.875 125.512 200.119 124.518 198.859 124.518ZM207.499 123.664H210.383V124.616H207.499V128.704C207.499 129.782 208.073 130.146 209.137 130.146C209.613 130.146 210.033 130.104 210.383 130.006V131.028C209.921 131.168 209.459 131.196 209.067 131.196C207.289 131.196 206.337 130.51 206.337 128.914V124.616H204.223V123.664H206.337V121.648H207.499V123.664ZM218.785 125.666H217.567C217.539 124.938 216.979 124.476 216.097 124.476C215.145 124.476 214.501 124.896 214.501 125.554C214.501 126.072 214.865 126.38 215.551 126.562L217.217 126.996C218.449 127.318 219.079 127.92 219.079 128.956C219.079 130.384 217.959 131.252 216.139 131.252C214.221 131.252 213.213 130.412 213.129 128.774H214.361C214.473 129.768 215.075 130.216 216.167 130.216C217.203 130.216 217.889 129.824 217.889 129.138C217.889 128.508 217.581 128.242 216.783 128.032L215.243 127.626C213.913 127.276 213.311 126.73 213.311 125.61C213.311 124.28 214.403 123.44 216.125 123.44C217.833 123.44 218.757 124.28 218.785 125.666Z" fill="rgb(var(--colour-main))"></path><path d="M293.766 132.358V131.084C291.988 130.916 290.896 129.656 290.854 128.004H291.918C291.96 129.138 292.576 129.964 293.766 130.118V126.492L293.136 126.324C291.862 125.988 291.05 125.036 291.05 123.804C291.05 122.348 292.058 121.298 293.766 121.158V119.884H294.564V121.158C296.16 121.298 297.126 122.306 297.196 123.86H296.132C296.076 122.964 295.558 122.278 294.564 122.124V125.582L295.474 125.834C296.748 126.184 297.49 127.094 297.49 128.27C297.49 129.866 296.342 130.944 294.564 131.084V132.358H293.766ZM293.332 125.246L293.766 125.372V122.11C292.8 122.222 292.128 122.754 292.128 123.692C292.128 124.434 292.548 125.036 293.332 125.246ZM295.11 126.856L294.564 126.702V130.132C295.74 130.02 296.412 129.376 296.412 128.424C296.412 127.64 296.02 127.094 295.11 126.856Z" fill="rgb(var(--colour-main-500))"></path><rect x="310.5" y="108" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="328.5" cy="126" r="6" fill="rgb(var(--colour-income-blue))"></circle><path d="M326.545 129.495H330.455V128.715H328.965V123.285H330.455V122.505H326.545V123.285H328.025V128.715H326.545V129.495Z" fill="rgb(var(--colour-main))"></path><path d="M342.096 131V129.908H344.168V122.306H342.096V121.214H347.57V122.306H345.484V129.908H347.57V131H342.096ZM350.568 131V123.664H351.646V124.882C352.22 123.986 352.92 123.454 354.082 123.454C355.356 123.454 356.406 124.098 356.406 125.456V131H355.244V125.918C355.244 124.938 354.544 124.476 353.732 124.476C352.416 124.476 351.73 125.61 351.73 126.87V131H350.568ZM365.271 126.086H364.095C363.969 125.12 363.325 124.518 362.303 124.518C360.791 124.518 360.203 125.96 360.203 127.416C360.203 128.872 360.861 130.174 362.331 130.174C363.353 130.174 363.983 129.6 364.179 128.438H365.355C365.201 130.202 364.109 131.252 362.303 131.252C360.161 131.252 358.985 129.572 358.985 127.416C358.985 125.218 360.133 123.44 362.317 123.44C364.109 123.44 365.229 124.532 365.271 126.086ZM370.789 123.44C373.043 123.44 374.107 125.12 374.107 127.346C374.107 129.572 373.043 131.252 370.789 131.252C368.535 131.252 367.471 129.572 367.471 127.346C367.471 125.12 368.535 123.44 370.789 123.44ZM370.789 124.518C369.305 124.518 368.689 125.848 368.689 127.346C368.689 128.844 369.305 130.174 370.789 130.174C372.273 130.174 372.889 128.844 372.889 127.346C372.889 125.848 372.273 124.518 370.789 124.518ZM375.663 131V123.664H376.755V124.42C377.063 123.958 377.651 123.496 378.435 123.496C379.149 123.496 379.723 123.874 379.933 124.476C380.227 123.986 380.815 123.496 381.641 123.496C382.551 123.496 383.223 124.098 383.223 125.022V131H382.075V125.26C382.075 124.742 381.739 124.476 381.263 124.476C380.479 124.476 380.017 124.938 380.017 125.708V131H378.869V125.26C378.869 124.742 378.533 124.476 378.057 124.476C377.273 124.476 376.811 124.938 376.811 125.708V131H375.663ZM391.289 128.732C391.037 130.272 389.875 131.252 388.153 131.252C385.941 131.252 384.821 129.642 384.821 127.402C384.821 124.952 386.151 123.44 388.181 123.44C390.449 123.44 391.443 125.134 391.443 127.682H386.039C386.081 129.124 386.781 130.174 388.195 130.174C389.147 130.174 389.791 129.712 390.113 128.732H391.289ZM388.167 124.518C386.851 124.518 386.165 125.498 386.067 126.73H390.183C390.183 125.512 389.427 124.518 388.167 124.518Z" fill="rgb(var(--colour-main))"></path><path d="M465.766 132.358V131.084C463.988 130.916 462.896 129.656 462.854 128.004H463.918C463.96 129.138 464.576 129.964 465.766 130.118V126.492L465.136 126.324C463.862 125.988 463.05 125.036 463.05 123.804C463.05 122.348 464.058 121.298 465.766 121.158V119.884H466.564V121.158C468.16 121.298 469.126 122.306 469.196 123.86H468.132C468.076 122.964 467.558 122.278 466.564 122.124V125.582L467.474 125.834C468.748 126.184 469.49 127.094 469.49 128.27C469.49 129.866 468.342 130.944 466.564 131.084V132.358H465.766ZM465.332 125.246L465.766 125.372V122.11C464.8 122.222 464.128 122.754 464.128 123.692C464.128 124.434 464.548 125.036 465.332 125.246ZM467.11 126.856L466.564 126.702V130.132C467.74 130.02 468.412 129.376 468.412 128.424C468.412 127.64 468.02 127.094 467.11 126.856Z" fill="rgb(var(--colour-main-500))"></path><rect x="310.5" y="144" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="328.5" cy="162" r="6" fill="#FFE000"></circle><path d="M330.3 162.325V161.505H327.3V159.325H330.45V158.505H326.37V165.495H330.63V164.675H327.3V162.325H330.3Z" fill="rgb(var(--colour-main))"></path><path d="M347.584 162.562H343.384V165.852H348.046V167H342.082V157.214H347.794V158.362H343.384V161.414H347.584V162.562ZM356.602 159.664L354.138 163.206L356.672 167H355.286L353.48 164.214L351.646 167H350.288L352.878 163.262L350.428 159.664H351.8L353.522 162.296L355.272 159.664H356.602ZM360.203 170.052H359.027V159.664H360.105V160.756C360.651 159.874 361.421 159.44 362.443 159.44C364.627 159.44 365.593 161.302 365.593 163.416C365.593 165.516 364.557 167.252 362.457 167.252C361.505 167.252 360.819 166.93 360.203 166.16V170.052ZM362.247 160.532C360.791 160.532 360.203 161.918 360.203 163.346C360.203 164.774 360.791 166.16 362.247 166.16C363.717 166.16 364.375 164.802 364.375 163.388C364.375 161.904 363.731 160.532 362.247 160.532ZM373.981 164.732C373.729 166.272 372.567 167.252 370.845 167.252C368.633 167.252 367.513 165.642 367.513 163.402C367.513 160.952 368.843 159.44 370.873 159.44C373.141 159.44 374.135 161.134 374.135 163.682H368.731C368.773 165.124 369.473 166.174 370.887 166.174C371.839 166.174 372.483 165.712 372.805 164.732H373.981ZM370.859 160.518C369.543 160.518 368.857 161.498 368.759 162.73H372.875C372.875 161.512 372.119 160.518 370.859 160.518ZM376.531 167V159.664H377.609V160.882C378.183 159.986 378.883 159.454 380.045 159.454C381.319 159.454 382.369 160.098 382.369 161.456V167H381.207V161.918C381.207 160.938 380.507 160.476 379.695 160.476C378.379 160.476 377.693 161.61 377.693 162.87V167H376.531ZM390.785 161.666H389.567C389.539 160.938 388.979 160.476 388.097 160.476C387.145 160.476 386.501 160.896 386.501 161.554C386.501 162.072 386.865 162.38 387.551 162.562L389.217 162.996C390.449 163.318 391.079 163.92 391.079 164.956C391.079 166.384 389.959 167.252 388.139 167.252C386.221 167.252 385.213 166.412 385.129 164.774H386.361C386.473 165.768 387.075 166.216 388.167 166.216C389.203 166.216 389.889 165.824 389.889 165.138C389.889 164.508 389.581 164.242 388.783 164.032L387.243 163.626C385.913 163.276 385.311 162.73 385.311 161.61C385.311 160.28 386.403 159.44 388.125 159.44C389.833 159.44 390.757 160.28 390.785 161.666ZM399.944 164.732C399.692 166.272 398.53 167.252 396.808 167.252C394.596 167.252 393.476 165.642 393.476 163.402C393.476 160.952 394.806 159.44 396.836 159.44C399.104 159.44 400.098 161.134 400.098 163.682H394.694C394.736 165.124 395.436 166.174 396.85 166.174C397.802 166.174 398.446 165.712 398.768 164.732H399.944ZM396.822 160.518C395.506 160.518 394.82 161.498 394.722 162.73H398.838C398.838 161.512 398.082 160.518 396.822 160.518Z" fill="rgb(var(--colour-main))"></path><path d="M465.766 168.358V167.084C463.988 166.916 462.896 165.656 462.854 164.004H463.918C463.96 165.138 464.576 165.964 465.766 166.118V162.492L465.136 162.324C463.862 161.988 463.05 161.036 463.05 159.804C463.05 158.348 464.058 157.298 465.766 157.158V155.884H466.564V157.158C468.16 157.298 469.126 158.306 469.196 159.86H468.132C468.076 158.964 467.558 158.278 466.564 158.124V161.582L467.474 161.834C468.748 162.184 469.49 163.094 469.49 164.27C469.49 165.866 468.342 166.944 466.564 167.084V168.358H465.766ZM465.332 161.246L465.766 161.372V158.11C464.8 158.222 464.128 158.754 464.128 159.692C464.128 160.434 464.548 161.036 465.332 161.246ZM467.11 162.856L466.564 162.702V166.132C467.74 166.02 468.412 165.376 468.412 164.424C468.412 163.64 468.02 163.094 467.11 162.856Z" fill="rgb(var(--colour-main-500))"></path><rect x="138.5" y="144" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="156.5" cy="162" r="6" fill="#EC3425"></circle><path d="M154.6 158.505V165.495H158.86V164.675H155.53V158.505H154.6Z" fill="rgb(var(--colour-negative))"></path><path d="M170.236 157.214H171.538V165.852H176.2V167H170.236V157.214ZM180.906 158.614V157.214H182.306V158.614H180.906ZM182.18 159.664V166.048H184.434V167H178.512V166.048H181.032V160.616H178.512V159.664H182.18ZM193.775 166.23V167.112C193.481 167.196 193.257 167.238 193.075 167.238C192.263 167.238 191.857 166.888 191.773 166.132C190.947 166.944 190.219 167.252 189.281 167.252C187.853 167.252 186.887 166.454 186.887 165.096C186.887 163.584 188.035 163.038 188.889 162.898C189.141 162.856 189.687 162.772 190.513 162.66C191.451 162.534 191.759 162.352 191.759 161.876V161.624C191.759 160.896 191.185 160.532 190.079 160.532C189.001 160.532 188.469 160.938 188.371 161.834H187.195C187.223 160.14 188.399 159.454 190.135 159.454C191.941 159.454 192.893 160.154 192.893 161.456V165.684C192.893 166.062 193.103 166.258 193.523 166.258C193.593 166.258 193.705 166.244 193.775 166.23ZM191.759 164.452V163.29C191.269 163.514 190.471 163.64 189.855 163.71C188.763 163.836 188.077 164.144 188.077 165.068C188.077 165.796 188.637 166.23 189.575 166.23C190.597 166.23 191.759 165.474 191.759 164.452ZM195.681 167V156.794H196.843V160.644C197.375 159.846 198.131 159.44 199.111 159.44C201.267 159.44 202.247 161.134 202.247 163.262C202.247 165.516 201.141 167.252 199.055 167.252C198.047 167.252 197.277 166.832 196.731 165.992V167H195.681ZM198.901 160.532C197.417 160.532 196.843 161.974 196.843 163.388C196.843 164.774 197.417 166.16 198.901 166.16C200.371 166.16 201.043 164.816 201.043 163.388C201.043 161.862 200.357 160.532 198.901 160.532ZM206.869 158.614V157.214H208.269V158.614H206.869ZM208.143 159.664V166.048H210.397V167H204.475V166.048H206.995V160.616H204.475V159.664H208.143ZM217.077 156.794V166.048H219.331V167H213.409V166.048H215.943V157.746H213.409V156.794H217.077ZM224.178 158.614V157.214H225.578V158.614H224.178ZM225.452 159.664V166.048H227.706V167H221.784V166.048H224.304V160.616H221.784V159.664H225.452ZM233.462 159.664H236.346V160.616H233.462V164.704C233.462 165.782 234.036 166.146 235.1 166.146C235.576 166.146 235.996 166.104 236.346 166.006V167.028C235.884 167.168 235.422 167.196 235.03 167.196C233.252 167.196 232.3 166.51 232.3 164.914V160.616H230.186V159.664H232.3V157.648H233.462V159.664ZM241.486 158.614V157.214H242.886V158.614H241.486ZM242.76 159.664V166.048H245.014V167H239.092V166.048H241.612V160.616H239.092V159.664H242.76ZM253.907 164.732C253.655 166.272 252.493 167.252 250.771 167.252C248.559 167.252 247.439 165.642 247.439 163.402C247.439 160.952 248.769 159.44 250.799 159.44C253.067 159.44 254.061 161.134 254.061 163.682H248.657C248.699 165.124 249.399 166.174 250.813 166.174C251.765 166.174 252.409 165.712 252.731 164.732H253.907ZM250.785 160.518C249.469 160.518 248.783 161.498 248.685 162.73H252.801C252.801 161.512 252.045 160.518 250.785 160.518ZM262.057 161.666H260.839C260.811 160.938 260.251 160.476 259.369 160.476C258.417 160.476 257.773 160.896 257.773 161.554C257.773 162.072 258.137 162.38 258.823 162.562L260.489 162.996C261.721 163.318 262.351 163.92 262.351 164.956C262.351 166.384 261.231 167.252 259.411 167.252C257.493 167.252 256.485 166.412 256.401 164.774H257.633C257.745 165.768 258.347 166.216 259.439 166.216C260.475 166.216 261.161 165.824 261.161 165.138C261.161 164.508 260.853 164.242 260.055 164.032L258.515 163.626C257.185 163.276 256.583 162.73 256.583 161.61C256.583 160.28 257.675 159.44 259.397 159.44C261.105 159.44 262.029 160.28 262.057 161.666Z" fill="rgb(var(--colour-main))"></path><path d="M293.766 168.358V167.084C291.988 166.916 290.896 165.656 290.854 164.004H291.918C291.96 165.138 292.576 165.964 293.766 166.118V162.492L293.136 162.324C291.862 161.988 291.05 161.036 291.05 159.804C291.05 158.348 292.058 157.298 293.766 157.158V155.884H294.564V157.158C296.16 157.298 297.126 158.306 297.196 159.86H296.132C296.076 158.964 295.558 158.278 294.564 158.124V161.582L295.474 161.834C296.748 162.184 297.49 163.094 297.49 164.27C297.49 165.866 296.342 166.944 294.564 167.084V168.358H293.766ZM293.332 161.246L293.766 161.372V158.11C292.8 158.222 292.128 158.754 292.128 159.692C292.128 160.434 292.548 161.036 293.332 161.246ZM295.11 162.856L294.564 162.702V166.132C295.74 166.02 296.412 165.376 296.412 164.424C296.412 163.64 296.02 163.094 295.11 162.856Z" fill="rgb(var(--colour-main-500))"></path><rect x="138.5" y="180" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M158.228 196.042H156.968C156.926 194.922 156.268 194.096 154.91 194.096C153.566 194.096 152.852 194.768 152.852 195.65C152.852 196.462 153.272 196.924 154.182 197.134L156.184 197.596C157.71 197.946 158.508 198.954 158.508 200.214C158.508 202.16 157.094 203.252 155.036 203.252C152.6 203.252 151.298 201.964 151.27 199.878H152.53C152.544 201.18 153.412 202.09 155.064 202.09C156.534 202.09 157.192 201.39 157.192 200.396C157.192 199.528 156.716 199.038 155.75 198.814L153.72 198.338C152.306 198.002 151.536 197.12 151.536 195.776C151.536 194.138 152.852 192.99 154.952 192.99C156.996 192.99 158.228 194.236 158.228 195.86V196.042ZM163.536 195.664H166.42V196.616H163.536V200.704C163.536 201.782 164.11 202.146 165.174 202.146C165.65 202.146 166.07 202.104 166.42 202.006V203.028C165.958 203.168 165.496 203.196 165.104 203.196C163.326 203.196 162.374 202.51 162.374 200.914V196.616H160.26V195.664H162.374V193.648H163.536V195.664ZM175.775 202.23V203.112C175.481 203.196 175.257 203.238 175.075 203.238C174.263 203.238 173.857 202.888 173.773 202.132C172.947 202.944 172.219 203.252 171.281 203.252C169.853 203.252 168.887 202.454 168.887 201.096C168.887 199.584 170.035 199.038 170.889 198.898C171.141 198.856 171.687 198.772 172.513 198.66C173.451 198.534 173.759 198.352 173.759 197.876V197.624C173.759 196.896 173.185 196.532 172.079 196.532C171.001 196.532 170.469 196.938 170.371 197.834H169.195C169.223 196.14 170.399 195.454 172.135 195.454C173.941 195.454 174.893 196.154 174.893 197.456V201.684C174.893 202.062 175.103 202.258 175.523 202.258C175.593 202.258 175.705 202.244 175.775 202.23ZM173.759 200.452V199.29C173.269 199.514 172.471 199.64 171.855 199.71C170.763 199.836 170.077 200.144 170.077 201.068C170.077 201.796 170.637 202.23 171.575 202.23C172.597 202.23 173.759 201.474 173.759 200.452ZM180.845 195.664H183.729V196.616H180.845V200.704C180.845 201.782 181.419 202.146 182.483 202.146C182.959 202.146 183.379 202.104 183.729 202.006V203.028C183.267 203.168 182.805 203.196 182.413 203.196C180.635 203.196 179.683 202.51 179.683 200.914V196.616H177.569V195.664H179.683V193.648H180.845V195.664ZM192.635 200.732C192.383 202.272 191.221 203.252 189.499 203.252C187.287 203.252 186.167 201.642 186.167 199.402C186.167 196.952 187.497 195.44 189.527 195.44C191.795 195.44 192.789 197.134 192.789 199.682H187.385C187.427 201.124 188.127 202.174 189.541 202.174C190.493 202.174 191.137 201.712 191.459 200.732H192.635ZM189.513 196.518C188.197 196.518 187.511 197.498 187.413 198.73H191.529C191.529 197.512 190.773 196.518 189.513 196.518Z" fill="rgb(var(--colour-main))"></path><path d="M294.172 192.99C296.72 192.99 297.42 195.51 297.42 198.114C297.42 200.718 296.72 203.252 294.172 203.252C291.624 203.252 290.924 200.718 290.924 198.114C290.924 195.51 291.624 192.99 294.172 192.99ZM294.172 194.054C292.73 194.054 292.072 195.65 292.072 198.114C292.072 199.304 292.226 200.298 292.548 200.998L295.306 194.516C295.012 194.208 294.634 194.054 294.172 194.054ZM296.272 198.114C296.272 197.036 296.146 196.126 295.88 195.44L293.178 201.852C293.444 202.076 293.78 202.188 294.172 202.188C295.614 202.188 296.272 200.578 296.272 198.114Z" fill="rgb(var(--colour-main))"></path><rect x="310.5" y="180" width="172" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M330.55 195.944H329.22C328.94 194.88 328.422 194.138 327.176 194.138C325.314 194.138 324.614 195.776 324.614 198.128C324.614 200.774 325.51 202.104 327.176 202.104C328.478 202.104 329.038 201.264 329.318 199.682H330.648C330.382 202.048 329.08 203.252 327.162 203.252C324.614 203.252 323.256 201.278 323.256 198.142C323.256 195.328 324.32 192.99 327.218 192.99C329.164 192.99 330.256 194.264 330.55 195.944ZM332.568 203V192.794H333.73V196.756C334.248 195.986 334.92 195.454 336.082 195.454C337.356 195.454 338.406 196.098 338.406 197.456V203H337.244V197.918C337.244 196.938 336.544 196.476 335.732 196.476C334.416 196.476 333.73 197.61 333.73 198.87V203H332.568ZM347.775 202.23V203.112C347.481 203.196 347.257 203.238 347.075 203.238C346.263 203.238 345.857 202.888 345.773 202.132C344.947 202.944 344.219 203.252 343.281 203.252C341.853 203.252 340.887 202.454 340.887 201.096C340.887 199.584 342.035 199.038 342.889 198.898C343.141 198.856 343.687 198.772 344.513 198.66C345.451 198.534 345.759 198.352 345.759 197.876V197.624C345.759 196.896 345.185 196.532 344.079 196.532C343.001 196.532 342.469 196.938 342.371 197.834H341.195C341.223 196.14 342.399 195.454 344.135 195.454C345.941 195.454 346.893 196.154 346.893 197.456V201.684C346.893 202.062 347.103 202.258 347.523 202.258C347.593 202.258 347.705 202.244 347.775 202.23ZM345.759 200.452V199.29C345.269 199.514 344.471 199.64 343.855 199.71C342.763 199.836 342.077 200.144 342.077 201.068C342.077 201.796 342.637 202.23 343.575 202.23C344.597 202.23 345.759 201.474 345.759 200.452ZM349.877 203V195.664H350.955V196.882C351.529 195.986 352.229 195.454 353.391 195.454C354.665 195.454 355.715 196.098 355.715 197.456V203H354.553V197.918C354.553 196.938 353.853 196.476 353.041 196.476C351.725 196.476 351.039 197.61 351.039 198.87V203H349.877ZM361.261 206.052C359.665 206.052 358.461 205.394 358.265 203.84H359.483C359.651 204.666 360.225 205.072 361.289 205.072C362.759 205.072 363.361 204.344 363.361 202.384V201.964C362.927 202.818 362.143 203.252 361.177 203.252C359.007 203.252 357.985 201.558 357.985 199.304C357.985 197.148 359.049 195.44 361.135 195.44C362.129 195.44 362.885 195.818 363.389 196.574V195.664H364.551V201.81C364.551 202.832 364.467 203.602 364.299 204.134C363.893 205.408 362.843 206.052 361.261 206.052ZM361.345 202.16C362.815 202.16 363.389 200.746 363.389 199.388C363.389 197.918 362.801 196.532 361.331 196.532C359.959 196.532 359.203 197.764 359.203 199.346C359.203 200.844 359.847 202.16 361.345 202.16ZM373.289 200.732C373.037 202.272 371.875 203.252 370.153 203.252C367.941 203.252 366.821 201.642 366.821 199.402C366.821 196.952 368.151 195.44 370.181 195.44C372.449 195.44 373.443 197.134 373.443 199.682H368.039C368.081 201.124 368.781 202.174 370.195 202.174C371.147 202.174 371.791 201.712 372.113 200.732H373.289ZM370.167 196.518C368.851 196.518 368.165 197.498 368.067 198.73H372.183C372.183 197.512 371.427 196.518 370.167 196.518Z" fill="rgb(var(--colour-main))"></path><path d="M466.172 192.99C468.72 192.99 469.42 195.51 469.42 198.114C469.42 200.718 468.72 203.252 466.172 203.252C463.624 203.252 462.924 200.718 462.924 198.114C462.924 195.51 463.624 192.99 466.172 192.99ZM466.172 194.054C464.73 194.054 464.072 195.65 464.072 198.114C464.072 199.304 464.226 200.298 464.548 200.998L467.306 194.516C467.012 194.208 466.634 194.054 466.172 194.054ZM468.272 198.114C468.272 197.036 468.146 196.126 467.88 195.44L465.178 201.852C465.444 202.076 465.78 202.188 466.172 202.188C467.614 202.188 468.272 200.578 468.272 198.114Z" fill="rgb(var(--colour-main))"></path></svg></div><div class="block tablet:hidden"><svg width="100%" height="100%" viewBox="0 0 378 306" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="378" height="306" fill="rgb(var(--colour-negative))"></rect><path d="M24.874 32L24.006 29.074H20.632L19.764 32H18.42L21.514 22.214H23.152L26.232 32H24.874ZM20.954 27.982H23.684L22.312 23.39L20.954 27.982ZM34.1163 27.086H32.9403C32.8143 26.12 32.1703 25.518 31.1483 25.518C29.6363 25.518 29.0483 26.96 29.0483 28.416C29.0483 29.872 29.7063 31.174 31.1763 31.174C32.1983 31.174 32.8283 30.6 33.0243 29.438H34.2003C34.0463 31.202 32.9543 32.252 31.1483 32.252C29.0063 32.252 27.8303 30.572 27.8303 28.416C27.8303 26.218 28.9783 24.44 31.1623 24.44C32.9543 24.44 34.0743 25.532 34.1163 27.086ZM42.7706 27.086H41.5946C41.4686 26.12 40.8246 25.518 39.8026 25.518C38.2906 25.518 37.7026 26.96 37.7026 28.416C37.7026 29.872 38.3606 31.174 39.8306 31.174C40.8526 31.174 41.4826 30.6 41.6786 29.438H42.8546C42.7006 31.202 41.6086 32.252 39.8026 32.252C37.6606 32.252 36.4846 30.572 36.4846 28.416C36.4846 26.218 37.6326 24.44 39.8166 24.44C41.6086 24.44 42.7286 25.532 42.7706 27.086ZM48.2889 24.44C50.5429 24.44 51.6069 26.12 51.6069 28.346C51.6069 30.572 50.5429 32.252 48.2889 32.252C46.0349 32.252 44.9709 30.572 44.9709 28.346C44.9709 26.12 46.0349 24.44 48.2889 24.44ZM48.2889 25.518C46.8049 25.518 46.1889 26.848 46.1889 28.346C46.1889 29.844 46.8049 31.174 48.2889 31.174C49.7729 31.174 50.3889 29.844 50.3889 28.346C50.3889 26.848 49.7729 25.518 48.2889 25.518ZM59.8692 24.664V32H58.8192V30.908C58.1472 31.874 57.4472 32.252 56.3692 32.252C55.7392 32.252 55.2072 32.112 54.7872 31.818C54.2832 31.454 54.0312 30.936 54.0312 30.25V24.664H55.1932V29.788C55.1932 30.278 55.3612 30.656 55.6832 30.908C55.9492 31.118 56.2992 31.23 56.7052 31.23C57.2512 31.23 57.7132 31.034 58.0912 30.628C58.4972 30.194 58.7072 29.564 58.7072 28.738V24.664H59.8692ZM62.6855 32V24.664H63.7635V25.882C64.3375 24.986 65.0375 24.454 66.1995 24.454C67.4735 24.454 68.5235 25.098 68.5235 26.456V32H67.3615V26.918C67.3615 25.938 66.6615 25.476 65.8495 25.476C64.5335 25.476 63.8475 26.61 63.8475 27.87V32H62.6855ZM74.3078 24.664H77.1918V25.616H74.3078V29.704C74.3078 30.782 74.8818 31.146 75.9458 31.146C76.4218 31.146 76.8418 31.104 77.1918 31.006V32.028C76.7298 32.168 76.2678 32.196 75.8758 32.196C74.0978 32.196 73.1458 31.51 73.1458 29.914V25.616H71.0318V24.664H73.1458V22.648H74.3078V24.664ZM82.3321 23.614V22.214H83.7321V23.614H82.3321ZM83.6061 24.664V31.048H85.8601V32H79.9381V31.048H82.4581V25.616H79.9381V24.664H83.6061ZM88.6484 32V24.664H89.7264V25.882C90.3004 24.986 91.0004 24.454 92.1624 24.454C93.4364 24.454 94.4864 25.098 94.4864 26.456V32H93.3244V26.918C93.3244 25.938 92.6244 25.476 91.8124 25.476C90.4964 25.476 89.8104 26.61 89.8104 27.87V32H88.6484ZM100.033 35.052C98.4367 35.052 97.2327 34.394 97.0367 32.84H98.2547C98.4227 33.666 98.9967 34.072 100.061 34.072C101.531 34.072 102.133 33.344 102.133 31.384V30.964C101.699 31.818 100.915 32.252 99.9487 32.252C97.7787 32.252 96.7567 30.558 96.7567 28.304C96.7567 26.148 97.8207 24.44 99.9067 24.44C100.901 24.44 101.657 24.818 102.161 25.574V24.664H103.323V30.81C103.323 31.832 103.239 32.602 103.071 33.134C102.665 34.408 101.615 35.052 100.033 35.052ZM100.117 31.16C101.587 31.16 102.161 29.746 102.161 28.388C102.161 26.918 101.573 25.532 100.103 25.532C98.7307 25.532 97.9747 26.764 97.9747 28.346C97.9747 29.844 98.6187 31.16 100.117 31.16ZM120.281 27.562H116.081V30.852H120.743V32H114.779V22.214H120.491V23.362H116.081V26.414H120.281V27.562ZM129.286 24.664V35.052H128.124V31.076C127.578 31.916 126.864 32.252 125.856 32.252C123.882 32.252 122.72 30.74 122.72 28.43C122.72 26.204 123.798 24.44 125.912 24.44C126.878 24.44 127.704 24.86 128.25 25.63V24.664H129.286ZM126.08 25.532C124.694 25.532 123.938 26.764 123.938 28.346C123.938 29.844 124.61 31.16 126.08 31.16C127.55 31.16 128.124 29.746 128.124 28.388C128.124 26.932 127.536 25.532 126.08 25.532ZM137.758 24.664V32H136.708V30.908C136.036 31.874 135.336 32.252 134.258 32.252C133.628 32.252 133.096 32.112 132.676 31.818C132.172 31.454 131.92 30.936 131.92 30.25V24.664H133.082V29.788C133.082 30.278 133.25 30.656 133.572 30.908C133.838 31.118 134.188 31.23 134.594 31.23C135.14 31.23 135.602 31.034 135.98 30.628C136.386 30.194 136.596 29.564 136.596 28.738V24.664H137.758ZM147.126 31.23V32.112C146.832 32.196 146.608 32.238 146.426 32.238C145.614 32.238 145.208 31.888 145.124 31.132C144.298 31.944 143.57 32.252 142.632 32.252C141.204 32.252 140.238 31.454 140.238 30.096C140.238 28.584 141.386 28.038 142.24 27.898C142.492 27.856 143.038 27.772 143.864 27.66C144.802 27.534 145.11 27.352 145.11 26.876V26.624C145.11 25.896 144.536 25.532 143.43 25.532C142.352 25.532 141.82 25.938 141.722 26.834H140.546C140.574 25.14 141.75 24.454 143.486 24.454C145.292 24.454 146.244 25.154 146.244 26.456V30.684C146.244 31.062 146.454 31.258 146.874 31.258C146.944 31.258 147.056 31.244 147.126 31.23ZM145.11 29.452V28.29C144.62 28.514 143.822 28.64 143.206 28.71C142.114 28.836 141.428 29.144 141.428 30.068C141.428 30.796 141.988 31.23 142.926 31.23C143.948 31.23 145.11 30.474 145.11 29.452ZM152.196 24.664H155.08V25.616H152.196V29.704C152.196 30.782 152.77 31.146 153.834 31.146C154.31 31.146 154.73 31.104 155.08 31.006V32.028C154.618 32.168 154.156 32.196 153.764 32.196C151.986 32.196 151.034 31.51 151.034 29.914V25.616H148.92V24.664H151.034V22.648H152.196V24.664ZM160.221 23.614V22.214H161.621V23.614H160.221ZM161.495 24.664V31.048H163.749V32H157.827V31.048H160.347V25.616H157.827V24.664H161.495ZM169.449 24.44C171.703 24.44 172.767 26.12 172.767 28.346C172.767 30.572 171.703 32.252 169.449 32.252C167.195 32.252 166.131 30.572 166.131 28.346C166.131 26.12 167.195 24.44 169.449 24.44ZM169.449 25.518C167.965 25.518 167.349 26.848 167.349 28.346C167.349 29.844 167.965 31.174 169.449 31.174C170.933 31.174 171.549 29.844 171.549 28.346C171.549 26.848 170.933 25.518 169.449 25.518ZM175.191 32V24.664H176.269V25.882C176.843 24.986 177.543 24.454 178.705 24.454C179.979 24.454 181.029 25.098 181.029 26.456V32H179.867V26.918C179.867 25.938 179.167 25.476 178.355 25.476C177.039 25.476 176.353 26.61 176.353 27.87V32H175.191Z" fill="rgb(var(--colour-main))"></path><rect x="18" y="108" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="36" cy="126" r="6" fill="#5AC93B"></circle><path d="M37.82 129.495H38.79L36.59 122.505H35.42L33.21 129.495H34.17L34.79 127.405H37.2L37.82 129.495ZM35.02 126.625L35.99 123.345L36.97 126.625H35.02Z" fill="rgb(var(--colour-negative))"></path><path d="M54.874 131L54.006 128.074H50.632L49.764 131H48.42L51.514 121.214H53.152L56.232 131H54.874ZM50.954 126.982H53.684L52.312 122.39L50.954 126.982ZM63.6683 125.666H62.4503C62.4223 124.938 61.8623 124.476 60.9803 124.476C60.0283 124.476 59.3843 124.896 59.3843 125.554C59.3843 126.072 59.7483 126.38 60.4343 126.562L62.1003 126.996C63.3323 127.318 63.9623 127.92 63.9623 128.956C63.9623 130.384 62.8423 131.252 61.0223 131.252C59.1043 131.252 58.0963 130.412 58.0123 128.774H59.2443C59.3563 129.768 59.9583 130.216 61.0503 130.216C62.0863 130.216 62.7723 129.824 62.7723 129.138C62.7723 128.508 62.4643 128.242 61.6663 128.032L60.1263 127.626C58.7963 127.276 58.1943 126.73 58.1943 125.61C58.1943 124.28 59.2863 123.44 61.0083 123.44C62.7163 123.44 63.6403 124.28 63.6683 125.666ZM72.3226 125.666H71.1046C71.0766 124.938 70.5166 124.476 69.6346 124.476C68.6826 124.476 68.0386 124.896 68.0386 125.554C68.0386 126.072 68.4026 126.38 69.0886 126.562L70.7546 126.996C71.9866 127.318 72.6166 127.92 72.6166 128.956C72.6166 130.384 71.4966 131.252 69.6766 131.252C67.7586 131.252 66.7506 130.412 66.6666 128.774H67.8986C68.0106 129.768 68.6126 130.216 69.7046 130.216C70.7406 130.216 71.4266 129.824 71.4266 129.138C71.4266 128.508 71.1186 128.242 70.3206 128.032L68.7806 127.626C67.4506 127.276 66.8486 126.73 66.8486 125.61C66.8486 124.28 67.9406 123.44 69.6626 123.44C71.3706 123.44 72.2946 124.28 72.3226 125.666ZM81.4809 128.732C81.2289 130.272 80.0669 131.252 78.3449 131.252C76.1329 131.252 75.0129 129.642 75.0129 127.402C75.0129 124.952 76.3429 123.44 78.3729 123.44C80.6409 123.44 81.6349 125.134 81.6349 127.682H76.2309C76.2729 129.124 76.9729 130.174 78.3869 130.174C79.3389 130.174 79.9829 129.712 80.3049 128.732H81.4809ZM78.3589 124.518C77.0429 124.518 76.3569 125.498 76.2589 126.73H80.3749C80.3749 125.512 79.6189 124.518 78.3589 124.518ZM86.9992 123.664H89.8832V124.616H86.9992V128.704C86.9992 129.782 87.5732 130.146 88.6372 130.146C89.1132 130.146 89.5332 130.104 89.8832 130.006V131.028C89.4212 131.168 88.9592 131.196 88.5672 131.196C86.7892 131.196 85.8372 130.51 85.8372 128.914V124.616H83.7232V123.664H85.8372V121.648H86.9992V123.664ZM98.2855 125.666H97.0675C97.0395 124.938 96.4795 124.476 95.5975 124.476C94.6455 124.476 94.0015 124.896 94.0015 125.554C94.0015 126.072 94.3655 126.38 95.0515 126.562L96.7175 126.996C97.9495 127.318 98.5795 127.92 98.5795 128.956C98.5795 130.384 97.4595 131.252 95.6395 131.252C93.7215 131.252 92.7135 130.412 92.6295 128.774H93.8615C93.9735 129.768 94.5755 130.216 95.6675 130.216C96.7035 130.216 97.3895 129.824 97.3895 129.138C97.3895 128.508 97.0815 128.242 96.2835 128.032L94.7435 127.626C93.4135 127.276 92.8115 126.73 92.8115 125.61C92.8115 124.28 93.9035 123.44 95.6255 123.44C97.3335 123.44 98.2575 124.28 98.2855 125.666Z" fill="rgb(var(--colour-main))"></path><path d="M172.266 132.358V131.084C170.488 130.916 169.396 129.656 169.354 128.004H170.418C170.46 129.138 171.076 129.964 172.266 130.118V126.492L171.636 126.324C170.362 125.988 169.55 125.036 169.55 123.804C169.55 122.348 170.558 121.298 172.266 121.158V119.884H173.064V121.158C174.66 121.298 175.626 122.306 175.696 123.86H174.632C174.576 122.964 174.058 122.278 173.064 122.124V125.582L173.974 125.834C175.248 126.184 175.99 127.094 175.99 128.27C175.99 129.866 174.842 130.944 173.064 131.084V132.358H172.266ZM171.832 125.246L172.266 125.372V122.11C171.3 122.222 170.628 122.754 170.628 123.692C170.628 124.434 171.048 125.036 171.832 125.246ZM173.61 126.856L173.064 126.702V130.132C174.24 130.02 174.912 129.376 174.912 128.424C174.912 127.64 174.52 127.094 173.61 126.856Z" fill="rgb(var(--colour-main-500))"></path><rect x="189" y="108" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="207" cy="126" r="6" fill="rgb(var(--colour-income-blue))"></circle><path d="M205.045 129.495H208.955V128.715H207.465V123.285H208.955V122.505H205.045V123.285H206.525V128.715H205.045V129.495Z" fill="rgb(var(--colour-main))"></path><path d="M220.596 131V129.908H222.668V122.306H220.596V121.214H226.07V122.306H223.984V129.908H226.07V131H220.596ZM229.068 131V123.664H230.146V124.882C230.72 123.986 231.42 123.454 232.582 123.454C233.856 123.454 234.906 124.098 234.906 125.456V131H233.744V125.918C233.744 124.938 233.044 124.476 232.232 124.476C230.916 124.476 230.23 125.61 230.23 126.87V131H229.068ZM243.771 126.086H242.595C242.469 125.12 241.825 124.518 240.803 124.518C239.291 124.518 238.703 125.96 238.703 127.416C238.703 128.872 239.361 130.174 240.831 130.174C241.853 130.174 242.483 129.6 242.679 128.438H243.855C243.701 130.202 242.609 131.252 240.803 131.252C238.661 131.252 237.485 129.572 237.485 127.416C237.485 125.218 238.633 123.44 240.817 123.44C242.609 123.44 243.729 124.532 243.771 126.086ZM249.289 123.44C251.543 123.44 252.607 125.12 252.607 127.346C252.607 129.572 251.543 131.252 249.289 131.252C247.035 131.252 245.971 129.572 245.971 127.346C245.971 125.12 247.035 123.44 249.289 123.44ZM249.289 124.518C247.805 124.518 247.189 125.848 247.189 127.346C247.189 128.844 247.805 130.174 249.289 130.174C250.773 130.174 251.389 128.844 251.389 127.346C251.389 125.848 250.773 124.518 249.289 124.518ZM254.163 131V123.664H255.255V124.42C255.563 123.958 256.151 123.496 256.935 123.496C257.649 123.496 258.223 123.874 258.433 124.476C258.727 123.986 259.315 123.496 260.141 123.496C261.051 123.496 261.723 124.098 261.723 125.022V131H260.575V125.26C260.575 124.742 260.239 124.476 259.763 124.476C258.979 124.476 258.517 124.938 258.517 125.708V131H257.369V125.26C257.369 124.742 257.033 124.476 256.557 124.476C255.773 124.476 255.311 124.938 255.311 125.708V131H254.163ZM269.789 128.732C269.537 130.272 268.375 131.252 266.653 131.252C264.441 131.252 263.321 129.642 263.321 127.402C263.321 124.952 264.651 123.44 266.681 123.44C268.949 123.44 269.943 125.134 269.943 127.682H264.539C264.581 129.124 265.281 130.174 266.695 130.174C267.647 130.174 268.291 129.712 268.613 128.732H269.789ZM266.667 124.518C265.351 124.518 264.665 125.498 264.567 126.73H268.683C268.683 125.512 267.927 124.518 266.667 124.518Z" fill="rgb(var(--colour-main))"></path><path d="M343.266 132.358V131.084C341.488 130.916 340.396 129.656 340.354 128.004H341.418C341.46 129.138 342.076 129.964 343.266 130.118V126.492L342.636 126.324C341.362 125.988 340.55 125.036 340.55 123.804C340.55 122.348 341.558 121.298 343.266 121.158V119.884H344.064V121.158C345.66 121.298 346.626 122.306 346.696 123.86H345.632C345.576 122.964 345.058 122.278 344.064 122.124V125.582L344.974 125.834C346.248 126.184 346.99 127.094 346.99 128.27C346.99 129.866 345.842 130.944 344.064 131.084V132.358H343.266ZM342.832 125.246L343.266 125.372V122.11C342.3 122.222 341.628 122.754 341.628 123.692C341.628 124.434 342.048 125.036 342.832 125.246ZM344.61 126.856L344.064 126.702V130.132C345.24 130.02 345.912 129.376 345.912 128.424C345.912 127.64 345.52 127.094 344.61 126.856Z" fill="rgb(var(--colour-main-500))"></path><rect x="189" y="144" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="207" cy="162" r="6" fill="#FFE000"></circle><path d="M208.8 162.325V161.505H205.8V159.325H208.95V158.505H204.87V165.495H209.13V164.675H205.8V162.325H208.8Z" fill="rgb(var(--colour-main))"></path><path d="M226.084 162.562H221.884V165.852H226.546V167H220.582V157.214H226.294V158.362H221.884V161.414H226.084V162.562ZM235.102 159.664L232.638 163.206L235.172 167H233.786L231.98 164.214L230.146 167H228.788L231.378 163.262L228.928 159.664H230.3L232.022 162.296L233.772 159.664H235.102ZM238.703 170.052H237.527V159.664H238.605V160.756C239.151 159.874 239.921 159.44 240.943 159.44C243.127 159.44 244.093 161.302 244.093 163.416C244.093 165.516 243.057 167.252 240.957 167.252C240.005 167.252 239.319 166.93 238.703 166.16V170.052ZM240.747 160.532C239.291 160.532 238.703 161.918 238.703 163.346C238.703 164.774 239.291 166.16 240.747 166.16C242.217 166.16 242.875 164.802 242.875 163.388C242.875 161.904 242.231 160.532 240.747 160.532ZM252.481 164.732C252.229 166.272 251.067 167.252 249.345 167.252C247.133 167.252 246.013 165.642 246.013 163.402C246.013 160.952 247.343 159.44 249.373 159.44C251.641 159.44 252.635 161.134 252.635 163.682H247.231C247.273 165.124 247.973 166.174 249.387 166.174C250.339 166.174 250.983 165.712 251.305 164.732H252.481ZM249.359 160.518C248.043 160.518 247.357 161.498 247.259 162.73H251.375C251.375 161.512 250.619 160.518 249.359 160.518ZM255.031 167V159.664H256.109V160.882C256.683 159.986 257.383 159.454 258.545 159.454C259.819 159.454 260.869 160.098 260.869 161.456V167H259.707V161.918C259.707 160.938 259.007 160.476 258.195 160.476C256.879 160.476 256.193 161.61 256.193 162.87V167H255.031ZM269.285 161.666H268.067C268.039 160.938 267.479 160.476 266.597 160.476C265.645 160.476 265.001 160.896 265.001 161.554C265.001 162.072 265.365 162.38 266.051 162.562L267.717 162.996C268.949 163.318 269.579 163.92 269.579 164.956C269.579 166.384 268.459 167.252 266.639 167.252C264.721 167.252 263.713 166.412 263.629 164.774H264.861C264.973 165.768 265.575 166.216 266.667 166.216C267.703 166.216 268.389 165.824 268.389 165.138C268.389 164.508 268.081 164.242 267.283 164.032L265.743 163.626C264.413 163.276 263.811 162.73 263.811 161.61C263.811 160.28 264.903 159.44 266.625 159.44C268.333 159.44 269.257 160.28 269.285 161.666ZM278.444 164.732C278.192 166.272 277.03 167.252 275.308 167.252C273.096 167.252 271.976 165.642 271.976 163.402C271.976 160.952 273.306 159.44 275.336 159.44C277.604 159.44 278.598 161.134 278.598 163.682H273.194C273.236 165.124 273.936 166.174 275.35 166.174C276.302 166.174 276.946 165.712 277.268 164.732H278.444ZM275.322 160.518C274.006 160.518 273.32 161.498 273.222 162.73H277.338C277.338 161.512 276.582 160.518 275.322 160.518Z" fill="rgb(var(--colour-main))"></path><path d="M343.266 168.358V167.084C341.488 166.916 340.396 165.656 340.354 164.004H341.418C341.46 165.138 342.076 165.964 343.266 166.118V162.492L342.636 162.324C341.362 161.988 340.55 161.036 340.55 159.804C340.55 158.348 341.558 157.298 343.266 157.158V155.884H344.064V157.158C345.66 157.298 346.626 158.306 346.696 159.86H345.632C345.576 158.964 345.058 158.278 344.064 158.124V161.582L344.974 161.834C346.248 162.184 346.99 163.094 346.99 164.27C346.99 165.866 345.842 166.944 344.064 167.084V168.358H343.266ZM342.832 161.246L343.266 161.372V158.11C342.3 158.222 341.628 158.754 341.628 159.692C341.628 160.434 342.048 161.036 342.832 161.246ZM344.61 162.856L344.064 162.702V166.132C345.24 166.02 345.912 165.376 345.912 164.424C345.912 163.64 345.52 163.094 344.61 162.856Z" fill="rgb(var(--colour-main-500))"></path><rect x="18" y="144" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="36" cy="162" r="6" fill="#EC3425"></circle><path d="M34.1 158.505V165.495H38.36V164.675H35.03V158.505H34.1Z" fill="rgb(var(--colour-negative))"></path><path d="M49.736 157.214H51.038V165.852H55.7V167H49.736V157.214ZM60.4063 158.614V157.214H61.8063V158.614H60.4063ZM61.6803 159.664V166.048H63.9343V167H58.0123V166.048H60.5323V160.616H58.0123V159.664H61.6803ZM73.2746 166.23V167.112C72.9806 167.196 72.7566 167.238 72.5746 167.238C71.7626 167.238 71.3566 166.888 71.2726 166.132C70.4466 166.944 69.7186 167.252 68.7806 167.252C67.3526 167.252 66.3866 166.454 66.3866 165.096C66.3866 163.584 67.5346 163.038 68.3886 162.898C68.6406 162.856 69.1866 162.772 70.0126 162.66C70.9506 162.534 71.2586 162.352 71.2586 161.876V161.624C71.2586 160.896 70.6846 160.532 69.5786 160.532C68.5006 160.532 67.9686 160.938 67.8706 161.834H66.6946C66.7226 160.14 67.8986 159.454 69.6346 159.454C71.4406 159.454 72.3926 160.154 72.3926 161.456V165.684C72.3926 166.062 72.6026 166.258 73.0226 166.258C73.0926 166.258 73.2046 166.244 73.2746 166.23ZM71.2586 164.452V163.29C70.7686 163.514 69.9706 163.64 69.3546 163.71C68.2626 163.836 67.5766 164.144 67.5766 165.068C67.5766 165.796 68.1366 166.23 69.0746 166.23C70.0966 166.23 71.2586 165.474 71.2586 164.452ZM75.1809 167V156.794H76.3429V160.644C76.8749 159.846 77.6309 159.44 78.6109 159.44C80.7669 159.44 81.7469 161.134 81.7469 163.262C81.7469 165.516 80.6409 167.252 78.5549 167.252C77.5469 167.252 76.7769 166.832 76.2309 165.992V167H75.1809ZM78.4009 160.532C76.9169 160.532 76.3429 161.974 76.3429 163.388C76.3429 164.774 76.9169 166.16 78.4009 166.16C79.8709 166.16 80.5429 164.816 80.5429 163.388C80.5429 161.862 79.8569 160.532 78.4009 160.532ZM86.3692 158.614V157.214H87.7692V158.614H86.3692ZM87.6432 159.664V166.048H89.8972V167H83.9752V166.048H86.4952V160.616H83.9752V159.664H87.6432ZM96.5775 156.794V166.048H98.8315V167H92.9095V166.048H95.4435V157.746H92.9095V156.794H96.5775ZM103.678 158.614V157.214H105.078V158.614H103.678ZM104.952 159.664V166.048H107.206V167H101.284V166.048H103.804V160.616H101.284V159.664H104.952ZM112.962 159.664H115.846V160.616H112.962V164.704C112.962 165.782 113.536 166.146 114.6 166.146C115.076 166.146 115.496 166.104 115.846 166.006V167.028C115.384 167.168 114.922 167.196 114.53 167.196C112.752 167.196 111.8 166.51 111.8 164.914V160.616H109.686V159.664H111.8V157.648H112.962V159.664ZM120.986 158.614V157.214H122.386V158.614H120.986ZM122.26 159.664V166.048H124.514V167H118.592V166.048H121.112V160.616H118.592V159.664H122.26ZM133.407 164.732C133.155 166.272 131.993 167.252 130.271 167.252C128.059 167.252 126.939 165.642 126.939 163.402C126.939 160.952 128.269 159.44 130.299 159.44C132.567 159.44 133.561 161.134 133.561 163.682H128.157C128.199 165.124 128.899 166.174 130.313 166.174C131.265 166.174 131.909 165.712 132.231 164.732H133.407ZM130.285 160.518C128.969 160.518 128.283 161.498 128.185 162.73H132.301C132.301 161.512 131.545 160.518 130.285 160.518ZM141.557 161.666H140.339C140.311 160.938 139.751 160.476 138.869 160.476C137.917 160.476 137.273 160.896 137.273 161.554C137.273 162.072 137.637 162.38 138.323 162.562L139.989 162.996C141.221 163.318 141.851 163.92 141.851 164.956C141.851 166.384 140.731 167.252 138.911 167.252C136.993 167.252 135.985 166.412 135.901 164.774H137.133C137.245 165.768 137.847 166.216 138.939 166.216C139.975 166.216 140.661 165.824 140.661 165.138C140.661 164.508 140.353 164.242 139.555 164.032L138.015 163.626C136.685 163.276 136.083 162.73 136.083 161.61C136.083 160.28 137.175 159.44 138.897 159.44C140.605 159.44 141.529 160.28 141.557 161.666Z" fill="rgb(var(--colour-main))"></path><path d="M172.266 168.358V167.084C170.488 166.916 169.396 165.656 169.354 164.004H170.418C170.46 165.138 171.076 165.964 172.266 166.118V162.492L171.636 162.324C170.362 161.988 169.55 161.036 169.55 159.804C169.55 158.348 170.558 157.298 172.266 157.158V155.884H173.064V157.158C174.66 157.298 175.626 158.306 175.696 159.86H174.632C174.576 158.964 174.058 158.278 173.064 158.124V161.582L173.974 161.834C175.248 162.184 175.99 163.094 175.99 164.27C175.99 165.866 174.842 166.944 173.064 167.084V168.358H172.266ZM171.832 161.246L172.266 161.372V158.11C171.3 158.222 170.628 158.754 170.628 159.692C170.628 160.434 171.048 161.036 171.832 161.246ZM173.61 162.856L173.064 162.702V166.132C174.24 166.02 174.912 165.376 174.912 164.424C174.912 163.64 174.52 163.094 173.61 162.856Z" fill="rgb(var(--colour-main-500))"></path><rect x="18" y="180" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M37.728 196.042H36.468C36.426 194.922 35.768 194.096 34.41 194.096C33.066 194.096 32.352 194.768 32.352 195.65C32.352 196.462 32.772 196.924 33.682 197.134L35.684 197.596C37.21 197.946 38.008 198.954 38.008 200.214C38.008 202.16 36.594 203.252 34.536 203.252C32.1 203.252 30.798 201.964 30.77 199.878H32.03C32.044 201.18 32.912 202.09 34.564 202.09C36.034 202.09 36.692 201.39 36.692 200.396C36.692 199.528 36.216 199.038 35.25 198.814L33.22 198.338C31.806 198.002 31.036 197.12 31.036 195.776C31.036 194.138 32.352 192.99 34.452 192.99C36.496 192.99 37.728 194.236 37.728 195.86V196.042ZM43.0363 195.664H45.9203V196.616H43.0363V200.704C43.0363 201.782 43.6103 202.146 44.6743 202.146C45.1503 202.146 45.5703 202.104 45.9203 202.006V203.028C45.4583 203.168 44.9963 203.196 44.6043 203.196C42.8263 203.196 41.8743 202.51 41.8743 200.914V196.616H39.7603V195.664H41.8743V193.648H43.0363V195.664ZM55.2746 202.23V203.112C54.9806 203.196 54.7566 203.238 54.5746 203.238C53.7626 203.238 53.3566 202.888 53.2726 202.132C52.4466 202.944 51.7186 203.252 50.7806 203.252C49.3526 203.252 48.3866 202.454 48.3866 201.096C48.3866 199.584 49.5346 199.038 50.3886 198.898C50.6406 198.856 51.1866 198.772 52.0126 198.66C52.9506 198.534 53.2586 198.352 53.2586 197.876V197.624C53.2586 196.896 52.6846 196.532 51.5786 196.532C50.5006 196.532 49.9686 196.938 49.8706 197.834H48.6946C48.7226 196.14 49.8986 195.454 51.6346 195.454C53.4406 195.454 54.3926 196.154 54.3926 197.456V201.684C54.3926 202.062 54.6026 202.258 55.0226 202.258C55.0926 202.258 55.2046 202.244 55.2746 202.23ZM53.2586 200.452V199.29C52.7686 199.514 51.9706 199.64 51.3546 199.71C50.2626 199.836 49.5766 200.144 49.5766 201.068C49.5766 201.796 50.1366 202.23 51.0746 202.23C52.0966 202.23 53.2586 201.474 53.2586 200.452ZM60.3449 195.664H63.2289V196.616H60.3449V200.704C60.3449 201.782 60.9189 202.146 61.9829 202.146C62.4589 202.146 62.8789 202.104 63.2289 202.006V203.028C62.7669 203.168 62.3049 203.196 61.9129 203.196C60.1349 203.196 59.1829 202.51 59.1829 200.914V196.616H57.0689V195.664H59.1829V193.648H60.3449V195.664ZM72.1352 200.732C71.8832 202.272 70.7212 203.252 68.9992 203.252C66.7872 203.252 65.6672 201.642 65.6672 199.402C65.6672 196.952 66.9972 195.44 69.0272 195.44C71.2952 195.44 72.2892 197.134 72.2892 199.682H66.8852C66.9272 201.124 67.6272 202.174 69.0412 202.174C69.9932 202.174 70.6372 201.712 70.9592 200.732H72.1352ZM69.0132 196.518C67.6972 196.518 67.0112 197.498 66.9132 198.73H71.0292C71.0292 197.512 70.2732 196.518 69.0132 196.518Z" fill="rgb(var(--colour-main))"></path><path d="M172.672 192.99C175.22 192.99 175.92 195.51 175.92 198.114C175.92 200.718 175.22 203.252 172.672 203.252C170.124 203.252 169.424 200.718 169.424 198.114C169.424 195.51 170.124 192.99 172.672 192.99ZM172.672 194.054C171.23 194.054 170.572 195.65 170.572 198.114C170.572 199.304 170.726 200.298 171.048 200.998L173.806 194.516C173.512 194.208 173.134 194.054 172.672 194.054ZM174.772 198.114C174.772 197.036 174.646 196.126 174.38 195.44L171.678 201.852C171.944 202.076 172.28 202.188 172.672 202.188C174.114 202.188 174.772 200.578 174.772 198.114Z" fill="rgb(var(--colour-main))"></path><rect x="189" y="180" width="171" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M209.05 195.944H207.72C207.44 194.88 206.922 194.138 205.676 194.138C203.814 194.138 203.114 195.776 203.114 198.128C203.114 200.774 204.01 202.104 205.676 202.104C206.978 202.104 207.538 201.264 207.818 199.682H209.148C208.882 202.048 207.58 203.252 205.662 203.252C203.114 203.252 201.756 201.278 201.756 198.142C201.756 195.328 202.82 192.99 205.718 192.99C207.664 192.99 208.756 194.264 209.05 195.944ZM211.068 203V192.794H212.23V196.756C212.748 195.986 213.42 195.454 214.582 195.454C215.856 195.454 216.906 196.098 216.906 197.456V203H215.744V197.918C215.744 196.938 215.044 196.476 214.232 196.476C212.916 196.476 212.23 197.61 212.23 198.87V203H211.068ZM226.275 202.23V203.112C225.981 203.196 225.757 203.238 225.575 203.238C224.763 203.238 224.357 202.888 224.273 202.132C223.447 202.944 222.719 203.252 221.781 203.252C220.353 203.252 219.387 202.454 219.387 201.096C219.387 199.584 220.535 199.038 221.389 198.898C221.641 198.856 222.187 198.772 223.013 198.66C223.951 198.534 224.259 198.352 224.259 197.876V197.624C224.259 196.896 223.685 196.532 222.579 196.532C221.501 196.532 220.969 196.938 220.871 197.834H219.695C219.723 196.14 220.899 195.454 222.635 195.454C224.441 195.454 225.393 196.154 225.393 197.456V201.684C225.393 202.062 225.603 202.258 226.023 202.258C226.093 202.258 226.205 202.244 226.275 202.23ZM224.259 200.452V199.29C223.769 199.514 222.971 199.64 222.355 199.71C221.263 199.836 220.577 200.144 220.577 201.068C220.577 201.796 221.137 202.23 222.075 202.23C223.097 202.23 224.259 201.474 224.259 200.452ZM228.377 203V195.664H229.455V196.882C230.029 195.986 230.729 195.454 231.891 195.454C233.165 195.454 234.215 196.098 234.215 197.456V203H233.053V197.918C233.053 196.938 232.353 196.476 231.541 196.476C230.225 196.476 229.539 197.61 229.539 198.87V203H228.377ZM239.761 206.052C238.165 206.052 236.961 205.394 236.765 203.84H237.983C238.151 204.666 238.725 205.072 239.789 205.072C241.259 205.072 241.861 204.344 241.861 202.384V201.964C241.427 202.818 240.643 203.252 239.677 203.252C237.507 203.252 236.485 201.558 236.485 199.304C236.485 197.148 237.549 195.44 239.635 195.44C240.629 195.44 241.385 195.818 241.889 196.574V195.664H243.051V201.81C243.051 202.832 242.967 203.602 242.799 204.134C242.393 205.408 241.343 206.052 239.761 206.052ZM239.845 202.16C241.315 202.16 241.889 200.746 241.889 199.388C241.889 197.918 241.301 196.532 239.831 196.532C238.459 196.532 237.703 197.764 237.703 199.346C237.703 200.844 238.347 202.16 239.845 202.16ZM251.789 200.732C251.537 202.272 250.375 203.252 248.653 203.252C246.441 203.252 245.321 201.642 245.321 199.402C245.321 196.952 246.651 195.44 248.681 195.44C250.949 195.44 251.943 197.134 251.943 199.682H246.539C246.581 201.124 247.281 202.174 248.695 202.174C249.647 202.174 250.291 201.712 250.613 200.732H251.789ZM248.667 196.518C247.351 196.518 246.665 197.498 246.567 198.73H250.683C250.683 197.512 249.927 196.518 248.667 196.518Z" fill="rgb(var(--colour-main))"></path><path d="M343.672 192.99C346.22 192.99 346.92 195.51 346.92 198.114C346.92 200.718 346.22 203.252 343.672 203.252C341.124 203.252 340.424 200.718 340.424 198.114C340.424 195.51 341.124 192.99 343.672 192.99ZM343.672 194.054C342.23 194.054 341.572 195.65 341.572 198.114C341.572 199.304 341.726 200.298 342.048 200.998L344.806 194.516C344.512 194.208 344.134 194.054 343.672 194.054ZM345.772 198.114C345.772 197.036 345.646 196.126 345.38 195.44L342.678 201.852C342.944 202.076 343.28 202.188 343.672 202.188C345.114 202.188 345.772 200.578 345.772 198.114Z" fill="rgb(var(--colour-main))"></path></svg></div></div></div></div></section><section id="post-ledger-entries-post-to-the-api" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">b. </span>Post to the API</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#post-ledger-entries-post-to-the-api">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Call the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">addLedgerEntry</code> mutation to post a Ledger Entry:</p><div class="pt-f2"><div class="relative flex min-w-f0"><div class="flex group-one bg-negative flex-col min-w-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div data-test-role="title" class="px-[1.25em] py-f2 flex flex-row flex-auto truncate hover:cursor-pointer group-two" role="button" tabindex="0"><div class="flex-initial"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">addLedgerEntry mutation </span></div><div class="pl-f2 group-two-hover:text-main group-one-hover:block transition-colors"><div class="hidden laptop:block"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-s20 no-underline leading-none text-inherit bg-inherit border-none">↓</span></div><div class="laptop:hidden"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-fnormal no-underline leading-none text-inherit bg-inherit border-none">↓</span></div></div></div><div class="py-f2 px-[1.25em] hover:cursor-pointer hidden group-one-hover:block"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 hover:text-main bg-inherit border-none">Show</span></div></div><div class="max-h-f20 flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation AddLedgerEntry(
  $ik: SafeString!
  $entry: LedgerEntryInput!
) {
  addLedgerEntry(
    ik: $ik,
    entry: $entry
  ) {
    __typename
    ... on AddLedgerEntryResult {
      entry {
        type
        created
        posted
      }
      lines {
        amount
        key
        description
        account {
          path
        }
      }
    }
    ... on Error {
      code
      message
    }
  }
}</code></pre></div></div><div class="absolute w-full left-f0 bottom-f0 min-h-f20 bg-gradient-to-b from-transparent to-negative"> <!-- --> </div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Set the Ledger Entry&#x27;s <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">type</code> and the required <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">parameters</code>.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">addLedgerEntry variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ik&quot;: &quot;add-ledger-entry&quot;,
  &quot;entry&quot;: {
    &quot;ledger&quot;: {
      &quot;ik&quot;: &quot;ledger-ik&quot;
    },
    &quot;type&quot;: &quot;user_funds_account&quot;,
    &quot;posted&quot;: &quot;1234-01-01T01:01:01&quot;,
    &quot;parameters&quot;: {
      &quot;user_id&quot;: &quot;testing-user&quot;,
      &quot;funding_amount&quot;: &quot;200&quot;
    }
  }
}</code></pre></div></div></div><section id="post-ledger-entries-post-to-the-api-minor-units" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Minor Units</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#post-ledger-entries-post-to-the-api-minor-units">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">All numbers in <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> are integers representing the smallest unit, encoded as strings. For example, USD $2.50 is provided as &quot;250&quot;.</p></div></section><section id="post-ledger-entries-post-to-the-api-tags" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Tags</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#post-ledger-entries-post-to-the-api-tags">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can specify tags on a Ledger Entry to store arbitrary key-value pairs. See <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#store-metadata">Store metadata</a>.</p></div></section><section id="post-ledger-entries-post-to-the-api-idempotency" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Idempotency</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#post-ledger-entries-post-to-the-api-idempotency">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To ensure a Ledger Entry is only posted once, provide an Idempotency Key <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ik</code> to the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">addLedgerEntry</code> mutation. This identifies the Ledger Entry and lets you safely retry the API call. See <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#api-overview-idempotency">Integrate the API</a>.</p></div></section><section id="post-ledger-entries-post-to-the-api-timestamps" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Timestamps</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#post-ledger-entries-post-to-the-api-timestamps">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Ledger Entries have two timestamps:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">posted</code>, the time the money movement event happened. You provide this to the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">addLedgerEntry</code> API call.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">created</code>, the time at which the Ledger Entry was posted to the API. <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> auto-generates this value.</li>
</ul><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can post entries with a <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">posted</code> timestamp in the past or future. Posting a Ledger Entry updates all balances from the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">posted</code> time into the future.</p></div></section></div></div></section><section id="post-ledger-entries-linked-accounts" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">c. </span>Linked Accounts</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#post-ledger-entries-linked-accounts">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Linked Ledger Accounts are used for <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#reconcile-transactions">reconciling your Ledger</a> with your external financial systems.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To define a Ledger Entry to a Linked Ledger Account, you must specify the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">tx</code> of the Ledger Line. This is the ID of the transaction at the external system.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Linked Ledger Account Entry</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;key&quot;: &quot;linked-ledger-account-schema&quot;,
  &quot;chartOfAccounts&quot;: {...},
  &quot;ledgerEntries&quot;: {
    &quot;types&quot;: [
      {
        &quot;type&quot;: &quot;reconciliation-type&quot;,
        &quot;lines&quot;: [
          {
            &quot;key&quot;: &quot;reconciliation-line-key&quot;,
            &quot;account&quot;: { &quot;path&quot;: &quot;bank&quot; },
            &quot;amount&quot;: &quot;{{some_amount}}&quot;,
            &quot;tx&quot;: {
              &quot;externalId&quot;: &quot;{{bank_transaction_id}}&quot;
            }
          },
          {...other line}
        ]
      }
    ]
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To post Ledger Entries to a Linked Ledger Account, call <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">reconcileTx</code> instead of <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">addLedgerEntry</code>:</p><div class="pt-f2"><div class="relative flex min-w-f0"><div class="flex group-one bg-negative flex-col min-w-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div data-test-role="title" class="px-[1.25em] py-f2 flex flex-row flex-auto truncate hover:cursor-pointer group-two" role="button" tabindex="0"><div class="flex-initial"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">reconcileTx query </span></div><div class="pl-f2 group-two-hover:text-main group-one-hover:block transition-colors"><div class="hidden laptop:block"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-s20 no-underline leading-none text-inherit bg-inherit border-none">↓</span></div><div class="laptop:hidden"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-fnormal no-underline leading-none text-inherit bg-inherit border-none">↓</span></div></div></div><div class="py-f2 px-[1.25em] hover:cursor-pointer hidden group-one-hover:block"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 hover:text-main bg-inherit border-none">Show</span></div></div><div class="max-h-f20 flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation ReconcileTx(
    $entry: LedgerEntryInput!
  ) {
    reconcileTx(entry: $entry) {
      __typename
      ... on ReconcileTxResult {
        entry {
          ik
          posted
          created
        }
        isIkReplay
        lines {
          amount
          currency {
            code
          }
        }
      }
      ... on Error {
        code
        message
      }
    }
  }</code></pre></div></div><div class="absolute w-full left-f0 bottom-f0 min-h-f20 bg-gradient-to-b from-transparent to-negative"> <!-- --> </div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The query variables are the same as <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">addLedgerEntry</code>, except <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">posted</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ik</code> are omitted. They are inferred from the external Tx.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">reconcileTx variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;entry&quot;: {
    &quot;type&quot;: &quot;reconciliation-type&quot;,
    &quot;ledger&quot;: {
      &quot;ik&quot;: &quot;ledger-ik&quot;
    },
    &quot;parameters&quot;: {
      &quot;bank_transaction_id&quot;: &quot;tx_1234&quot;
    }
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Read more about creating and using Linked Ledger Accounts in <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#reconcile-transactions">Reconcile transactions</a>.</p></div></div></section><section id="post-ledger-entries-currencies" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">d. </span>Currencies</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#post-ledger-entries-currencies">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">If a Ledger Account is in <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">currencyMode: multi</code>, you must specify the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">currency</code> of the Ledger Lines posted to it.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Ledger Entry definition</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;key&quot;: &quot;schema-key&quot;,
  &quot;chartOfAccounts&quot;: {...},
  &quot;ledgerEntries&quot;: {
    &quot;types&quot;: [
      {
        &quot;type&quot;: &quot;user_funds_account&quot;,
        &quot;description&quot;: &quot;Funding {{user_id}} for {{funding_amount}}&quot;,
        &quot;lines&quot;: [
          {
            &quot;account&quot;: { &quot;path&quot;: &quot;assets/banks/user-cash&quot; },
            &quot;key&quot;: &quot;funds_arrive_in_bank&quot;,
            &quot;amount&quot;: &quot;{{funding_amount}}&quot;,
            &quot;currency&quot;: {
              &quot;code&quot;: &quot;USD&quot;
            }
          },
          {
            &quot;account&quot;: { &quot;path&quot;: &quot;liabilities/users:{{user_id}}/available&quot; },
            &quot;key&quot;: &quot;increase_user_balance&quot;,
            &quot;amount&quot;: &quot;{{funding_amount}}&quot;,
            &quot;currency&quot;: {
              &quot;code&quot;: &quot;USD&quot;
            }
          }
        ]
      }
    ]
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Read more about how to implement a product that handles multiple currencies in <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#handle-currencies">Handle currencies</a>.</p></div></div></section><section id="post-ledger-entries-using-conditions" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">e. </span>Using conditions</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#post-ledger-entries-using-conditions">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Ledger Entry conditions are rules defined in your Schema used to manage concurrency and enforce correctness within your Ledger. If a condition is not met, the Ledger Entry is not posted and the mutation throws a <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">BadRequestError</code>.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Conditions are defined in the Schema:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Ledger Entry Template with conditions</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;type&quot;: &quot;user_withdraws_funds&quot;,
  &quot;description&quot;: &quot;{{user_id}} withdraws for {{withdraw_amount}}&quot;,
  &quot;lines&quot;: [
    {
      &quot;account&quot;: { &quot;path&quot;: &quot;assets/banks/user-cash&quot; },
      &quot;key&quot;: &quot;funds_leave_bank&quot;,
      &quot;amount&quot;: &quot;-{{withdraw_amount}}&quot;
    },
    {
      &quot;account&quot;: { &quot;path&quot;: &quot;liabilities/users:{{user_id}}/available&quot; },
      &quot;key&quot;: &quot;decrease_user_balance&quot;,
      &quot;amount&quot;: &quot;-{{withdraw_amount}}&quot;
    }
  ],
  &quot;conditions&quot;: [
    {
      &quot;account&quot;: {
        &quot;path&quot;: &quot;liabilities/users:{{user_id}}/available&quot;
      },
      &quot;postcondition&quot;: {
        &quot;ownBalance&quot;: {
          &quot;gte&quot;: &quot;0&quot;
        }
      }
    }
  ]
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Read more about using Ledger Entry Conditions in <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#configure-consistency">Configure consistency</a>.</p></div></div></section><section id="post-ledger-entries-using-groups" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">f. </span>Using Groups</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#post-ledger-entries-using-groups">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Ledger Entry Groups provide a way to tie together related Ledger Entries. You can configure them on a Ledger Entry Type in the Schema.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Ledger Entry Type with Groups</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;type&quot;: &quot;user_initiates_withdrawal&quot;,
  &quot;description&quot;: &quot;{{user_id}} initiates withdrawal&quot;,
  &quot;lines&quot;: [
    {
      &quot;account&quot;: {
        &quot;path&quot;: &quot;liabilities/users:{{user_id}}/available&quot;
      },
      &quot;key&quot;: &quot;decrease_user_balance&quot;,
      &quot;amount&quot;: &quot;-{{withdraw_amount}}&quot;
    },
    {...other line}
  ],
  &quot;groups&quot;: [
    {
      &quot;key&quot;: &quot;withdrawal&quot;,
      &quot;value&quot;: &quot;{{withdrawal_id}}&quot;
    }
  ]
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Read more about using Ledger Entry Groups in <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#group-ledger-entries">Group Ledger Entries</a>.</p></div></div></section><section id="post-ledger-entries-runtime-entries" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">g. </span>Runtime Entries</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#post-ledger-entries-runtime-entries">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can define a Ledger Entry whose Ledger Lines are defined at runtime.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">This can be useful if you&#x27;re building a product where your end user, not you, defines the Ledger Entry structure. This is common for <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> users offering accounting services to their users.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To support runtime-defined Ledger Entries, omit the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">lines</code> field in the Schema.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Runtime-defined Ledger Entry</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">
{
  &quot;type&quot;: &quot;runtime_entry&quot;,
  &quot;description&quot;: &quot;Runtime-defined ledger entry&quot;
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Then, set the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">lines</code> field when posting the Ledger Entry using <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">addLedgerEntry</code> or <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">reconcileTx</code>:</p><div class="pt-f2"><div class="relative flex min-w-f0"><div class="flex group-one bg-negative flex-col min-w-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div data-test-role="title" class="px-[1.25em] py-f2 flex flex-row flex-auto truncate hover:cursor-pointer group-two" role="button" tabindex="0"><div class="flex-initial"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">AddRuntimeLedgerEntry query </span></div><div class="pl-f2 group-two-hover:text-main group-one-hover:block transition-colors"><div class="hidden laptop:block"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-s20 no-underline leading-none text-inherit bg-inherit border-none">↓</span></div><div class="laptop:hidden"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-fnormal no-underline leading-none text-inherit bg-inherit border-none">↓</span></div></div></div><div class="py-f2 px-[1.25em] hover:cursor-pointer hidden group-one-hover:block"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 hover:text-main bg-inherit border-none">Show</span></div></div><div class="max-h-f20 flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation AddRuntimeLedgerEntry(
  $ik: SafeString!
  $entry: LedgerEntryInput!
) {
  addLedgerEntry(
    ik: $ik,
    entry: $entry
  ) {
    ... on AddLedgerEntryResult {
      entry {
        type
        created
        posted
      }
      lines {
        amount
        key
        description
        account {
          path
        }
      }
    }
    ... on Error {
      code
      message
    }
  }
}</code></pre></div></div><div class="absolute w-full left-f0 bottom-f0 min-h-f20 bg-gradient-to-b from-transparent to-negative"> <!-- --> </div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">AddRuntimeLedgerEntry variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ik&quot;: &quot;add-arbitrary-ledger-entry&quot;,
  &quot;entry&quot;: {
    &quot;type&quot;: &quot;runtime_entry&quot;,
    &quot;lines&quot;: [
        {
          &quot;account&quot;: { &quot;path&quot;: &quot;assets/banks/user-cash&quot; },
          &quot;key&quot;: &quot;funds_arrive_in_bank&quot;,
          &quot;amount&quot;: &quot;100&quot;
        },
        {
          &quot;account&quot;: { &quot;path&quot;: &quot;liabilities/users:test-user/available&quot; },
          &quot;key&quot;: &quot;increase_user_balance&quot;,
          &quot;amount&quot;: &quot;100&quot;
        }

    ]
  }
}</code></pre></div></div></div></div></div></section></div></section>
<section id="reconcile-transactions" class="first:0 pt-f6 tablet:pt-f3 pb-[2em] scroll-mt-[90px]"><span class="TopicContainer-title group-one text-s20 tablet:text-fnormal laptop:text-s20 block mb-[1em] "><span class="text-main-500">F<!-- --> </span>Reconcile Transactions<span class="pl-[0.5em] phone:invisible phone:group-one-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#reconcile-transactions">#</a></span></span><div class="TopicContainer-content py-[2em] first-of-type:pt-0 ml-0 phone:ml-[1.8em] tablet:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Your Ledger should accurately track the real-world movement of money within your product. This is done by reconciling transactions from your external financial systems with your Ledger.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The overall workflow is a three-step process:</p><ol data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2 ml-[1.875em] list-decimal list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Transact at your external financial system.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Sync the real-world money movement to <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Reconcile the transaction to a Ledger Entry using the API.</li>
</ol><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">This whole process happens through a <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> Link.</p><section id="reconcile-transactions-links" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">a. </span>Links</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#reconcile-transactions-links">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Links are a mirror of external financial systems used to keep your Ledger up to date. Create a Link for each external financial system you have, such as banks, payment processors and card issuers.</p><div class="pt-f2"><div class="hidden tablet:block"><svg width="100%" height="100%" viewBox="0 0 621 450" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="621" height="450" fill="rgb(var(--colour-negative))"></rect><path d="M19.736 22.214H21.038V30.852H25.7V32H19.736V22.214ZM30.4063 23.614V22.214H31.8063V23.614H30.4063ZM28.0123 32V31.048H30.5323V25.616H28.0123V24.664H31.6803V31.048H33.9343V32H28.0123ZM36.7226 32V24.664H37.8006V25.882C38.3746 24.986 39.0746 24.454 40.2366 24.454C41.5106 24.454 42.5606 25.098 42.5606 26.456V32H41.3986V26.918C41.3986 25.938 40.6986 25.476 39.8866 25.476C38.5706 25.476 37.8846 26.61 37.8846 27.87V32H36.7226ZM47.0289 32H45.8809V21.794H47.0289V27.73L50.1789 24.664H51.6629L49.0169 27.282L52.0969 32H50.7109L48.1489 28.052L47.0289 29.144V32ZM58.4132 26.666C58.3852 25.938 57.8252 25.476 56.9432 25.476C55.9912 25.476 55.3472 25.896 55.3472 26.554C55.3472 27.072 55.7112 27.38 56.3972 27.562L58.0632 27.996C59.2952 28.318 59.9252 28.92 59.9252 29.956C59.9252 31.384 58.8052 32.252 56.9852 32.252C55.0672 32.252 54.0592 31.412 53.9752 29.774H55.2072C55.3192 30.768 55.9212 31.216 57.0132 31.216C58.0492 31.216 58.7352 30.824 58.7352 30.138C58.7352 29.508 58.4272 29.242 57.6292 29.032L56.0892 28.626C54.7592 28.276 54.1572 27.73 54.1572 26.61C54.1572 25.28 55.2492 24.44 56.9712 24.44C58.6792 24.44 59.6032 25.28 59.6312 26.666H58.4132Z" fill="rgb(var(--colour-main))"></path><rect x="234" y="144" width="162" height="188.75" stroke="rgb(var(--colour-main-500))"></rect><rect x="432" y="144" width="153" height="188.75" stroke="rgb(var(--colour-main-500))"></rect><path d="M449.096 167H445.288V157.214H448.774C450.524 157.214 451.728 158.166 451.728 159.706C451.728 160.644 451.28 161.582 450.426 161.89C451.448 162.226 452.05 163.038 452.05 164.214C452.05 165.684 451.028 167 449.096 167ZM446.562 158.32V161.414H448.578C449.628 161.414 450.398 161.078 450.398 159.888C450.398 158.684 449.628 158.32 448.578 158.32H446.562ZM446.562 162.52V165.894H448.942C450.174 165.894 450.72 165.194 450.72 164.2C450.72 163.22 450.174 162.52 448.942 162.52H446.562ZM460.62 166.23V167.112C460.326 167.196 460.102 167.238 459.92 167.238C459.108 167.238 458.702 166.888 458.618 166.132C457.792 166.944 457.064 167.252 456.126 167.252C454.698 167.252 453.732 166.454 453.732 165.096C453.732 163.584 454.88 163.038 455.734 162.898C455.986 162.856 456.532 162.772 457.358 162.66C458.296 162.534 458.604 162.352 458.604 161.876V161.624C458.604 160.896 458.03 160.532 456.924 160.532C455.846 160.532 455.314 160.938 455.216 161.834H454.04C454.068 160.14 455.244 159.454 456.98 159.454C458.786 159.454 459.738 160.154 459.738 161.456V165.684C459.738 166.062 459.948 166.258 460.368 166.258C460.438 166.258 460.55 166.244 460.62 166.23ZM458.604 164.452V163.29C458.114 163.514 457.316 163.64 456.7 163.71C455.608 163.836 454.922 164.144 454.922 165.068C454.922 165.796 455.482 166.23 456.42 166.23C457.442 166.23 458.604 165.474 458.604 164.452ZM462.723 167V159.664H463.801V160.882C464.375 159.986 465.075 159.454 466.237 159.454C467.511 159.454 468.561 160.098 468.561 161.456V167H467.399V161.918C467.399 160.938 466.699 160.476 465.887 160.476C464.571 160.476 463.885 161.61 463.885 162.87V167H462.723ZM473.029 167H471.881V156.794H473.029V162.73L476.179 159.664H477.663L475.017 162.282L478.097 167H476.711L474.149 163.052L473.029 164.144V167Z" fill="rgb(var(--colour-main))"></path><line x1="432" y1="162.5" x2="396" y2="162.5" stroke="rgb(var(--colour-main-500))"></line><path d="M265.736 157.214H267.038V165.852H271.7V167H265.736V157.214ZM276.406 158.614V157.214H277.806V158.614H276.406ZM274.012 167V166.048H276.532V160.616H274.012V159.664H277.68V166.048H279.934V167H274.012ZM282.723 167V159.664H283.801V160.882C284.375 159.986 285.075 159.454 286.237 159.454C287.511 159.454 288.561 160.098 288.561 161.456V167H287.399V161.918C287.399 160.938 286.699 160.476 285.887 160.476C284.571 160.476 283.885 161.61 283.885 162.87V167H282.723ZM293.029 167H291.881V156.794H293.029V162.73L296.179 159.664H297.663L295.017 162.282L298.097 167H296.711L294.149 163.052L293.029 164.144V167Z" fill="rgb(var(--colour-main))"></path><rect width="12" height="12" transform="translate(246 156)" fill="rgb(var(--colour-main-500))"></rect><circle cx="252" cy="162" r="6" fill="rgb(var(--colour-main-500))"></circle><path d="M252.619 160.741L250.711 162.649L251.323 163.261L253.231 161.353L252.619 160.741ZM249.271 164.701C250.039 165.469 251.179 165.469 251.959 164.701L252.847 163.813L252.235 163.201L251.407 164.029C250.927 164.509 250.363 164.569 249.883 164.089C249.415 163.621 249.475 163.057 249.955 162.577L250.783 161.749L250.171 161.137L249.367 161.941C248.599 162.709 248.515 163.933 249.271 164.701ZM251.119 160.189L251.731 160.801L252.559 159.973C253.027 159.493 253.603 159.433 254.071 159.901C254.539 160.369 254.479 160.945 254.011 161.425L253.171 162.253L253.783 162.865L254.683 161.977C255.451 161.209 255.439 160.057 254.683 159.289C253.915 158.533 252.775 158.533 252.007 159.301L251.119 160.189Z" fill="rgb(var(--colour-main))"></path><path d="M85.736 157.214H87.038V165.852H91.7V167H85.736V157.214ZM100.172 164.732C99.9203 166.272 98.7583 167.252 97.0363 167.252C94.8243 167.252 93.7043 165.642 93.7043 163.402C93.7043 160.952 95.0343 159.44 97.0643 159.44C99.3323 159.44 100.326 161.134 100.326 163.682H94.9223C94.9643 165.124 95.6643 166.174 97.0783 166.174C98.0303 166.174 98.6743 165.712 98.9963 164.732H100.172ZM97.0503 160.518C95.7343 160.518 95.0483 161.498 94.9503 162.73H99.0663C99.0663 161.512 98.3103 160.518 97.0503 160.518ZM107.581 156.794H108.743V167H107.707V165.964C107.119 166.818 106.335 167.252 105.369 167.252C103.199 167.252 102.177 165.516 102.177 163.262C102.177 161.148 103.241 159.44 105.327 159.44C106.321 159.44 107.077 159.818 107.581 160.574V156.794ZM105.523 160.532C104.151 160.532 103.395 161.764 103.395 163.346C103.395 164.844 104.039 166.16 105.537 166.16C107.007 166.16 107.581 164.746 107.581 163.388C107.581 161.918 106.993 160.532 105.523 160.532ZM114.107 170.052C112.511 170.052 111.307 169.394 111.111 167.84H112.329C112.497 168.666 113.071 169.072 114.135 169.072C115.605 169.072 116.207 168.344 116.207 166.384V165.964C115.773 166.818 114.989 167.252 114.023 167.252C111.853 167.252 110.831 165.558 110.831 163.304C110.831 161.148 111.895 159.44 113.981 159.44C114.975 159.44 115.731 159.818 116.235 160.574V159.664H117.397V165.81C117.397 166.832 117.313 167.602 117.145 168.134C116.739 169.408 115.689 170.052 114.107 170.052ZM114.191 166.16C115.661 166.16 116.235 164.746 116.235 163.388C116.235 161.918 115.647 160.532 114.177 160.532C112.805 160.532 112.049 161.764 112.049 163.346C112.049 164.844 112.693 166.16 114.191 166.16ZM126.135 164.732C125.883 166.272 124.721 167.252 122.999 167.252C120.787 167.252 119.667 165.642 119.667 163.402C119.667 160.952 120.997 159.44 123.027 159.44C125.295 159.44 126.289 161.134 126.289 163.682H120.885C120.927 165.124 121.627 166.174 123.041 166.174C123.993 166.174 124.637 165.712 124.959 164.732H126.135ZM123.013 160.518C121.697 160.518 121.011 161.498 120.913 162.73H125.029C125.029 161.512 124.273 160.518 123.013 160.518ZM129.007 167V159.664H130.085V161.246C130.575 160.196 131.513 159.454 132.717 159.454C134.397 159.454 135.265 160.378 135.405 161.834H134.243C134.075 160.952 133.599 160.476 132.605 160.476C131.135 160.476 130.183 161.722 130.183 163.444V167H129.007Z" fill="rgb(var(--colour-main-500))"></path><rect x="72" y="162" width="6" height="6" fill="rgb(var(--colour-inactive-br))"></rect><rect x="72" y="156" width="6" height="6" fill="rgb(var(--colour-inactive-tr))"></rect><rect x="66" y="162" width="6" height="6" fill="rgb(var(--colour-inactive-bl))"></rect><rect x="66" y="156" width="6" height="6" fill="rgb(var(--colour-main-400))"></rect><rect x="36" y="125.75" width="378" height="225" stroke="rgb(var(--colour-main-500))"></rect><rect x="54" y="143.75" width="162" height="189" stroke="rgb(var(--colour-main-500))"></rect><path d="M38.03 112.75V104.588H43.98V105.652H39.262V108.032H43.42V109.096H39.262V112.75H38.03ZM45.7603 112.75V104.588H49.6103C51.2063 104.588 52.1723 105.386 52.1723 106.772C52.1723 107.724 51.7663 108.312 50.7863 108.746C51.7383 109.124 51.9063 109.404 51.9483 110.832C51.9483 111 52.0043 111.672 52.0603 111.924C52.1023 112.134 52.2003 112.316 52.4523 112.484V112.75H51.0103C50.8283 112.386 50.7443 112.022 50.7443 111.392C50.7443 111.07 50.7583 110.944 50.7583 110.622C50.7583 109.74 50.3943 109.32 49.4143 109.32H46.9923V112.75H45.7603ZM46.9923 108.256H49.3023C50.3243 108.256 50.8983 107.906 50.8983 106.954C50.8983 106.002 50.3383 105.652 49.3023 105.652H46.9923V108.256ZM53.5326 112.75L56.5846 104.588H58.1106L61.1066 112.75H59.7626L58.9646 110.538H55.6606L54.8346 112.75H53.5326ZM55.9826 109.502H58.6146L57.3266 105.946L55.9826 109.502ZM65.8969 112.89C63.4749 112.89 61.9629 111.084 61.9629 108.746C61.9629 106.268 63.5029 104.448 66.0229 104.448C67.7869 104.448 69.2289 105.358 69.5369 107.094H68.3049C68.0389 106.044 67.1149 105.526 66.0089 105.526C64.1609 105.526 63.1949 106.912 63.1949 108.704C63.1949 110.51 64.2869 111.826 66.0509 111.826C67.5629 111.826 68.5569 110.944 68.5569 109.628V109.474H66.1769V108.41H69.6209V112.792H68.7109L68.5989 111.588C67.7729 112.512 66.9609 112.89 65.8969 112.89ZM71.5832 112.75V104.588H73.3332L75.6712 111.518L77.9532 104.588H79.7032V112.75H78.5272V106.044L76.3012 112.75H75.0272L72.7732 106.044V112.75H71.5832ZM81.7775 112.75V104.588H87.7695V105.652H83.0095V108.032H87.5595V109.096H83.0095V111.686H87.9795V112.75H81.7775ZM89.6758 112.75V104.588H90.9918L95.2478 110.93V104.588H96.4378V112.75H95.0938L90.8658 106.422V112.75H89.6758ZM100.514 112.75V105.652H97.7421V104.588H104.504V105.652H101.746V112.75H100.514Z" fill="rgb(var(--colour-main-500))"></path></svg></div><div class="block tablet:hidden"><svg width="100%" height="100%" viewBox="0 0 378 414" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="378" height="414" fill="rgb(var(--colour-negative))"></rect><path d="M19.736 22.214H21.038V30.852H25.7V32H19.736V22.214ZM30.4063 23.614V22.214H31.8063V23.614H30.4063ZM31.6803 24.664V31.048H33.9343V32H28.0123V31.048H30.5323V25.616H28.0123V24.664H31.6803ZM36.7226 32V24.664H37.8006V25.882C38.3746 24.986 39.0746 24.454 40.2366 24.454C41.5106 24.454 42.5606 25.098 42.5606 26.456V32H41.3986V26.918C41.3986 25.938 40.6986 25.476 39.8866 25.476C38.5706 25.476 37.8846 26.61 37.8846 27.87V32H36.7226ZM47.0289 32H45.8809V21.794H47.0289V27.73L50.1789 24.664H51.6629L49.0169 27.282L52.0969 32H50.7109L48.1489 28.052L47.0289 29.144V32ZM59.6312 26.666H58.4132C58.3852 25.938 57.8252 25.476 56.9432 25.476C55.9912 25.476 55.3472 25.896 55.3472 26.554C55.3472 27.072 55.7112 27.38 56.3972 27.562L58.0632 27.996C59.2952 28.318 59.9252 28.92 59.9252 29.956C59.9252 31.384 58.8052 32.252 56.9852 32.252C55.0672 32.252 54.0592 31.412 53.9752 29.774H55.2072C55.3192 30.768 55.9212 31.216 57.0132 31.216C58.0492 31.216 58.7352 30.824 58.7352 30.138C58.7352 29.508 58.4272 29.242 57.6292 29.032L56.0892 28.626C54.7592 28.276 54.1572 27.73 54.1572 26.61C54.1572 25.28 55.2492 24.44 56.9712 24.44C58.6792 24.44 59.6032 25.28 59.6312 26.666Z" fill="rgb(var(--colour-main))"></path><line x1="144" y1="153.811" x2="135" y2="153.811" stroke="rgb(var(--colour-main-500))"></line><path d="M20.03 113V104.838H25.98V105.902H21.262V108.282H25.42V109.346H21.262V113H20.03ZM27.7603 113V104.838H31.6103C33.2063 104.838 34.1723 105.636 34.1723 107.022C34.1723 107.974 33.7663 108.562 32.7863 108.996C33.7383 109.374 33.9063 109.654 33.9483 111.082C33.9483 111.25 34.0043 111.922 34.0603 112.174C34.1023 112.384 34.2003 112.566 34.4523 112.734V113H33.0103C32.8283 112.636 32.7443 112.272 32.7443 111.642C32.7443 111.32 32.7583 111.194 32.7583 110.872C32.7583 109.99 32.3943 109.57 31.4143 109.57H28.9923V113H27.7603ZM28.9923 108.506H31.3023C32.3243 108.506 32.8983 108.156 32.8983 107.204C32.8983 106.252 32.3383 105.902 31.3023 105.902H28.9923V108.506ZM35.5326 113L38.5846 104.838H40.1106L43.1066 113H41.7626L40.9646 110.788H37.6606L36.8346 113H35.5326ZM37.9826 109.752H40.6146L39.3266 106.196L37.9826 109.752ZM47.8969 113.14C45.4749 113.14 43.9629 111.334 43.9629 108.996C43.9629 106.518 45.5029 104.698 48.0229 104.698C49.7869 104.698 51.2289 105.608 51.5369 107.344H50.3049C50.0389 106.294 49.1149 105.776 48.0089 105.776C46.1609 105.776 45.1949 107.162 45.1949 108.954C45.1949 110.76 46.2869 112.076 48.0509 112.076C49.5629 112.076 50.5569 111.194 50.5569 109.878V109.724H48.1769V108.66H51.6209V113.042H50.7109L50.5989 111.838C49.7729 112.762 48.9609 113.14 47.8969 113.14ZM53.5832 113V104.838H55.3332L57.6712 111.768L59.9532 104.838H61.7032V113H60.5272V106.294L58.3012 113H57.0272L54.7732 106.294V113H53.5832ZM63.7775 113V104.838H69.7695V105.902H65.0095V108.282H69.5595V109.346H65.0095V111.936H69.9795V113H63.7775ZM71.6758 113V104.838H72.9918L77.2478 111.18V104.838H78.4378V113H77.0938L72.8658 106.672V113H71.6758ZM82.5141 113V105.902H79.7421V104.838H86.5041V105.902H83.7461V113H82.5141Z" fill="rgb(var(--colour-main-500))"></path><rect x="18" y="126" width="243" height="198" stroke="rgb(var(--colour-main-500))"></rect><rect x="144" y="135" width="108" height="180" stroke="rgb(var(--colour-main-500))"></rect><rect x="27" y="135" width="108" height="180" stroke="rgb(var(--colour-main-500))"></rect><path d="M175.736 148.214H177.038V156.852H181.7V158H175.736V148.214ZM186.406 149.614V148.214H187.806V149.614H186.406ZM184.012 158V157.048H186.532V151.616H184.012V150.664H187.68V157.048H189.934V158H184.012ZM192.723 158V150.664H193.801V151.882C194.375 150.986 195.075 150.454 196.237 150.454C197.511 150.454 198.561 151.098 198.561 152.456V158H197.399V152.918C197.399 151.938 196.699 151.476 195.887 151.476C194.571 151.476 193.885 152.61 193.885 153.87V158H192.723ZM203.029 158H201.881V147.794H203.029V153.73L206.179 150.664H207.663L205.017 153.282L208.097 158H206.711L204.149 154.052L203.029 155.144V158Z" fill="rgb(var(--colour-main))"></path><rect width="12" height="12" transform="translate(156 147)" fill="rgb(var(--colour-main-500))"></rect><circle cx="162" cy="153" r="6" fill="rgb(var(--colour-main-500))"></circle><path d="M162.619 151.741L160.711 153.649L161.323 154.261L163.231 152.353L162.619 151.741ZM159.271 155.701C160.039 156.469 161.179 156.469 161.959 155.701L162.847 154.813L162.235 154.201L161.407 155.029C160.927 155.509 160.363 155.569 159.883 155.089C159.415 154.621 159.475 154.057 159.955 153.577L160.783 152.749L160.171 152.137L159.367 152.941C158.599 153.709 158.515 154.933 159.271 155.701ZM161.119 151.189L161.731 151.801L162.559 150.973C163.027 150.493 163.603 150.433 164.071 150.901C164.539 151.369 164.479 151.945 164.011 152.425L163.171 153.253L163.783 153.865L164.683 152.977C165.451 152.209 165.439 151.057 164.683 150.289C163.915 149.533 162.775 149.533 162.007 150.301L161.119 151.189Z" fill="rgb(var(--colour-main))"></path><path d="M58.736 148.214H60.038V156.852H64.7V158H58.736V148.214ZM72.0663 153.73C72.0663 152.512 71.3103 151.518 70.0503 151.518C68.7343 151.518 68.0483 152.498 67.9503 153.73H72.0663ZM66.7043 154.402C66.7043 151.952 68.0343 150.44 70.0643 150.44C72.3323 150.44 73.3263 152.134 73.3263 154.682H67.9223C67.9643 156.124 68.6643 157.174 70.0783 157.174C71.0303 157.174 71.6743 156.712 71.9963 155.732H73.1723C72.9203 157.272 71.7583 158.252 70.0363 158.252C67.8243 158.252 66.7043 156.642 66.7043 154.402ZM80.5806 147.794H81.7426V158H80.7066V156.964C80.1186 157.818 79.3346 158.252 78.3686 158.252C76.1986 158.252 75.1766 156.516 75.1766 154.262C75.1766 152.148 76.2406 150.44 78.3266 150.44C79.3206 150.44 80.0766 150.818 80.5806 151.574V147.794ZM76.3946 154.346C76.3946 155.844 77.0386 157.16 78.5366 157.16C80.0066 157.16 80.5806 155.746 80.5806 154.388C80.5806 152.918 79.9926 151.532 78.5226 151.532C77.1506 151.532 76.3946 152.764 76.3946 154.346ZM87.1069 161.052C85.5109 161.052 84.3069 160.394 84.1109 158.84H85.3289C85.4969 159.666 86.0709 160.072 87.1349 160.072C88.6049 160.072 89.2069 159.344 89.2069 157.384V156.964C88.7729 157.818 87.9889 158.252 87.0229 158.252C84.8529 158.252 83.8309 156.558 83.8309 154.304C83.8309 152.148 84.8949 150.44 86.9809 150.44C87.9749 150.44 88.7309 150.818 89.2349 151.574V150.664H90.3969V156.81C90.3969 157.832 90.3129 158.602 90.1449 159.134C89.7389 160.408 88.6889 161.052 87.1069 161.052ZM85.0489 154.346C85.0489 155.844 85.6929 157.16 87.1909 157.16C88.6609 157.16 89.2349 155.746 89.2349 154.388C89.2349 152.918 88.6469 151.532 87.1769 151.532C85.8049 151.532 85.0489 152.764 85.0489 154.346ZM98.0292 153.73C98.0292 152.512 97.2732 151.518 96.0132 151.518C94.6972 151.518 94.0112 152.498 93.9132 153.73H98.0292ZM92.6672 154.402C92.6672 151.952 93.9972 150.44 96.0272 150.44C98.2952 150.44 99.2892 152.134 99.2892 154.682H93.8852C93.9272 156.124 94.6272 157.174 96.0412 157.174C96.9932 157.174 97.6372 156.712 97.9592 155.732H99.1352C98.8832 157.272 97.7212 158.252 95.9992 158.252C93.7872 158.252 92.6672 156.642 92.6672 154.402ZM102.007 158V150.664H103.085V152.246C103.575 151.196 104.513 150.454 105.717 150.454C107.397 150.454 108.265 151.378 108.405 152.834H107.243C107.075 151.952 106.599 151.476 105.605 151.476C104.135 151.476 103.183 152.722 103.183 154.444V158H102.007Z" fill="rgb(var(--colour-main-500))"></path><rect width="12" height="12" transform="translate(39 147)" fill="rgb(var(--colour-main))"></rect><rect x="45" y="153" width="6" height="6" fill="rgb(var(--colour-inactive-br))"></rect><rect x="45" y="147" width="6" height="6" fill="rgb(var(--colour-inactive-tr))"></rect><rect x="39" y="153" width="6" height="6" fill="rgb(var(--colour-inactive-bl))"></rect><rect x="39" y="147" width="6" height="6" fill="rgb(var(--colour-main-400))"></rect><line x1="279" y1="153.811" x2="252" y2="153.811" stroke="rgb(var(--colour-main-500))"></line><rect x="279" y="135" width="81" height="180" stroke="rgb(var(--colour-main-500))"></rect><path d="M293.096 158H289.288V148.214H292.774C294.524 148.214 295.728 149.166 295.728 150.706C295.728 151.644 295.28 152.582 294.426 152.89C295.448 153.226 296.05 154.038 296.05 155.214C296.05 156.684 295.028 158 293.096 158ZM290.562 156.894H292.942C294.174 156.894 294.72 156.194 294.72 155.2C294.72 154.22 294.174 153.52 292.942 153.52H290.562V156.894ZM290.562 152.414H292.578C293.628 152.414 294.398 152.078 294.398 150.888C294.398 149.684 293.628 149.32 292.578 149.32H290.562V152.414ZM304.62 158.112C304.326 158.196 304.102 158.238 303.92 158.238C303.108 158.238 302.702 157.888 302.618 157.132C301.792 157.944 301.064 158.252 300.126 158.252C298.698 158.252 297.732 157.454 297.732 156.096C297.732 154.584 298.88 154.038 299.734 153.898C299.986 153.856 300.532 153.772 301.358 153.66C302.296 153.534 302.604 153.352 302.604 152.876V152.624C302.604 151.896 302.03 151.532 300.924 151.532C299.846 151.532 299.314 151.938 299.216 152.834H298.04C298.068 151.14 299.244 150.454 300.98 150.454C302.786 150.454 303.738 151.154 303.738 152.456V156.684C303.738 157.062 303.948 157.258 304.368 157.258C304.438 157.258 304.55 157.244 304.62 157.23V158.112ZM298.922 156.068C298.922 156.796 299.482 157.23 300.42 157.23C301.442 157.23 302.604 156.474 302.604 155.452V154.29C302.114 154.514 301.316 154.64 300.7 154.71C299.608 154.836 298.922 155.144 298.922 156.068ZM306.723 158V150.664H307.801V151.882C308.375 150.986 309.075 150.454 310.237 150.454C311.511 150.454 312.561 151.098 312.561 152.456V158H311.399V152.918C311.399 151.938 310.699 151.476 309.887 151.476C308.571 151.476 307.885 152.61 307.885 153.87V158H306.723ZM317.029 158H315.881V147.794H317.029V153.73L320.179 150.664H321.663L319.017 153.282L322.097 158H320.711L318.149 154.052L317.029 155.144V158Z" fill="rgb(var(--colour-main))"></path></svg></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">For each account in your external financial system, there&#x27;s a corresponding External Account. External Accounts have a Tx for each transaction in that account.</p><div class="pt-f2"><div class="hidden tablet:block"><svg width="100%" height="100%" viewBox="0 0 622 451" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="621" height="450" transform="translate(0.110352 0.75)" fill="rgb(var(--colour-negative))"></rect><path d="M25.1944 28.312H20.9944V31.602H25.6564V32.75H19.6924V22.964H25.4044V24.112H20.9944V27.164H25.1944V28.312ZM34.2126 25.414L31.7486 28.956L34.2826 32.75H32.8966L31.0906 29.964L29.2566 32.75H27.8986L30.4886 29.012L28.0386 25.414H29.4106L31.1326 28.046L32.8826 25.414H34.2126ZM39.8009 25.414H42.6849V26.366H39.8009V30.454C39.8009 31.532 40.3749 31.896 41.4389 31.896C41.9149 31.896 42.3349 31.854 42.6849 31.756V32.778C42.2229 32.918 41.7609 32.946 41.3689 32.946C39.5909 32.946 38.6389 32.26 38.6389 30.664V26.366H36.5249V25.414H38.6389V23.398H39.8009V25.414ZM51.5912 30.482C51.3392 32.022 50.1772 33.002 48.4552 33.002C46.2432 33.002 45.1232 31.392 45.1232 29.152C45.1232 26.702 46.4532 25.19 48.4832 25.19C50.7512 25.19 51.7452 26.884 51.7452 29.432H46.3412C46.3832 30.874 47.0832 31.924 48.4972 31.924C49.4492 31.924 50.0932 31.462 50.4152 30.482H51.5912ZM48.4692 26.268C47.1532 26.268 46.4672 27.248 46.3692 28.48H50.4852C50.4852 27.262 49.7292 26.268 48.4692 26.268ZM54.4635 32.75V25.414H55.5415V26.996C56.0315 25.946 56.9695 25.204 58.1735 25.204C59.8535 25.204 60.7215 26.128 60.8615 27.584H59.6995C59.5315 26.702 59.0555 26.226 58.0615 26.226C56.5915 26.226 55.6395 27.472 55.6395 29.194V32.75H54.4635ZM62.7958 32.75V25.414H63.8738V26.632C64.4478 25.736 65.1478 25.204 66.3098 25.204C67.5838 25.204 68.6338 25.848 68.6338 27.206V32.75H67.4718V27.668C67.4718 26.688 66.7718 26.226 65.9598 26.226C64.6438 26.226 63.9578 27.36 63.9578 28.62V32.75H62.7958ZM78.0021 31.98V32.862C77.7081 32.946 77.4841 32.988 77.3021 32.988C76.4901 32.988 76.0841 32.638 76.0001 31.882C75.1741 32.694 74.4461 33.002 73.5081 33.002C72.0801 33.002 71.1141 32.204 71.1141 30.846C71.1141 29.334 72.2621 28.788 73.1161 28.648C73.3681 28.606 73.9141 28.522 74.7401 28.41C75.6781 28.284 75.9861 28.102 75.9861 27.626V27.374C75.9861 26.646 75.4121 26.282 74.3061 26.282C73.2281 26.282 72.6961 26.688 72.5981 27.584H71.4221C71.4501 25.89 72.6261 25.204 74.3621 25.204C76.1681 25.204 77.1201 25.904 77.1201 27.206V31.434C77.1201 31.812 77.3301 32.008 77.7501 32.008C77.8201 32.008 77.9321 31.994 78.0021 31.98ZM75.9861 30.202V29.04C75.4961 29.264 74.6981 29.39 74.0821 29.46C72.9901 29.586 72.3041 29.894 72.3041 30.818C72.3041 31.546 72.8641 31.98 73.8021 31.98C74.8241 31.98 75.9861 31.224 75.9861 30.202ZM83.9964 22.544V31.798H86.2504V32.75H80.3284V31.798H82.8624V23.496H80.3284V22.544H83.9964ZM102.873 32.75L102.005 29.824H98.631L97.763 32.75H96.419L99.513 22.964H101.151L104.231 32.75H102.873ZM98.953 28.732H101.683L100.311 24.14L98.953 28.732ZM112.115 27.836H110.939C110.813 26.87 110.169 26.268 109.147 26.268C107.635 26.268 107.047 27.71 107.047 29.166C107.047 30.622 107.705 31.924 109.175 31.924C110.197 31.924 110.827 31.35 111.023 30.188H112.199C112.045 31.952 110.953 33.002 109.147 33.002C107.005 33.002 105.829 31.322 105.829 29.166C105.829 26.968 106.977 25.19 109.161 25.19C110.953 25.19 112.073 26.282 112.115 27.836ZM120.77 27.836H119.594C119.468 26.87 118.824 26.268 117.802 26.268C116.29 26.268 115.702 27.71 115.702 29.166C115.702 30.622 116.36 31.924 117.83 31.924C118.852 31.924 119.482 31.35 119.678 30.188H120.854C120.7 31.952 119.608 33.002 117.802 33.002C115.66 33.002 114.484 31.322 114.484 29.166C114.484 26.968 115.632 25.19 117.816 25.19C119.608 25.19 120.728 26.282 120.77 27.836ZM126.288 25.19C128.542 25.19 129.606 26.87 129.606 29.096C129.606 31.322 128.542 33.002 126.288 33.002C124.034 33.002 122.97 31.322 122.97 29.096C122.97 26.87 124.034 25.19 126.288 25.19ZM126.288 26.268C124.804 26.268 124.188 27.598 124.188 29.096C124.188 30.594 124.804 31.924 126.288 31.924C127.772 31.924 128.388 30.594 128.388 29.096C128.388 27.598 127.772 26.268 126.288 26.268ZM137.868 25.414V32.75H136.818V31.658C136.146 32.624 135.446 33.002 134.368 33.002C133.738 33.002 133.206 32.862 132.786 32.568C132.282 32.204 132.03 31.686 132.03 31V25.414H133.192V30.538C133.192 31.028 133.36 31.406 133.682 31.658C133.948 31.868 134.298 31.98 134.704 31.98C135.25 31.98 135.712 31.784 136.09 31.378C136.496 30.944 136.706 30.314 136.706 29.488V25.414H137.868ZM140.685 32.75V25.414H141.763V26.632C142.337 25.736 143.037 25.204 144.199 25.204C145.473 25.204 146.523 25.848 146.523 27.206V32.75H145.361V27.668C145.361 26.688 144.661 26.226 143.849 26.226C142.533 26.226 141.847 27.36 141.847 28.62V32.75H140.685ZM152.307 25.414H155.191V26.366H152.307V30.454C152.307 31.532 152.881 31.896 153.945 31.896C154.421 31.896 154.841 31.854 155.191 31.756V32.778C154.729 32.918 154.267 32.946 153.875 32.946C152.097 32.946 151.145 32.26 151.145 30.664V26.366H149.031V25.414H151.145V23.398H152.307V25.414ZM163.593 27.416H162.375C162.347 26.688 161.787 26.226 160.905 26.226C159.953 26.226 159.309 26.646 159.309 27.304C159.309 27.822 159.673 28.13 160.359 28.312L162.025 28.746C163.257 29.068 163.887 29.67 163.887 30.706C163.887 32.134 162.767 33.002 160.947 33.002C159.029 33.002 158.021 32.162 157.937 30.524H159.169C159.281 31.518 159.883 31.966 160.975 31.966C162.011 31.966 162.697 31.574 162.697 30.888C162.697 30.258 162.389 29.992 161.591 29.782L160.051 29.376C158.721 29.026 158.119 28.48 158.119 27.36C158.119 26.03 159.211 25.19 160.933 25.19C162.641 25.19 163.565 26.03 163.593 27.416Z" fill="rgb(var(--colour-main))"></path><line x1="444.11" y1="199.25" x2="384.11" y2="199.25" stroke="rgb(var(--colour-main-500))"></line><circle cx="264.11" cy="198.75" r="6" fill="rgb(var(--colour-main-500))"></circle><path d="M282.194 199.312H277.994V202.602H282.656V203.75H276.692V193.964H282.404V195.112H277.994V198.164H282.194V199.312ZM291.213 196.414L288.749 199.956L291.283 203.75H289.897L288.091 200.964L286.257 203.75H284.899L287.489 200.012L285.039 196.414H286.411L288.133 199.046L289.883 196.414H291.213ZM296.801 196.414H299.685V197.366H296.801V201.454C296.801 202.532 297.375 202.896 298.439 202.896C298.915 202.896 299.335 202.854 299.685 202.756V203.778C299.223 203.918 298.761 203.946 298.369 203.946C296.591 203.946 295.639 203.26 295.639 201.664V197.366H293.525V196.414H295.639V194.398H296.801V196.414ZM301.073 205.794H309.725V206.802H301.073V205.794ZM316.602 203.75L315.734 200.824H312.36L311.492 203.75H310.148L313.242 193.964H314.88L317.96 203.75H316.602ZM312.682 199.732H315.412L314.04 195.14L312.682 199.732ZM325.844 198.836H324.668C324.542 197.87 323.898 197.268 322.876 197.268C321.364 197.268 320.776 198.71 320.776 200.166C320.776 201.622 321.434 202.924 322.904 202.924C323.926 202.924 324.556 202.35 324.752 201.188H325.928C325.774 202.952 324.682 204.002 322.876 204.002C320.734 204.002 319.558 202.322 319.558 200.166C319.558 197.968 320.706 196.19 322.89 196.19C324.682 196.19 325.802 197.282 325.844 198.836ZM334.498 198.836H333.322C333.196 197.87 332.552 197.268 331.53 197.268C330.018 197.268 329.43 198.71 329.43 200.166C329.43 201.622 330.088 202.924 331.558 202.924C332.58 202.924 333.21 202.35 333.406 201.188H334.582C334.428 202.952 333.336 204.002 331.53 204.002C329.388 204.002 328.212 202.322 328.212 200.166C328.212 197.968 329.36 196.19 331.544 196.19C333.336 196.19 334.456 197.282 334.498 198.836ZM340.016 196.19C342.27 196.19 343.334 197.87 343.334 200.096C343.334 202.322 342.27 204.002 340.016 204.002C337.762 204.002 336.698 202.322 336.698 200.096C336.698 197.87 337.762 196.19 340.016 196.19ZM340.016 197.268C338.532 197.268 337.916 198.598 337.916 200.096C337.916 201.594 338.532 202.924 340.016 202.924C341.5 202.924 342.116 201.594 342.116 200.096C342.116 198.598 341.5 197.268 340.016 197.268ZM351.597 196.414V203.75H350.547V202.658C349.875 203.624 349.175 204.002 348.097 204.002C347.467 204.002 346.935 203.862 346.515 203.568C346.011 203.204 345.759 202.686 345.759 202V196.414H346.921V201.538C346.921 202.028 347.089 202.406 347.411 202.658C347.677 202.868 348.027 202.98 348.433 202.98C348.979 202.98 349.441 202.784 349.819 202.378C350.225 201.944 350.435 201.314 350.435 200.488V196.414H351.597ZM354.413 203.75V196.414H355.491V197.632C356.065 196.736 356.765 196.204 357.927 196.204C359.201 196.204 360.251 196.848 360.251 198.206V203.75H359.089V198.668C359.089 197.688 358.389 197.226 357.577 197.226C356.261 197.226 355.575 198.36 355.575 199.62V203.75H354.413ZM366.035 196.414H368.919V197.366H366.035V201.454C366.035 202.532 366.609 202.896 367.673 202.896C368.149 202.896 368.569 202.854 368.919 202.756V203.778C368.457 203.918 367.995 203.946 367.603 203.946C365.825 203.946 364.873 203.26 364.873 201.664V197.366H362.759V196.414H364.873V194.398H366.035V196.414Z" fill="rgb(var(--colour-main))"></path><rect x="246.11" y="180.75" width="138" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M456.53 203.75L459.624 193.964H461.262L464.342 203.75H462.984L462.116 200.824H458.742L457.874 203.75H456.53ZM459.064 199.732H461.794L460.422 195.14L459.064 199.732ZM471.051 198.836C470.925 197.87 470.281 197.268 469.259 197.268C467.747 197.268 467.159 198.71 467.159 200.166C467.159 201.622 467.817 202.924 469.287 202.924C470.309 202.924 470.939 202.35 471.135 201.188H472.311C472.157 202.952 471.065 204.002 469.259 204.002C467.117 204.002 465.941 202.322 465.941 200.166C465.941 197.968 467.089 196.19 469.273 196.19C471.065 196.19 472.185 197.282 472.227 198.836H471.051ZM479.705 198.836C479.579 197.87 478.935 197.268 477.913 197.268C476.401 197.268 475.813 198.71 475.813 200.166C475.813 201.622 476.471 202.924 477.941 202.924C478.963 202.924 479.593 202.35 479.789 201.188H480.965C480.811 202.952 479.719 204.002 477.913 204.002C475.771 204.002 474.595 202.322 474.595 200.166C474.595 197.968 475.743 196.19 477.927 196.19C479.719 196.19 480.839 197.282 480.881 198.836H479.705ZM486.399 196.19C488.653 196.19 489.717 197.87 489.717 200.096C489.717 202.322 488.653 204.002 486.399 204.002C484.145 204.002 483.081 202.322 483.081 200.096C483.081 197.87 484.145 196.19 486.399 196.19ZM484.299 200.096C484.299 201.594 484.915 202.924 486.399 202.924C487.883 202.924 488.499 201.594 488.499 200.096C488.499 198.598 487.883 197.268 486.399 197.268C484.915 197.268 484.299 198.598 484.299 200.096ZM497.98 196.414V203.75H496.93V202.658C496.258 203.624 495.558 204.002 494.48 204.002C493.85 204.002 493.318 203.862 492.898 203.568C492.394 203.204 492.142 202.686 492.142 202V196.414H493.304V201.538C493.304 202.028 493.472 202.406 493.794 202.658C494.06 202.868 494.41 202.98 494.816 202.98C495.362 202.98 495.824 202.784 496.202 202.378C496.608 201.944 496.818 201.314 496.818 200.488V196.414H497.98ZM500.796 203.75V196.414H501.874V197.632C502.448 196.736 503.148 196.204 504.31 196.204C505.584 196.204 506.634 196.848 506.634 198.206V203.75H505.472V198.668C505.472 197.688 504.772 197.226 503.96 197.226C502.644 197.226 501.958 198.36 501.958 199.62V203.75H500.796ZM512.418 196.414H515.302V197.366H512.418V201.454C512.418 202.532 512.992 202.91 514.056 202.91C514.532 202.91 514.952 202.882 515.302 202.784V203.778C514.84 203.918 514.378 203.946 513.986 203.946C512.208 203.946 511.256 203.26 511.256 201.664V197.366H509.142V196.414H511.256V194.398H512.418V196.414Z" fill="rgb(var(--colour-main-500))"></path><rect x="444.11" y="180.75" width="129" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="234.11" y="144.75" width="162" height="188.75" stroke="rgb(var(--colour-main-500))"></rect><rect x="432.11" y="144.75" width="153" height="188.75" stroke="rgb(var(--colour-main-500))"></rect><path d="M449.206 167.75H445.398V157.964H448.884C450.634 157.964 451.838 158.916 451.838 160.456C451.838 161.394 451.39 162.332 450.536 162.64C451.558 162.976 452.16 163.788 452.16 164.964C452.16 166.434 451.138 167.75 449.206 167.75ZM446.672 166.644H449.052C450.284 166.644 450.83 165.944 450.83 164.95C450.83 163.97 450.284 163.27 449.052 163.27H446.672V166.644ZM446.672 162.164H448.688C449.738 162.164 450.508 161.828 450.508 160.638C450.508 159.434 449.738 159.07 448.688 159.07H446.672V162.164ZM460.731 167.862C460.437 167.946 460.213 167.988 460.031 167.988C459.219 167.988 458.813 167.638 458.729 166.882C457.903 167.694 457.175 168.002 456.237 168.002C454.809 168.002 453.843 167.204 453.843 165.846C453.843 164.334 454.991 163.788 455.845 163.648C456.097 163.606 456.643 163.522 457.469 163.41C458.407 163.284 458.715 163.102 458.715 162.626V162.374C458.715 161.646 458.141 161.282 457.035 161.282C455.957 161.282 455.425 161.688 455.327 162.584H454.151C454.179 160.89 455.355 160.204 457.091 160.204C458.897 160.204 459.849 160.904 459.849 162.206V166.434C459.849 166.812 460.059 167.008 460.479 167.008C460.549 167.008 460.661 166.994 460.731 166.98V167.862ZM455.033 165.818C455.033 166.546 455.593 166.98 456.531 166.98C457.553 166.98 458.715 166.224 458.715 165.202V164.04C458.225 164.264 457.427 164.39 456.811 164.46C455.719 164.586 455.033 164.894 455.033 165.818ZM462.833 167.75V160.414H463.911V161.632C464.485 160.736 465.185 160.204 466.347 160.204C467.621 160.204 468.671 160.848 468.671 162.206V167.75H467.509V162.668C467.509 161.688 466.809 161.226 465.997 161.226C464.681 161.226 463.995 162.36 463.995 163.62V167.75H462.833ZM473.139 167.75H471.991V157.544H473.139V163.48L476.289 160.414H477.773L475.127 163.032L478.207 167.75H476.821L474.259 163.802L473.139 164.894V167.75Z" fill="rgb(var(--colour-main-500))"></path><rect width="12" height="12" transform="translate(246.11 156.75)" fill="rgb(var(--colour-main-500))"></rect><circle cx="252.11" cy="162.75" r="6" fill="rgb(var(--colour-main-500))"></circle><path d="M252.729 161.491L250.821 163.399L251.433 164.011L253.341 162.103L252.729 161.491ZM249.381 165.451C250.149 166.219 251.289 166.219 252.069 165.451L252.957 164.563L252.345 163.951L251.517 164.779C251.037 165.259 250.473 165.319 249.993 164.839C249.525 164.371 249.585 163.807 250.065 163.327L250.893 162.499L250.281 161.887L249.477 162.691C248.709 163.459 248.625 164.683 249.381 165.451ZM251.229 160.939L251.841 161.551L252.669 160.723C253.137 160.243 253.713 160.183 254.181 160.651C254.649 161.119 254.589 161.695 254.121 162.175L253.281 163.003L253.893 163.615L254.793 162.727C255.561 161.959 255.549 160.807 254.793 160.039C254.025 159.283 252.885 159.283 252.117 160.051L251.229 160.939Z" fill="rgb(var(--colour-main))"></path><path d="M85.8464 157.964H87.1484V166.602H91.8104V167.75H85.8464V157.964ZM100.283 165.482C100.031 167.022 98.8686 168.002 97.1466 168.002C94.9346 168.002 93.8146 166.392 93.8146 164.152C93.8146 161.702 95.1446 160.19 97.1746 160.19C99.4426 160.19 100.437 161.884 100.437 164.432H95.0326C95.0746 165.874 95.7746 166.924 97.1886 166.924C98.1406 166.924 98.7846 166.462 99.1066 165.482H100.283ZM97.1606 161.268C95.8446 161.268 95.1586 162.248 95.0606 163.48H99.1766C99.1766 162.262 98.4206 161.268 97.1606 161.268ZM107.691 157.544H108.853V167.75H107.817V166.714C107.229 167.568 106.445 168.002 105.479 168.002C103.309 168.002 102.287 166.266 102.287 164.012C102.287 161.898 103.351 160.19 105.437 160.19C106.431 160.19 107.187 160.568 107.691 161.324V157.544ZM105.633 161.282C104.261 161.282 103.505 162.514 103.505 164.096C103.505 165.594 104.149 166.91 105.647 166.91C107.117 166.91 107.691 165.496 107.691 164.138C107.691 162.668 107.103 161.282 105.633 161.282ZM114.217 170.802C112.621 170.802 111.417 170.144 111.221 168.59H112.439C112.607 169.416 113.181 169.822 114.245 169.822C115.715 169.822 116.317 169.094 116.317 167.134V166.714C115.883 167.568 115.099 168.002 114.133 168.002C111.963 168.002 110.941 166.308 110.941 164.054C110.941 161.898 112.005 160.19 114.091 160.19C115.085 160.19 115.841 160.568 116.345 161.324V160.414H117.507V166.56C117.507 167.582 117.423 168.352 117.255 168.884C116.849 170.158 115.799 170.802 114.217 170.802ZM114.301 166.91C115.771 166.91 116.345 165.496 116.345 164.138C116.345 162.668 115.757 161.282 114.287 161.282C112.915 161.282 112.159 162.514 112.159 164.096C112.159 165.594 112.803 166.91 114.301 166.91ZM126.246 165.482C125.994 167.022 124.832 168.002 123.11 168.002C120.898 168.002 119.778 166.392 119.778 164.152C119.778 161.702 121.108 160.19 123.138 160.19C125.406 160.19 126.4 161.884 126.4 164.432H120.996C121.038 165.874 121.738 166.924 123.152 166.924C124.104 166.924 124.748 166.462 125.07 165.482H126.246ZM123.124 161.268C121.808 161.268 121.122 162.248 121.024 163.48H125.14C125.14 162.262 124.384 161.268 123.124 161.268ZM129.118 167.75V160.414H130.196V161.996C130.686 160.946 131.624 160.204 132.828 160.204C134.508 160.204 135.376 161.128 135.516 162.584H134.354C134.186 161.702 133.71 161.226 132.716 161.226C131.246 161.226 130.294 162.472 130.294 164.194V167.75H129.118Z" fill="rgb(var(--colour-main-500))"></path><rect x="72.1104" y="162.75" width="6" height="6" fill="rgb(var(--colour-inactive-br))"></rect><rect x="72.1104" y="156.75" width="6" height="6" fill="rgb(var(--colour-inactive-tr))"></rect><rect x="66.1104" y="162.75" width="6" height="6" fill="rgb(var(--colour-inactive-bl))"></rect><rect x="66.1104" y="156.75" width="6" height="6" fill="rgb(var(--colour-main-400))"></rect><rect x="36.1104" y="126.5" width="378" height="225" stroke="rgb(var(--colour-main-500))"></rect><rect x="54.1104" y="144.5" width="162" height="189" stroke="rgb(var(--colour-main-500))"></rect><path d="M38.1404 113.5V105.338H44.0904V106.402H39.3724V108.782H43.5304V109.846H39.3724V113.5H38.1404ZM45.8706 113.5V105.338H49.7206C51.3166 105.338 52.2826 106.136 52.2826 107.522C52.2826 108.474 51.8766 109.062 50.8966 109.496C51.8486 109.874 52.0166 110.154 52.0586 111.582C52.0586 111.75 52.1146 112.422 52.1706 112.674C52.2126 112.884 52.3106 113.066 52.5626 113.234V113.5H51.1206C50.9386 113.136 50.8546 112.772 50.8546 112.142C50.8546 111.82 50.8686 111.694 50.8686 111.372C50.8686 110.49 50.5046 110.07 49.5246 110.07H47.1026V113.5H45.8706ZM47.1026 109.006H49.4126C50.4346 109.006 51.0086 108.656 51.0086 107.704C51.0086 106.752 50.4486 106.402 49.4126 106.402H47.1026V109.006ZM53.6429 113.5L56.6949 105.338H58.2209L61.2169 113.5H59.8729L59.0749 111.288H55.7709L54.9449 113.5H53.6429ZM56.0929 110.252H58.7249L57.4369 106.696L56.0929 110.252ZM66.0072 113.64C63.5852 113.64 62.0732 111.834 62.0732 109.496C62.0732 107.018 63.6132 105.198 66.1332 105.198C67.8972 105.198 69.3392 106.108 69.6472 107.844H68.4152C68.1492 106.794 67.2252 106.276 66.1192 106.276C64.2712 106.276 63.3052 107.662 63.3052 109.454C63.3052 111.26 64.3972 112.576 66.1612 112.576C67.6732 112.576 68.6672 111.694 68.6672 110.378V110.224H66.2872V109.16H69.7312V113.542H68.8212L68.7092 112.338C67.8832 113.262 67.0712 113.64 66.0072 113.64ZM71.6935 113.5V105.338H73.4435L75.7815 112.268L78.0635 105.338H79.8135V113.5H78.6375V106.794L76.4115 113.5H75.1375L72.8835 106.794V113.5H71.6935ZM81.8878 113.5V105.338H87.8798V106.402H83.1198V108.782H87.6698V109.846H83.1198V112.436H88.0898V113.5H81.8878ZM89.7861 113.5V105.338H91.1021L95.3581 111.68V105.338H96.5481V113.5H95.2041L90.9761 107.172V113.5H89.7861ZM100.624 113.5V106.402H97.8524V105.338H104.614V106.402H101.856V113.5H100.624Z" fill="rgb(var(--colour-main-500))"></path><path d="M265.846 157.964H267.148V166.602H271.81V167.75H265.846V157.964ZM276.517 159.364V157.964H277.917V159.364H276.517ZM274.123 167.75V166.798H276.643V161.366H274.123V160.414H277.791V166.798H280.045V167.75H274.123ZM282.833 167.75V160.414H283.911V161.632C284.485 160.736 285.185 160.204 286.347 160.204C287.621 160.204 288.671 160.848 288.671 162.206V167.75H287.509V162.668C287.509 161.688 286.809 161.226 285.997 161.226C284.681 161.226 283.995 162.36 283.995 163.62V167.75H282.833ZM293.139 167.75H291.991V157.544H293.139V163.48L296.289 160.414H297.773L295.127 163.032L298.207 167.75H296.821L294.259 163.802L293.139 164.894V167.75Z" fill="rgb(var(--colour-main))"></path></svg></div><div class="block tablet:hidden"><svg width="100%" height="100%" viewBox="0 0 379 415" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="378" height="414" transform="translate(0.110352 0.75)" fill="rgb(var(--colour-negative))"></rect><path d="M25.1944 28.312H20.9944V31.602H25.6564V32.75H19.6924V22.964H25.4044V24.112H20.9944V27.164H25.1944V28.312ZM34.2126 25.414L31.7486 28.956L34.2826 32.75H32.8966L31.0906 29.964L29.2566 32.75H27.8986L30.4886 29.012L28.0386 25.414H29.4106L31.1326 28.046L32.8826 25.414H34.2126ZM39.8009 25.414H42.6849V26.366H39.8009V30.454C39.8009 31.532 40.3749 31.896 41.4389 31.896C41.9149 31.896 42.3349 31.854 42.6849 31.756V32.778C42.2229 32.918 41.7609 32.946 41.3689 32.946C39.5909 32.946 38.6389 32.26 38.6389 30.664V26.366H36.5249V25.414H38.6389V23.398H39.8009V25.414ZM51.5912 30.482C51.3392 32.022 50.1772 33.002 48.4552 33.002C46.2432 33.002 45.1232 31.392 45.1232 29.152C45.1232 26.702 46.4532 25.19 48.4832 25.19C50.7512 25.19 51.7452 26.884 51.7452 29.432H46.3412C46.3832 30.874 47.0832 31.924 48.4972 31.924C49.4492 31.924 50.0932 31.462 50.4152 30.482H51.5912ZM48.4692 26.268C47.1532 26.268 46.4672 27.248 46.3692 28.48H50.4852C50.4852 27.262 49.7292 26.268 48.4692 26.268ZM54.4635 32.75V25.414H55.5415V26.996C56.0315 25.946 56.9695 25.204 58.1735 25.204C59.8535 25.204 60.7215 26.128 60.8615 27.584H59.6995C59.5315 26.702 59.0555 26.226 58.0615 26.226C56.5915 26.226 55.6395 27.472 55.6395 29.194V32.75H54.4635ZM62.7958 32.75V25.414H63.8738V26.632C64.4478 25.736 65.1478 25.204 66.3098 25.204C67.5838 25.204 68.6338 25.848 68.6338 27.206V32.75H67.4718V27.668C67.4718 26.688 66.7718 26.226 65.9598 26.226C64.6438 26.226 63.9578 27.36 63.9578 28.62V32.75H62.7958ZM78.0021 31.98V32.862C77.7081 32.946 77.4841 32.988 77.3021 32.988C76.4901 32.988 76.0841 32.638 76.0001 31.882C75.1741 32.694 74.4461 33.002 73.5081 33.002C72.0801 33.002 71.1141 32.204 71.1141 30.846C71.1141 29.334 72.2621 28.788 73.1161 28.648C73.3681 28.606 73.9141 28.522 74.7401 28.41C75.6781 28.284 75.9861 28.102 75.9861 27.626V27.374C75.9861 26.646 75.4121 26.282 74.3061 26.282C73.2281 26.282 72.6961 26.688 72.5981 27.584H71.4221C71.4501 25.89 72.6261 25.204 74.3621 25.204C76.1681 25.204 77.1201 25.904 77.1201 27.206V31.434C77.1201 31.812 77.3301 32.008 77.7501 32.008C77.8201 32.008 77.9321 31.994 78.0021 31.98ZM75.9861 30.202V29.04C75.4961 29.264 74.6981 29.39 74.0821 29.46C72.9901 29.586 72.3041 29.894 72.3041 30.818C72.3041 31.546 72.8641 31.98 73.8021 31.98C74.8241 31.98 75.9861 31.224 75.9861 30.202ZM83.9964 22.544V31.798H86.2504V32.75H80.3284V31.798H82.8624V23.496H80.3284V22.544H83.9964ZM102.873 32.75L102.005 29.824H98.631L97.763 32.75H96.419L99.513 22.964H101.151L104.231 32.75H102.873ZM98.953 28.732H101.683L100.311 24.14L98.953 28.732ZM112.115 27.836H110.939C110.813 26.87 110.169 26.268 109.147 26.268C107.635 26.268 107.047 27.71 107.047 29.166C107.047 30.622 107.705 31.924 109.175 31.924C110.197 31.924 110.827 31.35 111.023 30.188H112.199C112.045 31.952 110.953 33.002 109.147 33.002C107.005 33.002 105.829 31.322 105.829 29.166C105.829 26.968 106.977 25.19 109.161 25.19C110.953 25.19 112.073 26.282 112.115 27.836ZM120.77 27.836H119.594C119.468 26.87 118.824 26.268 117.802 26.268C116.29 26.268 115.702 27.71 115.702 29.166C115.702 30.622 116.36 31.924 117.83 31.924C118.852 31.924 119.482 31.35 119.678 30.188H120.854C120.7 31.952 119.608 33.002 117.802 33.002C115.66 33.002 114.484 31.322 114.484 29.166C114.484 26.968 115.632 25.19 117.816 25.19C119.608 25.19 120.728 26.282 120.77 27.836ZM126.288 25.19C128.542 25.19 129.606 26.87 129.606 29.096C129.606 31.322 128.542 33.002 126.288 33.002C124.034 33.002 122.97 31.322 122.97 29.096C122.97 26.87 124.034 25.19 126.288 25.19ZM126.288 26.268C124.804 26.268 124.188 27.598 124.188 29.096C124.188 30.594 124.804 31.924 126.288 31.924C127.772 31.924 128.388 30.594 128.388 29.096C128.388 27.598 127.772 26.268 126.288 26.268ZM137.868 25.414V32.75H136.818V31.658C136.146 32.624 135.446 33.002 134.368 33.002C133.738 33.002 133.206 32.862 132.786 32.568C132.282 32.204 132.03 31.686 132.03 31V25.414H133.192V30.538C133.192 31.028 133.36 31.406 133.682 31.658C133.948 31.868 134.298 31.98 134.704 31.98C135.25 31.98 135.712 31.784 136.09 31.378C136.496 30.944 136.706 30.314 136.706 29.488V25.414H137.868ZM140.685 32.75V25.414H141.763V26.632C142.337 25.736 143.037 25.204 144.199 25.204C145.473 25.204 146.523 25.848 146.523 27.206V32.75H145.361V27.668C145.361 26.688 144.661 26.226 143.849 26.226C142.533 26.226 141.847 27.36 141.847 28.62V32.75H140.685ZM152.307 25.414H155.191V26.366H152.307V30.454C152.307 31.532 152.881 31.896 153.945 31.896C154.421 31.896 154.841 31.854 155.191 31.756V32.778C154.729 32.918 154.267 32.946 153.875 32.946C152.097 32.946 151.145 32.26 151.145 30.664V26.366H149.031V25.414H151.145V23.398H152.307V25.414ZM163.593 27.416H162.375C162.347 26.688 161.787 26.226 160.905 26.226C159.953 26.226 159.309 26.646 159.309 27.304C159.309 27.822 159.673 28.13 160.359 28.312L162.025 28.746C163.257 29.068 163.887 29.67 163.887 30.706C163.887 32.134 162.767 33.002 160.947 33.002C159.029 33.002 158.021 32.162 157.937 30.524H159.169C159.281 31.518 159.883 31.966 160.975 31.966C162.011 31.966 162.697 31.574 162.697 30.888C162.697 30.258 162.389 29.992 161.591 29.782L160.051 29.376C158.721 29.026 158.119 28.48 158.119 27.36C158.119 26.03 159.211 25.19 160.933 25.19C162.641 25.19 163.565 26.03 163.593 27.416Z" fill="rgb(var(--colour-main))"></path><rect x="18.1104" y="126.75" width="243" height="198" stroke="rgb(var(--colour-main-500))"></rect><path d="M20.1404 113.75V105.588H26.0904V106.652H21.3724V109.032H25.5304V110.096H21.3724V113.75H20.1404ZM27.8706 113.75V105.588H31.7206C33.3166 105.588 34.2826 106.386 34.2826 107.772C34.2826 108.724 33.8766 109.312 32.8966 109.746C33.8486 110.124 34.0166 110.404 34.0586 111.832C34.0586 112 34.1146 112.672 34.1706 112.924C34.2126 113.134 34.3106 113.316 34.5626 113.484V113.75H33.1206C32.9386 113.386 32.8546 113.022 32.8546 112.392C32.8546 112.07 32.8686 111.944 32.8686 111.622C32.8686 110.74 32.5046 110.32 31.5246 110.32H29.1026V113.75H27.8706ZM29.1026 109.256H31.4126C32.4346 109.256 33.0086 108.906 33.0086 107.954C33.0086 107.002 32.4486 106.652 31.4126 106.652H29.1026V109.256ZM35.6429 113.75L38.6949 105.588H40.2209L43.2169 113.75H41.8729L41.0749 111.538H37.7709L36.9449 113.75H35.6429ZM38.0929 110.502H40.7249L39.4369 106.946L38.0929 110.502ZM48.0072 113.89C45.5852 113.89 44.0732 112.084 44.0732 109.746C44.0732 107.268 45.6132 105.448 48.1332 105.448C49.8972 105.448 51.3392 106.358 51.6472 108.094H50.4152C50.1492 107.044 49.2252 106.526 48.1192 106.526C46.2712 106.526 45.3052 107.912 45.3052 109.704C45.3052 111.51 46.3972 112.826 48.1612 112.826C49.6732 112.826 50.6672 111.944 50.6672 110.628V110.474H48.2872V109.41H51.7312V113.792H50.8212L50.7092 112.588C49.8832 113.512 49.0712 113.89 48.0072 113.89ZM53.6935 113.75V105.588H55.4435L57.7815 112.518L60.0635 105.588H61.8135V113.75H60.6375V107.044L58.4115 113.75H57.1375L54.8835 107.044V113.75H53.6935ZM63.8878 113.75V105.588H69.8798V106.652H65.1198V109.032H69.6698V110.096H65.1198V112.686H70.0898V113.75H63.8878ZM71.7861 113.75V105.588H73.1021L77.3581 111.93V105.588H78.5481V113.75H77.2041L72.9761 107.422V113.75H71.7861ZM82.6244 113.75V106.652H79.8524V105.588H86.6144V106.652H83.8564V113.75H82.6244Z" fill="rgb(var(--colour-main-500))"></path><g clip-path="url(#clip0_2738_2508_dark)"><circle cx="174.11" cy="189.75" r="6" fill="rgb(var(--colour-main-500))"></circle><path d="M185.53 194.75L188.624 184.964H190.262L193.342 194.75H191.984L191.116 191.824H187.742L186.874 194.75H185.53ZM188.064 190.732H190.794L189.422 186.14L188.064 190.732ZM200.051 189.836C199.925 188.87 199.281 188.268 198.259 188.268C196.747 188.268 196.159 189.71 196.159 191.166C196.159 192.622 196.817 193.924 198.287 193.924C199.309 193.924 199.939 193.35 200.135 192.188H201.311C201.157 193.952 200.065 195.002 198.259 195.002C196.117 195.002 194.941 193.322 194.941 191.166C194.941 188.968 196.089 187.19 198.273 187.19C200.065 187.19 201.185 188.282 201.227 189.836H200.051ZM208.705 189.836C208.579 188.87 207.935 188.268 206.913 188.268C205.401 188.268 204.813 189.71 204.813 191.166C204.813 192.622 205.471 193.924 206.941 193.924C207.963 193.924 208.593 193.35 208.789 192.188H209.965C209.811 193.952 208.719 195.002 206.913 195.002C204.771 195.002 203.595 193.322 203.595 191.166C203.595 188.968 204.743 187.19 206.927 187.19C208.719 187.19 209.839 188.282 209.881 189.836H208.705ZM215.455 187.414H218.339V188.366H215.455V192.454C215.455 193.532 216.029 193.91 217.093 193.91C217.569 193.91 217.989 193.882 218.339 193.784V194.778C217.877 194.918 217.415 194.946 217.023 194.946C215.245 194.946 214.293 194.26 214.293 192.664V188.366H212.179V187.414H214.293V185.398H215.455V187.414Z" fill="rgb(var(--colour-main))"></path></g><rect x="156.11" y="171.75" width="84" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="144.11" y="135.75" width="108" height="180" stroke="rgb(var(--colour-main-500))"></rect><rect x="27.1104" y="135.75" width="108" height="180" stroke="rgb(var(--colour-main-500))"></rect><path d="M175.846 148.964H177.148V157.602H181.81V158.75H175.846V148.964ZM186.517 150.364V148.964H187.917V150.364H186.517ZM184.123 158.75V157.798H186.643V152.366H184.123V151.414H187.791V157.798H190.045V158.75H184.123ZM192.833 158.75V151.414H193.911V152.632C194.485 151.736 195.185 151.204 196.347 151.204C197.621 151.204 198.671 151.848 198.671 153.206V158.75H197.509V153.668C197.509 152.688 196.809 152.226 195.997 152.226C194.681 152.226 193.995 153.36 193.995 154.62V158.75H192.833ZM203.139 158.75H201.991V148.544H203.139V154.48L206.289 151.414H207.773L205.127 154.032L208.207 158.75H206.821L204.259 154.802L203.139 155.894V158.75Z" fill="rgb(var(--colour-main))"></path><rect width="12" height="12" transform="translate(156.11 147.75)" fill="rgb(var(--colour-main-500))"></rect><circle cx="162.11" cy="153.75" r="6" fill="rgb(var(--colour-main-500))"></circle><path d="M162.729 152.491L160.821 154.399L161.433 155.011L163.341 153.103L162.729 152.491ZM159.381 156.451C160.149 157.219 161.289 157.219 162.069 156.451L162.957 155.563L162.345 154.951L161.517 155.779C161.037 156.259 160.473 156.319 159.993 155.839C159.525 155.371 159.585 154.807 160.065 154.327L160.893 153.499L160.281 152.887L159.477 153.691C158.709 154.459 158.625 155.683 159.381 156.451ZM161.229 151.939L161.841 152.551L162.669 151.723C163.137 151.243 163.713 151.183 164.181 151.651C164.649 152.119 164.589 152.695 164.121 153.175L163.281 154.003L163.893 154.615L164.793 153.727C165.561 152.959 165.549 151.807 164.793 151.039C164.025 150.283 162.885 150.283 162.117 151.051L161.229 151.939Z" fill="rgb(var(--colour-main))"></path><path d="M58.8464 148.964H60.1484V157.602H64.8104V158.75H58.8464V148.964ZM73.2826 156.482C73.0306 158.022 71.8686 159.002 70.1466 159.002C67.9346 159.002 66.8146 157.392 66.8146 155.152C66.8146 152.702 68.1446 151.19 70.1746 151.19C72.4426 151.19 73.4366 152.884 73.4366 155.432H68.0326C68.0746 156.874 68.7746 157.924 70.1886 157.924C71.1406 157.924 71.7846 157.462 72.1066 156.482H73.2826ZM70.1606 152.268C68.8446 152.268 68.1586 153.248 68.0606 154.48H72.1766C72.1766 153.262 71.4206 152.268 70.1606 152.268ZM80.6909 148.544H81.8529V158.75H80.8169V157.714C80.2289 158.568 79.4449 159.002 78.4789 159.002C76.3089 159.002 75.2869 157.266 75.2869 155.012C75.2869 152.898 76.3509 151.19 78.4369 151.19C79.4309 151.19 80.1869 151.568 80.6909 152.324V148.544ZM78.6329 152.282C77.2609 152.282 76.5049 153.514 76.5049 155.096C76.5049 156.594 77.1489 157.91 78.6469 157.91C80.1169 157.91 80.6909 156.496 80.6909 155.138C80.6909 153.668 80.1029 152.282 78.6329 152.282ZM87.2172 161.802C85.6212 161.802 84.4172 161.144 84.2212 159.59H85.4392C85.6072 160.416 86.1812 160.822 87.2452 160.822C88.7152 160.822 89.3172 160.094 89.3172 158.134V157.714C88.8832 158.568 88.0992 159.002 87.1332 159.002C84.9632 159.002 83.9412 157.308 83.9412 155.054C83.9412 152.898 85.0052 151.19 87.0912 151.19C88.0852 151.19 88.8412 151.568 89.3452 152.324V151.414H90.5072V157.56C90.5072 158.582 90.4232 159.352 90.2552 159.884C89.8492 161.158 88.7992 161.802 87.2172 161.802ZM87.3012 157.91C88.7712 157.91 89.3452 156.496 89.3452 155.138C89.3452 153.668 88.7572 152.282 87.2872 152.282C85.9152 152.282 85.1592 153.514 85.1592 155.096C85.1592 156.594 85.8032 157.91 87.3012 157.91ZM99.2455 156.482C98.9935 158.022 97.8315 159.002 96.1095 159.002C93.8975 159.002 92.7775 157.392 92.7775 155.152C92.7775 152.702 94.1075 151.19 96.1375 151.19C98.4055 151.19 99.3995 152.884 99.3995 155.432H93.9955C94.0375 156.874 94.7375 157.924 96.1515 157.924C97.1035 157.924 97.7475 157.462 98.0695 156.482H99.2455ZM96.1235 152.268C94.8075 152.268 94.1215 153.248 94.0235 154.48H98.1395C98.1395 153.262 97.3835 152.268 96.1235 152.268ZM102.118 158.75V151.414H103.196V152.996C103.686 151.946 104.624 151.204 105.828 151.204C107.508 151.204 108.376 152.128 108.516 153.584H107.354C107.186 152.702 106.71 152.226 105.716 152.226C104.246 152.226 103.294 153.472 103.294 155.194V158.75H102.118Z" fill="rgb(var(--colour-main-500))"></path><rect width="12" height="12" transform="translate(39.1104 147.75)" fill="rgb(var(--colour-main-500))"></rect><rect x="45.1104" y="153.75" width="6" height="6" fill="rgb(var(--colour-inactive-br))"></rect><rect x="45.1104" y="147.75" width="6" height="6" fill="rgb(var(--colour-inactive-tr))"></rect><rect x="39.1104" y="153.75" width="6" height="6" fill="rgb(var(--colour-inactive-bl))"></rect><rect x="39.1104" y="147.75" width="6" height="6" fill="rgb(var(--colour-main-400))"></rect><line x1="288.11" y1="190.25" x2="240.11" y2="190.25" stroke="rgb(var(--colour-main-500))"></line><rect x="279.11" y="135.75" width="81" height="180" stroke="rgb(var(--colour-main-500))"></rect><path d="M293.206 158.75H289.398V148.964H292.884C294.634 148.964 295.838 149.916 295.838 151.456C295.838 152.394 295.39 153.332 294.536 153.64C295.558 153.976 296.16 154.788 296.16 155.964C296.16 157.434 295.138 158.75 293.206 158.75ZM290.672 157.644H293.052C294.284 157.644 294.83 156.944 294.83 155.95C294.83 154.97 294.284 154.27 293.052 154.27H290.672V157.644ZM290.672 153.164H292.688C293.738 153.164 294.508 152.828 294.508 151.638C294.508 150.434 293.738 150.07 292.688 150.07H290.672V153.164ZM304.731 158.862C304.437 158.946 304.213 158.988 304.031 158.988C303.219 158.988 302.813 158.638 302.729 157.882C301.903 158.694 301.175 159.002 300.237 159.002C298.809 159.002 297.843 158.204 297.843 156.846C297.843 155.334 298.991 154.788 299.845 154.648C300.097 154.606 300.643 154.522 301.469 154.41C302.407 154.284 302.715 154.102 302.715 153.626V153.374C302.715 152.646 302.141 152.282 301.035 152.282C299.957 152.282 299.425 152.688 299.327 153.584H298.151C298.179 151.89 299.355 151.204 301.091 151.204C302.897 151.204 303.849 151.904 303.849 153.206V157.434C303.849 157.812 304.059 158.008 304.479 158.008C304.549 158.008 304.661 157.994 304.731 157.98V158.862ZM299.033 156.818C299.033 157.546 299.593 157.98 300.531 157.98C301.553 157.98 302.715 157.224 302.715 156.202V155.04C302.225 155.264 301.427 155.39 300.811 155.46C299.719 155.586 299.033 155.894 299.033 156.818ZM306.833 158.75V151.414H307.911V152.632C308.485 151.736 309.185 151.204 310.347 151.204C311.621 151.204 312.671 151.848 312.671 153.206V158.75H311.509V153.668C311.509 152.688 310.809 152.226 309.997 152.226C308.681 152.226 307.995 153.36 307.995 154.62V158.75H306.833ZM317.139 158.75H315.991V148.544H317.139V154.48L320.289 151.414H321.773L319.127 154.032L322.207 158.75H320.821L318.259 154.802L317.139 155.894V158.75Z" fill="rgb(var(--colour-main-500))"></path><path d="M306.984 194.75L306.116 191.824H302.742L301.874 194.75H300.53L303.624 184.964H305.262L308.342 194.75H306.984ZM303.064 190.732H305.794L304.422 186.14L303.064 190.732ZM316.227 189.836H315.051C314.925 188.87 314.281 188.268 313.259 188.268C311.747 188.268 311.159 189.71 311.159 191.166C311.159 192.622 311.817 193.924 313.287 193.924C314.309 193.924 314.939 193.35 315.135 192.188H316.311C316.157 193.952 315.065 195.002 313.259 195.002C311.117 195.002 309.941 193.322 309.941 191.166C309.941 188.968 311.089 187.19 313.273 187.19C315.065 187.19 316.185 188.282 316.227 189.836ZM324.881 189.836H323.705C323.579 188.87 322.935 188.268 321.913 188.268C320.401 188.268 319.813 189.71 319.813 191.166C319.813 192.622 320.471 193.924 321.941 193.924C322.963 193.924 323.593 193.35 323.789 192.188H324.965C324.811 193.952 323.719 195.002 321.913 195.002C319.771 195.002 318.595 193.322 318.595 191.166C318.595 188.968 319.743 187.19 321.927 187.19C323.719 187.19 324.839 188.282 324.881 189.836ZM330.455 187.414H333.339V188.366H330.455V192.454C330.455 193.532 331.029 193.896 332.093 193.896C332.569 193.896 332.989 193.854 333.339 193.756V194.778C332.877 194.918 332.415 194.946 332.023 194.946C330.245 194.946 329.293 194.26 329.293 192.664V188.366H327.179V187.414H329.293V185.398H330.455V187.414Z" fill="rgb(var(--colour-main-500))"></path><rect x="288.11" y="171.75" width="63" height="36" stroke="rgb(var(--colour-main-500))"></rect><defs><clipPath id="clip0_2738_2508_dark"><rect x="156.11" y="171.75" width="84" height="36" fill="rgb(var(--colour-negative))"></rect></clipPath></defs></svg></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">After you set up the Link, create a Linked Ledger Account, an account in your Ledger that maps 1:1 with an External Account.</p><div class="pt-f2"><div class="hidden tablet:block"><svg width="100%" height="100%" viewBox="0 0 621 450" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="621" height="450" fill="rgb(var(--colour-negative))"></rect><path d="M19.736 22.214H21.038V30.852H25.7V32H19.736V22.214ZM30.4063 23.614V22.214H31.8063V23.614H30.4063ZM28.0123 32V31.048H30.5323V25.616H28.0123V24.664H31.6803V31.048H33.9343V32H28.0123ZM36.7226 32V24.664H37.8006V25.882C38.3746 24.986 39.0746 24.454 40.2366 24.454C41.5106 24.454 42.5606 25.098 42.5606 26.456V32H41.3986V26.918C41.3986 25.938 40.6986 25.476 39.8866 25.476C38.5706 25.476 37.8846 26.61 37.8846 27.87V32H36.7226ZM47.0289 32H45.8809V21.794H47.0289V27.73L50.1789 24.664H51.6629L49.0169 27.282L52.0969 32H50.7109L48.1489 28.052L47.0289 29.144V32ZM59.0292 27.73C59.0292 26.512 58.2732 25.518 57.0132 25.518C55.6972 25.518 55.0112 26.498 54.9132 27.73H59.0292ZM53.6672 28.402C53.6672 25.952 54.9972 24.44 57.0272 24.44C59.2952 24.44 60.2892 26.134 60.2892 28.682H54.8852C54.9272 30.124 55.6272 31.174 57.0412 31.174C57.9932 31.174 58.6372 30.712 58.9592 29.732H60.1352C59.8832 31.272 58.7212 32.252 56.9992 32.252C54.7872 32.252 53.6672 30.642 53.6672 28.402ZM67.5435 21.794H68.7055V32H67.6695V30.964C67.0815 31.818 66.2975 32.252 65.3315 32.252C63.1615 32.252 62.1395 30.516 62.1395 28.262C62.1395 26.148 63.2035 24.44 65.2895 24.44C66.2835 24.44 67.0395 24.818 67.5435 25.574V21.794ZM63.3575 28.346C63.3575 29.844 64.0015 31.16 65.4995 31.16C66.9695 31.16 67.5435 29.746 67.5435 28.388C67.5435 26.918 66.9555 25.532 65.4855 25.532C64.1135 25.532 63.3575 26.764 63.3575 28.346ZM80.3161 22.214H81.6181V30.852H86.2801V32H80.3161V22.214ZM93.6464 27.73C93.6464 26.512 92.8904 25.518 91.6304 25.518C90.3144 25.518 89.6284 26.498 89.5304 27.73H93.6464ZM88.2844 28.402C88.2844 25.952 89.6144 24.44 91.6444 24.44C93.9124 24.44 94.9064 26.134 94.9064 28.682H89.5024C89.5444 30.124 90.2444 31.174 91.6584 31.174C92.6104 31.174 93.2544 30.712 93.5764 29.732H94.7524C94.5004 31.272 93.3384 32.252 91.6164 32.252C89.4044 32.252 88.2844 30.642 88.2844 28.402ZM102.161 21.794H103.323V32H102.287V30.964C101.699 31.818 100.915 32.252 99.9487 32.252C97.7787 32.252 96.7567 30.516 96.7567 28.262C96.7567 26.148 97.8207 24.44 99.9067 24.44C100.901 24.44 101.657 24.818 102.161 25.574V21.794ZM97.9747 28.346C97.9747 29.844 98.6187 31.16 100.117 31.16C101.587 31.16 102.161 29.746 102.161 28.388C102.161 26.918 101.573 25.532 100.103 25.532C98.7307 25.532 97.9747 26.764 97.9747 28.346ZM108.687 35.052C107.091 35.052 105.887 34.394 105.691 32.84H106.909C107.077 33.666 107.651 34.072 108.715 34.072C110.185 34.072 110.787 33.344 110.787 31.384V30.964C110.353 31.818 109.569 32.252 108.603 32.252C106.433 32.252 105.411 30.558 105.411 28.304C105.411 26.148 106.475 24.44 108.561 24.44C109.555 24.44 110.311 24.818 110.815 25.574V24.664H111.977V30.81C111.977 31.832 111.893 32.602 111.725 33.134C111.319 34.408 110.269 35.052 108.687 35.052ZM106.629 28.346C106.629 29.844 107.273 31.16 108.771 31.16C110.241 31.16 110.815 29.746 110.815 28.388C110.815 26.918 110.227 25.532 108.757 25.532C107.385 25.532 106.629 26.764 106.629 28.346ZM119.609 27.73C119.609 26.512 118.853 25.518 117.593 25.518C116.277 25.518 115.591 26.498 115.493 27.73H119.609ZM114.247 28.402C114.247 25.952 115.577 24.44 117.607 24.44C119.875 24.44 120.869 26.134 120.869 28.682H115.465C115.507 30.124 116.207 31.174 117.621 31.174C118.573 31.174 119.217 30.712 119.539 29.732H120.715C120.463 31.272 119.301 32.252 117.579 32.252C115.367 32.252 114.247 30.642 114.247 28.402ZM123.588 32V24.664H124.666V26.246C125.156 25.196 126.094 24.454 127.298 24.454C128.978 24.454 129.846 25.378 129.986 26.834H128.824C128.656 25.952 128.18 25.476 127.186 25.476C125.716 25.476 124.764 26.722 124.764 28.444V32H123.588ZM139.58 32L142.674 22.214H144.312L147.392 32H146.034L145.166 29.074H141.792L140.924 32H139.58ZM142.114 27.982H144.844L143.472 23.39L142.114 27.982ZM154.1 27.086C153.974 26.12 153.33 25.518 152.308 25.518C150.796 25.518 150.208 26.96 150.208 28.416C150.208 29.872 150.866 31.174 152.336 31.174C153.358 31.174 153.988 30.6 154.184 29.438H155.36C155.206 31.202 154.114 32.252 152.308 32.252C150.166 32.252 148.99 30.572 148.99 28.416C148.99 26.218 150.138 24.44 152.322 24.44C154.114 24.44 155.234 25.532 155.276 27.086H154.1ZM162.755 27.086C162.629 26.12 161.985 25.518 160.963 25.518C159.451 25.518 158.863 26.96 158.863 28.416C158.863 29.872 159.521 31.174 160.991 31.174C162.013 31.174 162.643 30.6 162.839 29.438H164.015C163.861 31.202 162.769 32.252 160.963 32.252C158.821 32.252 157.645 30.572 157.645 28.416C157.645 26.218 158.793 24.44 160.977 24.44C162.769 24.44 163.889 25.532 163.931 27.086H162.755ZM169.449 24.44C171.703 24.44 172.767 26.12 172.767 28.346C172.767 30.572 171.703 32.252 169.449 32.252C167.195 32.252 166.131 30.572 166.131 28.346C166.131 26.12 167.195 24.44 169.449 24.44ZM167.349 28.346C167.349 29.844 167.965 31.174 169.449 31.174C170.933 31.174 171.549 29.844 171.549 28.346C171.549 26.848 170.933 25.518 169.449 25.518C167.965 25.518 167.349 26.848 167.349 28.346ZM181.029 24.664V32H179.979V30.908C179.307 31.874 178.607 32.252 177.529 32.252C176.899 32.252 176.367 32.112 175.947 31.818C175.443 31.454 175.191 30.936 175.191 30.25V24.664H176.353V29.788C176.353 30.278 176.521 30.656 176.843 30.908C177.109 31.118 177.459 31.23 177.865 31.23C178.411 31.23 178.873 31.034 179.251 30.628C179.657 30.194 179.867 29.564 179.867 28.738V24.664H181.029ZM183.846 32V24.664H184.924V25.882C185.498 24.986 186.198 24.454 187.36 24.454C188.634 24.454 189.684 25.098 189.684 26.456V32H188.522V26.918C188.522 25.938 187.822 25.476 187.01 25.476C185.694 25.476 185.008 26.61 185.008 27.87V32H183.846ZM195.468 24.664H198.352V25.616H195.468V29.704C195.468 30.782 196.042 31.16 197.106 31.16C197.582 31.16 198.002 31.132 198.352 31.034V32.028C197.89 32.168 197.428 32.196 197.036 32.196C195.258 32.196 194.306 31.51 194.306 29.914V25.616H192.192V24.664H194.306V22.648H195.468V24.664ZM205.536 26.666C205.508 25.938 204.948 25.476 204.066 25.476C203.114 25.476 202.47 25.896 202.47 26.554C202.47 27.072 202.834 27.38 203.52 27.562L205.186 27.996C206.418 28.318 207.048 28.92 207.048 29.956C207.048 31.384 205.928 32.252 204.108 32.252C202.19 32.252 201.182 31.412 201.098 29.774H202.33C202.442 30.768 203.044 31.216 204.136 31.216C205.172 31.216 205.858 30.824 205.858 30.138C205.858 29.508 205.55 29.242 204.752 29.032L203.212 28.626C201.882 28.276 201.28 27.73 201.28 26.61C201.28 25.28 202.372 24.44 204.094 24.44C205.802 24.44 206.726 25.28 206.754 26.666H205.536Z" fill="rgb(var(--colour-main))"></path><line x1="246" y1="198.5" x2="204" y2="198.5" stroke="rgb(var(--colour-main-500))"></line><line x1="444" y1="198.5" x2="384" y2="198.5" stroke="rgb(var(--colour-main-500))"></line><circle cx="84" cy="198" r="6" fill="#5AC93B"></circle><path d="M85.82 201.495H86.79L84.59 194.505H83.42L81.21 201.495H82.17L82.79 199.405H85.2L85.82 201.495ZM83.02 198.625L83.99 195.345L84.97 198.625H83.02Z" fill="rgb(var(--colour-negative))"></path><path d="M96.736 193.214H98.038V201.852H102.7V203H96.736V193.214ZM105.068 203V195.664H106.146V196.882C106.72 195.986 107.42 195.454 108.582 195.454C109.856 195.454 110.906 196.098 110.906 197.456V203H109.744V197.918C109.744 196.938 109.044 196.476 108.232 196.476C106.916 196.476 106.23 197.61 106.23 198.87V203H105.068ZM115.375 203H114.227V192.794H115.375V198.73L118.525 195.664H120.009L117.363 198.282L120.443 203H119.057L116.495 199.052L115.375 200.144V203ZM120.963 205.044H129.615V206.052H120.963V205.044ZM136.491 203L135.623 200.074H132.249L131.381 203H130.037L133.131 193.214H134.769L137.849 203H136.491ZM132.571 198.982H135.301L133.929 194.39L132.571 198.982ZM145.733 198.086H144.557C144.431 197.12 143.787 196.518 142.765 196.518C141.253 196.518 140.665 197.96 140.665 199.416C140.665 200.872 141.323 202.174 142.793 202.174C143.815 202.174 144.445 201.6 144.641 200.438H145.817C145.663 202.202 144.571 203.252 142.765 203.252C140.623 203.252 139.447 201.572 139.447 199.416C139.447 197.218 140.595 195.44 142.779 195.44C144.571 195.44 145.691 196.532 145.733 198.086ZM154.388 198.086H153.212C153.086 197.12 152.442 196.518 151.42 196.518C149.908 196.518 149.32 197.96 149.32 199.416C149.32 200.872 149.978 202.174 151.448 202.174C152.47 202.174 153.1 201.6 153.296 200.438H154.472C154.318 202.202 153.226 203.252 151.42 203.252C149.278 203.252 148.102 201.572 148.102 199.416C148.102 197.218 149.25 195.44 151.434 195.44C153.226 195.44 154.346 196.532 154.388 198.086ZM159.906 195.44C162.16 195.44 163.224 197.12 163.224 199.346C163.224 201.572 162.16 203.252 159.906 203.252C157.652 203.252 156.588 201.572 156.588 199.346C156.588 197.12 157.652 195.44 159.906 195.44ZM159.906 196.518C158.422 196.518 157.806 197.848 157.806 199.346C157.806 200.844 158.422 202.174 159.906 202.174C161.39 202.174 162.006 200.844 162.006 199.346C162.006 197.848 161.39 196.518 159.906 196.518ZM171.486 195.664V203H170.436V201.908C169.764 202.874 169.064 203.252 167.986 203.252C167.356 203.252 166.824 203.112 166.404 202.818C165.9 202.454 165.648 201.936 165.648 201.25V195.664H166.81V200.788C166.81 201.278 166.978 201.656 167.3 201.908C167.566 202.118 167.916 202.23 168.322 202.23C168.868 202.23 169.33 202.034 169.708 201.628C170.114 201.194 170.324 200.564 170.324 199.738V195.664H171.486ZM174.303 203V195.664H175.381V196.882C175.955 195.986 176.655 195.454 177.817 195.454C179.091 195.454 180.141 196.098 180.141 197.456V203H178.979V197.918C178.979 196.938 178.279 196.476 177.467 196.476C176.151 196.476 175.465 197.61 175.465 198.87V203H174.303ZM185.925 195.664H188.809V196.616H185.925V200.704C185.925 201.782 186.499 202.146 187.563 202.146C188.039 202.146 188.459 202.104 188.809 202.006V203.028C188.347 203.168 187.885 203.196 187.493 203.196C185.715 203.196 184.763 202.51 184.763 200.914V196.616H182.649V195.664H184.763V193.648H185.925V195.664Z" fill="rgb(var(--colour-main))"></path><rect x="66" y="180" width="138" height="36" stroke="rgb(var(--colour-main-500))"></rect><circle cx="264" cy="198" r="6" fill="rgb(var(--colour-main-500))"></circle><path d="M282.084 198.562H277.884V201.852H282.546V203H276.582V193.214H282.294V194.362H277.884V197.414H282.084V198.562ZM291.102 195.664L288.638 199.206L291.172 203H289.786L287.98 200.214L286.146 203H284.788L287.378 199.262L284.928 195.664H286.3L288.022 198.296L289.772 195.664H291.102ZM296.691 195.664H299.575V196.616H296.691V200.704C296.691 201.782 297.265 202.146 298.329 202.146C298.805 202.146 299.225 202.104 299.575 202.006V203.028C299.113 203.168 298.651 203.196 298.259 203.196C296.481 203.196 295.529 202.51 295.529 200.914V196.616H293.415V195.664H295.529V193.648H296.691V195.664ZM300.963 205.044H309.615V206.052H300.963V205.044ZM316.491 203L315.623 200.074H312.249L311.381 203H310.037L313.131 193.214H314.769L317.849 203H316.491ZM312.571 198.982H315.301L313.929 194.39L312.571 198.982ZM325.733 198.086H324.557C324.431 197.12 323.787 196.518 322.765 196.518C321.253 196.518 320.665 197.96 320.665 199.416C320.665 200.872 321.323 202.174 322.793 202.174C323.815 202.174 324.445 201.6 324.641 200.438H325.817C325.663 202.202 324.571 203.252 322.765 203.252C320.623 203.252 319.447 201.572 319.447 199.416C319.447 197.218 320.595 195.44 322.779 195.44C324.571 195.44 325.691 196.532 325.733 198.086ZM334.388 198.086H333.212C333.086 197.12 332.442 196.518 331.42 196.518C329.908 196.518 329.32 197.96 329.32 199.416C329.32 200.872 329.978 202.174 331.448 202.174C332.47 202.174 333.1 201.6 333.296 200.438H334.472C334.318 202.202 333.226 203.252 331.42 203.252C329.278 203.252 328.102 201.572 328.102 199.416C328.102 197.218 329.25 195.44 331.434 195.44C333.226 195.44 334.346 196.532 334.388 198.086ZM339.906 195.44C342.16 195.44 343.224 197.12 343.224 199.346C343.224 201.572 342.16 203.252 339.906 203.252C337.652 203.252 336.588 201.572 336.588 199.346C336.588 197.12 337.652 195.44 339.906 195.44ZM339.906 196.518C338.422 196.518 337.806 197.848 337.806 199.346C337.806 200.844 338.422 202.174 339.906 202.174C341.39 202.174 342.006 200.844 342.006 199.346C342.006 197.848 341.39 196.518 339.906 196.518ZM351.486 195.664V203H350.436V201.908C349.764 202.874 349.064 203.252 347.986 203.252C347.356 203.252 346.824 203.112 346.404 202.818C345.9 202.454 345.648 201.936 345.648 201.25V195.664H346.81V200.788C346.81 201.278 346.978 201.656 347.3 201.908C347.566 202.118 347.916 202.23 348.322 202.23C348.868 202.23 349.33 202.034 349.708 201.628C350.114 201.194 350.324 200.564 350.324 199.738V195.664H351.486ZM354.303 203V195.664H355.381V196.882C355.955 195.986 356.655 195.454 357.817 195.454C359.091 195.454 360.141 196.098 360.141 197.456V203H358.979V197.918C358.979 196.938 358.279 196.476 357.467 196.476C356.151 196.476 355.465 197.61 355.465 198.87V203H354.303ZM365.925 195.664H368.809V196.616H365.925V200.704C365.925 201.782 366.499 202.146 367.563 202.146C368.039 202.146 368.459 202.104 368.809 202.006V203.028C368.347 203.168 367.885 203.196 367.493 203.196C365.715 203.196 364.763 202.51 364.763 200.914V196.616H362.649V195.664H364.763V193.648H365.925V195.664Z" fill="rgb(var(--colour-main))"></path><rect x="246" y="180" width="138" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M456.42 203L459.514 193.214H461.152L464.232 203H462.874L462.006 200.074H458.632L457.764 203H456.42ZM458.954 198.982H461.684L460.312 194.39L458.954 198.982ZM470.94 198.086C470.814 197.12 470.17 196.518 469.148 196.518C467.636 196.518 467.048 197.96 467.048 199.416C467.048 200.872 467.706 202.174 469.176 202.174C470.198 202.174 470.828 201.6 471.024 200.438H472.2C472.046 202.202 470.954 203.252 469.148 203.252C467.006 203.252 465.83 201.572 465.83 199.416C465.83 197.218 466.978 195.44 469.162 195.44C470.954 195.44 472.074 196.532 472.116 198.086H470.94ZM479.595 198.086C479.469 197.12 478.825 196.518 477.803 196.518C476.291 196.518 475.703 197.96 475.703 199.416C475.703 200.872 476.361 202.174 477.831 202.174C478.853 202.174 479.483 201.6 479.679 200.438H480.855C480.701 202.202 479.609 203.252 477.803 203.252C475.661 203.252 474.485 201.572 474.485 199.416C474.485 197.218 475.633 195.44 477.817 195.44C479.609 195.44 480.729 196.532 480.771 198.086H479.595ZM486.289 195.44C488.543 195.44 489.607 197.12 489.607 199.346C489.607 201.572 488.543 203.252 486.289 203.252C484.035 203.252 482.971 201.572 482.971 199.346C482.971 197.12 484.035 195.44 486.289 195.44ZM484.189 199.346C484.189 200.844 484.805 202.174 486.289 202.174C487.773 202.174 488.389 200.844 488.389 199.346C488.389 197.848 487.773 196.518 486.289 196.518C484.805 196.518 484.189 197.848 484.189 199.346ZM497.869 195.664V203H496.819V201.908C496.147 202.874 495.447 203.252 494.369 203.252C493.739 203.252 493.207 203.112 492.787 202.818C492.283 202.454 492.031 201.936 492.031 201.25V195.664H493.193V200.788C493.193 201.278 493.361 201.656 493.683 201.908C493.949 202.118 494.299 202.23 494.705 202.23C495.251 202.23 495.713 202.034 496.091 201.628C496.497 201.194 496.707 200.564 496.707 199.738V195.664H497.869ZM500.685 203V195.664H501.763V196.882C502.337 195.986 503.037 195.454 504.199 195.454C505.473 195.454 506.523 196.098 506.523 197.456V203H505.361V197.918C505.361 196.938 504.661 196.476 503.849 196.476C502.533 196.476 501.847 197.61 501.847 198.87V203H500.685ZM512.308 195.664H515.192V196.616H512.308V200.704C512.308 201.782 512.882 202.16 513.946 202.16C514.422 202.16 514.842 202.132 515.192 202.034V203.028C514.73 203.168 514.268 203.196 513.876 203.196C512.098 203.196 511.146 202.51 511.146 200.914V196.616H509.032V195.664H511.146V193.648H512.308V195.664Z" fill="rgb(var(--colour-main-500))"></path><rect x="444" y="180" width="129" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="234" y="144" width="162" height="188.75" stroke="rgb(var(--colour-main-500))"></rect><rect x="432" y="144" width="153" height="188.75" stroke="rgb(var(--colour-main-500))"></rect><path d="M449.096 167H445.288V157.214H448.774C450.524 157.214 451.728 158.166 451.728 159.706C451.728 160.644 451.28 161.582 450.426 161.89C451.448 162.226 452.05 163.038 452.05 164.214C452.05 165.684 451.028 167 449.096 167ZM446.562 165.894H448.942C450.174 165.894 450.72 165.194 450.72 164.2C450.72 163.22 450.174 162.52 448.942 162.52H446.562V165.894ZM446.562 161.414H448.578C449.628 161.414 450.398 161.078 450.398 159.888C450.398 158.684 449.628 158.32 448.578 158.32H446.562V161.414ZM460.62 167.112C460.326 167.196 460.102 167.238 459.92 167.238C459.108 167.238 458.702 166.888 458.618 166.132C457.792 166.944 457.064 167.252 456.126 167.252C454.698 167.252 453.732 166.454 453.732 165.096C453.732 163.584 454.88 163.038 455.734 162.898C455.986 162.856 456.532 162.772 457.358 162.66C458.296 162.534 458.604 162.352 458.604 161.876V161.624C458.604 160.896 458.03 160.532 456.924 160.532C455.846 160.532 455.314 160.938 455.216 161.834H454.04C454.068 160.14 455.244 159.454 456.98 159.454C458.786 159.454 459.738 160.154 459.738 161.456V165.684C459.738 166.062 459.948 166.258 460.368 166.258C460.438 166.258 460.55 166.244 460.62 166.23V167.112ZM454.922 165.068C454.922 165.796 455.482 166.23 456.42 166.23C457.442 166.23 458.604 165.474 458.604 164.452V163.29C458.114 163.514 457.316 163.64 456.7 163.71C455.608 163.836 454.922 164.144 454.922 165.068ZM462.723 167V159.664H463.801V160.882C464.375 159.986 465.075 159.454 466.237 159.454C467.511 159.454 468.561 160.098 468.561 161.456V167H467.399V161.918C467.399 160.938 466.699 160.476 465.887 160.476C464.571 160.476 463.885 161.61 463.885 162.87V167H462.723ZM473.029 167H471.881V156.794H473.029V162.73L476.179 159.664H477.663L475.017 162.282L478.097 167H476.711L474.149 163.052L473.029 164.144V167Z" fill="rgb(var(--colour-main-500))"></path><rect width="12" height="12" transform="translate(246 156)" fill="rgb(var(--colour-main-500))"></rect><circle cx="252" cy="162" r="6" fill="rgb(var(--colour-main-500))"></circle><path d="M252.619 160.741L250.711 162.649L251.323 163.261L253.231 161.353L252.619 160.741ZM249.271 164.701C250.039 165.469 251.179 165.469 251.959 164.701L252.847 163.813L252.235 163.201L251.407 164.029C250.927 164.509 250.363 164.569 249.883 164.089C249.415 163.621 249.475 163.057 249.955 162.577L250.783 161.749L250.171 161.137L249.367 161.941C248.599 162.709 248.515 163.933 249.271 164.701ZM251.119 160.189L251.731 160.801L252.559 159.973C253.027 159.493 253.603 159.433 254.071 159.901C254.539 160.369 254.479 160.945 254.011 161.425L253.171 162.253L253.783 162.865L254.683 161.977C255.451 161.209 255.439 160.057 254.683 159.289C253.915 158.533 252.775 158.533 252.007 159.301L251.119 160.189Z" fill="rgb(var(--colour-main))"></path><path d="M85.736 157.214H87.038V165.852H91.7V167H85.736V157.214ZM99.0663 162.73C99.0663 161.512 98.3103 160.518 97.0503 160.518C95.7343 160.518 95.0483 161.498 94.9503 162.73H99.0663ZM93.7043 163.402C93.7043 160.952 95.0343 159.44 97.0643 159.44C99.3323 159.44 100.326 161.134 100.326 163.682H94.9223C94.9643 165.124 95.6643 166.174 97.0783 166.174C98.0303 166.174 98.6743 165.712 98.9963 164.732H100.172C99.9203 166.272 98.7583 167.252 97.0363 167.252C94.8243 167.252 93.7043 165.642 93.7043 163.402ZM107.581 156.794H108.743V167H107.707V165.964C107.119 166.818 106.335 167.252 105.369 167.252C103.199 167.252 102.177 165.516 102.177 163.262C102.177 161.148 103.241 159.44 105.327 159.44C106.321 159.44 107.077 159.818 107.581 160.574V156.794ZM103.395 163.346C103.395 164.844 104.039 166.16 105.537 166.16C107.007 166.16 107.581 164.746 107.581 163.388C107.581 161.918 106.993 160.532 105.523 160.532C104.151 160.532 103.395 161.764 103.395 163.346ZM114.107 170.052C112.511 170.052 111.307 169.394 111.111 167.84H112.329C112.497 168.666 113.071 169.072 114.135 169.072C115.605 169.072 116.207 168.344 116.207 166.384V165.964C115.773 166.818 114.989 167.252 114.023 167.252C111.853 167.252 110.831 165.558 110.831 163.304C110.831 161.148 111.895 159.44 113.981 159.44C114.975 159.44 115.731 159.818 116.235 160.574V159.664H117.397V165.81C117.397 166.832 117.313 167.602 117.145 168.134C116.739 169.408 115.689 170.052 114.107 170.052ZM112.049 163.346C112.049 164.844 112.693 166.16 114.191 166.16C115.661 166.16 116.235 164.746 116.235 163.388C116.235 161.918 115.647 160.532 114.177 160.532C112.805 160.532 112.049 161.764 112.049 163.346ZM125.029 162.73C125.029 161.512 124.273 160.518 123.013 160.518C121.697 160.518 121.011 161.498 120.913 162.73H125.029ZM119.667 163.402C119.667 160.952 120.997 159.44 123.027 159.44C125.295 159.44 126.289 161.134 126.289 163.682H120.885C120.927 165.124 121.627 166.174 123.041 166.174C123.993 166.174 124.637 165.712 124.959 164.732H126.135C125.883 166.272 124.721 167.252 122.999 167.252C120.787 167.252 119.667 165.642 119.667 163.402ZM129.007 167V159.664H130.085V161.246C130.575 160.196 131.513 159.454 132.717 159.454C134.397 159.454 135.265 160.378 135.405 161.834H134.243C134.075 160.952 133.599 160.476 132.605 160.476C131.135 160.476 130.183 161.722 130.183 163.444V167H129.007Z" fill="rgb(var(--colour-main))"></path><rect x="72" y="162" width="6" height="6" fill="#FFE000"></rect><rect x="72" y="156" width="6" height="6" fill="rgb(var(--colour-income-blue))"></rect><rect x="66" y="162" width="6" height="6" fill="#EC3425"></rect><rect x="66" y="156" width="6" height="6" fill="#5AC93B"></rect><rect x="36" y="125.75" width="378" height="225" stroke="rgb(var(--colour-main-500))"></rect><rect x="54" y="143.75" width="162" height="189" stroke="rgb(var(--colour-main-500))"></rect><path d="M38.03 112.75V104.588H43.98V105.652H39.262V108.032H43.42V109.096H39.262V112.75H38.03ZM45.7603 112.75V104.588H49.6103C51.2063 104.588 52.1723 105.386 52.1723 106.772C52.1723 107.724 51.7663 108.312 50.7863 108.746C51.7383 109.124 51.9063 109.404 51.9483 110.832C51.9483 111 52.0043 111.672 52.0603 111.924C52.1023 112.134 52.2003 112.316 52.4523 112.484V112.75H51.0103C50.8283 112.386 50.7443 112.022 50.7443 111.392C50.7443 111.07 50.7583 110.944 50.7583 110.622C50.7583 109.74 50.3943 109.32 49.4143 109.32H46.9923V112.75H45.7603ZM46.9923 108.256H49.3023C50.3243 108.256 50.8983 107.906 50.8983 106.954C50.8983 106.002 50.3383 105.652 49.3023 105.652H46.9923V108.256ZM53.5326 112.75L56.5846 104.588H58.1106L61.1066 112.75H59.7626L58.9646 110.538H55.6606L54.8346 112.75H53.5326ZM55.9826 109.502H58.6146L57.3266 105.946L55.9826 109.502ZM65.8969 112.89C63.4749 112.89 61.9629 111.084 61.9629 108.746C61.9629 106.268 63.5029 104.448 66.0229 104.448C67.7869 104.448 69.2289 105.358 69.5369 107.094H68.3049C68.0389 106.044 67.1149 105.526 66.0089 105.526C64.1609 105.526 63.1949 106.912 63.1949 108.704C63.1949 110.51 64.2869 111.826 66.0509 111.826C67.5629 111.826 68.5569 110.944 68.5569 109.628V109.474H66.1769V108.41H69.6209V112.792H68.7109L68.5989 111.588C67.7729 112.512 66.9609 112.89 65.8969 112.89ZM71.5832 112.75V104.588H73.3332L75.6712 111.518L77.9532 104.588H79.7032V112.75H78.5272V106.044L76.3012 112.75H75.0272L72.7732 106.044V112.75H71.5832ZM81.7775 112.75V104.588H87.7695V105.652H83.0095V108.032H87.5595V109.096H83.0095V111.686H87.9795V112.75H81.7775ZM89.6758 112.75V104.588H90.9918L95.2478 110.93V104.588H96.4378V112.75H95.0938L90.8658 106.422V112.75H89.6758ZM100.514 112.75V105.652H97.7421V104.588H104.504V105.652H101.746V112.75H100.514Z" fill="rgb(var(--colour-main-500))"></path><path d="M265.736 157.214H267.038V165.852H271.7V167H265.736V157.214ZM276.406 158.614V157.214H277.806V158.614H276.406ZM274.012 167V166.048H276.532V160.616H274.012V159.664H277.68V166.048H279.934V167H274.012ZM282.723 167V159.664H283.801V160.882C284.375 159.986 285.075 159.454 286.237 159.454C287.511 159.454 288.561 160.098 288.561 161.456V167H287.399V161.918C287.399 160.938 286.699 160.476 285.887 160.476C284.571 160.476 283.885 161.61 283.885 162.87V167H282.723ZM293.029 167H291.881V156.794H293.029V162.73L296.179 159.664H297.663L295.017 162.282L298.097 167H296.711L294.149 163.052L293.029 164.144V167Z" fill="rgb(var(--colour-main))"></path></svg></div><div class="block tablet:hidden"><svg width="100%" height="100%" viewBox="0 0 378 414" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="378" height="414" fill="rgb(var(--colour-negative))"></rect><path d="M19.736 22.214H21.038V30.852H25.7V32H19.736V22.214ZM30.4063 23.614V22.214H31.8063V23.614H30.4063ZM31.6803 24.664V31.048H33.9343V32H28.0123V31.048H30.5323V25.616H28.0123V24.664H31.6803ZM36.7226 32V24.664H37.8006V25.882C38.3746 24.986 39.0746 24.454 40.2366 24.454C41.5106 24.454 42.5606 25.098 42.5606 26.456V32H41.3986V26.918C41.3986 25.938 40.6986 25.476 39.8866 25.476C38.5706 25.476 37.8846 26.61 37.8846 27.87V32H36.7226ZM47.0289 32H45.8809V21.794H47.0289V27.73L50.1789 24.664H51.6629L49.0169 27.282L52.0969 32H50.7109L48.1489 28.052L47.0289 29.144V32ZM60.1352 29.732C59.8832 31.272 58.7212 32.252 56.9992 32.252C54.7872 32.252 53.6672 30.642 53.6672 28.402C53.6672 25.952 54.9972 24.44 57.0272 24.44C59.2952 24.44 60.2892 26.134 60.2892 28.682H54.8852C54.9272 30.124 55.6272 31.174 57.0412 31.174C57.9932 31.174 58.6372 30.712 58.9592 29.732H60.1352ZM57.0132 25.518C55.6972 25.518 55.0112 26.498 54.9132 27.73H59.0292C59.0292 26.512 58.2732 25.518 57.0132 25.518ZM67.5435 21.794H68.7055V32H67.6695V30.964C67.0815 31.818 66.2975 32.252 65.3315 32.252C63.1615 32.252 62.1395 30.516 62.1395 28.262C62.1395 26.148 63.2035 24.44 65.2895 24.44C66.2835 24.44 67.0395 24.818 67.5435 25.574V21.794ZM65.4855 25.532C64.1135 25.532 63.3575 26.764 63.3575 28.346C63.3575 29.844 64.0015 31.16 65.4995 31.16C66.9695 31.16 67.5435 29.746 67.5435 28.388C67.5435 26.918 66.9555 25.532 65.4855 25.532ZM80.3161 22.214H81.6181V30.852H86.2801V32H80.3161V22.214ZM94.7524 29.732C94.5004 31.272 93.3384 32.252 91.6164 32.252C89.4044 32.252 88.2844 30.642 88.2844 28.402C88.2844 25.952 89.6144 24.44 91.6444 24.44C93.9124 24.44 94.9064 26.134 94.9064 28.682H89.5024C89.5444 30.124 90.2444 31.174 91.6584 31.174C92.6104 31.174 93.2544 30.712 93.5764 29.732H94.7524ZM91.6304 25.518C90.3144 25.518 89.6284 26.498 89.5304 27.73H93.6464C93.6464 26.512 92.8904 25.518 91.6304 25.518ZM102.161 21.794H103.323V32H102.287V30.964C101.699 31.818 100.915 32.252 99.9487 32.252C97.7787 32.252 96.7567 30.516 96.7567 28.262C96.7567 26.148 97.8207 24.44 99.9067 24.44C100.901 24.44 101.657 24.818 102.161 25.574V21.794ZM100.103 25.532C98.7307 25.532 97.9747 26.764 97.9747 28.346C97.9747 29.844 98.6187 31.16 100.117 31.16C101.587 31.16 102.161 29.746 102.161 28.388C102.161 26.918 101.573 25.532 100.103 25.532ZM108.687 35.052C107.091 35.052 105.887 34.394 105.691 32.84H106.909C107.077 33.666 107.651 34.072 108.715 34.072C110.185 34.072 110.787 33.344 110.787 31.384V30.964C110.353 31.818 109.569 32.252 108.603 32.252C106.433 32.252 105.411 30.558 105.411 28.304C105.411 26.148 106.475 24.44 108.561 24.44C109.555 24.44 110.311 24.818 110.815 25.574V24.664H111.977V30.81C111.977 31.832 111.893 32.602 111.725 33.134C111.319 34.408 110.269 35.052 108.687 35.052ZM108.771 31.16C110.241 31.16 110.815 29.746 110.815 28.388C110.815 26.918 110.227 25.532 108.757 25.532C107.385 25.532 106.629 26.764 106.629 28.346C106.629 29.844 107.273 31.16 108.771 31.16ZM120.715 29.732C120.463 31.272 119.301 32.252 117.579 32.252C115.367 32.252 114.247 30.642 114.247 28.402C114.247 25.952 115.577 24.44 117.607 24.44C119.875 24.44 120.869 26.134 120.869 28.682H115.465C115.507 30.124 116.207 31.174 117.621 31.174C118.573 31.174 119.217 30.712 119.539 29.732H120.715ZM117.593 25.518C116.277 25.518 115.591 26.498 115.493 27.73H119.609C119.609 26.512 118.853 25.518 117.593 25.518ZM123.588 32V24.664H124.666V26.246C125.156 25.196 126.094 24.454 127.298 24.454C128.978 24.454 129.846 25.378 129.986 26.834H128.824C128.656 25.952 128.18 25.476 127.186 25.476C125.716 25.476 124.764 26.722 124.764 28.444V32H123.588ZM146.034 32L145.166 29.074H141.792L140.924 32H139.58L142.674 22.214H144.312L147.392 32H146.034ZM142.114 27.982H144.844L143.472 23.39L142.114 27.982ZM155.276 27.086H154.1C153.974 26.12 153.33 25.518 152.308 25.518C150.796 25.518 150.208 26.96 150.208 28.416C150.208 29.872 150.866 31.174 152.336 31.174C153.358 31.174 153.988 30.6 154.184 29.438H155.36C155.206 31.202 154.114 32.252 152.308 32.252C150.166 32.252 148.99 30.572 148.99 28.416C148.99 26.218 150.138 24.44 152.322 24.44C154.114 24.44 155.234 25.532 155.276 27.086ZM163.931 27.086H162.755C162.629 26.12 161.985 25.518 160.963 25.518C159.451 25.518 158.863 26.96 158.863 28.416C158.863 29.872 159.521 31.174 160.991 31.174C162.013 31.174 162.643 30.6 162.839 29.438H164.015C163.861 31.202 162.769 32.252 160.963 32.252C158.821 32.252 157.645 30.572 157.645 28.416C157.645 26.218 158.793 24.44 160.977 24.44C162.769 24.44 163.889 25.532 163.931 27.086ZM169.449 24.44C171.703 24.44 172.767 26.12 172.767 28.346C172.767 30.572 171.703 32.252 169.449 32.252C167.195 32.252 166.131 30.572 166.131 28.346C166.131 26.12 167.195 24.44 169.449 24.44ZM169.449 25.518C167.965 25.518 167.349 26.848 167.349 28.346C167.349 29.844 167.965 31.174 169.449 31.174C170.933 31.174 171.549 29.844 171.549 28.346C171.549 26.848 170.933 25.518 169.449 25.518ZM181.029 24.664V32H179.979V30.908C179.307 31.874 178.607 32.252 177.529 32.252C176.899 32.252 176.367 32.112 175.947 31.818C175.443 31.454 175.191 30.936 175.191 30.25V24.664H176.353V29.788C176.353 30.278 176.521 30.656 176.843 30.908C177.109 31.118 177.459 31.23 177.865 31.23C178.411 31.23 178.873 31.034 179.251 30.628C179.657 30.194 179.867 29.564 179.867 28.738V24.664H181.029ZM183.846 32V24.664H184.924V25.882C185.498 24.986 186.198 24.454 187.36 24.454C188.634 24.454 189.684 25.098 189.684 26.456V32H188.522V26.918C188.522 25.938 187.822 25.476 187.01 25.476C185.694 25.476 185.008 26.61 185.008 27.87V32H183.846ZM195.468 24.664H198.352V25.616H195.468V29.704C195.468 30.782 196.042 31.146 197.106 31.146C197.582 31.146 198.002 31.104 198.352 31.006V32.028C197.89 32.168 197.428 32.196 197.036 32.196C195.258 32.196 194.306 31.51 194.306 29.914V25.616H192.192V24.664H194.306V22.648H195.468V24.664ZM206.754 26.666H205.536C205.508 25.938 204.948 25.476 204.066 25.476C203.114 25.476 202.47 25.896 202.47 26.554C202.47 27.072 202.834 27.38 203.52 27.562L205.186 27.996C206.418 28.318 207.048 28.92 207.048 29.956C207.048 31.384 205.928 32.252 204.108 32.252C202.19 32.252 201.182 31.412 201.098 29.774H202.33C202.442 30.768 203.044 31.216 204.136 31.216C205.172 31.216 205.858 30.824 205.858 30.138C205.858 29.508 205.55 29.242 204.752 29.032L203.212 28.626C201.882 28.276 201.28 27.73 201.28 26.61C201.28 25.28 202.372 24.44 204.094 24.44C205.802 24.44 206.726 25.28 206.754 26.666Z" fill="rgb(var(--colour-main))"></path><rect x="18" y="126" width="243" height="198" stroke="rgb(var(--colour-main-500))"></rect><path d="M20.03 113V104.838H25.98V105.902H21.262V108.282H25.42V109.346H21.262V113H20.03ZM27.7603 113V104.838H31.6103C33.2063 104.838 34.1723 105.636 34.1723 107.022C34.1723 107.974 33.7663 108.562 32.7863 108.996C33.7383 109.374 33.9063 109.654 33.9483 111.082C33.9483 111.25 34.0043 111.922 34.0603 112.174C34.1023 112.384 34.2003 112.566 34.4523 112.734V113H33.0103C32.8283 112.636 32.7443 112.272 32.7443 111.642C32.7443 111.32 32.7583 111.194 32.7583 110.872C32.7583 109.99 32.3943 109.57 31.4143 109.57H28.9923V113H27.7603ZM28.9923 108.506H31.3023C32.3243 108.506 32.8983 108.156 32.8983 107.204C32.8983 106.252 32.3383 105.902 31.3023 105.902H28.9923V108.506ZM35.5326 113L38.5846 104.838H40.1106L43.1066 113H41.7626L40.9646 110.788H37.6606L36.8346 113H35.5326ZM37.9826 109.752H40.6146L39.3266 106.196L37.9826 109.752ZM47.8969 113.14C45.4749 113.14 43.9629 111.334 43.9629 108.996C43.9629 106.518 45.5029 104.698 48.0229 104.698C49.7869 104.698 51.2289 105.608 51.5369 107.344H50.3049C50.0389 106.294 49.1149 105.776 48.0089 105.776C46.1609 105.776 45.1949 107.162 45.1949 108.954C45.1949 110.76 46.2869 112.076 48.0509 112.076C49.5629 112.076 50.5569 111.194 50.5569 109.878V109.724H48.1769V108.66H51.6209V113.042H50.7109L50.5989 111.838C49.7729 112.762 48.9609 113.14 47.8969 113.14ZM53.5832 113V104.838H55.3332L57.6712 111.768L59.9532 104.838H61.7032V113H60.5272V106.294L58.3012 113H57.0272L54.7732 106.294V113H53.5832ZM63.7775 113V104.838H69.7695V105.902H65.0095V108.282H69.5595V109.346H65.0095V111.936H69.9795V113H63.7775ZM71.6758 113V104.838H72.9918L77.2478 111.18V104.838H78.4378V113H77.0938L72.8658 106.672V113H71.6758ZM82.5141 113V105.902H79.7421V104.838H86.5041V105.902H83.7461V113H82.5141Z" fill="rgb(var(--colour-main-500))"></path><g clip-path="url(#clip0_2693_2269_dark)"><circle cx="174" cy="189" r="6" fill="rgb(var(--colour-main-500))"></circle><path d="M185.42 194L188.514 184.214H190.152L193.232 194H191.874L191.006 191.074H187.632L186.764 194H185.42ZM187.954 189.982H190.684L189.312 185.39L187.954 189.982ZM199.94 189.086C199.814 188.12 199.17 187.518 198.148 187.518C196.636 187.518 196.048 188.96 196.048 190.416C196.048 191.872 196.706 193.174 198.176 193.174C199.198 193.174 199.828 192.6 200.024 191.438H201.2C201.046 193.202 199.954 194.252 198.148 194.252C196.006 194.252 194.83 192.572 194.83 190.416C194.83 188.218 195.978 186.44 198.162 186.44C199.954 186.44 201.074 187.532 201.116 189.086H199.94ZM208.595 189.086C208.469 188.12 207.825 187.518 206.803 187.518C205.291 187.518 204.703 188.96 204.703 190.416C204.703 191.872 205.361 193.174 206.831 193.174C207.853 193.174 208.483 192.6 208.679 191.438H209.855C209.701 193.202 208.609 194.252 206.803 194.252C204.661 194.252 203.485 192.572 203.485 190.416C203.485 188.218 204.633 186.44 206.817 186.44C208.609 186.44 209.729 187.532 209.771 189.086H208.595ZM215.345 186.664H218.229V187.616H215.345V191.704C215.345 192.782 215.919 193.16 216.983 193.16C217.459 193.16 217.879 193.132 218.229 193.034V194.028C217.767 194.168 217.305 194.196 216.913 194.196C215.135 194.196 214.183 193.51 214.183 191.914V187.616H212.069V186.664H214.183V184.648H215.345V186.664Z" fill="rgb(var(--colour-main))"></path></g><rect x="156" y="171" width="84" height="36" stroke="rgb(var(--colour-main-500))"></rect><line x1="156" y1="189.5" x2="123" y2="189.5" stroke="rgb(var(--colour-main-500))"></line><g clip-path="url(#clip1_2693_2269_dark)"><circle cx="57" cy="189" r="6" fill="#5AC93B"></circle><path d="M58.82 192.495H59.79L57.59 185.505H56.42L54.21 192.495H55.17L55.79 190.405H58.2L58.82 192.495ZM56.02 189.625L56.99 186.345L57.97 189.625H56.02Z" fill="rgb(var(--colour-negative))"></path><path d="M74.874 194L74.006 191.074H70.632L69.764 194H68.42L71.514 184.214H73.152L76.232 194H74.874ZM70.954 189.982H73.684L72.312 185.39L70.954 189.982ZM84.1163 189.086H82.9403C82.8143 188.12 82.1703 187.518 81.1483 187.518C79.6363 187.518 79.0483 188.96 79.0483 190.416C79.0483 191.872 79.7063 193.174 81.1763 193.174C82.1983 193.174 82.8283 192.6 83.0243 191.438H84.2003C84.0463 193.202 82.9543 194.252 81.1483 194.252C79.0063 194.252 77.8303 192.572 77.8303 190.416C77.8303 188.218 78.9783 186.44 81.1623 186.44C82.9543 186.44 84.0743 187.532 84.1163 189.086ZM92.7706 189.086H91.5946C91.4686 188.12 90.8246 187.518 89.8026 187.518C88.2906 187.518 87.7026 188.96 87.7026 190.416C87.7026 191.872 88.3606 193.174 89.8306 193.174C90.8526 193.174 91.4826 192.6 91.6786 191.438H92.8546C92.7006 193.202 91.6086 194.252 89.8026 194.252C87.6606 194.252 86.4846 192.572 86.4846 190.416C86.4846 188.218 87.6326 186.44 89.8166 186.44C91.6086 186.44 92.7286 187.532 92.7706 189.086ZM98.3449 186.664H101.229V187.616H98.3449V191.704C98.3449 192.782 98.9189 193.146 99.9829 193.146C100.459 193.146 100.879 193.104 101.229 193.006V194.028C100.767 194.168 100.305 194.196 99.9129 194.196C98.1349 194.196 97.1829 193.51 97.1829 191.914V187.616H95.0689V186.664H97.1829V184.648H98.3449V186.664Z" fill="rgb(var(--colour-main))"></path></g><rect x="39" y="171" width="84" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="144" y="135" width="108" height="180" stroke="rgb(var(--colour-main-500))"></rect><rect x="27" y="135" width="108" height="180" stroke="rgb(var(--colour-main-500))"></rect><path d="M175.736 148.214H177.038V156.852H181.7V158H175.736V148.214ZM186.406 149.614V148.214H187.806V149.614H186.406ZM184.012 158V157.048H186.532V151.616H184.012V150.664H187.68V157.048H189.934V158H184.012ZM192.723 158V150.664H193.801V151.882C194.375 150.986 195.075 150.454 196.237 150.454C197.511 150.454 198.561 151.098 198.561 152.456V158H197.399V152.918C197.399 151.938 196.699 151.476 195.887 151.476C194.571 151.476 193.885 152.61 193.885 153.87V158H192.723ZM203.029 158H201.881V147.794H203.029V153.73L206.179 150.664H207.663L205.017 153.282L208.097 158H206.711L204.149 154.052L203.029 155.144V158Z" fill="rgb(var(--colour-main))"></path><rect width="12" height="12" transform="translate(156 147)" fill="rgb(var(--colour-main-500))"></rect><circle cx="162" cy="153" r="6" fill="rgb(var(--colour-main-500))"></circle><path d="M162.619 151.741L160.711 153.649L161.323 154.261L163.231 152.353L162.619 151.741ZM159.271 155.701C160.039 156.469 161.179 156.469 161.959 155.701L162.847 154.813L162.235 154.201L161.407 155.029C160.927 155.509 160.363 155.569 159.883 155.089C159.415 154.621 159.475 154.057 159.955 153.577L160.783 152.749L160.171 152.137L159.367 152.941C158.599 153.709 158.515 154.933 159.271 155.701ZM161.119 151.189L161.731 151.801L162.559 150.973C163.027 150.493 163.603 150.433 164.071 150.901C164.539 151.369 164.479 151.945 164.011 152.425L163.171 153.253L163.783 153.865L164.683 152.977C165.451 152.209 165.439 151.057 164.683 150.289C163.915 149.533 162.775 149.533 162.007 150.301L161.119 151.189Z" fill="rgb(var(--colour-main))"></path><path d="M58.736 148.214H60.038V156.852H64.7V158H58.736V148.214ZM72.0663 153.73C72.0663 152.512 71.3103 151.518 70.0503 151.518C68.7343 151.518 68.0483 152.498 67.9503 153.73H72.0663ZM66.7043 154.402C66.7043 151.952 68.0343 150.44 70.0643 150.44C72.3323 150.44 73.3263 152.134 73.3263 154.682H67.9223C67.9643 156.124 68.6643 157.174 70.0783 157.174C71.0303 157.174 71.6743 156.712 71.9963 155.732H73.1723C72.9203 157.272 71.7583 158.252 70.0363 158.252C67.8243 158.252 66.7043 156.642 66.7043 154.402ZM80.5806 147.794H81.7426V158H80.7066V156.964C80.1186 157.818 79.3346 158.252 78.3686 158.252C76.1986 158.252 75.1766 156.516 75.1766 154.262C75.1766 152.148 76.2406 150.44 78.3266 150.44C79.3206 150.44 80.0766 150.818 80.5806 151.574V147.794ZM76.3946 154.346C76.3946 155.844 77.0386 157.16 78.5366 157.16C80.0066 157.16 80.5806 155.746 80.5806 154.388C80.5806 152.918 79.9926 151.532 78.5226 151.532C77.1506 151.532 76.3946 152.764 76.3946 154.346ZM87.1069 161.052C85.5109 161.052 84.3069 160.394 84.1109 158.84H85.3289C85.4969 159.666 86.0709 160.072 87.1349 160.072C88.6049 160.072 89.2069 159.344 89.2069 157.384V156.964C88.7729 157.818 87.9889 158.252 87.0229 158.252C84.8529 158.252 83.8309 156.558 83.8309 154.304C83.8309 152.148 84.8949 150.44 86.9809 150.44C87.9749 150.44 88.7309 150.818 89.2349 151.574V150.664H90.3969V156.81C90.3969 157.832 90.3129 158.602 90.1449 159.134C89.7389 160.408 88.6889 161.052 87.1069 161.052ZM85.0489 154.346C85.0489 155.844 85.6929 157.16 87.1909 157.16C88.6609 157.16 89.2349 155.746 89.2349 154.388C89.2349 152.918 88.6469 151.532 87.1769 151.532C85.8049 151.532 85.0489 152.764 85.0489 154.346ZM98.0292 153.73C98.0292 152.512 97.2732 151.518 96.0132 151.518C94.6972 151.518 94.0112 152.498 93.9132 153.73H98.0292ZM92.6672 154.402C92.6672 151.952 93.9972 150.44 96.0272 150.44C98.2952 150.44 99.2892 152.134 99.2892 154.682H93.8852C93.9272 156.124 94.6272 157.174 96.0412 157.174C96.9932 157.174 97.6372 156.712 97.9592 155.732H99.1352C98.8832 157.272 97.7212 158.252 95.9992 158.252C93.7872 158.252 92.6672 156.642 92.6672 154.402ZM102.007 158V150.664H103.085V152.246C103.575 151.196 104.513 150.454 105.717 150.454C107.397 150.454 108.265 151.378 108.405 152.834H107.243C107.075 151.952 106.599 151.476 105.605 151.476C104.135 151.476 103.183 152.722 103.183 154.444V158H102.007Z" fill="rgb(var(--colour-main))"></path><rect width="12" height="12" transform="translate(39 147)" fill="rgb(var(--colour-main))"></rect><rect x="45" y="153" width="6" height="6" fill="#FFE000"></rect><rect x="45" y="147" width="6" height="6" fill="rgb(var(--colour-income-blue))"></rect><rect x="39" y="153" width="6" height="6" fill="#EC3425"></rect><rect x="39" y="147" width="6" height="6" fill="#5AC93B"></rect><line x1="288" y1="189.5" x2="240" y2="189.5" stroke="rgb(var(--colour-main-500))"></line><rect x="279" y="135" width="81" height="180" stroke="rgb(var(--colour-main-500))"></rect><path d="M293.096 158H289.288V148.214H292.774C294.524 148.214 295.728 149.166 295.728 150.706C295.728 151.644 295.28 152.582 294.426 152.89C295.448 153.226 296.05 154.038 296.05 155.214C296.05 156.684 295.028 158 293.096 158ZM290.562 156.894H292.942C294.174 156.894 294.72 156.194 294.72 155.2C294.72 154.22 294.174 153.52 292.942 153.52H290.562V156.894ZM290.562 152.414H292.578C293.628 152.414 294.398 152.078 294.398 150.888C294.398 149.684 293.628 149.32 292.578 149.32H290.562V152.414ZM304.62 158.112C304.326 158.196 304.102 158.238 303.92 158.238C303.108 158.238 302.702 157.888 302.618 157.132C301.792 157.944 301.064 158.252 300.126 158.252C298.698 158.252 297.732 157.454 297.732 156.096C297.732 154.584 298.88 154.038 299.734 153.898C299.986 153.856 300.532 153.772 301.358 153.66C302.296 153.534 302.604 153.352 302.604 152.876V152.624C302.604 151.896 302.03 151.532 300.924 151.532C299.846 151.532 299.314 151.938 299.216 152.834H298.04C298.068 151.14 299.244 150.454 300.98 150.454C302.786 150.454 303.738 151.154 303.738 152.456V156.684C303.738 157.062 303.948 157.258 304.368 157.258C304.438 157.258 304.55 157.244 304.62 157.23V158.112ZM298.922 156.068C298.922 156.796 299.482 157.23 300.42 157.23C301.442 157.23 302.604 156.474 302.604 155.452V154.29C302.114 154.514 301.316 154.64 300.7 154.71C299.608 154.836 298.922 155.144 298.922 156.068ZM306.723 158V150.664H307.801V151.882C308.375 150.986 309.075 150.454 310.237 150.454C311.511 150.454 312.561 151.098 312.561 152.456V158H311.399V152.918C311.399 151.938 310.699 151.476 309.887 151.476C308.571 151.476 307.885 152.61 307.885 153.87V158H306.723ZM317.029 158H315.881V147.794H317.029V153.73L320.179 150.664H321.663L319.017 153.282L322.097 158H320.711L318.149 154.052L317.029 155.144V158Z" fill="rgb(var(--colour-main-500))"></path><path d="M306.874 194L306.006 191.074H302.632L301.764 194H300.42L303.514 184.214H305.152L308.232 194H306.874ZM302.954 189.982H305.684L304.312 185.39L302.954 189.982ZM316.116 189.086H314.94C314.814 188.12 314.17 187.518 313.148 187.518C311.636 187.518 311.048 188.96 311.048 190.416C311.048 191.872 311.706 193.174 313.176 193.174C314.198 193.174 314.828 192.6 315.024 191.438H316.2C316.046 193.202 314.954 194.252 313.148 194.252C311.006 194.252 309.83 192.572 309.83 190.416C309.83 188.218 310.978 186.44 313.162 186.44C314.954 186.44 316.074 187.532 316.116 189.086ZM324.771 189.086H323.595C323.469 188.12 322.825 187.518 321.803 187.518C320.291 187.518 319.703 188.96 319.703 190.416C319.703 191.872 320.361 193.174 321.831 193.174C322.853 193.174 323.483 192.6 323.679 191.438H324.855C324.701 193.202 323.609 194.252 321.803 194.252C319.661 194.252 318.485 192.572 318.485 190.416C318.485 188.218 319.633 186.44 321.817 186.44C323.609 186.44 324.729 187.532 324.771 189.086ZM330.345 186.664H333.229V187.616H330.345V191.704C330.345 192.782 330.919 193.146 331.983 193.146C332.459 193.146 332.879 193.104 333.229 193.006V194.028C332.767 194.168 332.305 194.196 331.913 194.196C330.135 194.196 329.183 193.51 329.183 191.914V187.616H327.069V186.664H329.183V184.648H330.345V186.664Z" fill="rgb(var(--colour-main-500))"></path><rect x="288" y="171" width="63" height="36" stroke="rgb(var(--colour-main-500))"></rect><defs><clipPath id="clip0_2693_2269_dark"><rect x="156" y="171" width="84" height="36" fill="rgb(var(--colour-negative))"></rect></clipPath><clipPath id="clip1_2693_2269_dark"><rect x="39" y="171" width="84" height="36" fill="rgb(var(--colour-negative))"></rect></clipPath></defs></svg></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Any Ledger Line that posts to a Linked Ledger Account must match a transaction in its corresponding External Account.</p><div class="pt-f2"><div class="hidden tablet:block"><svg width="100%" height="100%" viewBox="0 0 622 451" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="621" height="450" transform="translate(0.110352 0.75)" fill="rgb(var(--colour-negative))"></rect><circle cx="264.11" cy="198.75" r="6" fill="rgb(var(--colour-main-500))"></circle><path d="M282.194 199.312H277.994V202.602H282.656V203.75H276.692V193.964H282.404V195.112H277.994V198.164H282.194V199.312ZM291.213 196.414L288.749 199.956L291.283 203.75H289.897L288.091 200.964L286.257 203.75H284.899L287.489 200.012L285.039 196.414H286.411L288.133 199.046L289.883 196.414H291.213ZM296.801 196.414H299.685V197.366H296.801V201.454C296.801 202.532 297.375 202.896 298.439 202.896C298.915 202.896 299.335 202.854 299.685 202.756V203.778C299.223 203.918 298.761 203.946 298.369 203.946C296.591 203.946 295.639 203.26 295.639 201.664V197.366H293.525V196.414H295.639V194.398H296.801V196.414ZM301.073 205.794H309.725V206.802H301.073V205.794ZM316.602 203.75L315.734 200.824H312.36L311.492 203.75H310.148L313.242 193.964H314.88L317.96 203.75H316.602ZM312.682 199.732H315.412L314.04 195.14L312.682 199.732ZM325.844 198.836H324.668C324.542 197.87 323.898 197.268 322.876 197.268C321.364 197.268 320.776 198.71 320.776 200.166C320.776 201.622 321.434 202.924 322.904 202.924C323.926 202.924 324.556 202.35 324.752 201.188H325.928C325.774 202.952 324.682 204.002 322.876 204.002C320.734 204.002 319.558 202.322 319.558 200.166C319.558 197.968 320.706 196.19 322.89 196.19C324.682 196.19 325.802 197.282 325.844 198.836ZM334.498 198.836H333.322C333.196 197.87 332.552 197.268 331.53 197.268C330.018 197.268 329.43 198.71 329.43 200.166C329.43 201.622 330.088 202.924 331.558 202.924C332.58 202.924 333.21 202.35 333.406 201.188H334.582C334.428 202.952 333.336 204.002 331.53 204.002C329.388 204.002 328.212 202.322 328.212 200.166C328.212 197.968 329.36 196.19 331.544 196.19C333.336 196.19 334.456 197.282 334.498 198.836ZM340.016 196.19C342.27 196.19 343.334 197.87 343.334 200.096C343.334 202.322 342.27 204.002 340.016 204.002C337.762 204.002 336.698 202.322 336.698 200.096C336.698 197.87 337.762 196.19 340.016 196.19ZM340.016 197.268C338.532 197.268 337.916 198.598 337.916 200.096C337.916 201.594 338.532 202.924 340.016 202.924C341.5 202.924 342.116 201.594 342.116 200.096C342.116 198.598 341.5 197.268 340.016 197.268ZM351.597 196.414V203.75H350.547V202.658C349.875 203.624 349.175 204.002 348.097 204.002C347.467 204.002 346.935 203.862 346.515 203.568C346.011 203.204 345.759 202.686 345.759 202V196.414H346.921V201.538C346.921 202.028 347.089 202.406 347.411 202.658C347.677 202.868 348.027 202.98 348.433 202.98C348.979 202.98 349.441 202.784 349.819 202.378C350.225 201.944 350.435 201.314 350.435 200.488V196.414H351.597ZM354.413 203.75V196.414H355.491V197.632C356.065 196.736 356.765 196.204 357.927 196.204C359.201 196.204 360.251 196.848 360.251 198.206V203.75H359.089V198.668C359.089 197.688 358.389 197.226 357.577 197.226C356.261 197.226 355.575 198.36 355.575 199.62V203.75H354.413ZM366.035 196.414H368.919V197.366H366.035V201.454C366.035 202.532 366.609 202.896 367.673 202.896C368.149 202.896 368.569 202.854 368.919 202.756V203.778C368.457 203.918 367.995 203.946 367.603 203.946C365.825 203.946 364.873 203.26 364.873 201.664V197.366H362.759V196.414H364.873V194.398H366.035V196.414Z" fill="rgb(var(--colour-main-500))"></path><rect x="246.11" y="180.75" width="138" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M462.984 203.75L462.116 200.824H458.742L457.874 203.75H456.53L459.624 193.964H461.262L464.342 203.75H462.984ZM459.064 199.732H461.794L460.422 195.14L459.064 199.732ZM472.227 198.836H471.051C470.925 197.87 470.281 197.268 469.259 197.268C467.747 197.268 467.159 198.71 467.159 200.166C467.159 201.622 467.817 202.924 469.287 202.924C470.309 202.924 470.939 202.35 471.135 201.188H472.311C472.157 202.952 471.065 204.002 469.259 204.002C467.117 204.002 465.941 202.322 465.941 200.166C465.941 197.968 467.089 196.19 469.273 196.19C471.065 196.19 472.185 197.282 472.227 198.836ZM480.881 198.836H479.705C479.579 197.87 478.935 197.268 477.913 197.268C476.401 197.268 475.813 198.71 475.813 200.166C475.813 201.622 476.471 202.924 477.941 202.924C478.963 202.924 479.593 202.35 479.789 201.188H480.965C480.811 202.952 479.719 204.002 477.913 204.002C475.771 204.002 474.595 202.322 474.595 200.166C474.595 197.968 475.743 196.19 477.927 196.19C479.719 196.19 480.839 197.282 480.881 198.836ZM486.399 196.19C488.653 196.19 489.717 197.87 489.717 200.096C489.717 202.322 488.653 204.002 486.399 204.002C484.145 204.002 483.081 202.322 483.081 200.096C483.081 197.87 484.145 196.19 486.399 196.19ZM486.399 197.268C484.915 197.268 484.299 198.598 484.299 200.096C484.299 201.594 484.915 202.924 486.399 202.924C487.883 202.924 488.499 201.594 488.499 200.096C488.499 198.598 487.883 197.268 486.399 197.268ZM497.98 196.414V203.75H496.93V202.658C496.258 203.624 495.558 204.002 494.48 204.002C493.85 204.002 493.318 203.862 492.898 203.568C492.394 203.204 492.142 202.686 492.142 202V196.414H493.304V201.538C493.304 202.028 493.472 202.406 493.794 202.658C494.06 202.868 494.41 202.98 494.816 202.98C495.362 202.98 495.824 202.784 496.202 202.378C496.608 201.944 496.818 201.314 496.818 200.488V196.414H497.98ZM500.796 203.75V196.414H501.874V197.632C502.448 196.736 503.148 196.204 504.31 196.204C505.584 196.204 506.634 196.848 506.634 198.206V203.75H505.472V198.668C505.472 197.688 504.772 197.226 503.96 197.226C502.644 197.226 501.958 198.36 501.958 199.62V203.75H500.796ZM512.418 196.414H515.302V197.366H512.418V201.454C512.418 202.532 512.992 202.896 514.056 202.896C514.532 202.896 514.952 202.854 515.302 202.756V203.778C514.84 203.918 514.378 203.946 513.986 203.946C512.208 203.946 511.256 203.26 511.256 201.664V197.366H509.142V196.414H511.256V194.398H512.418V196.414Z" fill="rgb(var(--colour-main-500))"></path><rect x="444.11" y="180.75" width="129" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="78.1104" y="264.75" width="12" height="12" rx="6" fill="rgb(var(--colour-canvas))"></rect><path d="M78.1104 270.75H84.1104V276.75C80.7966 276.75 78.1104 274.064 78.1104 270.75Z" fill="rgb(var(--colour-main-500))"></path><path d="M96.8464 265.964H98.1484V274.602H102.81V275.75H96.8464V265.964ZM107.517 267.364V265.964H108.917V267.364H107.517ZM108.791 268.414V274.798H111.045V275.75H105.123V274.798H107.643V269.366H105.123V268.414H108.791ZM113.833 275.75V268.414H114.911V269.632C115.485 268.736 116.185 268.204 117.347 268.204C118.621 268.204 119.671 268.848 119.671 270.206V275.75H118.509V270.668C118.509 269.688 117.809 269.226 116.997 269.226C115.681 269.226 114.995 270.36 114.995 271.62V275.75H113.833ZM128.591 273.482C128.339 275.022 127.177 276.002 125.455 276.002C123.243 276.002 122.123 274.392 122.123 272.152C122.123 269.702 123.453 268.19 125.483 268.19C127.751 268.19 128.745 269.884 128.745 272.432H123.341C123.383 273.874 124.083 274.924 125.497 274.924C126.449 274.924 127.093 274.462 127.415 273.482H128.591ZM125.469 269.268C124.153 269.268 123.467 270.248 123.369 271.48H127.485C127.485 270.262 126.729 269.268 125.469 269.268Z" fill="rgb(var(--colour-main-500))"></path><path d="M187.03 277.108V275.834C185.252 275.666 184.16 274.406 184.118 272.754H185.182C185.224 273.888 185.84 274.714 187.03 274.868V271.242L186.4 271.074C185.126 270.738 184.314 269.786 184.314 268.554C184.314 267.098 185.322 266.048 187.03 265.908V264.634H187.828V265.908C189.424 266.048 190.39 267.056 190.46 268.61H189.396C189.34 267.714 188.822 267.028 187.828 266.874V270.332L188.738 270.584C190.012 270.934 190.754 271.844 190.754 273.02C190.754 274.616 189.606 275.694 187.828 275.834V277.108H187.03ZM186.596 269.996L187.03 270.122V266.86C186.064 266.972 185.392 267.504 185.392 268.442C185.392 269.184 185.812 269.786 186.596 269.996ZM188.374 271.606L187.828 271.452V274.882C189.004 274.77 189.676 274.126 189.676 273.174C189.676 272.39 189.284 271.844 188.374 271.606Z" fill="rgb(var(--colour-main-500))"></path><rect x="66.1104" y="252.75" width="138" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M22.8144 28.732H20.7004V32.75H19.4264V22.964H22.8564C24.7324 22.964 25.9784 23.832 25.9784 25.638C25.9784 26.772 25.5164 27.514 24.3544 28.088C25.3904 28.508 25.6424 28.942 25.7264 30.37L25.7684 31.098C25.7964 31.574 25.8524 32.134 26.2724 32.428V32.75H24.8304C24.6204 32.316 24.4664 31.756 24.4664 31.112V30.496C24.4664 29.348 23.9764 28.732 22.8144 28.732ZM20.7004 24.07V27.626H22.6044C23.8784 27.626 24.6484 27.136 24.6484 25.778C24.6484 24.588 23.8924 24.07 22.6044 24.07H20.7004ZM34.2826 30.482C34.0306 32.022 32.8686 33.002 31.1466 33.002C28.9346 33.002 27.8146 31.392 27.8146 29.152C27.8146 26.702 29.1446 25.19 31.1746 25.19C33.4426 25.19 34.4366 26.884 34.4366 29.432H29.0326C29.0746 30.874 29.7746 31.924 31.1886 31.924C32.1406 31.924 32.7846 31.462 33.1066 30.482H34.2826ZM31.1606 26.268C29.8446 26.268 29.1586 27.248 29.0606 28.48H33.1766C33.1766 27.262 32.4206 26.268 31.1606 26.268ZM42.8809 27.836H41.7049C41.5789 26.87 40.9349 26.268 39.9129 26.268C38.4009 26.268 37.8129 27.71 37.8129 29.166C37.8129 30.622 38.4709 31.924 39.9409 31.924C40.9629 31.924 41.5929 31.35 41.7889 30.188H42.9649C42.8109 31.952 41.7189 33.002 39.9129 33.002C37.7709 33.002 36.5949 31.322 36.5949 29.166C36.5949 26.968 37.7429 25.19 39.9269 25.19C41.7189 25.19 42.8389 26.282 42.8809 27.836ZM48.3992 25.19C50.6532 25.19 51.7172 26.87 51.7172 29.096C51.7172 31.322 50.6532 33.002 48.3992 33.002C46.1452 33.002 45.0812 31.322 45.0812 29.096C45.0812 26.87 46.1452 25.19 48.3992 25.19ZM48.3992 26.268C46.9152 26.268 46.2992 27.598 46.2992 29.096C46.2992 30.594 46.9152 31.924 48.3992 31.924C49.8832 31.924 50.4992 30.594 50.4992 29.096C50.4992 27.598 49.8832 26.268 48.3992 26.268ZM54.1415 32.75V25.414H55.2195V26.632C55.7935 25.736 56.4935 25.204 57.6555 25.204C58.9295 25.204 59.9795 25.848 59.9795 27.206V32.75H58.8175V27.668C58.8175 26.688 58.1175 26.226 57.3055 26.226C55.9895 26.226 55.3035 27.36 55.3035 28.62V32.75H54.1415ZM68.8438 27.836H67.6678C67.5418 26.87 66.8978 26.268 65.8758 26.268C64.3638 26.268 63.7758 27.71 63.7758 29.166C63.7758 30.622 64.4338 31.924 65.9038 31.924C66.9258 31.924 67.5558 31.35 67.7518 30.188H68.9278C68.7738 31.952 67.6818 33.002 65.8758 33.002C63.7338 33.002 62.5578 31.322 62.5578 29.166C62.5578 26.968 63.7058 25.19 65.8898 25.19C67.6818 25.19 68.8018 26.282 68.8438 27.836ZM73.7881 24.364V22.964H75.1881V24.364H73.7881ZM75.0621 25.414V31.798H77.3161V32.75H71.3941V31.798H73.9141V26.366H71.3941V25.414H75.0621ZM83.9964 22.544V31.798H86.2504V32.75H80.3284V31.798H82.8624V23.496H80.3284V22.544H83.9964ZM91.0967 24.364V22.964H92.4967V24.364H91.0967ZM92.3707 25.414V31.798H94.6247V32.75H88.7027V31.798H91.2227V26.366H88.7027V25.414H92.3707ZM97.413 32.75V25.414H98.491V26.632C99.065 25.736 99.765 25.204 100.927 25.204C102.201 25.204 103.251 25.848 103.251 27.206V32.75H102.089V27.668C102.089 26.688 101.389 26.226 100.577 26.226C99.261 26.226 98.575 27.36 98.575 28.62V32.75H97.413ZM108.797 35.802C107.201 35.802 105.997 35.144 105.801 33.59H107.019C107.187 34.416 107.761 34.822 108.825 34.822C110.295 34.822 110.897 34.094 110.897 32.134V31.714C110.463 32.568 109.679 33.002 108.713 33.002C106.543 33.002 105.521 31.308 105.521 29.054C105.521 26.898 106.585 25.19 108.671 25.19C109.665 25.19 110.421 25.568 110.925 26.324V25.414H112.087V31.56C112.087 32.582 112.003 33.352 111.835 33.884C111.429 35.158 110.379 35.802 108.797 35.802ZM108.881 31.91C110.351 31.91 110.925 30.496 110.925 29.138C110.925 27.668 110.337 26.282 108.867 26.282C107.495 26.282 106.739 27.514 106.739 29.096C106.739 30.594 107.383 31.91 108.881 31.91ZM129.872 24.112H126.946V32.75H125.644V24.112H122.704V22.964H129.872V24.112ZM138.064 25.414L135.6 28.956L138.134 32.75H136.748L134.942 29.964L133.108 32.75H131.75L134.34 29.012L131.89 25.414H133.262L134.984 28.046L136.734 25.414H138.064ZM146.285 27.416H145.067C145.039 26.688 144.479 26.226 143.597 26.226C142.645 26.226 142.001 26.646 142.001 27.304C142.001 27.822 142.365 28.13 143.051 28.312L144.717 28.746C145.949 29.068 146.579 29.67 146.579 30.706C146.579 32.134 145.459 33.002 143.639 33.002C141.721 33.002 140.713 32.162 140.629 30.524H141.861C141.973 31.518 142.575 31.966 143.667 31.966C144.703 31.966 145.389 31.574 145.389 30.888C145.389 30.258 145.081 29.992 144.283 29.782L142.743 29.376C141.413 29.026 140.811 28.48 140.811 27.36C140.811 26.03 141.903 25.19 143.625 25.19C145.333 25.19 146.257 26.03 146.285 27.416Z" fill="rgb(var(--colour-main))"></path><rect x="234.11" y="144.75" width="162" height="188.75" stroke="rgb(var(--colour-main-500))"></rect><rect x="432.11" y="144.75" width="153" height="189" stroke="rgb(var(--colour-main-500))"></rect><path d="M38.1404 113.75V105.588H44.0904V106.652H39.3724V109.032H43.5304V110.096H39.3724V113.75H38.1404ZM45.8706 113.75V105.588H49.7206C51.3166 105.588 52.2826 106.386 52.2826 107.772C52.2826 108.724 51.8766 109.312 50.8966 109.746C51.8486 110.124 52.0166 110.404 52.0586 111.832C52.0586 112 52.1146 112.672 52.1706 112.924C52.2126 113.134 52.3106 113.316 52.5626 113.484V113.75H51.1206C50.9386 113.386 50.8546 113.022 50.8546 112.392C50.8546 112.07 50.8686 111.944 50.8686 111.622C50.8686 110.74 50.5046 110.32 49.5246 110.32H47.1026V113.75H45.8706ZM47.1026 109.256H49.4126C50.4346 109.256 51.0086 108.906 51.0086 107.954C51.0086 107.002 50.4486 106.652 49.4126 106.652H47.1026V109.256ZM53.6429 113.75L56.6949 105.588H58.2209L61.2169 113.75H59.8729L59.0749 111.538H55.7709L54.9449 113.75H53.6429ZM56.0929 110.502H58.7249L57.4369 106.946L56.0929 110.502ZM66.0072 113.89C63.5852 113.89 62.0732 112.084 62.0732 109.746C62.0732 107.268 63.6132 105.448 66.1332 105.448C67.8972 105.448 69.3392 106.358 69.6472 108.094H68.4152C68.1492 107.044 67.2252 106.526 66.1192 106.526C64.2712 106.526 63.3052 107.912 63.3052 109.704C63.3052 111.51 64.3972 112.826 66.1612 112.826C67.6732 112.826 68.6672 111.944 68.6672 110.628V110.474H66.2872V109.41H69.7312V113.792H68.8212L68.7092 112.588C67.8832 113.512 67.0712 113.89 66.0072 113.89ZM71.6935 113.75V105.588H73.4435L75.7815 112.518L78.0635 105.588H79.8135V113.75H78.6375V107.044L76.4115 113.75H75.1375L72.8835 107.044V113.75H71.6935ZM81.8878 113.75V105.588H87.8798V106.652H83.1198V109.032H87.6698V110.096H83.1198V112.686H88.0898V113.75H81.8878ZM89.7861 113.75V105.588H91.1021L95.3581 111.93V105.588H96.5481V113.75H95.2041L90.9761 107.422V113.75H89.7861ZM100.624 113.75V106.652H97.8524V105.588H104.614V106.652H101.856V113.75H100.624Z" fill="rgb(var(--colour-main-500))"></path><path d="M449.206 167.75H445.398V157.964H448.884C450.634 157.964 451.838 158.916 451.838 160.456C451.838 161.394 451.39 162.332 450.536 162.64C451.558 162.976 452.16 163.788 452.16 164.964C452.16 166.434 451.138 167.75 449.206 167.75ZM446.672 159.07V162.164H448.688C449.738 162.164 450.508 161.828 450.508 160.638C450.508 159.434 449.738 159.07 448.688 159.07H446.672ZM446.672 163.27V166.644H449.052C450.284 166.644 450.83 165.944 450.83 164.95C450.83 163.97 450.284 163.27 449.052 163.27H446.672ZM460.731 166.98V167.862C460.437 167.946 460.213 167.988 460.031 167.988C459.219 167.988 458.813 167.638 458.729 166.882C457.903 167.694 457.175 168.002 456.237 168.002C454.809 168.002 453.843 167.204 453.843 165.846C453.843 164.334 454.991 163.788 455.845 163.648C456.097 163.606 456.643 163.522 457.469 163.41C458.407 163.284 458.715 163.102 458.715 162.626V162.374C458.715 161.646 458.141 161.282 457.035 161.282C455.957 161.282 455.425 161.688 455.327 162.584H454.151C454.179 160.89 455.355 160.204 457.091 160.204C458.897 160.204 459.849 160.904 459.849 162.206V166.434C459.849 166.812 460.059 167.008 460.479 167.008C460.549 167.008 460.661 166.994 460.731 166.98ZM458.715 165.202V164.04C458.225 164.264 457.427 164.39 456.811 164.46C455.719 164.586 455.033 164.894 455.033 165.818C455.033 166.546 455.593 166.98 456.531 166.98C457.553 166.98 458.715 166.224 458.715 165.202ZM462.833 167.75V160.414H463.911V161.632C464.485 160.736 465.185 160.204 466.347 160.204C467.621 160.204 468.671 160.848 468.671 162.206V167.75H467.509V162.668C467.509 161.688 466.809 161.226 465.997 161.226C464.681 161.226 463.995 162.36 463.995 163.62V167.75H462.833ZM473.139 167.75H471.991V157.544H473.139V163.48L476.289 160.414H477.773L475.127 163.032L478.207 167.75H476.821L474.259 163.802L473.139 164.894V167.75Z" fill="rgb(var(--colour-main-500))"></path><line x1="444.11" y1="235.25" x2="384.11" y2="235.25" stroke="rgb(var(--colour-main-500))"></line><line x1="246.11" y1="235.25" x2="204.11" y2="235.25" stroke="rgb(var(--colour-main-500))"></line><path d="M85.8464 157.964H87.1484V166.602H91.8104V167.75H85.8464V157.964ZM100.283 165.482C100.031 167.022 98.8686 168.002 97.1466 168.002C94.9346 168.002 93.8146 166.392 93.8146 164.152C93.8146 161.702 95.1446 160.19 97.1746 160.19C99.4426 160.19 100.437 161.884 100.437 164.432H95.0326C95.0746 165.874 95.7746 166.924 97.1886 166.924C98.1406 166.924 98.7846 166.462 99.1066 165.482H100.283ZM97.1606 161.268C95.8446 161.268 95.1586 162.248 95.0606 163.48H99.1766C99.1766 162.262 98.4206 161.268 97.1606 161.268ZM107.691 157.544H108.853V167.75H107.817V166.714C107.229 167.568 106.445 168.002 105.479 168.002C103.309 168.002 102.287 166.266 102.287 164.012C102.287 161.898 103.351 160.19 105.437 160.19C106.431 160.19 107.187 160.568 107.691 161.324V157.544ZM105.633 161.282C104.261 161.282 103.505 162.514 103.505 164.096C103.505 165.594 104.149 166.91 105.647 166.91C107.117 166.91 107.691 165.496 107.691 164.138C107.691 162.668 107.103 161.282 105.633 161.282ZM114.217 170.802C112.621 170.802 111.417 170.144 111.221 168.59H112.439C112.607 169.416 113.181 169.822 114.245 169.822C115.715 169.822 116.317 169.094 116.317 167.134V166.714C115.883 167.568 115.099 168.002 114.133 168.002C111.963 168.002 110.941 166.308 110.941 164.054C110.941 161.898 112.005 160.19 114.091 160.19C115.085 160.19 115.841 160.568 116.345 161.324V160.414H117.507V166.56C117.507 167.582 117.423 168.352 117.255 168.884C116.849 170.158 115.799 170.802 114.217 170.802ZM114.301 166.91C115.771 166.91 116.345 165.496 116.345 164.138C116.345 162.668 115.757 161.282 114.287 161.282C112.915 161.282 112.159 162.514 112.159 164.096C112.159 165.594 112.803 166.91 114.301 166.91ZM126.246 165.482C125.994 167.022 124.832 168.002 123.11 168.002C120.898 168.002 119.778 166.392 119.778 164.152C119.778 161.702 121.108 160.19 123.138 160.19C125.406 160.19 126.4 161.884 126.4 164.432H120.996C121.038 165.874 121.738 166.924 123.152 166.924C124.104 166.924 124.748 166.462 125.07 165.482H126.246ZM123.124 161.268C121.808 161.268 121.122 162.248 121.024 163.48H125.14C125.14 162.262 124.384 161.268 123.124 161.268ZM129.118 167.75V160.414H130.196V161.996C130.686 160.946 131.624 160.204 132.828 160.204C134.508 160.204 135.376 161.128 135.516 162.584H134.354C134.186 161.702 133.71 161.226 132.716 161.226C131.246 161.226 130.294 162.472 130.294 164.194V167.75H129.118Z" fill="rgb(var(--colour-main-500))"></path><rect x="72.1104" y="162.75" width="6" height="6" fill="rgb(var(--colour-inactive-br))"></rect><rect x="72.1104" y="156.75" width="6" height="6" fill="rgb(var(--colour-inactive-tr))"></rect><rect x="66.1104" y="162.75" width="6" height="6" fill="rgb(var(--colour-inactive-bl))"></rect><rect x="66.1104" y="156.75" width="6" height="6" fill="rgb(var(--colour-main-400))"></rect><path d="M84.1104 198.75H90.1104C90.1104 202.064 87.4241 204.75 84.1104 204.75V198.75Z" fill="rgb(var(--colour-inactive-br))"></path><path d="M84.1104 192.75C87.4241 192.75 90.1104 195.436 90.1104 198.75H84.1104V192.75Z" fill="rgb(var(--colour-inactive-tr))"></path><path d="M78.1104 198.75H84.1104V204.75C80.7966 204.75 78.1104 202.064 78.1104 198.75Z" fill="rgb(var(--colour-inactive-bl))"></path><path d="M78.1104 198.75C78.1104 195.436 80.7966 192.75 84.1104 192.75V198.75H78.1104Z" fill="rgb(var(--colour-inactive-tl))"></path><path d="M102.194 199.312H97.9944V202.602H102.656V203.75H96.6924V193.964H102.404V195.112H97.9944V198.164H102.194V199.312ZM105.179 203.75V196.414H106.257V197.632C106.831 196.736 107.531 196.204 108.693 196.204C109.967 196.204 111.017 196.848 111.017 198.206V203.75H109.855V198.668C109.855 197.688 109.155 197.226 108.343 197.226C107.027 197.226 106.341 198.36 106.341 199.62V203.75H105.179ZM116.801 196.414H119.685V197.366H116.801V201.454C116.801 202.532 117.375 202.896 118.439 202.896C118.915 202.896 119.335 202.854 119.685 202.756V203.778C119.223 203.918 118.761 203.946 118.369 203.946C116.591 203.946 115.639 203.26 115.639 201.664V197.366H113.525V196.414H115.639V194.398H116.801V196.414ZM122.809 203.75V196.414H123.887V197.996C124.377 196.946 125.315 196.204 126.519 196.204C128.199 196.204 129.067 197.128 129.207 198.584H128.045C127.877 197.702 127.401 197.226 126.407 197.226C124.937 197.226 123.985 198.472 123.985 200.194V203.75H122.809ZM134.11 205.29C133.732 206.298 133.018 206.802 132.108 206.802C131.758 206.802 131.45 206.76 131.156 206.662V205.57C131.464 205.64 131.716 205.654 131.954 205.654C132.486 205.654 132.78 205.458 132.99 204.94L133.438 203.862L130.722 196.414H131.954L134.096 202.364L136.21 196.414H137.414L134.11 205.29Z" fill="rgb(var(--colour-main-500))"></path><rect x="66.1104" y="180.75" width="138" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="78.1104" y="228.75" width="12" height="12" rx="6" fill="rgb(var(--colour-canvas))"></rect><path d="M78.1104 234.75C78.1104 231.436 80.7966 228.75 84.1104 228.75V234.75H78.1104Z" fill="#5AC93B"></path><path d="M96.8464 229.964H98.1484V238.602H102.81V239.75H96.8464V229.964ZM107.517 231.364V229.964H108.917V231.364H107.517ZM108.791 232.414V238.798H111.045V239.75H105.123V238.798H107.643V233.366H105.123V232.414H108.791ZM113.833 239.75V232.414H114.911V233.632C115.485 232.736 116.185 232.204 117.347 232.204C118.621 232.204 119.671 232.848 119.671 234.206V239.75H118.509V234.668C118.509 233.688 117.809 233.226 116.997 233.226C115.681 233.226 114.995 234.36 114.995 235.62V239.75H113.833ZM128.591 237.482C128.339 239.022 127.177 240.002 125.455 240.002C123.243 240.002 122.123 238.392 122.123 236.152C122.123 233.702 123.453 232.19 125.483 232.19C127.751 232.19 128.745 233.884 128.745 236.432H123.341C123.383 237.874 124.083 238.924 125.497 238.924C126.449 238.924 127.093 238.462 127.415 237.482H128.591ZM125.469 233.268C124.153 233.268 123.467 234.248 123.369 235.48H127.485C127.485 234.262 126.729 233.268 125.469 233.268Z" fill="rgb(var(--colour-main))"></path><path d="M187.03 241.108V239.834C185.252 239.666 184.16 238.406 184.118 236.754H185.182C185.224 237.888 185.84 238.714 187.03 238.868V235.242L186.4 235.074C185.126 234.738 184.314 233.786 184.314 232.554C184.314 231.098 185.322 230.048 187.03 229.908V228.634H187.828V229.908C189.424 230.048 190.39 231.056 190.46 232.61H189.396C189.34 231.714 188.822 231.028 187.828 230.874V234.332L188.738 234.584C190.012 234.934 190.754 235.844 190.754 237.02C190.754 238.616 189.606 239.694 187.828 239.834V241.108H187.03ZM186.596 233.996L187.03 234.122V230.86C186.064 230.972 185.392 231.504 185.392 232.442C185.392 233.184 185.812 233.786 186.596 233.996ZM188.374 235.606L187.828 235.452V238.882C189.004 238.77 189.676 238.126 189.676 237.174C189.676 236.39 189.284 235.844 188.374 235.606Z" fill="rgb(var(--colour-main))"></path><rect x="66.1104" y="216.75" width="138" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M266.02 231.112H263.094V239.75H261.792V231.112H258.852V229.964H266.02V231.112ZM274.213 232.414L271.749 235.956L274.283 239.75H272.897L271.091 236.964L269.257 239.75H267.899L270.489 236.012L268.039 232.414H269.411L271.133 235.046L272.883 232.414H274.213Z" fill="rgb(var(--colour-main))"></path><path d="M367.03 241.108V239.834C365.252 239.666 364.16 238.406 364.118 236.754H365.182C365.224 237.888 365.84 238.714 367.03 238.868V235.242L366.4 235.074C365.126 234.738 364.314 233.786 364.314 232.554C364.314 231.098 365.322 230.048 367.03 229.908V228.634H367.828V229.908C369.424 230.048 370.39 231.056 370.46 232.61H369.396C369.34 231.714 368.822 231.028 367.828 230.874V234.332L368.738 234.584C370.012 234.934 370.754 235.844 370.754 237.02C370.754 238.616 369.606 239.694 367.828 239.834V241.108H367.03ZM366.596 233.996L367.03 234.122V230.86C366.064 230.972 365.392 231.504 365.392 232.442C365.392 233.184 365.812 233.786 366.596 233.996ZM368.374 235.606L367.828 235.452V238.882C369.004 238.77 369.676 238.126 369.676 237.174C369.676 236.39 369.284 235.844 368.374 235.606Z" fill="rgb(var(--colour-main))"></path><rect x="246.11" y="216.75" width="138" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M464.02 231.112H461.094V239.75H459.792V231.112H456.852V229.964H464.02V231.112ZM472.213 232.414L469.749 235.956L472.283 239.75H470.897L469.091 236.964L467.257 239.75H465.899L468.489 236.012L466.039 232.414H467.411L469.133 235.046L470.883 232.414H472.213Z" fill="rgb(var(--colour-main))"></path><path d="M556.03 241.108V239.834C554.252 239.666 553.16 238.406 553.118 236.754H554.182C554.224 237.888 554.84 238.714 556.03 238.868V235.242L555.4 235.074C554.126 234.738 553.314 233.786 553.314 232.554C553.314 231.098 554.322 230.048 556.03 229.908V228.634H556.828V229.908C558.424 230.048 559.39 231.056 559.46 232.61H558.396C558.34 231.714 557.822 231.028 556.828 230.874V234.332L557.738 234.584C559.012 234.934 559.754 235.844 559.754 237.02C559.754 238.616 558.606 239.694 556.828 239.834V241.108H556.03ZM555.596 233.996L556.03 234.122V230.86C555.064 230.972 554.392 231.504 554.392 232.442C554.392 233.184 554.812 233.786 555.596 233.996ZM557.374 235.606L556.828 235.452V238.882C558.004 238.77 558.676 238.126 558.676 237.174C558.676 236.39 558.284 235.844 557.374 235.606Z" fill="rgb(var(--colour-main))"></path><rect x="444.11" y="216.75" width="129" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="36.1104" y="126.5" width="378" height="225" stroke="rgb(var(--colour-main-500))"></rect><rect x="54.1104" y="144.5" width="162" height="189" stroke="rgb(var(--colour-main-500))"></rect><path d="M265.846 157.964H267.148V166.602H271.81V167.75H265.846V157.964ZM276.517 159.364V157.964H277.917V159.364H276.517ZM274.123 167.75V166.798H276.643V161.366H274.123V160.414H277.791V166.798H280.045V167.75H274.123ZM282.833 167.75V160.414H283.911V161.632C284.485 160.736 285.185 160.204 286.347 160.204C287.621 160.204 288.671 160.848 288.671 162.206V167.75H287.509V162.668C287.509 161.688 286.809 161.226 285.997 161.226C284.681 161.226 283.995 162.36 283.995 163.62V167.75H282.833ZM293.139 167.75H291.991V157.544H293.139V163.48L296.289 160.414H297.773L295.127 163.032L298.207 167.75H296.821L294.259 163.802L293.139 164.894V167.75Z" fill="rgb(var(--colour-main-500))"></path><rect width="12" height="12" transform="translate(246.11 156.75)" fill="rgb(var(--colour-main-500))"></rect><circle cx="252.11" cy="162.75" r="6" fill="rgb(var(--colour-main-500))"></circle><path d="M252.729 161.491L250.821 163.399L251.433 164.011L253.341 162.103L252.729 161.491ZM249.381 165.451C250.149 166.219 251.289 166.219 252.069 165.451L252.957 164.563L252.345 163.951L251.517 164.779C251.037 165.259 250.473 165.319 249.993 164.839C249.525 164.371 249.585 163.807 250.065 163.327L250.893 162.499L250.281 161.887L249.477 162.691C248.709 163.459 248.625 164.683 249.381 165.451ZM251.229 160.939L251.841 161.551L252.669 160.723C253.137 160.243 253.713 160.183 254.181 160.651C254.649 161.119 254.589 161.695 254.121 162.175L253.281 163.003L253.893 163.615L254.793 162.727C255.561 161.959 255.549 160.807 254.793 160.039C254.025 159.283 252.885 159.283 252.117 160.051L251.229 160.939Z" fill="rgb(var(--colour-main-500))"></path></svg></div><div class="block tablet:hidden"><svg width="100%" height="100%" viewBox="0 0 379 415" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="378" height="414" transform="translate(0.110352 0.75)" fill="rgb(var(--colour-negative))"></rect><path d="M22.8144 28.732H20.7004V32.75H19.4264V22.964H22.8564C24.7324 22.964 25.9784 23.832 25.9784 25.638C25.9784 26.772 25.5164 27.514 24.3544 28.088C25.3904 28.508 25.6424 28.942 25.7264 30.37L25.7684 31.098C25.7964 31.574 25.8524 32.134 26.2724 32.428V32.75H24.8304C24.6204 32.316 24.4664 31.756 24.4664 31.112V30.496C24.4664 29.348 23.9764 28.732 22.8144 28.732ZM20.7004 24.07V27.626H22.6044C23.8784 27.626 24.6484 27.136 24.6484 25.778C24.6484 24.588 23.8924 24.07 22.6044 24.07H20.7004ZM34.2826 30.482C34.0306 32.022 32.8686 33.002 31.1466 33.002C28.9346 33.002 27.8146 31.392 27.8146 29.152C27.8146 26.702 29.1446 25.19 31.1746 25.19C33.4426 25.19 34.4366 26.884 34.4366 29.432H29.0326C29.0746 30.874 29.7746 31.924 31.1886 31.924C32.1406 31.924 32.7846 31.462 33.1066 30.482H34.2826ZM31.1606 26.268C29.8446 26.268 29.1586 27.248 29.0606 28.48H33.1766C33.1766 27.262 32.4206 26.268 31.1606 26.268ZM42.8809 27.836H41.7049C41.5789 26.87 40.9349 26.268 39.9129 26.268C38.4009 26.268 37.8129 27.71 37.8129 29.166C37.8129 30.622 38.4709 31.924 39.9409 31.924C40.9629 31.924 41.5929 31.35 41.7889 30.188H42.9649C42.8109 31.952 41.7189 33.002 39.9129 33.002C37.7709 33.002 36.5949 31.322 36.5949 29.166C36.5949 26.968 37.7429 25.19 39.9269 25.19C41.7189 25.19 42.8389 26.282 42.8809 27.836ZM48.3992 25.19C50.6532 25.19 51.7172 26.87 51.7172 29.096C51.7172 31.322 50.6532 33.002 48.3992 33.002C46.1452 33.002 45.0812 31.322 45.0812 29.096C45.0812 26.87 46.1452 25.19 48.3992 25.19ZM48.3992 26.268C46.9152 26.268 46.2992 27.598 46.2992 29.096C46.2992 30.594 46.9152 31.924 48.3992 31.924C49.8832 31.924 50.4992 30.594 50.4992 29.096C50.4992 27.598 49.8832 26.268 48.3992 26.268ZM54.1415 32.75V25.414H55.2195V26.632C55.7935 25.736 56.4935 25.204 57.6555 25.204C58.9295 25.204 59.9795 25.848 59.9795 27.206V32.75H58.8175V27.668C58.8175 26.688 58.1175 26.226 57.3055 26.226C55.9895 26.226 55.3035 27.36 55.3035 28.62V32.75H54.1415ZM68.8438 27.836H67.6678C67.5418 26.87 66.8978 26.268 65.8758 26.268C64.3638 26.268 63.7758 27.71 63.7758 29.166C63.7758 30.622 64.4338 31.924 65.9038 31.924C66.9258 31.924 67.5558 31.35 67.7518 30.188H68.9278C68.7738 31.952 67.6818 33.002 65.8758 33.002C63.7338 33.002 62.5578 31.322 62.5578 29.166C62.5578 26.968 63.7058 25.19 65.8898 25.19C67.6818 25.19 68.8018 26.282 68.8438 27.836ZM73.7881 24.364V22.964H75.1881V24.364H73.7881ZM75.0621 25.414V31.798H77.3161V32.75H71.3941V31.798H73.9141V26.366H71.3941V25.414H75.0621ZM83.9964 22.544V31.798H86.2504V32.75H80.3284V31.798H82.8624V23.496H80.3284V22.544H83.9964ZM91.0967 24.364V22.964H92.4967V24.364H91.0967ZM92.3707 25.414V31.798H94.6247V32.75H88.7027V31.798H91.2227V26.366H88.7027V25.414H92.3707ZM97.413 32.75V25.414H98.491V26.632C99.065 25.736 99.765 25.204 100.927 25.204C102.201 25.204 103.251 25.848 103.251 27.206V32.75H102.089V27.668C102.089 26.688 101.389 26.226 100.577 26.226C99.261 26.226 98.575 27.36 98.575 28.62V32.75H97.413ZM108.797 35.802C107.201 35.802 105.997 35.144 105.801 33.59H107.019C107.187 34.416 107.761 34.822 108.825 34.822C110.295 34.822 110.897 34.094 110.897 32.134V31.714C110.463 32.568 109.679 33.002 108.713 33.002C106.543 33.002 105.521 31.308 105.521 29.054C105.521 26.898 106.585 25.19 108.671 25.19C109.665 25.19 110.421 25.568 110.925 26.324V25.414H112.087V31.56C112.087 32.582 112.003 33.352 111.835 33.884C111.429 35.158 110.379 35.802 108.797 35.802ZM108.881 31.91C110.351 31.91 110.925 30.496 110.925 29.138C110.925 27.668 110.337 26.282 108.867 26.282C107.495 26.282 106.739 27.514 106.739 29.096C106.739 30.594 107.383 31.91 108.881 31.91ZM129.872 24.112H126.946V32.75H125.644V24.112H122.704V22.964H129.872V24.112ZM138.064 25.414L135.6 28.956L138.134 32.75H136.748L134.942 29.964L133.108 32.75H131.75L134.34 29.012L131.89 25.414H133.262L134.984 28.046L136.734 25.414H138.064ZM146.285 27.416H145.067C145.039 26.688 144.479 26.226 143.597 26.226C142.645 26.226 142.001 26.646 142.001 27.304C142.001 27.822 142.365 28.13 143.051 28.312L144.717 28.746C145.949 29.068 146.579 29.67 146.579 30.706C146.579 32.134 145.459 33.002 143.639 33.002C141.721 33.002 140.713 32.162 140.629 30.524H141.861C141.973 31.518 142.575 31.966 143.667 31.966C144.703 31.966 145.389 31.574 145.389 30.888C145.389 30.258 145.081 29.992 144.283 29.782L142.743 29.376C141.413 29.026 140.811 28.48 140.811 27.36C140.811 26.03 141.903 25.19 143.625 25.19C145.333 25.19 146.257 26.03 146.285 27.416Z" fill="rgb(var(--colour-main))"></path><rect x="18.1104" y="126.75" width="243" height="198" stroke="rgb(var(--colour-main-500))"></rect><rect x="144.11" y="135.75" width="108" height="180" stroke="rgb(var(--colour-main-500))"></rect><rect x="27.1104" y="135.75" width="108" height="180" stroke="rgb(var(--colour-main-500))"></rect><path d="M20.1404 113.75V105.588H26.0904V106.652H21.3724V109.032H25.5304V110.096H21.3724V113.75H20.1404ZM27.8706 113.75V105.588H31.7206C33.3166 105.588 34.2826 106.386 34.2826 107.772C34.2826 108.724 33.8766 109.312 32.8966 109.746C33.8486 110.124 34.0166 110.404 34.0586 111.832C34.0586 112 34.1146 112.672 34.1706 112.924C34.2126 113.134 34.3106 113.316 34.5626 113.484V113.75H33.1206C32.9386 113.386 32.8546 113.022 32.8546 112.392C32.8546 112.07 32.8686 111.944 32.8686 111.622C32.8686 110.74 32.5046 110.32 31.5246 110.32H29.1026V113.75H27.8706ZM29.1026 109.256H31.4126C32.4346 109.256 33.0086 108.906 33.0086 107.954C33.0086 107.002 32.4486 106.652 31.4126 106.652H29.1026V109.256ZM35.6429 113.75L38.6949 105.588H40.2209L43.2169 113.75H41.8729L41.0749 111.538H37.7709L36.9449 113.75H35.6429ZM38.0929 110.502H40.7249L39.4369 106.946L38.0929 110.502ZM48.0072 113.89C45.5852 113.89 44.0732 112.084 44.0732 109.746C44.0732 107.268 45.6132 105.448 48.1332 105.448C49.8972 105.448 51.3392 106.358 51.6472 108.094H50.4152C50.1492 107.044 49.2252 106.526 48.1192 106.526C46.2712 106.526 45.3052 107.912 45.3052 109.704C45.3052 111.51 46.3972 112.826 48.1612 112.826C49.6732 112.826 50.6672 111.944 50.6672 110.628V110.474H48.2872V109.41H51.7312V113.792H50.8212L50.7092 112.588C49.8832 113.512 49.0712 113.89 48.0072 113.89ZM53.6935 113.75V105.588H55.4435L57.7815 112.518L60.0635 105.588H61.8135V113.75H60.6375V107.044L58.4115 113.75H57.1375L54.8835 107.044V113.75H53.6935ZM63.8878 113.75V105.588H69.8798V106.652H65.1198V109.032H69.6698V110.096H65.1198V112.686H70.0898V113.75H63.8878ZM71.7861 113.75V105.588H73.1021L77.3581 111.93V105.588H78.5481V113.75H77.2041L72.9761 107.422V113.75H71.7861ZM82.6244 113.75V106.652H79.8524V105.588H86.6144V106.652H83.8564V113.75H82.6244Z" fill="rgb(var(--colour-main-500))"></path><path d="M175.846 148.964H177.148V157.602H181.81V158.75H175.846V148.964ZM186.517 150.364V148.964H187.917V150.364H186.517ZM184.123 158.75V157.798H186.643V152.366H184.123V151.414H187.791V157.798H190.045V158.75H184.123ZM192.833 158.75V151.414H193.911V152.632C194.485 151.736 195.185 151.204 196.347 151.204C197.621 151.204 198.671 151.848 198.671 153.206V158.75H197.509V153.668C197.509 152.688 196.809 152.226 195.997 152.226C194.681 152.226 193.995 153.36 193.995 154.62V158.75H192.833ZM203.139 158.75H201.991V148.544H203.139V154.48L206.289 151.414H207.773L205.127 154.032L208.207 158.75H206.821L204.259 154.802L203.139 155.894V158.75Z" fill="rgb(var(--colour-main-500))"></path><rect width="12" height="12" transform="translate(156.11 147.75)" fill="rgb(var(--colour-main-500))"></rect><circle cx="162.11" cy="153.75" r="6" fill="rgb(var(--colour-main-500))"></circle><path d="M162.729 152.491L160.821 154.399L161.433 155.011L163.341 153.103L162.729 152.491ZM159.381 156.451C160.149 157.219 161.289 157.219 162.069 156.451L162.957 155.563L162.345 154.951L161.517 155.779C161.037 156.259 160.473 156.319 159.993 155.839C159.525 155.371 159.585 154.807 160.065 154.327L160.893 153.499L160.281 152.887L159.477 153.691C158.709 154.459 158.625 155.683 159.381 156.451ZM161.229 151.939L161.841 152.551L162.669 151.723C163.137 151.243 163.713 151.183 164.181 151.651C164.649 152.119 164.589 152.695 164.121 153.175L163.281 154.003L163.893 154.615L164.793 153.727C165.561 152.959 165.549 151.807 164.793 151.039C164.025 150.283 162.885 150.283 162.117 151.051L161.229 151.939Z" fill="rgb(var(--colour-main-500))"></path><path d="M58.8464 148.964H60.1484V157.602H64.8104V158.75H58.8464V148.964ZM72.1766 154.48C72.1766 153.262 71.4206 152.268 70.1606 152.268C68.8446 152.268 68.1586 153.248 68.0606 154.48H72.1766ZM66.8146 155.152C66.8146 152.702 68.1446 151.19 70.1746 151.19C72.4426 151.19 73.4366 152.884 73.4366 155.432H68.0326C68.0746 156.874 68.7746 157.924 70.1886 157.924C71.1406 157.924 71.7846 157.462 72.1066 156.482H73.2826C73.0306 158.022 71.8686 159.002 70.1466 159.002C67.9346 159.002 66.8146 157.392 66.8146 155.152ZM80.6909 148.544H81.8529V158.75H80.8169V157.714C80.2289 158.568 79.4449 159.002 78.4789 159.002C76.3089 159.002 75.2869 157.266 75.2869 155.012C75.2869 152.898 76.3509 151.19 78.4369 151.19C79.4309 151.19 80.1869 151.568 80.6909 152.324V148.544ZM76.5049 155.096C76.5049 156.594 77.1489 157.91 78.6469 157.91C80.1169 157.91 80.6909 156.496 80.6909 155.138C80.6909 153.668 80.1029 152.282 78.6329 152.282C77.2609 152.282 76.5049 153.514 76.5049 155.096ZM87.2172 161.802C85.6212 161.802 84.4172 161.144 84.2212 159.59H85.4392C85.6072 160.416 86.1812 160.822 87.2452 160.822C88.7152 160.822 89.3172 160.094 89.3172 158.134V157.714C88.8832 158.568 88.0992 159.002 87.1332 159.002C84.9632 159.002 83.9412 157.308 83.9412 155.054C83.9412 152.898 85.0052 151.19 87.0912 151.19C88.0852 151.19 88.8412 151.568 89.3452 152.324V151.414H90.5072V157.56C90.5072 158.582 90.4232 159.352 90.2552 159.884C89.8492 161.158 88.7992 161.802 87.2172 161.802ZM85.1592 155.096C85.1592 156.594 85.8032 157.91 87.3012 157.91C88.7712 157.91 89.3452 156.496 89.3452 155.138C89.3452 153.668 88.7572 152.282 87.2872 152.282C85.9152 152.282 85.1592 153.514 85.1592 155.096ZM98.1395 154.48C98.1395 153.262 97.3835 152.268 96.1235 152.268C94.8075 152.268 94.1215 153.248 94.0235 154.48H98.1395ZM92.7775 155.152C92.7775 152.702 94.1075 151.19 96.1375 151.19C98.4055 151.19 99.3995 152.884 99.3995 155.432H93.9955C94.0375 156.874 94.7375 157.924 96.1515 157.924C97.1035 157.924 97.7475 157.462 98.0695 156.482H99.2455C98.9935 158.022 97.8315 159.002 96.1095 159.002C93.8975 159.002 92.7775 157.392 92.7775 155.152ZM102.118 158.75V151.414H103.196V152.996C103.686 151.946 104.624 151.204 105.828 151.204C107.508 151.204 108.376 152.128 108.516 153.584H107.354C107.186 152.702 106.71 152.226 105.716 152.226C104.246 152.226 103.294 153.472 103.294 155.194V158.75H102.118Z" fill="rgb(var(--colour-main-500))"></path><rect width="12" height="12" transform="translate(39.1104 147.75)" fill="rgb(var(--colour-main))"></rect><rect x="45.1104" y="153.75" width="6" height="6" fill="rgb(var(--colour-inactive-br))"></rect><rect x="45.1104" y="147.75" width="6" height="6" fill="rgb(var(--colour-inactive-tr))"></rect><rect x="39.1104" y="153.75" width="6" height="6" fill="rgb(var(--colour-inactive-bl))"></rect><rect x="39.1104" y="147.75" width="6" height="6" fill="rgb(var(--colour-main-400))"></rect><g clip-path="url(#clip0_2693_2320_dark)"><circle cx="174.11" cy="189.75" r="6" fill="rgb(var(--colour-main-500))"></circle><path d="M185.53 194.75L188.624 184.964H190.262L193.342 194.75H191.984L191.116 191.824H187.742L186.874 194.75H185.53ZM188.064 190.732H190.794L189.422 186.14L188.064 190.732ZM200.051 189.836C199.925 188.87 199.281 188.268 198.259 188.268C196.747 188.268 196.159 189.71 196.159 191.166C196.159 192.622 196.817 193.924 198.287 193.924C199.309 193.924 199.939 193.35 200.135 192.188H201.311C201.157 193.952 200.065 195.002 198.259 195.002C196.117 195.002 194.941 193.322 194.941 191.166C194.941 188.968 196.089 187.19 198.273 187.19C200.065 187.19 201.185 188.282 201.227 189.836H200.051ZM208.705 189.836C208.579 188.87 207.935 188.268 206.913 188.268C205.401 188.268 204.813 189.71 204.813 191.166C204.813 192.622 205.471 193.924 206.941 193.924C207.963 193.924 208.593 193.35 208.789 192.188H209.965C209.811 193.952 208.719 195.002 206.913 195.002C204.771 195.002 203.595 193.322 203.595 191.166C203.595 188.968 204.743 187.19 206.927 187.19C208.719 187.19 209.839 188.282 209.881 189.836H208.705ZM215.455 187.414H218.339V188.366H215.455V192.454C215.455 193.532 216.029 193.91 217.093 193.91C217.569 193.91 217.989 193.882 218.339 193.784V194.778C217.877 194.918 217.415 194.946 217.023 194.946C215.245 194.946 214.293 194.26 214.293 192.664V188.366H212.179V187.414H214.293V185.398H215.455V187.414Z" fill="rgb(var(--colour-main-500))"></path></g><rect x="156.11" y="171.75" width="84" height="36" stroke="rgb(var(--colour-main-500))"></rect><line x1="288.11" y1="226.25" x2="240.11" y2="226.25" stroke="rgb(var(--colour-main-500))"></line><line x1="156.11" y1="226.25" x2="123.11" y2="226.25" stroke="rgb(var(--colour-main-500))"></line><g clip-path="url(#clip1_2693_2320_dark)"><path d="M57.1104 189.75H63.1104C63.1104 193.064 60.4241 195.75 57.1104 195.75V189.75Z" fill="rgb(var(--colour-inactive-br))"></path><path d="M57.1104 183.75C60.4241 183.75 63.1104 186.436 63.1104 189.75H57.1104V183.75Z" fill="rgb(var(--colour-inactive-tr))"></path><path d="M51.1104 189.75H57.1104V195.75C53.7966 195.75 51.1104 193.064 51.1104 189.75Z" fill="rgb(var(--colour-inactive-bl))"></path><path d="M51.1104 189.75C51.1104 186.436 53.7966 183.75 57.1104 183.75V189.75H51.1104Z" fill="rgb(var(--colour-inactive-tl))"></path><path d="M75.1944 190.312H70.9944V193.602H75.6564V194.75H69.6924V184.964H75.4044V186.112H70.9944V189.164H75.1944V190.312ZM78.1786 194.75V187.414H79.2566V188.632C79.8306 187.736 80.5306 187.204 81.6926 187.204C82.9666 187.204 84.0166 187.848 84.0166 189.206V194.75H82.8546V189.668C82.8546 188.688 82.1546 188.226 81.3426 188.226C80.0266 188.226 79.3406 189.36 79.3406 190.62V194.75H78.1786ZM89.8009 187.414H92.6849V188.366H89.8009V192.454C89.8009 193.532 90.3749 193.896 91.4389 193.896C91.9149 193.896 92.3349 193.854 92.6849 193.756V194.778C92.2229 194.918 91.7609 194.946 91.3689 194.946C89.5909 194.946 88.6389 194.26 88.6389 192.664V188.366H86.5249V187.414H88.6389V185.398H89.8009V187.414ZM95.8092 194.75V187.414H96.8872V188.996C97.3772 187.946 98.3152 187.204 99.5192 187.204C101.199 187.204 102.067 188.128 102.207 189.584H101.045C100.877 188.702 100.401 188.226 99.4072 188.226C97.9372 188.226 96.9852 189.472 96.9852 191.194V194.75H95.8092ZM107.11 196.29C106.732 197.298 106.018 197.802 105.108 197.802C104.758 197.802 104.45 197.76 104.156 197.662V196.57C104.464 196.64 104.716 196.654 104.954 196.654C105.486 196.654 105.78 196.458 105.99 195.94L106.438 194.862L103.722 187.414H104.954L107.096 193.364L109.21 187.414H110.414L107.11 196.29Z" fill="rgb(var(--colour-main-500))"></path></g><rect x="39.1104" y="171.75" width="84" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M308.02 222.112H305.094V230.75H303.792V222.112H300.852V220.964H308.02V222.112ZM316.213 223.414L313.749 226.956L316.283 230.75H314.897L313.091 227.964L311.257 230.75H309.899L312.489 227.012L310.039 223.414H311.411L313.133 226.046L314.883 223.414H316.213Z" fill="rgb(var(--colour-main))"></path><path d="M334.03 232.108V230.834C332.252 230.666 331.16 229.406 331.118 227.754H332.182C332.224 228.888 332.84 229.714 334.03 229.868V226.242L333.4 226.074C332.126 225.738 331.314 224.786 331.314 223.554C331.314 222.098 332.322 221.048 334.03 220.908V219.634H334.828V220.908C336.424 221.048 337.39 222.056 337.46 223.61H336.396C336.34 222.714 335.822 222.028 334.828 221.874V225.332L335.738 225.584C337.012 225.934 337.754 226.844 337.754 228.02C337.754 229.616 336.606 230.694 334.828 230.834V232.108H334.03ZM333.596 224.996L334.03 225.122V221.86C333.064 221.972 332.392 222.504 332.392 223.442C332.392 224.184 332.812 224.786 333.596 224.996ZM335.374 226.606L334.828 226.452V229.882C336.004 229.77 336.676 229.126 336.676 228.174C336.676 227.39 336.284 226.844 335.374 226.606Z" fill="rgb(var(--colour-main))"></path><rect x="288.11" y="207.75" width="63" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M176.02 222.112H173.094V230.75H171.792V222.112H168.852V220.964H176.02V222.112ZM184.213 223.414L181.749 226.956L184.283 230.75H182.897L181.091 227.964L179.257 230.75H177.899L180.489 227.012L178.039 223.414H179.411L181.133 226.046L182.883 223.414H184.213Z" fill="rgb(var(--colour-main))"></path><path d="M223.03 232.108V230.834C221.252 230.666 220.16 229.406 220.118 227.754H221.182C221.224 228.888 221.84 229.714 223.03 229.868V226.242L222.4 226.074C221.126 225.738 220.314 224.786 220.314 223.554C220.314 222.098 221.322 221.048 223.03 220.908V219.634H223.828V220.908C225.424 221.048 226.39 222.056 226.46 223.61H225.396C225.34 222.714 224.822 222.028 223.828 221.874V225.332L224.738 225.584C226.012 225.934 226.754 226.844 226.754 228.02C226.754 229.616 225.606 230.694 223.828 230.834V232.108H223.03ZM221.392 223.442C221.392 224.184 221.812 224.786 222.596 224.996L223.03 225.122V221.86C222.064 221.972 221.392 222.504 221.392 223.442ZM223.828 229.882C225.004 229.77 225.676 229.126 225.676 228.174C225.676 227.39 225.284 226.844 224.374 226.606L223.828 226.452V229.882Z" fill="rgb(var(--colour-main))"></path><rect x="156.11" y="207.75" width="84" height="36" stroke="rgb(var(--colour-main-500))"></rect><g clip-path="url(#clip2_2693_2320_dark)"><rect x="51.1104" y="219.75" width="12" height="12" rx="6" fill="rgb(var(--colour-canvas))"></rect><path d="M51.1104 225.75C51.1104 222.436 53.7966 219.75 57.1104 219.75V225.75H51.1104Z" fill="#5AC93B"></path><path d="M69.8464 220.964H71.1484V229.602H75.8104V230.75H69.8464V220.964ZM78.1786 230.75V223.414H79.2566V224.632C79.8306 223.736 80.5306 223.204 81.6926 223.204C82.9666 223.204 84.0166 223.848 84.0166 225.206V230.75H82.8546V225.668C82.8546 224.688 82.1546 224.226 81.3426 224.226C80.0266 224.226 79.3406 225.36 79.3406 226.62V230.75H78.1786Z" fill="rgb(var(--colour-main))"></path><path d="M106.03 232.108V230.834C104.252 230.666 103.16 229.406 103.118 227.754H104.182C104.224 228.888 104.84 229.714 106.03 229.868V226.242L105.4 226.074C104.126 225.738 103.314 224.786 103.314 223.554C103.314 222.098 104.322 221.048 106.03 220.908V219.634H106.828V220.908C108.424 221.048 109.39 222.056 109.46 223.61H108.396C108.34 222.714 107.822 222.028 106.828 221.874V225.332L107.738 225.584C109.012 225.934 109.754 226.844 109.754 228.02C109.754 229.616 108.606 230.694 106.828 230.834V232.108H106.03ZM105.596 224.996L106.03 225.122V221.86C105.064 221.972 104.392 222.504 104.392 223.442C104.392 224.184 104.812 224.786 105.596 224.996ZM107.374 226.606L106.828 226.452V229.882C108.004 229.77 108.676 229.126 108.676 228.174C108.676 227.39 108.284 226.844 107.374 226.606Z" fill="rgb(var(--colour-main))"></path></g><rect x="39.1104" y="207.75" width="84" height="36" stroke="rgb(var(--colour-main-500))"></rect><g clip-path="url(#clip3_2693_2320_dark)"><rect x="51.1104" y="255.75" width="12" height="12" rx="6" fill="rgb(var(--colour-canvas))"></rect><path d="M51.1104 261.75H57.1104V267.75C53.7966 267.75 51.1104 265.064 51.1104 261.75Z" fill="rgb(var(--colour-main-500))"></path><path d="M69.8464 256.964H71.1484V265.602H75.8104V266.75H69.8464V256.964ZM78.1786 266.75V259.414H79.2566V260.632C79.8306 259.736 80.5306 259.204 81.6926 259.204C82.9666 259.204 84.0166 259.848 84.0166 261.206V266.75H82.8546V261.668C82.8546 260.688 82.1546 260.226 81.3426 260.226C80.0266 260.226 79.3406 261.36 79.3406 262.62V266.75H78.1786Z" fill="rgb(var(--colour-main-500))"></path><path d="M106.03 268.108V266.834C104.252 266.666 103.16 265.406 103.118 263.754H104.182C104.224 264.888 104.84 265.714 106.03 265.868V262.242L105.4 262.074C104.126 261.738 103.314 260.786 103.314 259.554C103.314 258.098 104.322 257.048 106.03 256.908V255.634H106.828V256.908C108.424 257.048 109.39 258.056 109.46 259.61H108.396C108.34 258.714 107.822 258.028 106.828 257.874V261.332L107.738 261.584C109.012 261.934 109.754 262.844 109.754 264.02C109.754 265.616 108.606 266.694 106.828 266.834V268.108H106.03ZM105.596 260.996L106.03 261.122V257.86C105.064 257.972 104.392 258.504 104.392 259.442C104.392 260.184 104.812 260.786 105.596 260.996ZM107.374 262.606L106.828 262.452V265.882C108.004 265.77 108.676 265.126 108.676 264.174C108.676 263.39 108.284 262.844 107.374 262.606Z" fill="rgb(var(--colour-main-500))"></path></g><rect x="39.1104" y="243.75" width="84" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="279.11" y="135.75" width="81" height="180" stroke="rgb(var(--colour-main-500))"></rect><path d="M293.206 158.75H289.398V148.964H292.884C294.634 148.964 295.838 149.916 295.838 151.456C295.838 152.394 295.39 153.332 294.536 153.64C295.558 153.976 296.16 154.788 296.16 155.964C296.16 157.434 295.138 158.75 293.206 158.75ZM290.672 157.644H293.052C294.284 157.644 294.83 156.944 294.83 155.95C294.83 154.97 294.284 154.27 293.052 154.27H290.672V157.644ZM290.672 153.164H292.688C293.738 153.164 294.508 152.828 294.508 151.638C294.508 150.434 293.738 150.07 292.688 150.07H290.672V153.164ZM304.731 158.862C304.437 158.946 304.213 158.988 304.031 158.988C303.219 158.988 302.813 158.638 302.729 157.882C301.903 158.694 301.175 159.002 300.237 159.002C298.809 159.002 297.843 158.204 297.843 156.846C297.843 155.334 298.991 154.788 299.845 154.648C300.097 154.606 300.643 154.522 301.469 154.41C302.407 154.284 302.715 154.102 302.715 153.626V153.374C302.715 152.646 302.141 152.282 301.035 152.282C299.957 152.282 299.425 152.688 299.327 153.584H298.151C298.179 151.89 299.355 151.204 301.091 151.204C302.897 151.204 303.849 151.904 303.849 153.206V157.434C303.849 157.812 304.059 158.008 304.479 158.008C304.549 158.008 304.661 157.994 304.731 157.98V158.862ZM299.033 156.818C299.033 157.546 299.593 157.98 300.531 157.98C301.553 157.98 302.715 157.224 302.715 156.202V155.04C302.225 155.264 301.427 155.39 300.811 155.46C299.719 155.586 299.033 155.894 299.033 156.818ZM306.833 158.75V151.414H307.911V152.632C308.485 151.736 309.185 151.204 310.347 151.204C311.621 151.204 312.671 151.848 312.671 153.206V158.75H311.509V153.668C311.509 152.688 310.809 152.226 309.997 152.226C308.681 152.226 307.995 153.36 307.995 154.62V158.75H306.833ZM317.139 158.75H315.991V148.544H317.139V154.48L320.289 151.414H321.773L319.127 154.032L322.207 158.75H320.821L318.259 154.802L317.139 155.894V158.75Z" fill="rgb(var(--colour-main-500))"></path><path d="M306.984 194.75L306.116 191.824H302.742L301.874 194.75H300.53L303.624 184.964H305.262L308.342 194.75H306.984ZM303.064 190.732H305.794L304.422 186.14L303.064 190.732ZM316.227 189.836H315.051C314.925 188.87 314.281 188.268 313.259 188.268C311.747 188.268 311.159 189.71 311.159 191.166C311.159 192.622 311.817 193.924 313.287 193.924C314.309 193.924 314.939 193.35 315.135 192.188H316.311C316.157 193.952 315.065 195.002 313.259 195.002C311.117 195.002 309.941 193.322 309.941 191.166C309.941 188.968 311.089 187.19 313.273 187.19C315.065 187.19 316.185 188.282 316.227 189.836ZM324.881 189.836H323.705C323.579 188.87 322.935 188.268 321.913 188.268C320.401 188.268 319.813 189.71 319.813 191.166C319.813 192.622 320.471 193.924 321.941 193.924C322.963 193.924 323.593 193.35 323.789 192.188H324.965C324.811 193.952 323.719 195.002 321.913 195.002C319.771 195.002 318.595 193.322 318.595 191.166C318.595 188.968 319.743 187.19 321.927 187.19C323.719 187.19 324.839 188.282 324.881 189.836ZM330.455 187.414H333.339V188.366H330.455V192.454C330.455 193.532 331.029 193.896 332.093 193.896C332.569 193.896 332.989 193.854 333.339 193.756V194.778C332.877 194.918 332.415 194.946 332.023 194.946C330.245 194.946 329.293 194.26 329.293 192.664V188.366H327.179V187.414H329.293V185.398H330.455V187.414Z" fill="rgb(var(--colour-main-500))"></path><rect x="288.11" y="171.75" width="63" height="36" stroke="rgb(var(--colour-main-500))"></rect><defs><clipPath id="clip0_2693_2320_dark"><rect x="156.11" y="171.75" width="84" height="36" fill="rgb(var(--colour-negative))"></rect></clipPath><clipPath id="clip1_2693_2320_dark"><rect x="39.1104" y="171.75" width="84" height="36" fill="rgb(var(--colour-negative))"></rect></clipPath><clipPath id="clip2_2693_2320_dark"><rect x="39.1104" y="207.75" width="84" height="36" fill="rgb(var(--colour-negative))"></rect></clipPath><clipPath id="clip3_2693_2320_dark"><rect x="39.1104" y="243.75" width="84" height="36" fill="rgb(var(--colour-negative))"></rect></clipPath></defs></svg></div></div></div></div></section><section id="reconcile-transactions-native-links" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">b. </span>Native Links</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#reconcile-transactions-native-links">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Native Links are built-in integrations that automatically sync External Accounts and Txs.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Once you onboard a Native Link, Txs automatically sync periodically and via webhook. Txs also sync when you call the API for reconciliation.</p><section id="reconcile-transactions-native-links-increase" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Increase</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#reconcile-transactions-native-links-increase">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To create a Native Link with <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://increase.com/">Increase</a>:</p><ol data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2 ml-[1.875em] list-decimal list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Create a Link in the <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://dashboard.fragment.dev/go/links/add/increase">dashboard</a> and select Increase.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Select either your Increase sandbox or production environment.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">When redirected to Increase, approve the connection.</li>
</ol></div></section><section id="reconcile-transactions-native-links-stripe" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Stripe</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#reconcile-transactions-native-links-stripe">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To create a Native Link with <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://stripe.com/">Stripe</a>:</p><ol data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2 ml-[1.875em] list-decimal list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Create a Link in the <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://dashboard.fragment.dev/go/links/add/stripe">dashboard</a> and select Stripe.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Select either your Stripe test or live environment.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">When redirected to Stripe, approve the connection.</li>
</ol></div></section><section id="reconcile-transactions-native-links-stripe-connect" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Stripe Connect</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#reconcile-transactions-native-links-stripe-connect">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To onboard Stripe Connect, in addition to creating a Stripe link, you&#x27;ll need to create a Restricted Access Key (RAK) with the following permissions:</p><ol data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2 ml-[1.875em] list-decimal list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Balance - <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">Read</code> for both Permissions and Connect Permissions</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Balance Transaction Sources - <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">Read</code> for both Permissions and Connect Permissions</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Balance Transfers - <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">Read</code> for both Permissions and Connect Permissions</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">All Connect Resources - <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">Read</code></li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">All Webhook Resources - <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">Write</code>. This is used to setup webhooks to <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>.</li>
</ol><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Once you have the RAK:</p><ol data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2 ml-[1.875em] list-decimal list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Navigate to the <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://dashboard.fragment.dev/go/links">Links</a> page in the Dashboard</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Select the Stripe Link</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Navigate to the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">Details</code> page</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Submit the RAK you&#x27;ve just generated. You&#x27;re all setup!</li>
</ol></div></section><section id="reconcile-transactions-native-links-unit" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Unit</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#reconcile-transactions-native-links-unit">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To create a Native Link with <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://unit.co/">Unit</a>:</p><ol data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2 ml-[1.875em] list-decimal list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Create a API Key at Unit with <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">accounts</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">transactions</code> scopes.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Create a Link in the <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://dashboard.fragment.dev/go/links/add/unit">dashboard</a> and select Unit.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Enter your Unit Org ID and API Key.</li>
</ol><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Note: You must be pre-approved by Unit to enable the Native Link.</p></div></section></div></div></section><section id="reconcile-transactions-link-any-system" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">c. </span>Link any system</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#reconcile-transactions-link-any-system">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Custom Links allow you to build your own integration between <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> and any external financial system. Instead of syncing automatically like a Native Link, you sync External Accounts and Txs by calling the API.</p><section id="reconcile-transactions-link-any-system-onboarding" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Onboarding</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#reconcile-transactions-link-any-system-onboarding">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can either create a Link in the <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://dashboard.fragment.dev/go/links/add/custom">dashboard</a> or using <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">createCustomLink</code>:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">createCustomLink mutation</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation NewCustomLink($name: String!, $ik: SafeString!) {
  createCustomLink(name: $name, ik: $ik) {
    __typename
    ... on CreateCustomLinkResult {
      link {
        id
        name
      }
      isIkReplay
    }
    ... on Error {
      code
      message
    }
  }
}</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">createCustomLink variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
	&quot;name&quot;: &quot;Stripe&quot;,
	&quot;ik&quot;: &quot;dev-stripe&quot;
}</code></pre></div></div></div></div></section><section id="reconcile-transactions-link-any-system-sync-accounts" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Sync accounts</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#reconcile-transactions-link-any-system-sync-accounts">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">If you only have a few accounts, sync them manually as part of bootstrapping your Ledger.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Otherwise, sync accounts as you create them at the external system. The sync process can run either periodically or by webhook, or both.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Once you have a set of accounts to sync, call <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">syncCustomAccounts</code>:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">syncCustomAccounts mutation</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation CreateBankAccounts(
  $link: LinkMatchInput!
  $accounts: [CustomAccountInput!]!
  ) {
  syncCustomAccounts(link: $link, accounts: $accounts) {
    __typename
    ... on SyncCustomAccountsResult {
      accounts {
        id
        externalId
        name
      }
    }
    ... on Error {
      code
      message
    }
  }
}</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">syncCustomAccounts variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;link&quot;: {
    &quot;id&quot;: &quot;some-link-id&quot;
  },
  &quot;accounts&quot;: [
    {
      &quot;externalId&quot;: &quot;bank-account-1&quot;,
      &quot;name&quot;: &quot;Operational Account&quot;
    },
    {
      &quot;externalId&quot;: &quot;bank-account-2&quot;,
      &quot;name&quot;: &quot;Reserve Account&quot;
    }
  ]
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You should ensure that <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">externalId</code> is a stable and unique identifier for each account, within the scope of its Link. This ensures that syncing is idempotent. <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">externalId</code> is typically set to the ID of the account at the external system.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Calling <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">syncCustomAccounts</code> with a different <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">name</code> for an existing <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">externalId</code> updates the name of the External Account.</p></div></section></div></div></section><section id="reconcile-transactions-linked-accounts" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">d. </span>Linked Accounts</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#reconcile-transactions-linked-accounts">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">After you set up the Link, create Linked Ledger Accounts, accounts in your Ledger that map 1:1 with accounts at your external financial system.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To define a Linked Ledger Account, set <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">linkedAccount</code> on a Ledger Account in your Schema:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Linked Ledger Account with hardcoded IDs</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;chartOfAccounts&quot;: {
    &quot;accounts&quot;: [
      {
        &quot;key&quot;: &quot;assets-root&quot;,
        &quot;name&quot;: &quot;Assets&quot;,
        &quot;type&quot;: &quot;asset&quot;,
        &quot;children&quot;: [{
          &quot;key&quot;: &quot;operating&quot;,
          &quot;name&quot;: &quot;Operating Bank&quot;,
          &quot;linkedAccount&quot;: {
            &quot;linkId&quot;: &quot;some-link-id&quot;,
            &quot;externalId&quot;: &quot;bank-account-1&quot;
          }
        }]
      }
    ]
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">linkId</code> comes from the Link you create in the dashboard. The <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">externalId</code> is the ID of the account at your external financial system.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The CLI automatically replaces variables with <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">${ENV_VAR}</code> syntax when running <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">fragment store-schema</code>. This lets you use different External Accounts per environment:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Linked Ledger Account with env var IDs</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;chartOfAccounts&quot;: {
    &quot;accounts&quot;: [
      {
        &quot;key&quot;: &quot;assets-root&quot;,
        &quot;name&quot;: &quot;Assets&quot;,
        &quot;type&quot;: &quot;asset&quot;,
        &quot;children&quot;: [{
          &quot;key&quot;: &quot;operating&quot;,
          &quot;name&quot;: &quot;Operating Bank&quot;,
          &quot;linkedAccount&quot;: {
            &quot;linkId&quot;: &quot;${BANK_LINK_ID}&quot;,
            &quot;externalId&quot;: &quot;${BANK_ACCOUNT_ID}&quot;
          }
        }]
      }
    ]
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To create a Linked Ledger Account that is part of a Ledger Account template, parameterize the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">linkedAccount</code> field:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Linked Ledger Account with parameter IDs</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;chartOfAccounts&quot;: {
    &quot;accounts&quot;: [
      {
        &quot;key&quot;: &quot;assets-root&quot;,
        &quot;name&quot;: &quot;Assets&quot;,
        &quot;type&quot;: &quot;asset&quot;,
        &quot;children&quot;: [{
          &quot;key&quot;: &quot;operating&quot;,
          &quot;name&quot;: &quot;Operating Bank&quot;,
          &quot;template&quot;: true,
          &quot;linkedAccount&quot;: {
            &quot;linkId&quot;: &quot;{{BANK_LINK_ID}}&quot;,
            &quot;externalId&quot;: &quot;{{BANK_ACCOUNT_ID}}&quot;
          }
        }]
      }
    ]
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">These parameters are then required when posting a Ledger Entry to a Linked Ledger Account. This can be useful if you&#x27;re creating bank accounts per customer, for example.</p></div></div></section><section id="reconcile-transactions-transact-externally" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">e. </span>Transact externally</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#reconcile-transactions-transact-externally">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Transactions at your external financial system are initiated in one of two ways:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">You initiate a payment by calling their API.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">You are notified by the external system that a transaction has occurred. This can happen via webhook, by polling their API, or receiving a periodic transaction report.</li>
</ul></div></div></section><section id="reconcile-transactions-sync-transactions" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">f. </span>Sync transactions</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#reconcile-transactions-sync-transactions">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Once a transaction occurs, you need to sync it with your <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> Ledger.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">If you&#x27;re using a Native Link, <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> automatically syncs transactions. You can skip ahead to <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#reconcile-transactions-reconcile-a-tx">Reconcile transactions</a>.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">If you&#x27;re using a Custom Link, your sync process should call <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">syncCustomTxs</code>. Your sync process can periodically enumerate transactions in your external system or be triggered by webhook.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You may also want to sync and reconcile when your product makes a payment. You should only sync transactions that are settled, not pending or declined.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Once you have a set of transactions to sync, call <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">syncCustomTxs</code>:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">syncCustomTxs mutation</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation SyncTransactions(
  $link: LinkMatchInput!
  $txs: [CustomTxInput!]!
) {
  syncCustomTxs(link: $link, txs: $txs) {
    __typename
    ... on SyncCustomTxsResult {
      txs {
        id
        externalId
        amount
        date
        description
      }
    }
    ... on Error {
      code
      message
    }
  }
}</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">syncCustomTxs variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;link&quot;: { &quot;id&quot;: &quot;some-link-id&quot; },
  &quot;txs&quot;: [
    {
      &quot;account&quot;: {
        &quot;externalId&quot;: &quot;bank-account-1&quot;
      },
      &quot;externalId&quot;: &quot;tx-1&quot;,
      &quot;description&quot;: &quot;Processed ACH batch&quot;,
      &quot;amount&quot;: &quot;-100&quot;,
      &quot;posted&quot;: &quot;1968-01-01&quot;
    },
    {
      &quot;account&quot;: {
        &quot;externalId&quot;: &quot;bank-account-2&quot;
      },
      &quot;externalId&quot;: &quot;tx-2&quot;,
      &quot;description&quot;: &quot;Received RTP payment&quot;,
      &quot;amount&quot;: &quot;100&quot;,
      &quot;posted&quot;: &quot;1968-01-01T16:45:00Z&quot;
    }
  ]
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You should ensure that <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">externalId</code> is a stable and unique identifier for each transaction, within the scope of its account. This identifier enforces idempotentency. This identifier is typically the ID of the transaction at the external system. Make sure you use the lowest level transaction ID available, not the ID of a higher level construct that may be linked to multiple transactions, like a payment.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Calling <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">syncCustomTxs</code> with a different <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">description</code> for an existing <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">externalId</code> updates the name of the External Account. <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">amount</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">posted</code> timestamp are immutable.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can sync transactions from different accounts in the same API call, but they must all belong to the same Custom Link.</p></div></div></section><section id="reconcile-transactions-reconcile-a-tx" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">g. </span>Reconcile a Tx</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#reconcile-transactions-reconcile-a-tx">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To reconcile a transaction from an external system, follow the same two-step process as when posting Ledger Entries:</p><ol data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2 ml-[1.875em] list-decimal list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Define the structure of the Ledger Entry in your Schema.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Post the Ledger Entry using the API.</li>
</ol><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Ledger Entries posting to a Linked Ledger Account must specify the Tx from the External Account tied to the Ledger Account. This lets <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> know which transaction to reconcile:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">LedgerEntrySchema with Linked Ledger Account</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;key&quot;: &quot;schema-key&quot;,
  &quot;chartOfAccounts&quot;: {...},
  &quot;ledgerEntries&quot;: {
    &quot;types&quot;: [
      {
        &quot;type&quot;: &quot;user_funds_account_via_link&quot;,
        &quot;description&quot;: &quot;Funding {{user_id}} for {{funding_amount}}&quot;,
        &quot;lines&quot;: [
          {
            &quot;account&quot;: { &quot;path&quot;: &quot;assets/operating&quot; },
            &quot;key&quot;: &quot;funds_arrive_in_bank&quot;,
            &quot;tx&quot;: {
              &quot;externalId&quot;: &quot;{{bank_transaction_id}}&quot;
            }
          },
          {
            &quot;account&quot;: { &quot;path&quot;: &quot;liabilities/users:{{user_id}}/available&quot; },
            &quot;key&quot;: &quot;increase_user_balance&quot;
          }
        ]
      }
    ]
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Notes:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Ledger Lines posting to a Linked Ledger Account must match 1:1 with the Tx that&#x27;s being reconciled.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">bank_transaction_id</code> represents the ID of the transaction at the external system.</li>
</ul><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Instead of calling <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">addLedgerEntry</code>, Linked Ledger Accounts use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">reconcileTx</code> mutation:</p><div class="pt-f2"><div class="relative flex min-w-f0"><div class="flex group-one bg-negative flex-col min-w-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div data-test-role="title" class="px-[1.25em] py-f2 flex flex-row flex-auto truncate hover:cursor-pointer group-two" role="button" tabindex="0"><div class="flex-initial"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">reconcileTx mutation </span></div><div class="pl-f2 group-two-hover:text-main group-one-hover:block transition-colors"><div class="hidden laptop:block"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-s20 no-underline leading-none text-inherit bg-inherit border-none">↓</span></div><div class="laptop:hidden"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-fnormal no-underline leading-none text-inherit bg-inherit border-none">↓</span></div></div></div><div class="py-f2 px-[1.25em] hover:cursor-pointer hidden group-one-hover:block"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 hover:text-main bg-inherit border-none">Show</span></div></div><div class="max-h-f20 flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation ReconcileTx(
  $entry: LedgerEntryInput!
) {
  reconcileTx(
    entry: $entry
  ) {
    ... on ReconcileTxResult {
      entry {
        type
        created
        posted
      }
      lines {
        amount
        key
        description
        account {
          path
        }
      }
    }
    ... on Error {
      code
      message
    }
  }
}</code></pre></div></div><div class="absolute w-full left-f0 bottom-f0 min-h-f20 bg-gradient-to-b from-transparent to-negative"> <!-- --> </div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The parameters look similar to <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">addLedgerEntry</code>. Specify the Ledger Entry <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">type</code> that you are using and provide the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">parameters</code> defined in the Schema:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">reconcileTx variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;entry&quot;: {
    &quot;type&quot;: &quot;user_funding&quot;,
    &quot;ledger&quot;: {
      &quot;ik&quot;: &quot;ledger-ik&quot;
    },
    &quot;parameters&quot;: {
      &quot;txId&quot;: &quot;tx_12345&quot;,
      &quot;customerId&quot;: &quot;customer-1&quot;
    }
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ik</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">posted</code> are optional when posting Ledger Entries with <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">reconcileTx</code>:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ik</code>: the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">Tx.externalId</code> is used to ensure that reconciling a transaction is idempotent</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">posted</code>: the timestamp of the Ledger Entry is taken from the Tx to ensure the Ledger mirrors the external system</li>
</ul><section id="reconcile-transactions-reconcile-a-tx-reconciling-multiple-txs" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Reconciling multiple Txs</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#reconcile-transactions-reconcile-a-tx-reconciling-multiple-txs">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Book transfers are a common type of money movement which produce two Txs at your bank as part of one payment.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To reconcile multiple Txs using <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">reconcileTx</code>:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">LedgerEntrySchema with multiple Txs</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;key&quot;: &quot;schema-key&quot;,
  &quot;chartOfAccounts&quot;: {...},
  &quot;ledgerEntries&quot;: {
    &quot;types&quot;: [
      {
        &quot;type&quot;: &quot;user_funds_account_via_link&quot;,
        &quot;description&quot;: &quot;Funding {{user_id}} for {{funding_amount}}&quot;,
        &quot;lines&quot;: [
          {
            &quot;key&quot;: &quot;funds_arrive_in_operating_bank&quot;,
            &quot;account&quot;: { &quot;path&quot;: &quot;assets/operating-bank-account&quot; },
            &quot;tx&quot;: {
              &quot;externalId&quot;: &quot;{{bank_transaction_id}}&quot;
            }
          },
          {
            &quot;key&quot;: &quot;funds_leave_holding_bank&quot;,
            &quot;account&quot;: { &quot;path&quot;: &quot;assets/holding-bank-account&quot; },
            &quot;tx&quot;: {
              &quot;externalId&quot;: &quot;{{bank_transaction_id}}&quot;
            }
          }
        ]
      }
    ]
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Notes:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Reconciling multiple Txs is only permitted if they have the same <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">posted</code> timestamp.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">You can only reconcile multiple Txs within the same Link.</li>
</ul></div></section></div></div></section><section id="reconcile-transactions-unreconciled-txs" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">h. </span>Unreconciled Txs</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#reconcile-transactions-unreconciled-txs">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Transactions synced to <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> but not reconciled to a Ledger are considered unreconciled.</p><div class="pt-f2"><div class="hidden tablet:block"><svg width="100%" height="100%" viewBox="0 0 622 451" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="621" height="450" transform="translate(0.110352 0.75)" fill="rgb(var(--colour-negative))"></rect><circle cx="264.11" cy="198.75" r="6" fill="rgb(var(--colour-main-500))"></circle><path d="M282.194 199.312H277.994V202.602H282.656V203.75H276.692V193.964H282.404V195.112H277.994V198.164H282.194V199.312ZM291.213 196.414L288.749 199.956L291.283 203.75H289.897L288.091 200.964L286.257 203.75H284.899L287.489 200.012L285.039 196.414H286.411L288.133 199.046L289.883 196.414H291.213ZM296.801 196.414H299.685V197.366H296.801V201.454C296.801 202.532 297.375 202.896 298.439 202.896C298.915 202.896 299.335 202.854 299.685 202.756V203.778C299.223 203.918 298.761 203.946 298.369 203.946C296.591 203.946 295.639 203.26 295.639 201.664V197.366H293.525V196.414H295.639V194.398H296.801V196.414ZM301.073 205.794H309.725V206.802H301.073V205.794ZM316.602 203.75L315.734 200.824H312.36L311.492 203.75H310.148L313.242 193.964H314.88L317.96 203.75H316.602ZM312.682 199.732H315.412L314.04 195.14L312.682 199.732ZM325.844 198.836H324.668C324.542 197.87 323.898 197.268 322.876 197.268C321.364 197.268 320.776 198.71 320.776 200.166C320.776 201.622 321.434 202.924 322.904 202.924C323.926 202.924 324.556 202.35 324.752 201.188H325.928C325.774 202.952 324.682 204.002 322.876 204.002C320.734 204.002 319.558 202.322 319.558 200.166C319.558 197.968 320.706 196.19 322.89 196.19C324.682 196.19 325.802 197.282 325.844 198.836ZM334.498 198.836H333.322C333.196 197.87 332.552 197.268 331.53 197.268C330.018 197.268 329.43 198.71 329.43 200.166C329.43 201.622 330.088 202.924 331.558 202.924C332.58 202.924 333.21 202.35 333.406 201.188H334.582C334.428 202.952 333.336 204.002 331.53 204.002C329.388 204.002 328.212 202.322 328.212 200.166C328.212 197.968 329.36 196.19 331.544 196.19C333.336 196.19 334.456 197.282 334.498 198.836ZM340.016 196.19C342.27 196.19 343.334 197.87 343.334 200.096C343.334 202.322 342.27 204.002 340.016 204.002C337.762 204.002 336.698 202.322 336.698 200.096C336.698 197.87 337.762 196.19 340.016 196.19ZM340.016 197.268C338.532 197.268 337.916 198.598 337.916 200.096C337.916 201.594 338.532 202.924 340.016 202.924C341.5 202.924 342.116 201.594 342.116 200.096C342.116 198.598 341.5 197.268 340.016 197.268ZM351.597 196.414V203.75H350.547V202.658C349.875 203.624 349.175 204.002 348.097 204.002C347.467 204.002 346.935 203.862 346.515 203.568C346.011 203.204 345.759 202.686 345.759 202V196.414H346.921V201.538C346.921 202.028 347.089 202.406 347.411 202.658C347.677 202.868 348.027 202.98 348.433 202.98C348.979 202.98 349.441 202.784 349.819 202.378C350.225 201.944 350.435 201.314 350.435 200.488V196.414H351.597ZM354.413 203.75V196.414H355.491V197.632C356.065 196.736 356.765 196.204 357.927 196.204C359.201 196.204 360.251 196.848 360.251 198.206V203.75H359.089V198.668C359.089 197.688 358.389 197.226 357.577 197.226C356.261 197.226 355.575 198.36 355.575 199.62V203.75H354.413ZM366.035 196.414H368.919V197.366H366.035V201.454C366.035 202.532 366.609 202.896 367.673 202.896C368.149 202.896 368.569 202.854 368.919 202.756V203.778C368.457 203.918 367.995 203.946 367.603 203.946C365.825 203.946 364.873 203.26 364.873 201.664V197.366H362.759V196.414H364.873V194.398H366.035V196.414Z" fill="rgb(var(--colour-main-500))"></path><rect x="246.11" y="180.75" width="138" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M24.5364 29.684V22.964H25.8384V29.866C25.8384 32.134 24.2704 33.002 22.4224 33.002C20.5184 33.002 19.0344 32.092 19.0344 29.866V22.964H20.3364V29.684C20.3364 31.392 21.3024 31.854 22.4224 31.854C23.5564 31.854 24.5364 31.364 24.5364 29.684ZM28.1786 32.75V25.414H29.2566V26.632C29.8306 25.736 30.5306 25.204 31.6926 25.204C32.9666 25.204 34.0166 25.848 34.0166 27.206V32.75H32.8546V27.668C32.8546 26.688 32.1546 26.226 31.3426 26.226C30.0266 26.226 29.3406 27.36 29.3406 28.62V32.75H28.1786ZM37.1549 32.75V25.414H38.2329V26.996C38.7229 25.946 39.6609 25.204 40.8649 25.204C42.5449 25.204 43.4129 26.128 43.5529 27.584H42.3909C42.2229 26.702 41.7469 26.226 40.7529 26.226C39.2829 26.226 38.3309 27.472 38.3309 29.194V32.75H37.1549ZM51.5912 30.482C51.3392 32.022 50.1772 33.002 48.4552 33.002C46.2432 33.002 45.1232 31.392 45.1232 29.152C45.1232 26.702 46.4532 25.19 48.4832 25.19C50.7512 25.19 51.7452 26.884 51.7452 29.432H46.3412C46.3832 30.874 47.0832 31.924 48.4972 31.924C49.4492 31.924 50.0932 31.462 50.4152 30.482H51.5912ZM48.4692 26.268C47.1532 26.268 46.4672 27.248 46.3692 28.48H50.4852C50.4852 27.262 49.7292 26.268 48.4692 26.268ZM60.1895 27.836H59.0135C58.8875 26.87 58.2435 26.268 57.2215 26.268C55.7095 26.268 55.1215 27.71 55.1215 29.166C55.1215 30.622 55.7795 31.924 57.2495 31.924C58.2715 31.924 58.9015 31.35 59.0975 30.188H60.2735C60.1195 31.952 59.0275 33.002 57.2215 33.002C55.0795 33.002 53.9035 31.322 53.9035 29.166C53.9035 26.968 55.0515 25.19 57.2355 25.19C59.0275 25.19 60.1475 26.282 60.1895 27.836ZM65.7078 25.19C67.9618 25.19 69.0258 26.87 69.0258 29.096C69.0258 31.322 67.9618 33.002 65.7078 33.002C63.4538 33.002 62.3898 31.322 62.3898 29.096C62.3898 26.87 63.4538 25.19 65.7078 25.19ZM65.7078 26.268C64.2238 26.268 63.6078 27.598 63.6078 29.096C63.6078 30.594 64.2238 31.924 65.7078 31.924C67.1918 31.924 67.8078 30.594 67.8078 29.096C67.8078 27.598 67.1918 26.268 65.7078 26.268ZM71.4501 32.75V25.414H72.5281V26.632C73.1021 25.736 73.8021 25.204 74.9641 25.204C76.2381 25.204 77.2881 25.848 77.2881 27.206V32.75H76.1261V27.668C76.1261 26.688 75.4261 26.226 74.6141 26.226C73.2981 26.226 72.6121 27.36 72.6121 28.62V32.75H71.4501ZM86.1524 27.836H84.9764C84.8504 26.87 84.2064 26.268 83.1844 26.268C81.6724 26.268 81.0844 27.71 81.0844 29.166C81.0844 30.622 81.7424 31.924 83.2124 31.924C84.2344 31.924 84.8644 31.35 85.0604 30.188H86.2364C86.0824 31.952 84.9904 33.002 83.1844 33.002C81.0424 33.002 79.8664 31.322 79.8664 29.166C79.8664 26.968 81.0144 25.19 83.1984 25.19C84.9904 25.19 86.1104 26.282 86.1524 27.836ZM91.0967 24.364V22.964H92.4967V24.364H91.0967ZM92.3707 25.414V31.798H94.6247V32.75H88.7027V31.798H91.2227V26.366H88.7027V25.414H92.3707ZM101.305 22.544V31.798H103.559V32.75H97.637V31.798H100.171V23.496H97.637V22.544H101.305ZM112.171 30.482C111.919 32.022 110.757 33.002 109.035 33.002C106.823 33.002 105.703 31.392 105.703 29.152C105.703 26.702 107.033 25.19 109.063 25.19C111.331 25.19 112.325 26.884 112.325 29.432H106.921C106.963 30.874 107.663 31.924 109.077 31.924C110.029 31.924 110.673 31.462 110.995 30.482H112.171ZM109.049 26.268C107.733 26.268 107.047 27.248 106.949 28.48H111.065C111.065 27.262 110.309 26.268 109.049 26.268ZM119.58 22.544H120.742V32.75H119.706V31.714C119.118 32.568 118.334 33.002 117.368 33.002C115.198 33.002 114.176 31.266 114.176 29.012C114.176 26.898 115.24 25.19 117.326 25.19C118.32 25.19 119.076 25.568 119.58 26.324V22.544ZM117.522 26.282C116.15 26.282 115.394 27.514 115.394 29.096C115.394 30.594 116.038 31.91 117.536 31.91C119.006 31.91 119.58 30.496 119.58 29.138C119.58 27.668 118.992 26.282 117.522 26.282ZM138.526 24.112H135.6V32.75H134.298V24.112H131.358V22.964H138.526V24.112ZM146.719 25.414L144.255 28.956L146.789 32.75H145.403L143.597 29.964L141.763 32.75H140.405L142.995 29.012L140.545 25.414H141.917L143.639 28.046L145.389 25.414H146.719ZM154.939 27.416H153.721C153.693 26.688 153.133 26.226 152.251 26.226C151.299 26.226 150.655 26.646 150.655 27.304C150.655 27.822 151.019 28.13 151.705 28.312L153.371 28.746C154.603 29.068 155.233 29.67 155.233 30.706C155.233 32.134 154.113 33.002 152.293 33.002C150.375 33.002 149.367 32.162 149.283 30.524H150.515C150.627 31.518 151.229 31.966 152.321 31.966C153.357 31.966 154.043 31.574 154.043 30.888C154.043 30.258 153.735 29.992 152.937 29.782L151.397 29.376C150.067 29.026 149.465 28.48 149.465 27.36C149.465 26.03 150.557 25.19 152.279 25.19C153.987 25.19 154.911 26.03 154.939 27.416Z" fill="rgb(var(--colour-main))"></path><rect x="234.11" y="144.75" width="162" height="188.75" stroke="rgb(var(--colour-main-500))"></rect><path d="M38.1404 113.75V105.588H44.0904V106.652H39.3724V109.032H43.5304V110.096H39.3724V113.75H38.1404ZM45.8706 113.75V105.588H49.7206C51.3166 105.588 52.2826 106.386 52.2826 107.772C52.2826 108.724 51.8766 109.312 50.8966 109.746C51.8486 110.124 52.0166 110.404 52.0586 111.832C52.0586 112 52.1146 112.672 52.1706 112.924C52.2126 113.134 52.3106 113.316 52.5626 113.484V113.75H51.1206C50.9386 113.386 50.8546 113.022 50.8546 112.392C50.8546 112.07 50.8686 111.944 50.8686 111.622C50.8686 110.74 50.5046 110.32 49.5246 110.32H47.1026V113.75H45.8706ZM47.1026 109.256H49.4126C50.4346 109.256 51.0086 108.906 51.0086 107.954C51.0086 107.002 50.4486 106.652 49.4126 106.652H47.1026V109.256ZM53.6429 113.75L56.6949 105.588H58.2209L61.2169 113.75H59.8729L59.0749 111.538H55.7709L54.9449 113.75H53.6429ZM56.0929 110.502H58.7249L57.4369 106.946L56.0929 110.502ZM66.0072 113.89C63.5852 113.89 62.0732 112.084 62.0732 109.746C62.0732 107.268 63.6132 105.448 66.1332 105.448C67.8972 105.448 69.3392 106.358 69.6472 108.094H68.4152C68.1492 107.044 67.2252 106.526 66.1192 106.526C64.2712 106.526 63.3052 107.912 63.3052 109.704C63.3052 111.51 64.3972 112.826 66.1612 112.826C67.6732 112.826 68.6672 111.944 68.6672 110.628V110.474H66.2872V109.41H69.7312V113.792H68.8212L68.7092 112.588C67.8832 113.512 67.0712 113.89 66.0072 113.89ZM71.6935 113.75V105.588H73.4435L75.7815 112.518L78.0635 105.588H79.8135V113.75H78.6375V107.044L76.4115 113.75H75.1375L72.8835 107.044V113.75H71.6935ZM81.8878 113.75V105.588H87.8798V106.652H83.1198V109.032H87.6698V110.096H83.1198V112.686H88.0898V113.75H81.8878ZM89.7861 113.75V105.588H91.1021L95.3581 111.93V105.588H96.5481V113.75H95.2041L90.9761 107.422V113.75H89.7861ZM100.624 113.75V106.652H97.8524V105.588H104.614V106.652H101.856V113.75H100.624Z" fill="rgb(var(--colour-main-500))"></path><path d="M85.8464 157.964H87.1484V166.602H91.8104V167.75H85.8464V157.964ZM100.283 165.482C100.031 167.022 98.8686 168.002 97.1466 168.002C94.9346 168.002 93.8146 166.392 93.8146 164.152C93.8146 161.702 95.1446 160.19 97.1746 160.19C99.4426 160.19 100.437 161.884 100.437 164.432H95.0326C95.0746 165.874 95.7746 166.924 97.1886 166.924C98.1406 166.924 98.7846 166.462 99.1066 165.482H100.283ZM97.1606 161.268C95.8446 161.268 95.1586 162.248 95.0606 163.48H99.1766C99.1766 162.262 98.4206 161.268 97.1606 161.268ZM107.691 157.544H108.853V167.75H107.817V166.714C107.229 167.568 106.445 168.002 105.479 168.002C103.309 168.002 102.287 166.266 102.287 164.012C102.287 161.898 103.351 160.19 105.437 160.19C106.431 160.19 107.187 160.568 107.691 161.324V157.544ZM105.633 161.282C104.261 161.282 103.505 162.514 103.505 164.096C103.505 165.594 104.149 166.91 105.647 166.91C107.117 166.91 107.691 165.496 107.691 164.138C107.691 162.668 107.103 161.282 105.633 161.282ZM114.217 170.802C112.621 170.802 111.417 170.144 111.221 168.59H112.439C112.607 169.416 113.181 169.822 114.245 169.822C115.715 169.822 116.317 169.094 116.317 167.134V166.714C115.883 167.568 115.099 168.002 114.133 168.002C111.963 168.002 110.941 166.308 110.941 164.054C110.941 161.898 112.005 160.19 114.091 160.19C115.085 160.19 115.841 160.568 116.345 161.324V160.414H117.507V166.56C117.507 167.582 117.423 168.352 117.255 168.884C116.849 170.158 115.799 170.802 114.217 170.802ZM114.301 166.91C115.771 166.91 116.345 165.496 116.345 164.138C116.345 162.668 115.757 161.282 114.287 161.282C112.915 161.282 112.159 162.514 112.159 164.096C112.159 165.594 112.803 166.91 114.301 166.91ZM126.246 165.482C125.994 167.022 124.832 168.002 123.11 168.002C120.898 168.002 119.778 166.392 119.778 164.152C119.778 161.702 121.108 160.19 123.138 160.19C125.406 160.19 126.4 161.884 126.4 164.432H120.996C121.038 165.874 121.738 166.924 123.152 166.924C124.104 166.924 124.748 166.462 125.07 165.482H126.246ZM123.124 161.268C121.808 161.268 121.122 162.248 121.024 163.48H125.14C125.14 162.262 124.384 161.268 123.124 161.268ZM129.118 167.75V160.414H130.196V161.996C130.686 160.946 131.624 160.204 132.828 160.204C134.508 160.204 135.376 161.128 135.516 162.584H134.354C134.186 161.702 133.71 161.226 132.716 161.226C131.246 161.226 130.294 162.472 130.294 164.194V167.75H129.118Z" fill="rgb(var(--colour-main-500))"></path><rect x="72.1104" y="162.75" width="6" height="6" fill="rgb(var(--colour-inactive-br))"></rect><rect x="72.1104" y="156.75" width="6" height="6" fill="rgb(var(--colour-inactive-tr))"></rect><rect x="66.1104" y="162.75" width="6" height="6" fill="rgb(var(--colour-inactive-bl))"></rect><rect x="66.1104" y="156.75" width="6" height="6" fill="rgb(var(--colour-main-400))"></rect><rect x="78.1104" y="228.75" width="12" height="12" rx="6" fill="rgb(var(--colour-canvas))"></rect><path d="M78.1104 234.75C78.1104 231.436 80.7966 228.75 84.1104 228.75V234.75H78.1104Z" fill="rgb(var(--colour-main-500))"></path><path d="M96.8464 229.964H98.1484V238.602H102.81V239.75H96.8464V229.964ZM107.517 231.364V229.964H108.917V231.364H107.517ZM108.791 232.414V238.798H111.045V239.75H105.123V238.798H107.643V233.366H105.123V232.414H108.791ZM113.833 239.75V232.414H114.911V233.632C115.485 232.736 116.185 232.204 117.347 232.204C118.621 232.204 119.671 232.848 119.671 234.206V239.75H118.509V234.668C118.509 233.688 117.809 233.226 116.997 233.226C115.681 233.226 114.995 234.36 114.995 235.62V239.75H113.833ZM128.591 237.482C128.339 239.022 127.177 240.002 125.455 240.002C123.243 240.002 122.123 238.392 122.123 236.152C122.123 233.702 123.453 232.19 125.483 232.19C127.751 232.19 128.745 233.884 128.745 236.432H123.341C123.383 237.874 124.083 238.924 125.497 238.924C126.449 238.924 127.093 238.462 127.415 237.482H128.591ZM125.469 233.268C124.153 233.268 123.467 234.248 123.369 235.48H127.485C127.485 234.262 126.729 233.268 125.469 233.268Z" fill="rgb(var(--colour-main-500))"></path><path d="M187.03 241.108V239.834C185.252 239.666 184.16 238.406 184.118 236.754H185.182C185.224 237.888 185.84 238.714 187.03 238.868V235.242L186.4 235.074C185.126 234.738 184.314 233.786 184.314 232.554C184.314 231.098 185.322 230.048 187.03 229.908V228.634H187.828V229.908C189.424 230.048 190.39 231.056 190.46 232.61H189.396C189.34 231.714 188.822 231.028 187.828 230.874V234.332L188.738 234.584C190.012 234.934 190.754 235.844 190.754 237.02C190.754 238.616 189.606 239.694 187.828 239.834V241.108H187.03ZM186.596 233.996L187.03 234.122V230.86C186.064 230.972 185.392 231.504 185.392 232.442C185.392 233.184 185.812 233.786 186.596 233.996ZM188.374 235.606L187.828 235.452V238.882C189.004 238.77 189.676 238.126 189.676 237.174C189.676 236.39 189.284 235.844 188.374 235.606Z" fill="rgb(var(--colour-main-500))"></path><rect x="66.1104" y="216.75" width="138" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="66.1104" y="252.75" width="138" height="36" stroke="rgb(var(--colour-orange))"></rect><path d="M266.02 231.112H263.094V239.75H261.792V231.112H258.852V229.964H266.02V231.112ZM274.213 232.414L271.749 235.956L274.283 239.75H272.897L271.091 236.964L269.257 239.75H267.899L270.489 236.012L268.039 232.414H269.411L271.133 235.046L272.883 232.414H274.213Z" fill="rgb(var(--colour-main-500))"></path><path d="M367.03 241.108V239.834C365.252 239.666 364.16 238.406 364.118 236.754H365.182C365.224 237.888 365.84 238.714 367.03 238.868V235.242L366.4 235.074C365.126 234.738 364.314 233.786 364.314 232.554C364.314 231.098 365.322 230.048 367.03 229.908V228.634H367.828V229.908C369.424 230.048 370.39 231.056 370.46 232.61H369.396C369.34 231.714 368.822 231.028 367.828 230.874V234.332L368.738 234.584C370.012 234.934 370.754 235.844 370.754 237.02C370.754 238.616 369.606 239.694 367.828 239.834V241.108H367.03ZM366.596 233.996L367.03 234.122V230.86C366.064 230.972 365.392 231.504 365.392 232.442C365.392 233.184 365.812 233.786 366.596 233.996ZM368.374 235.606L367.828 235.452V238.882C369.004 238.77 369.676 238.126 369.676 237.174C369.676 236.39 369.284 235.844 368.374 235.606Z" fill="rgb(var(--colour-main-500))"></path><rect x="246.11" y="216.75" width="138" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M266.02 267.112H263.094V275.75H261.792V267.112H258.852V265.964H266.02V267.112ZM274.213 268.414L271.749 271.956L274.283 275.75H272.897L271.091 272.964L269.257 275.75H267.899L270.489 272.012L268.039 268.414H269.411L271.133 271.046L272.883 268.414H274.213Z" fill="rgb(var(--colour-main))"></path><path d="M367.03 277.108V275.834C365.252 275.666 364.16 274.406 364.118 272.754H365.182C365.224 273.888 365.84 274.714 367.03 274.868V271.242L366.4 271.074C365.126 270.738 364.314 269.786 364.314 268.554C364.314 267.098 365.322 266.048 367.03 265.908V264.634H367.828V265.908C369.424 266.048 370.39 267.056 370.46 268.61H369.396C369.34 267.714 368.822 267.028 367.828 266.874V270.332L368.738 270.584C370.012 270.934 370.754 271.844 370.754 273.02C370.754 274.616 369.606 275.694 367.828 275.834V277.108H367.03ZM366.596 269.996L367.03 270.122V266.86C366.064 266.972 365.392 267.504 365.392 268.442C365.392 269.184 365.812 269.786 366.596 269.996ZM368.374 271.606L367.828 271.452V274.882C369.004 274.77 369.676 274.126 369.676 273.174C369.676 272.39 369.284 271.844 368.374 271.606Z" fill="rgb(var(--colour-main))"></path><rect x="246.11" y="252.75" width="138" height="36" stroke="rgb(var(--colour-orange))"></rect><rect x="54.1104" y="144.5" width="162" height="189" stroke="rgb(var(--colour-main-500))"></rect><path d="M265.846 157.964H267.148V166.602H271.81V167.75H265.846V157.964ZM276.517 159.364V157.964H277.917V159.364H276.517ZM274.123 167.75V166.798H276.643V161.366H274.123V160.414H277.791V166.798H280.045V167.75H274.123ZM282.833 167.75V160.414H283.911V161.632C284.485 160.736 285.185 160.204 286.347 160.204C287.621 160.204 288.671 160.848 288.671 162.206V167.75H287.509V162.668C287.509 161.688 286.809 161.226 285.997 161.226C284.681 161.226 283.995 162.36 283.995 163.62V167.75H282.833ZM293.139 167.75H291.991V157.544H293.139V163.48L296.289 160.414H297.773L295.127 163.032L298.207 167.75H296.821L294.259 163.802L293.139 164.894V167.75Z" fill="rgb(var(--colour-main-500))"></path><rect width="12" height="12" transform="translate(246.11 156.75)" fill="rgb(var(--colour-main-500))"></rect><circle cx="252.11" cy="162.75" r="6" fill="rgb(var(--colour-main-500))"></circle><path d="M252.729 161.491L250.821 163.399L251.433 164.011L253.341 162.103L252.729 161.491ZM249.381 165.451C250.149 166.219 251.289 166.219 252.069 165.451L252.957 164.563L252.345 163.951L251.517 164.779C251.037 165.259 250.473 165.319 249.993 164.839C249.525 164.371 249.585 163.807 250.065 163.327L250.893 162.499L250.281 161.887L249.477 162.691C248.709 163.459 248.625 164.683 249.381 165.451ZM251.229 160.939L251.841 161.551L252.669 160.723C253.137 160.243 253.713 160.183 254.181 160.651C254.649 161.119 254.589 161.695 254.121 162.175L253.281 163.003L253.893 163.615L254.793 162.727C255.561 161.959 255.549 160.807 254.793 160.039C254.025 159.283 252.885 159.283 252.117 160.051L251.229 160.939Z" fill="rgb(var(--colour-main-500))"></path><circle cx="84.1104" cy="198.75" r="6" fill="#5AC93B"></circle><path d="M85.9303 202.245H86.9003L84.7003 195.255H83.5303L81.3203 202.245H82.2803L82.9003 200.155H85.3103L85.9303 202.245ZM83.1303 199.375L84.1003 196.095L85.0803 199.375H83.1303Z" fill="rgb(var(--colour-negative))"></path><path d="M96.8464 193.964H98.1484V202.602H102.81V203.75H96.8464V193.964ZM105.179 203.75V196.414H106.257V197.632C106.831 196.736 107.531 196.204 108.693 196.204C109.967 196.204 111.017 196.848 111.017 198.206V203.75H109.855V198.668C109.855 197.688 109.155 197.226 108.343 197.226C107.027 197.226 106.341 198.36 106.341 199.62V203.75H105.179ZM115.485 203.75H114.337V193.544H115.485V199.48L118.635 196.414H120.119L117.473 199.032L120.553 203.75H119.167L116.605 199.802L115.485 200.894V203.75ZM121.073 205.794H129.725V206.802H121.073V205.794ZM136.602 203.75L135.734 200.824H132.36L131.492 203.75H130.148L133.242 193.964H134.88L137.96 203.75H136.602ZM132.682 199.732H135.412L134.04 195.14L132.682 199.732ZM145.844 198.836H144.668C144.542 197.87 143.898 197.268 142.876 197.268C141.364 197.268 140.776 198.71 140.776 200.166C140.776 201.622 141.434 202.924 142.904 202.924C143.926 202.924 144.556 202.35 144.752 201.188H145.928C145.774 202.952 144.682 204.002 142.876 204.002C140.734 204.002 139.558 202.322 139.558 200.166C139.558 197.968 140.706 196.19 142.89 196.19C144.682 196.19 145.802 197.282 145.844 198.836ZM154.498 198.836H153.322C153.196 197.87 152.552 197.268 151.53 197.268C150.018 197.268 149.43 198.71 149.43 200.166C149.43 201.622 150.088 202.924 151.558 202.924C152.58 202.924 153.21 202.35 153.406 201.188H154.582C154.428 202.952 153.336 204.002 151.53 204.002C149.388 204.002 148.212 202.322 148.212 200.166C148.212 197.968 149.36 196.19 151.544 196.19C153.336 196.19 154.456 197.282 154.498 198.836ZM160.016 196.19C162.27 196.19 163.334 197.87 163.334 200.096C163.334 202.322 162.27 204.002 160.016 204.002C157.762 204.002 156.698 202.322 156.698 200.096C156.698 197.87 157.762 196.19 160.016 196.19ZM160.016 197.268C158.532 197.268 157.916 198.598 157.916 200.096C157.916 201.594 158.532 202.924 160.016 202.924C161.5 202.924 162.116 201.594 162.116 200.096C162.116 198.598 161.5 197.268 160.016 197.268ZM171.597 196.414V203.75H170.547V202.658C169.875 203.624 169.175 204.002 168.097 204.002C167.467 204.002 166.935 203.862 166.515 203.568C166.011 203.204 165.759 202.686 165.759 202V196.414H166.921V201.538C166.921 202.028 167.089 202.406 167.411 202.658C167.677 202.868 168.027 202.98 168.433 202.98C168.979 202.98 169.441 202.784 169.819 202.378C170.225 201.944 170.435 201.314 170.435 200.488V196.414H171.597ZM174.413 203.75V196.414H175.491V197.632C176.065 196.736 176.765 196.204 177.927 196.204C179.201 196.204 180.251 196.848 180.251 198.206V203.75H179.089V198.668C179.089 197.688 178.389 197.226 177.577 197.226C176.261 197.226 175.575 198.36 175.575 199.62V203.75H174.413ZM186.035 196.414H188.919V197.366H186.035V201.454C186.035 202.532 186.609 202.896 187.673 202.896C188.149 202.896 188.569 202.854 188.919 202.756V203.778C188.457 203.918 187.995 203.946 187.603 203.946C185.825 203.946 184.873 203.26 184.873 201.664V197.366H182.759V196.414H184.873V194.398H186.035V196.414Z" fill="rgb(var(--colour-main))"></path><rect x="66.1104" y="180.75" width="138" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M462.984 203.75L462.116 200.824H458.742L457.874 203.75H456.53L459.624 193.964H461.262L464.342 203.75H462.984ZM459.064 199.732H461.794L460.422 195.14L459.064 199.732ZM472.227 198.836H471.051C470.925 197.87 470.281 197.268 469.259 197.268C467.747 197.268 467.159 198.71 467.159 200.166C467.159 201.622 467.817 202.924 469.287 202.924C470.309 202.924 470.939 202.35 471.135 201.188H472.311C472.157 202.952 471.065 204.002 469.259 204.002C467.117 204.002 465.941 202.322 465.941 200.166C465.941 197.968 467.089 196.19 469.273 196.19C471.065 196.19 472.185 197.282 472.227 198.836ZM480.881 198.836H479.705C479.579 197.87 478.935 197.268 477.913 197.268C476.401 197.268 475.813 198.71 475.813 200.166C475.813 201.622 476.471 202.924 477.941 202.924C478.963 202.924 479.593 202.35 479.789 201.188H480.965C480.811 202.952 479.719 204.002 477.913 204.002C475.771 204.002 474.595 202.322 474.595 200.166C474.595 197.968 475.743 196.19 477.927 196.19C479.719 196.19 480.839 197.282 480.881 198.836ZM486.399 196.19C488.653 196.19 489.717 197.87 489.717 200.096C489.717 202.322 488.653 204.002 486.399 204.002C484.145 204.002 483.081 202.322 483.081 200.096C483.081 197.87 484.145 196.19 486.399 196.19ZM486.399 197.268C484.915 197.268 484.299 198.598 484.299 200.096C484.299 201.594 484.915 202.924 486.399 202.924C487.883 202.924 488.499 201.594 488.499 200.096C488.499 198.598 487.883 197.268 486.399 197.268ZM497.98 196.414V203.75H496.93V202.658C496.258 203.624 495.558 204.002 494.48 204.002C493.85 204.002 493.318 203.862 492.898 203.568C492.394 203.204 492.142 202.686 492.142 202V196.414H493.304V201.538C493.304 202.028 493.472 202.406 493.794 202.658C494.06 202.868 494.41 202.98 494.816 202.98C495.362 202.98 495.824 202.784 496.202 202.378C496.608 201.944 496.818 201.314 496.818 200.488V196.414H497.98ZM500.796 203.75V196.414H501.874V197.632C502.448 196.736 503.148 196.204 504.31 196.204C505.584 196.204 506.634 196.848 506.634 198.206V203.75H505.472V198.668C505.472 197.688 504.772 197.226 503.96 197.226C502.644 197.226 501.958 198.36 501.958 199.62V203.75H500.796ZM512.418 196.414H515.302V197.366H512.418V201.454C512.418 202.532 512.992 202.896 514.056 202.896C514.532 202.896 514.952 202.854 515.302 202.756V203.778C514.84 203.918 514.378 203.946 513.986 203.946C512.208 203.946 511.256 203.26 511.256 201.664V197.366H509.142V196.414H511.256V194.398H512.418V196.414Z" fill="rgb(var(--colour-main-500))"></path><rect x="444.11" y="180.75" width="129" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="432.11" y="144.75" width="153" height="189" stroke="rgb(var(--colour-main-500))"></rect><path d="M449.206 167.75H445.398V157.964H448.884C450.634 157.964 451.838 158.916 451.838 160.456C451.838 161.394 451.39 162.332 450.536 162.64C451.558 162.976 452.16 163.788 452.16 164.964C452.16 166.434 451.138 167.75 449.206 167.75ZM446.672 159.07V162.164H448.688C449.738 162.164 450.508 161.828 450.508 160.638C450.508 159.434 449.738 159.07 448.688 159.07H446.672ZM446.672 163.27V166.644H449.052C450.284 166.644 450.83 165.944 450.83 164.95C450.83 163.97 450.284 163.27 449.052 163.27H446.672ZM460.731 166.98V167.862C460.437 167.946 460.213 167.988 460.031 167.988C459.219 167.988 458.813 167.638 458.729 166.882C457.903 167.694 457.175 168.002 456.237 168.002C454.809 168.002 453.843 167.204 453.843 165.846C453.843 164.334 454.991 163.788 455.845 163.648C456.097 163.606 456.643 163.522 457.469 163.41C458.407 163.284 458.715 163.102 458.715 162.626V162.374C458.715 161.646 458.141 161.282 457.035 161.282C455.957 161.282 455.425 161.688 455.327 162.584H454.151C454.179 160.89 455.355 160.204 457.091 160.204C458.897 160.204 459.849 160.904 459.849 162.206V166.434C459.849 166.812 460.059 167.008 460.479 167.008C460.549 167.008 460.661 166.994 460.731 166.98ZM458.715 165.202V164.04C458.225 164.264 457.427 164.39 456.811 164.46C455.719 164.586 455.033 164.894 455.033 165.818C455.033 166.546 455.593 166.98 456.531 166.98C457.553 166.98 458.715 166.224 458.715 165.202ZM462.833 167.75V160.414H463.911V161.632C464.485 160.736 465.185 160.204 466.347 160.204C467.621 160.204 468.671 160.848 468.671 162.206V167.75H467.509V162.668C467.509 161.688 466.809 161.226 465.997 161.226C464.681 161.226 463.995 162.36 463.995 163.62V167.75H462.833ZM473.139 167.75H471.991V157.544H473.139V163.48L476.289 160.414H477.773L475.127 163.032L478.207 167.75H476.821L474.259 163.802L473.139 164.894V167.75Z" fill="rgb(var(--colour-main-500))"></path><line x1="444.11" y1="271.25" x2="384.11" y2="271.25" stroke="rgb(var(--colour-main-500))"></line><path d="M464.02 231.112H461.094V239.75H459.792V231.112H456.852V229.964H464.02V231.112ZM472.213 232.414L469.749 235.956L472.283 239.75H470.897L469.091 236.964L467.257 239.75H465.899L468.489 236.012L466.039 232.414H467.411L469.133 235.046L470.883 232.414H472.213Z" fill="rgb(var(--colour-main-500))"></path><path d="M556.03 241.108V239.834C554.252 239.666 553.16 238.406 553.118 236.754H554.182C554.224 237.888 554.84 238.714 556.03 238.868V235.242L555.4 235.074C554.126 234.738 553.314 233.786 553.314 232.554C553.314 231.098 554.322 230.048 556.03 229.908V228.634H556.828V229.908C558.424 230.048 559.39 231.056 559.46 232.61H558.396C558.34 231.714 557.822 231.028 556.828 230.874V234.332L557.738 234.584C559.012 234.934 559.754 235.844 559.754 237.02C559.754 238.616 558.606 239.694 556.828 239.834V241.108H556.03ZM555.596 233.996L556.03 234.122V230.86C555.064 230.972 554.392 231.504 554.392 232.442C554.392 233.184 554.812 233.786 555.596 233.996ZM557.374 235.606L556.828 235.452V238.882C558.004 238.77 558.676 238.126 558.676 237.174C558.676 236.39 558.284 235.844 557.374 235.606Z" fill="rgb(var(--colour-main-500))"></path><rect x="444.11" y="216.75" width="129" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M464.02 267.112H461.094V275.75H459.792V267.112H456.852V265.964H464.02V267.112ZM472.213 268.414L469.749 271.956L472.283 275.75H470.897L469.091 272.964L467.257 275.75H465.899L468.489 272.012L466.039 268.414H467.411L469.133 271.046L470.883 268.414H472.213Z" fill="rgb(var(--colour-main))"></path><path d="M556.03 277.108V275.834C554.252 275.666 553.16 274.406 553.118 272.754H554.182C554.224 273.888 554.84 274.714 556.03 274.868V271.242L555.4 271.074C554.126 270.738 553.314 269.786 553.314 268.554C553.314 267.098 554.322 266.048 556.03 265.908V264.634H556.828V265.908C558.424 266.048 559.39 267.056 559.46 268.61H558.396C558.34 267.714 557.822 267.028 556.828 266.874V270.332L557.738 270.584C559.012 270.934 559.754 271.844 559.754 273.02C559.754 274.616 558.606 275.694 556.828 275.834V277.108H556.03ZM555.596 269.996L556.03 270.122V266.86C555.064 266.972 554.392 267.504 554.392 268.442C554.392 269.184 554.812 269.786 555.596 269.996ZM557.374 271.606L556.828 271.452V274.882C558.004 274.77 558.676 274.126 558.676 273.174C558.676 272.39 558.284 271.844 557.374 271.606Z" fill="rgb(var(--colour-main))"></path><rect x="444.11" y="252.75" width="129" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="36.1104" y="126.5" width="378" height="225" stroke="rgb(var(--colour-main-500))"></rect></svg></div><div class="block tablet:hidden"><svg width="100%" height="100%" viewBox="0 0 379 415" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="378" height="414" transform="translate(0.110352 0.75)" fill="rgb(var(--colour-negative))"></rect><path d="M24.5364 29.684V22.964H25.8384V29.866C25.8384 32.134 24.2704 33.002 22.4224 33.002C20.5184 33.002 19.0344 32.092 19.0344 29.866V22.964H20.3364V29.684C20.3364 31.392 21.3024 31.854 22.4224 31.854C23.5564 31.854 24.5364 31.364 24.5364 29.684ZM28.1786 32.75V25.414H29.2566V26.632C29.8306 25.736 30.5306 25.204 31.6926 25.204C32.9666 25.204 34.0166 25.848 34.0166 27.206V32.75H32.8546V27.668C32.8546 26.688 32.1546 26.226 31.3426 26.226C30.0266 26.226 29.3406 27.36 29.3406 28.62V32.75H28.1786ZM37.1549 32.75V25.414H38.2329V26.996C38.7229 25.946 39.6609 25.204 40.8649 25.204C42.5449 25.204 43.4129 26.128 43.5529 27.584H42.3909C42.2229 26.702 41.7469 26.226 40.7529 26.226C39.2829 26.226 38.3309 27.472 38.3309 29.194V32.75H37.1549ZM51.5912 30.482C51.3392 32.022 50.1772 33.002 48.4552 33.002C46.2432 33.002 45.1232 31.392 45.1232 29.152C45.1232 26.702 46.4532 25.19 48.4832 25.19C50.7512 25.19 51.7452 26.884 51.7452 29.432H46.3412C46.3832 30.874 47.0832 31.924 48.4972 31.924C49.4492 31.924 50.0932 31.462 50.4152 30.482H51.5912ZM48.4692 26.268C47.1532 26.268 46.4672 27.248 46.3692 28.48H50.4852C50.4852 27.262 49.7292 26.268 48.4692 26.268ZM60.1895 27.836H59.0135C58.8875 26.87 58.2435 26.268 57.2215 26.268C55.7095 26.268 55.1215 27.71 55.1215 29.166C55.1215 30.622 55.7795 31.924 57.2495 31.924C58.2715 31.924 58.9015 31.35 59.0975 30.188H60.2735C60.1195 31.952 59.0275 33.002 57.2215 33.002C55.0795 33.002 53.9035 31.322 53.9035 29.166C53.9035 26.968 55.0515 25.19 57.2355 25.19C59.0275 25.19 60.1475 26.282 60.1895 27.836ZM65.7078 25.19C67.9618 25.19 69.0258 26.87 69.0258 29.096C69.0258 31.322 67.9618 33.002 65.7078 33.002C63.4538 33.002 62.3898 31.322 62.3898 29.096C62.3898 26.87 63.4538 25.19 65.7078 25.19ZM65.7078 26.268C64.2238 26.268 63.6078 27.598 63.6078 29.096C63.6078 30.594 64.2238 31.924 65.7078 31.924C67.1918 31.924 67.8078 30.594 67.8078 29.096C67.8078 27.598 67.1918 26.268 65.7078 26.268ZM71.4501 32.75V25.414H72.5281V26.632C73.1021 25.736 73.8021 25.204 74.9641 25.204C76.2381 25.204 77.2881 25.848 77.2881 27.206V32.75H76.1261V27.668C76.1261 26.688 75.4261 26.226 74.6141 26.226C73.2981 26.226 72.6121 27.36 72.6121 28.62V32.75H71.4501ZM86.1524 27.836H84.9764C84.8504 26.87 84.2064 26.268 83.1844 26.268C81.6724 26.268 81.0844 27.71 81.0844 29.166C81.0844 30.622 81.7424 31.924 83.2124 31.924C84.2344 31.924 84.8644 31.35 85.0604 30.188H86.2364C86.0824 31.952 84.9904 33.002 83.1844 33.002C81.0424 33.002 79.8664 31.322 79.8664 29.166C79.8664 26.968 81.0144 25.19 83.1984 25.19C84.9904 25.19 86.1104 26.282 86.1524 27.836ZM91.0967 24.364V22.964H92.4967V24.364H91.0967ZM92.3707 25.414V31.798H94.6247V32.75H88.7027V31.798H91.2227V26.366H88.7027V25.414H92.3707ZM101.305 22.544V31.798H103.559V32.75H97.637V31.798H100.171V23.496H97.637V22.544H101.305ZM112.171 30.482C111.919 32.022 110.757 33.002 109.035 33.002C106.823 33.002 105.703 31.392 105.703 29.152C105.703 26.702 107.033 25.19 109.063 25.19C111.331 25.19 112.325 26.884 112.325 29.432H106.921C106.963 30.874 107.663 31.924 109.077 31.924C110.029 31.924 110.673 31.462 110.995 30.482H112.171ZM109.049 26.268C107.733 26.268 107.047 27.248 106.949 28.48H111.065C111.065 27.262 110.309 26.268 109.049 26.268ZM119.58 22.544H120.742V32.75H119.706V31.714C119.118 32.568 118.334 33.002 117.368 33.002C115.198 33.002 114.176 31.266 114.176 29.012C114.176 26.898 115.24 25.19 117.326 25.19C118.32 25.19 119.076 25.568 119.58 26.324V22.544ZM117.522 26.282C116.15 26.282 115.394 27.514 115.394 29.096C115.394 30.594 116.038 31.91 117.536 31.91C119.006 31.91 119.58 30.496 119.58 29.138C119.58 27.668 118.992 26.282 117.522 26.282ZM138.526 24.112H135.6V32.75H134.298V24.112H131.358V22.964H138.526V24.112ZM146.719 25.414L144.255 28.956L146.789 32.75H145.403L143.597 29.964L141.763 32.75H140.405L142.995 29.012L140.545 25.414H141.917L143.639 28.046L145.389 25.414H146.719ZM154.939 27.416H153.721C153.693 26.688 153.133 26.226 152.251 26.226C151.299 26.226 150.655 26.646 150.655 27.304C150.655 27.822 151.019 28.13 151.705 28.312L153.371 28.746C154.603 29.068 155.233 29.67 155.233 30.706C155.233 32.134 154.113 33.002 152.293 33.002C150.375 33.002 149.367 32.162 149.283 30.524H150.515C150.627 31.518 151.229 31.966 152.321 31.966C153.357 31.966 154.043 31.574 154.043 30.888C154.043 30.258 153.735 29.992 152.937 29.782L151.397 29.376C150.067 29.026 149.465 28.48 149.465 27.36C149.465 26.03 150.557 25.19 152.279 25.19C153.987 25.19 154.911 26.03 154.939 27.416Z" fill="rgb(var(--colour-main))"></path><rect x="27.1104" y="135.75" width="108" height="180" stroke="rgb(var(--colour-main-500))"></rect><path d="M20.1404 113.75V105.588H26.0904V106.652H21.3724V109.032H25.5304V110.096H21.3724V113.75H20.1404ZM27.8706 113.75V105.588H31.7206C33.3166 105.588 34.2826 106.386 34.2826 107.772C34.2826 108.724 33.8766 109.312 32.8966 109.746C33.8486 110.124 34.0166 110.404 34.0586 111.832C34.0586 112 34.1146 112.672 34.1706 112.924C34.2126 113.134 34.3106 113.316 34.5626 113.484V113.75H33.1206C32.9386 113.386 32.8546 113.022 32.8546 112.392C32.8546 112.07 32.8686 111.944 32.8686 111.622C32.8686 110.74 32.5046 110.32 31.5246 110.32H29.1026V113.75H27.8706ZM29.1026 109.256H31.4126C32.4346 109.256 33.0086 108.906 33.0086 107.954C33.0086 107.002 32.4486 106.652 31.4126 106.652H29.1026V109.256ZM35.6429 113.75L38.6949 105.588H40.2209L43.2169 113.75H41.8729L41.0749 111.538H37.7709L36.9449 113.75H35.6429ZM38.0929 110.502H40.7249L39.4369 106.946L38.0929 110.502ZM48.0072 113.89C45.5852 113.89 44.0732 112.084 44.0732 109.746C44.0732 107.268 45.6132 105.448 48.1332 105.448C49.8972 105.448 51.3392 106.358 51.6472 108.094H50.4152C50.1492 107.044 49.2252 106.526 48.1192 106.526C46.2712 106.526 45.3052 107.912 45.3052 109.704C45.3052 111.51 46.3972 112.826 48.1612 112.826C49.6732 112.826 50.6672 111.944 50.6672 110.628V110.474H48.2872V109.41H51.7312V113.792H50.8212L50.7092 112.588C49.8832 113.512 49.0712 113.89 48.0072 113.89ZM53.6935 113.75V105.588H55.4435L57.7815 112.518L60.0635 105.588H61.8135V113.75H60.6375V107.044L58.4115 113.75H57.1375L54.8835 107.044V113.75H53.6935ZM63.8878 113.75V105.588H69.8798V106.652H65.1198V109.032H69.6698V110.096H65.1198V112.686H70.0898V113.75H63.8878ZM71.7861 113.75V105.588H73.1021L77.3581 111.93V105.588H78.5481V113.75H77.2041L72.9761 107.422V113.75H71.7861ZM82.6244 113.75V106.652H79.8524V105.588H86.6144V106.652H83.8564V113.75H82.6244Z" fill="rgb(var(--colour-main-500))"></path><path d="M58.8464 148.964H60.1484V157.602H64.8104V158.75H58.8464V148.964ZM72.1766 154.48C72.1766 153.262 71.4206 152.268 70.1606 152.268C68.8446 152.268 68.1586 153.248 68.0606 154.48H72.1766ZM66.8146 155.152C66.8146 152.702 68.1446 151.19 70.1746 151.19C72.4426 151.19 73.4366 152.884 73.4366 155.432H68.0326C68.0746 156.874 68.7746 157.924 70.1886 157.924C71.1406 157.924 71.7846 157.462 72.1066 156.482H73.2826C73.0306 158.022 71.8686 159.002 70.1466 159.002C67.9346 159.002 66.8146 157.392 66.8146 155.152ZM80.6909 148.544H81.8529V158.75H80.8169V157.714C80.2289 158.568 79.4449 159.002 78.4789 159.002C76.3089 159.002 75.2869 157.266 75.2869 155.012C75.2869 152.898 76.3509 151.19 78.4369 151.19C79.4309 151.19 80.1869 151.568 80.6909 152.324V148.544ZM76.5049 155.096C76.5049 156.594 77.1489 157.91 78.6469 157.91C80.1169 157.91 80.6909 156.496 80.6909 155.138C80.6909 153.668 80.1029 152.282 78.6329 152.282C77.2609 152.282 76.5049 153.514 76.5049 155.096ZM87.2172 161.802C85.6212 161.802 84.4172 161.144 84.2212 159.59H85.4392C85.6072 160.416 86.1812 160.822 87.2452 160.822C88.7152 160.822 89.3172 160.094 89.3172 158.134V157.714C88.8832 158.568 88.0992 159.002 87.1332 159.002C84.9632 159.002 83.9412 157.308 83.9412 155.054C83.9412 152.898 85.0052 151.19 87.0912 151.19C88.0852 151.19 88.8412 151.568 89.3452 152.324V151.414H90.5072V157.56C90.5072 158.582 90.4232 159.352 90.2552 159.884C89.8492 161.158 88.7992 161.802 87.2172 161.802ZM85.1592 155.096C85.1592 156.594 85.8032 157.91 87.3012 157.91C88.7712 157.91 89.3452 156.496 89.3452 155.138C89.3452 153.668 88.7572 152.282 87.2872 152.282C85.9152 152.282 85.1592 153.514 85.1592 155.096ZM98.1395 154.48C98.1395 153.262 97.3835 152.268 96.1235 152.268C94.8075 152.268 94.1215 153.248 94.0235 154.48H98.1395ZM92.7775 155.152C92.7775 152.702 94.1075 151.19 96.1375 151.19C98.4055 151.19 99.3995 152.884 99.3995 155.432H93.9955C94.0375 156.874 94.7375 157.924 96.1515 157.924C97.1035 157.924 97.7475 157.462 98.0695 156.482H99.2455C98.9935 158.022 97.8315 159.002 96.1095 159.002C93.8975 159.002 92.7775 157.392 92.7775 155.152ZM102.118 158.75V151.414H103.196V152.996C103.686 151.946 104.624 151.204 105.828 151.204C107.508 151.204 108.376 152.128 108.516 153.584H107.354C107.186 152.702 106.71 152.226 105.716 152.226C104.246 152.226 103.294 153.472 103.294 155.194V158.75H102.118Z" fill="rgb(var(--colour-main-500))"></path><rect width="12" height="12" transform="translate(39.1104 147.75)" fill="rgb(var(--colour-main))"></rect><rect x="45.1104" y="153.75" width="6" height="6" fill="rgb(var(--colour-inactive-br))"></rect><rect x="45.1104" y="147.75" width="6" height="6" fill="rgb(var(--colour-inactive-tr))"></rect><rect x="39.1104" y="153.75" width="6" height="6" fill="rgb(var(--colour-inactive-bl))"></rect><rect x="39.1104" y="147.75" width="6" height="6" fill="rgb(var(--colour-main-400))"></rect><line x1="156.11" y1="226.25" x2="123.11" y2="226.25" stroke="rgb(var(--colour-main-500))"></line><g clip-path="url(#clip0_2738_2587_dark)"><rect x="51.1104" y="219.75" width="12" height="12" rx="6" fill="rgb(var(--colour-canvas))"></rect><path d="M51.1104 225.75C51.1104 222.436 53.7966 219.75 57.1104 219.75V225.75H51.1104Z" fill="rgb(var(--colour-main-500))"></path><path d="M69.8464 220.964H71.1484V229.602H75.8104V230.75H69.8464V220.964ZM78.1786 230.75V223.414H79.2566V224.632C79.8306 223.736 80.5306 223.204 81.6926 223.204C82.9666 223.204 84.0166 223.848 84.0166 225.206V230.75H82.8546V225.668C82.8546 224.688 82.1546 224.226 81.3426 224.226C80.0266 224.226 79.3406 225.36 79.3406 226.62V230.75H78.1786Z" fill="rgb(var(--colour-main-500))"></path><path d="M106.03 232.108V230.834C104.252 230.666 103.16 229.406 103.118 227.754H104.182C104.224 228.888 104.84 229.714 106.03 229.868V226.242L105.4 226.074C104.126 225.738 103.314 224.786 103.314 223.554C103.314 222.098 104.322 221.048 106.03 220.908V219.634H106.828V220.908C108.424 221.048 109.39 222.056 109.46 223.61H108.396C108.34 222.714 107.822 222.028 106.828 221.874V225.332L107.738 225.584C109.012 225.934 109.754 226.844 109.754 228.02C109.754 229.616 108.606 230.694 106.828 230.834V232.108H106.03ZM105.596 224.996L106.03 225.122V221.86C105.064 221.972 104.392 222.504 104.392 223.442C104.392 224.184 104.812 224.786 105.596 224.996ZM107.374 226.606L106.828 226.452V229.882C108.004 229.77 108.676 229.126 108.676 228.174C108.676 227.39 108.284 226.844 107.374 226.606Z" fill="rgb(var(--colour-main-500))"></path></g><rect x="39.1104" y="207.75" width="84" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="18.1104" y="126.75" width="243" height="198" stroke="rgb(var(--colour-main-500))"></rect><rect x="144.11" y="135.75" width="108" height="180" stroke="rgb(var(--colour-main-500))"></rect><path d="M175.846 148.964H177.148V157.602H181.81V158.75H175.846V148.964ZM186.517 150.364V148.964H187.917V150.364H186.517ZM184.123 158.75V157.798H186.643V152.366H184.123V151.414H187.791V157.798H190.045V158.75H184.123ZM192.833 158.75V151.414H193.911V152.632C194.485 151.736 195.185 151.204 196.347 151.204C197.621 151.204 198.671 151.848 198.671 153.206V158.75H197.509V153.668C197.509 152.688 196.809 152.226 195.997 152.226C194.681 152.226 193.995 153.36 193.995 154.62V158.75H192.833ZM203.139 158.75H201.991V148.544H203.139V154.48L206.289 151.414H207.773L205.127 154.032L208.207 158.75H206.821L204.259 154.802L203.139 155.894V158.75Z" fill="rgb(var(--colour-main-500))"></path><rect width="12" height="12" transform="translate(156.11 147.75)" fill="rgb(var(--colour-main-500))"></rect><circle cx="162.11" cy="153.75" r="6" fill="rgb(var(--colour-main-500))"></circle><path d="M162.729 152.491L160.821 154.399L161.433 155.011L163.341 153.103L162.729 152.491ZM159.381 156.451C160.149 157.219 161.289 157.219 162.069 156.451L162.957 155.563L162.345 154.951L161.517 155.779C161.037 156.259 160.473 156.319 159.993 155.839C159.525 155.371 159.585 154.807 160.065 154.327L160.893 153.499L160.281 152.887L159.477 153.691C158.709 154.459 158.625 155.683 159.381 156.451ZM161.229 151.939L161.841 152.551L162.669 151.723C163.137 151.243 163.713 151.183 164.181 151.651C164.649 152.119 164.589 152.695 164.121 153.175L163.281 154.003L163.893 154.615L164.793 153.727C165.561 152.959 165.549 151.807 164.793 151.039C164.025 150.283 162.885 150.283 162.117 151.051L161.229 151.939Z" fill="rgb(var(--colour-main-500))"></path><g clip-path="url(#clip1_2738_2587_dark)"><circle cx="174.11" cy="189.75" r="6" fill="rgb(var(--colour-main-500))"></circle><path d="M185.53 194.75L188.624 184.964H190.262L193.342 194.75H191.984L191.116 191.824H187.742L186.874 194.75H185.53ZM188.064 190.732H190.794L189.422 186.14L188.064 190.732ZM200.051 189.836C199.925 188.87 199.281 188.268 198.259 188.268C196.747 188.268 196.159 189.71 196.159 191.166C196.159 192.622 196.817 193.924 198.287 193.924C199.309 193.924 199.939 193.35 200.135 192.188H201.311C201.157 193.952 200.065 195.002 198.259 195.002C196.117 195.002 194.941 193.322 194.941 191.166C194.941 188.968 196.089 187.19 198.273 187.19C200.065 187.19 201.185 188.282 201.227 189.836H200.051ZM208.705 189.836C208.579 188.87 207.935 188.268 206.913 188.268C205.401 188.268 204.813 189.71 204.813 191.166C204.813 192.622 205.471 193.924 206.941 193.924C207.963 193.924 208.593 193.35 208.789 192.188H209.965C209.811 193.952 208.719 195.002 206.913 195.002C204.771 195.002 203.595 193.322 203.595 191.166C203.595 188.968 204.743 187.19 206.927 187.19C208.719 187.19 209.839 188.282 209.881 189.836H208.705ZM215.455 187.414H218.339V188.366H215.455V192.454C215.455 193.532 216.029 193.91 217.093 193.91C217.569 193.91 217.989 193.882 218.339 193.784V194.778C217.877 194.918 217.415 194.946 217.023 194.946C215.245 194.946 214.293 194.26 214.293 192.664V188.366H212.179V187.414H214.293V185.398H215.455V187.414Z" fill="rgb(var(--colour-main-500))"></path></g><rect x="156.11" y="171.75" width="84" height="36" stroke="rgb(var(--colour-main-500))"></rect><line x1="288.11" y1="262.5" x2="240.11" y2="262.5" stroke="rgb(var(--colour-main-500))"></line><path d="M308.02 222.112H305.094V230.75H303.792V222.112H300.852V220.964H308.02V222.112ZM316.213 223.414L313.749 226.956L316.283 230.75H314.897L313.091 227.964L311.257 230.75H309.899L312.489 227.012L310.039 223.414H311.411L313.133 226.046L314.883 223.414H316.213Z" fill="rgb(var(--colour-main-500))"></path><path d="M334.03 232.108V230.834C332.252 230.666 331.16 229.406 331.118 227.754H332.182C332.224 228.888 332.84 229.714 334.03 229.868V226.242L333.4 226.074C332.126 225.738 331.314 224.786 331.314 223.554C331.314 222.098 332.322 221.048 334.03 220.908V219.634H334.828V220.908C336.424 221.048 337.39 222.056 337.46 223.61H336.396C336.34 222.714 335.822 222.028 334.828 221.874V225.332L335.738 225.584C337.012 225.934 337.754 226.844 337.754 228.02C337.754 229.616 336.606 230.694 334.828 230.834V232.108H334.03ZM333.596 224.996L334.03 225.122V221.86C333.064 221.972 332.392 222.504 332.392 223.442C332.392 224.184 332.812 224.786 333.596 224.996ZM335.374 226.606L334.828 226.452V229.882C336.004 229.77 336.676 229.126 336.676 228.174C336.676 227.39 336.284 226.844 335.374 226.606Z" fill="rgb(var(--colour-main-500))"></path><rect x="288.11" y="207.75" width="63" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M308.02 258.112H305.094V266.75H303.792V258.112H300.852V256.964H308.02V258.112ZM316.213 259.414L313.749 262.956L316.283 266.75H314.897L313.091 263.964L311.257 266.75H309.899L312.489 263.012L310.039 259.414H311.411L313.133 262.046L314.883 259.414H316.213Z" fill="rgb(var(--colour-main))"></path><path d="M334.03 268.108V266.834C332.252 266.666 331.16 265.406 331.118 263.754H332.182C332.224 264.888 332.84 265.714 334.03 265.868V262.242L333.4 262.074C332.126 261.738 331.314 260.786 331.314 259.554C331.314 258.098 332.322 257.048 334.03 256.908V255.634H334.828V256.908C336.424 257.048 337.39 258.056 337.46 259.61H336.396C336.34 258.714 335.822 258.028 334.828 257.874V261.332L335.738 261.584C337.012 261.934 337.754 262.844 337.754 264.02C337.754 265.616 336.606 266.694 334.828 266.834V268.108H334.03ZM333.596 260.996L334.03 261.122V257.86C333.064 257.972 332.392 258.504 332.392 259.442C332.392 260.184 332.812 260.786 333.596 260.996ZM335.374 262.606L334.828 262.452V265.882C336.004 265.77 336.676 265.126 336.676 264.174C336.676 263.39 336.284 262.844 335.374 262.606Z" fill="rgb(var(--colour-main))"></path><rect x="288.11" y="243.75" width="63" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M176.02 222.112H173.094V230.75H171.792V222.112H168.852V220.964H176.02V222.112ZM184.213 223.414L181.749 226.956L184.283 230.75H182.897L181.091 227.964L179.257 230.75H177.899L180.489 227.012L178.039 223.414H179.411L181.133 226.046L182.883 223.414H184.213Z" fill="rgb(var(--colour-main-500))"></path><path d="M223.03 232.108V230.834C221.252 230.666 220.16 229.406 220.118 227.754H221.182C221.224 228.888 221.84 229.714 223.03 229.868V226.242L222.4 226.074C221.126 225.738 220.314 224.786 220.314 223.554C220.314 222.098 221.322 221.048 223.03 220.908V219.634H223.828V220.908C225.424 221.048 226.39 222.056 226.46 223.61H225.396C225.34 222.714 224.822 222.028 223.828 221.874V225.332L224.738 225.584C226.012 225.934 226.754 226.844 226.754 228.02C226.754 229.616 225.606 230.694 223.828 230.834V232.108H223.03ZM222.596 224.996L223.03 225.122V221.86C222.064 221.972 221.392 222.504 221.392 223.442C221.392 224.184 221.812 224.786 222.596 224.996ZM224.374 226.606L223.828 226.452V229.882C225.004 229.77 225.676 229.126 225.676 228.174C225.676 227.39 225.284 226.844 224.374 226.606Z" fill="rgb(var(--colour-main-500))"></path><rect x="156.11" y="207.75" width="84" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M176.02 258.112H173.094V266.75H171.792V258.112H168.852V256.964H176.02V258.112ZM184.213 259.414L181.749 262.956L184.283 266.75H182.897L181.091 263.964L179.257 266.75H177.899L180.489 263.012L178.039 259.414H179.411L181.133 262.046L182.883 259.414H184.213Z" fill="rgb(var(--colour-main))"></path><path d="M223.03 268.108V266.834C221.252 266.666 220.16 265.406 220.118 263.754H221.182C221.224 264.888 221.84 265.714 223.03 265.868V262.242L222.4 262.074C221.126 261.738 220.314 260.786 220.314 259.554C220.314 258.098 221.322 257.048 223.03 256.908V255.634H223.828V256.908C225.424 257.048 226.39 258.056 226.46 259.61H225.396C225.34 258.714 224.822 258.028 223.828 257.874V261.332L224.738 261.584C226.012 261.934 226.754 262.844 226.754 264.02C226.754 265.616 225.606 266.694 223.828 266.834V268.108H223.03ZM221.392 259.442C221.392 260.184 221.812 260.786 222.596 260.996L223.03 261.122V257.86C222.064 257.972 221.392 258.504 221.392 259.442ZM223.828 265.882C225.004 265.77 225.676 265.126 225.676 264.174C225.676 263.39 225.284 262.844 224.374 262.606L223.828 262.452V265.882Z" fill="rgb(var(--colour-main))"></path><rect x="156.11" y="243.75" width="84" height="36" stroke="rgb(var(--colour-orange))"></rect><rect x="279.11" y="135.75" width="81" height="180" stroke="rgb(var(--colour-main-500))"></rect><path d="M293.206 158.75H289.398V148.964H292.884C294.634 148.964 295.838 149.916 295.838 151.456C295.838 152.394 295.39 153.332 294.536 153.64C295.558 153.976 296.16 154.788 296.16 155.964C296.16 157.434 295.138 158.75 293.206 158.75ZM290.672 157.644H293.052C294.284 157.644 294.83 156.944 294.83 155.95C294.83 154.97 294.284 154.27 293.052 154.27H290.672V157.644ZM290.672 153.164H292.688C293.738 153.164 294.508 152.828 294.508 151.638C294.508 150.434 293.738 150.07 292.688 150.07H290.672V153.164ZM304.731 158.862C304.437 158.946 304.213 158.988 304.031 158.988C303.219 158.988 302.813 158.638 302.729 157.882C301.903 158.694 301.175 159.002 300.237 159.002C298.809 159.002 297.843 158.204 297.843 156.846C297.843 155.334 298.991 154.788 299.845 154.648C300.097 154.606 300.643 154.522 301.469 154.41C302.407 154.284 302.715 154.102 302.715 153.626V153.374C302.715 152.646 302.141 152.282 301.035 152.282C299.957 152.282 299.425 152.688 299.327 153.584H298.151C298.179 151.89 299.355 151.204 301.091 151.204C302.897 151.204 303.849 151.904 303.849 153.206V157.434C303.849 157.812 304.059 158.008 304.479 158.008C304.549 158.008 304.661 157.994 304.731 157.98V158.862ZM299.033 156.818C299.033 157.546 299.593 157.98 300.531 157.98C301.553 157.98 302.715 157.224 302.715 156.202V155.04C302.225 155.264 301.427 155.39 300.811 155.46C299.719 155.586 299.033 155.894 299.033 156.818ZM306.833 158.75V151.414H307.911V152.632C308.485 151.736 309.185 151.204 310.347 151.204C311.621 151.204 312.671 151.848 312.671 153.206V158.75H311.509V153.668C311.509 152.688 310.809 152.226 309.997 152.226C308.681 152.226 307.995 153.36 307.995 154.62V158.75H306.833ZM317.139 158.75H315.991V148.544H317.139V154.48L320.289 151.414H321.773L319.127 154.032L322.207 158.75H320.821L318.259 154.802L317.139 155.894V158.75Z" fill="rgb(var(--colour-main-500))"></path><path d="M306.984 194.75L306.116 191.824H302.742L301.874 194.75H300.53L303.624 184.964H305.262L308.342 194.75H306.984ZM303.064 190.732H305.794L304.422 186.14L303.064 190.732ZM316.227 189.836H315.051C314.925 188.87 314.281 188.268 313.259 188.268C311.747 188.268 311.159 189.71 311.159 191.166C311.159 192.622 311.817 193.924 313.287 193.924C314.309 193.924 314.939 193.35 315.135 192.188H316.311C316.157 193.952 315.065 195.002 313.259 195.002C311.117 195.002 309.941 193.322 309.941 191.166C309.941 188.968 311.089 187.19 313.273 187.19C315.065 187.19 316.185 188.282 316.227 189.836ZM324.881 189.836H323.705C323.579 188.87 322.935 188.268 321.913 188.268C320.401 188.268 319.813 189.71 319.813 191.166C319.813 192.622 320.471 193.924 321.941 193.924C322.963 193.924 323.593 193.35 323.789 192.188H324.965C324.811 193.952 323.719 195.002 321.913 195.002C319.771 195.002 318.595 193.322 318.595 191.166C318.595 188.968 319.743 187.19 321.927 187.19C323.719 187.19 324.839 188.282 324.881 189.836ZM330.455 187.414H333.339V188.366H330.455V192.454C330.455 193.532 331.029 193.896 332.093 193.896C332.569 193.896 332.989 193.854 333.339 193.756V194.778C332.877 194.918 332.415 194.946 332.023 194.946C330.245 194.946 329.293 194.26 329.293 192.664V188.366H327.179V187.414H329.293V185.398H330.455V187.414Z" fill="rgb(var(--colour-main-500))"></path><rect x="288.11" y="171.75" width="63" height="36" stroke="rgb(var(--colour-main-500))"></rect><rect x="39" y="244" width="84" height="36" stroke="rgb(var(--colour-orange))"></rect><g clip-path="url(#clip2_2738_2587_dark)"><circle cx="57" cy="190" r="6" fill="#5AC93B"></circle><path d="M58.82 193.495H59.79L57.59 186.505H56.42L54.21 193.495H55.17L55.79 191.405H58.2L58.82 193.495ZM56.02 190.625L56.99 187.345L57.97 190.625H56.02Z" fill="rgb(var(--colour-negative))"></path><path d="M74.874 195L74.006 192.074H70.632L69.764 195H68.42L71.514 185.214H73.152L76.232 195H74.874ZM70.954 190.982H73.684L72.312 186.39L70.954 190.982ZM84.1163 190.086H82.9403C82.8143 189.12 82.1703 188.518 81.1483 188.518C79.6363 188.518 79.0483 189.96 79.0483 191.416C79.0483 192.872 79.7063 194.174 81.1763 194.174C82.1983 194.174 82.8283 193.6 83.0243 192.438H84.2003C84.0463 194.202 82.9543 195.252 81.1483 195.252C79.0063 195.252 77.8303 193.572 77.8303 191.416C77.8303 189.218 78.9783 187.44 81.1623 187.44C82.9543 187.44 84.0743 188.532 84.1163 190.086ZM92.7706 190.086H91.5946C91.4686 189.12 90.8246 188.518 89.8026 188.518C88.2906 188.518 87.7026 189.96 87.7026 191.416C87.7026 192.872 88.3606 194.174 89.8306 194.174C90.8526 194.174 91.4826 193.6 91.6786 192.438H92.8546C92.7006 194.202 91.6086 195.252 89.8026 195.252C87.6606 195.252 86.4846 193.572 86.4846 191.416C86.4846 189.218 87.6326 187.44 89.8166 187.44C91.6086 187.44 92.7286 188.532 92.7706 190.086ZM98.3449 187.664H101.229V188.616H98.3449V192.704C98.3449 193.782 98.9189 194.146 99.9829 194.146C100.459 194.146 100.879 194.104 101.229 194.006V195.028C100.767 195.168 100.305 195.196 99.9129 195.196C98.1349 195.196 97.1829 194.51 97.1829 192.914V188.616H95.0689V187.664H97.1829V185.648H98.3449V187.664Z" fill="rgb(var(--colour-main))"></path></g><rect x="39" y="172" width="84" height="36" stroke="rgb(var(--colour-main-500))"></rect><defs><clipPath id="clip0_2738_2587_dark"><rect x="39.1104" y="207.75" width="84" height="36" fill="rgb(var(--colour-negative))"></rect></clipPath><clipPath id="clip1_2738_2587_dark"><rect x="156.11" y="171.75" width="84" height="36" fill="rgb(var(--colour-negative))"></rect></clipPath><clipPath id="clip2_2738_2587_dark"><rect x="39" y="172" width="84" height="36" fill="rgb(var(--colour-negative))"></rect></clipPath></defs></svg></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can query unreconciled transactions in a Linked Ledger Account using the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">unreconciledTxs</code> field on the<code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">LedgerAccount</code>.  It is recommended to periodically call this query to ensure your Ledger stays up to date. It can also be used to build reconciliation UIs:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">unreconciledTxs query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetUnreconciledTxs (
  $ledgerAccount: LedgerAccountMatchInput!
) {
  ledgerAccount(ledgerAccount: $ledgerAccount) {
    id
    unreconciledTxs {
      nodes {
        id
        description
        amount
        externalId
        externalAccountId
      }
      pageInfo {
        endCursor
        hasNextPage
      }
    }
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The variables specify the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">path</code> of the Linked Ledger Account you are querying and the Ledger it belongs to.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">unreconciledTxs variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerAccount&quot;: {
    &quot;path&quot;: &quot;assets/operating&quot;,
    &quot;ledger&quot;: {...}
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">unreconciledTxs</code> is eventually consistent, so if you&#x27;ve recently transacted at a Native Link or just synced manually for a Custom Link, you may not see the transaction in the query results immediately.</p></div></div></section><section id="reconcile-transactions-stripe-txs" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">i. </span>Stripe Txs</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#reconcile-transactions-stripe-txs">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Transactions synced to <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> within a Stripe Link have special handling. Every <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://docs.stripe.com/api/balance_transactions">Balance Transaction</a> at Stripe has two amount fields:</p><ol data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2 ml-[1.875em] list-decimal list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">The gross amount of the transaction</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">The fee paid for the transaction, to Stripe</li>
</ol><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">This doesn&#x27;t neatly map 1:1 with Fragment&#x27;s recon model, so <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> creates two Txs for each Balance Transaction at Stripe: one for the gross amount and the other for the fee. This allows you to account for these amounts independently in your Ledger. The external IDs for these Txs are:</p><ol data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2 ml-[1.875em] list-decimal list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">{{stripe_tx_id}}_gross</code> for the gross amount Tx</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">{{stripe_tx_id}}_fee</code> for the fee amount Tx</li>
</ol><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">For example, a Stripe Balance Transaction with ID <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">txn_123</code> will result in two Txs in <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> with external IDs <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">txn_123_gross</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">txn_123_fee</code>. You can <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#reconcile-transactions-reconcile-a-tx-reconciling-multiple-txs">reconcile both</a> of these in a single <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">reconcileTx</code> call.</p></div></div></section></div></section>
<section id="store-metadata" class="first:0 pt-f6 tablet:pt-f3 pb-[2em] scroll-mt-[90px]"><span class="TopicContainer-title group-one text-s20 tablet:text-fnormal laptop:text-s20 block mb-[1em] "><span class="text-main-500">G<!-- --> </span>Store metadata<span class="pl-[0.5em] phone:invisible phone:group-one-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#store-metadata">#</a></span></span><div class="TopicContainer-content py-[2em] first-of-type:pt-0 ml-0 phone:ml-[1.8em] tablet:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can provide up to 10 tags on Ledger Entries to store arbitrary key-value pairs, like IDs from your product.</p><section id="store-metadata-schema-entry-tags" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">a. </span>Schema Entry tags</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#store-metadata-schema-entry-tags">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can define tags on Ledger Entry types in your Schema:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Schema-defined tags</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;key&quot;: &quot;...&quot;,
  &quot;chartOfAccounts&quot;: {...},
  &quot;ledgerEntries&quot;: {
    &quot;types&quot;: [
      {
        &quot;type&quot;: &quot;user_funds_account&quot;,
        &quot;description&quot;: &quot;Fund {{user_id}}&quot;,
        &quot;lines&quot;: [
          {
            &quot;key&quot;: &quot;increase_user_balance&quot;,
            &quot;account&quot;: { 
              &quot;path&quot;: &quot;liabilities/users:{{user_id}}/available&quot;
            },
            &quot;amount&quot;: &quot;{{funding_amount}}&quot;
          },
          {...other line}
        ],
        &quot;tags&quot;: [
          {
            &quot;key&quot;: &quot;user&quot;,
            &quot;value&quot;: &quot;{{user_id}}&quot;
          },
          {
            &quot;key&quot;: &quot;deposit_flow&quot;,
            &quot;value&quot;: &quot;{{deposit_flow_id}}&quot;
          },
          {
            &quot;key&quot;: &quot;deposit_flow_type&quot;,
            &quot;value&quot;: &quot;ach&quot;
          }
        ]
      }
    ]
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can use the same parameter for both tag values and account paths.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">When posting a Ledger Entry, include tag values as parameters:</p><div class="pt-f2"><div class="relative flex min-w-f0"><div class="flex group-one bg-negative flex-col min-w-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div data-test-role="title" class="px-[1.25em] py-f2 flex flex-row flex-auto truncate hover:cursor-pointer group-two" role="button" tabindex="0"><div class="flex-initial"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">addLedgerEntry mutation </span></div><div class="pl-f2 group-two-hover:text-main group-one-hover:block transition-colors"><div class="hidden laptop:block"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-s20 no-underline leading-none text-inherit bg-inherit border-none">↓</span></div><div class="laptop:hidden"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-fnormal no-underline leading-none text-inherit bg-inherit border-none">↓</span></div></div></div><div class="py-f2 px-[1.25em] hover:cursor-pointer hidden group-one-hover:block"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 hover:text-main bg-inherit border-none">Show</span></div></div><div class="max-h-f20 flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation AddLedgerEntry(
  $ik: SafeString!
  $entry: LedgerEntryInput!
) {
  addLedgerEntry(
    ik: $ik,
    entry: $entry
  ) {
    __typename
    ... on AddLedgerEntryResult {
      entry {
        type
        ik
        tags {
          key
          value
        }
      }
      lines {
        amount
        description
        account {
          path
        }
      }
    }
    ... on Error {
      code
      message
    }
  }
}</code></pre></div></div><div class="absolute w-full left-f0 bottom-f0 min-h-f20 bg-gradient-to-b from-transparent to-negative"> <!-- --> </div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">addLedgerEntry variables with Schema-defined tags</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ik&quot;: &quot;fund-abc&quot;,
  &quot;entry&quot;: {
    &quot;ledger&quot;: {
      &quot;ik&quot;: &quot;ledger-ik&quot;
    },
    &quot;type&quot;: &quot;user_funds_account&quot;,
    &quot;parameters&quot;: {
      &quot;user_id&quot;: &quot;user-1&quot;,
      &quot;funding_amount&quot;: &quot;200&quot;,
      &quot;deposit_flow_id&quot;: &quot;deposit-123&quot;
    }
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The Ledger Entry will have the tags you defined in the Schema:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">addLedgerEntry response with tags</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;addLedgerEntry&quot;: {
      &quot;entry&quot;: {
        &quot;type&quot;: &quot;user_funds_account&quot;,
        &quot;ik&quot;: &quot;fund-abc&quot;,
        &quot;tags&quot;: [
          {
            &quot;key&quot;: &quot;user&quot;,
            &quot;value&quot;: &quot;user-1&quot;
          },
          {
            &quot;key&quot;: &quot;deposit_flow&quot;,
            &quot;value&quot;: &quot;deposit-123&quot;
          },
          {
            &quot;key&quot;: &quot;deposit_flow_type&quot;,
            &quot;value&quot;: &quot;ach&quot;
          }
        ]
      },
      &quot;lines&quot;: [...]
    }
  }
}</code></pre></div></div></div></div></div></section><section id="store-metadata-runtime-entry-tags" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">b. </span>Runtime Entry tags</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#store-metadata-runtime-entry-tags">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can define tags at runtime when posting a Ledger Entry:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">addLedgerEntry variables with runtime-defined tags</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ik&quot;: &quot;add-ledger-entry&quot;,
  &quot;entry&quot;: {
    &quot;ledger&quot;: {
      &quot;ik&quot;: &quot;ledger-ik&quot;
    },
    &quot;type&quot;: &quot;user_funds_account&quot;,
    &quot;parameters&quot;: {
      &quot;user_id&quot;: &quot;testing-user&quot;,
      &quot;funding_amount&quot;: &quot;200&quot;,
      &quot;deposit_flow_id&quot;: &quot;abc&quot;
    },
    &quot;tags&quot;: [
      {
        &quot;key&quot;: &quot;deposit_flow_type&quot;,
        &quot;value&quot;: &quot;ach&quot;
      },
      {
        &quot;key&quot;: &quot;operator&quot;,
        &quot;value&quot;: &quot;alice&quot;
      }
    ]
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">If you define tags both at runtime and in the Schema, the Ledger Entry will get the combined set of tags:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">addLedgerEntry response with tags</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;addLedgerEntry&quot;: {
      &quot;entry&quot;: {
        &quot;type&quot;: &quot;user_funds_account&quot;,
        &quot;ik&quot;: &quot;fund-abc&quot;,
        &quot;tags&quot;: [
          {
            &quot;key&quot;: &quot;user&quot;,
            &quot;value&quot;: &quot;user-1&quot;
          },
          {
            &quot;key&quot;: &quot;deposit_flow&quot;,
            &quot;value&quot;: &quot;deposit-123&quot;
          },
          {
            &quot;key&quot;: &quot;deposit_flow_type&quot;,
            &quot;value&quot;: &quot;ach&quot;
          },
          {
            &quot;key&quot;: &quot;operator&quot;,
            &quot;value&quot;: &quot;alice&quot;
          }
        ]
      },
      &quot;lines&quot;: [...]
    }
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can specify the same tag <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">key</code> in both places only if they have the same <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">value</code>.</p></div></div></section><section id="store-metadata-updating-entry-tags" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">c. </span>Updating Entry tags</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#store-metadata-updating-entry-tags">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">In addition to tags defined in your Schema, you can add and update tags on a posted Ledger Entry.</p><div class="pt-f2"><div class="relative flex min-w-f0"><div class="flex group-one bg-negative flex-col min-w-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div data-test-role="title" class="px-[1.25em] py-f2 flex flex-row flex-auto truncate hover:cursor-pointer group-two" role="button" tabindex="0"><div class="flex-initial"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">updateLedgerEntry mutation </span></div><div class="pl-f2 group-two-hover:text-main group-one-hover:block transition-colors"><div class="hidden laptop:block"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-s20 no-underline leading-none text-inherit bg-inherit border-none">↓</span></div><div class="laptop:hidden"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-fnormal no-underline leading-none text-inherit bg-inherit border-none">↓</span></div></div></div><div class="py-f2 px-[1.25em] hover:cursor-pointer hidden group-one-hover:block"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 hover:text-main bg-inherit border-none">Show</span></div></div><div class="max-h-f20 flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation UpdateLedgerEntryTags(
  $ledgerEntry: LedgerEntryMatchInput!
  $update: UpdateLedgerEntryInput!
) {
  updateLedgerEntry(
    ledgerEntry: $ledgerEntry,
    update: $update
  ) {
    __typename
    ... on UpdateLedgerEntryResult {
      entry {
        type
        ik
        tags {
          key
          value
        }
        lines {
          nodes {
            amount
            description
            account {
              path
            }
          }
        }
      }
    }
    ... on Error {
      code
      message
    }
  }
}</code></pre></div></div><div class="absolute w-full left-f0 bottom-f0 min-h-f20 bg-gradient-to-b from-transparent to-negative"> <!-- --> </div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">updateLedgerEntry variables to add and update tags</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerEntry&quot;: {
    &quot;ik&quot;: &quot;add-ledger-entry&quot;,
    &quot;ledger&quot;: {
      &quot;ik&quot;: &quot;ledger-ik&quot;
    }
  },
  &quot;update&quot;: {
    &quot;tags&quot;: [
      {
        &quot;key&quot;: &quot;operator&quot;,
        &quot;value&quot;: &quot;bob&quot;
      },
      {
        &quot;key&quot;: &quot;supervisor&quot;,
        &quot;value&quot;: &quot;eve&quot;
      }
    ]
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">This is an additive operation:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">If you specify a tag that already exists, it will be updated</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">If you specify a new tag, it will be added</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">If you don&#x27;t specify an existing tag, it will remain unchanged</li>
</ul><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can only update a Ledger Entry a maximum of 10 times.</p></div></div></section></div></section>
<section id="read-balances" class="first:0 pt-f6 tablet:pt-f3 pb-[2em] scroll-mt-[90px]"><span class="TopicContainer-title group-one text-s20 tablet:text-fnormal laptop:text-s20 block mb-[1em] "><span class="text-main-500">H<!-- --> </span>Read balances<span class="pl-[0.5em] phone:invisible phone:group-one-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#read-balances">#</a></span></span><div class="TopicContainer-content py-[2em] first-of-type:pt-0 ml-0 phone:ml-[1.8em] tablet:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2"><span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> supports querying a Ledger Account for its latest balances, historical balances and balance changes.</p><div class="pt-f2"><div class="hidden tablet:block"><svg width="100%" height="100%" viewBox="0 0 621 450" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="621" height="450" fill="rgb(var(--colour-negative))"></rect><line x1="306" y1="234" x2="260.251" y2="234" stroke="rgb(var(--colour-main-500))"></line><path d="M269.251 243L260.251 234L269.251 225" stroke="rgb(var(--colour-main-500))"></path><path d="M22.704 27.982H20.59V32H19.316V22.214H22.746C24.622 22.214 25.868 23.082 25.868 24.888C25.868 26.022 25.406 26.764 24.244 27.338C25.28 27.758 25.532 28.192 25.616 29.62L25.658 30.348C25.686 30.824 25.742 31.384 26.162 31.678V32H24.72C24.51 31.566 24.356 31.006 24.356 30.362V29.746C24.356 28.598 23.866 27.982 22.704 27.982ZM20.59 23.32V26.876H22.494C23.768 26.876 24.538 26.386 24.538 25.028C24.538 23.838 23.782 23.32 22.494 23.32H20.59ZM34.1723 29.732C33.9203 31.272 32.7583 32.252 31.0363 32.252C28.8243 32.252 27.7043 30.642 27.7043 28.402C27.7043 25.952 29.0343 24.44 31.0643 24.44C33.3323 24.44 34.3263 26.134 34.3263 28.682H28.9223C28.9643 30.124 29.6643 31.174 31.0783 31.174C32.0303 31.174 32.6743 30.712 32.9963 29.732H34.1723ZM31.0503 25.518C29.7343 25.518 29.0483 26.498 28.9503 27.73H33.0663C33.0663 26.512 32.3103 25.518 31.0503 25.518ZM43.2746 31.23V32.112C42.9806 32.196 42.7566 32.238 42.5746 32.238C41.7626 32.238 41.3566 31.888 41.2726 31.132C40.4466 31.944 39.7186 32.252 38.7806 32.252C37.3526 32.252 36.3866 31.454 36.3866 30.096C36.3866 28.584 37.5346 28.038 38.3886 27.898C38.6406 27.856 39.1866 27.772 40.0126 27.66C40.9506 27.534 41.2586 27.352 41.2586 26.876V26.624C41.2586 25.896 40.6846 25.532 39.5786 25.532C38.5006 25.532 37.9686 25.938 37.8706 26.834H36.6946C36.7226 25.14 37.8986 24.454 39.6346 24.454C41.4406 24.454 42.3926 25.154 42.3926 26.456V30.684C42.3926 31.062 42.6026 31.258 43.0226 31.258C43.0926 31.258 43.2046 31.244 43.2746 31.23ZM41.2586 29.452V28.29C40.7686 28.514 39.9706 28.64 39.3546 28.71C38.2626 28.836 37.5766 29.144 37.5766 30.068C37.5766 30.796 38.1366 31.23 39.0746 31.23C40.0966 31.23 41.2586 30.474 41.2586 29.452ZM50.2349 21.794H51.3969V32H50.3609V30.964C49.7729 31.818 48.9889 32.252 48.0229 32.252C45.8529 32.252 44.8309 30.516 44.8309 28.262C44.8309 26.148 45.8949 24.44 47.9809 24.44C48.9749 24.44 49.7309 24.818 50.2349 25.574V21.794ZM48.1769 25.532C46.8049 25.532 46.0489 26.764 46.0489 28.346C46.0489 29.844 46.6929 31.16 48.1909 31.16C49.6609 31.16 50.2349 29.746 50.2349 28.388C50.2349 26.918 49.6469 25.532 48.1769 25.532ZM66.3675 32H62.5595V22.214H66.0455C67.7955 22.214 68.9995 23.166 68.9995 24.706C68.9995 25.644 68.5515 26.582 67.6975 26.89C68.7195 27.226 69.3215 28.038 69.3215 29.214C69.3215 30.684 68.2995 32 66.3675 32ZM63.8335 23.32V26.414H65.8495C66.8995 26.414 67.6695 26.078 67.6695 24.888C67.6695 23.684 66.8995 23.32 65.8495 23.32H63.8335ZM63.8335 27.52V30.894H66.2135C67.4455 30.894 67.9915 30.194 67.9915 29.2C67.9915 28.22 67.4455 27.52 66.2135 27.52H63.8335ZM77.8918 31.23V32.112C77.5978 32.196 77.3738 32.238 77.1918 32.238C76.3798 32.238 75.9738 31.888 75.8898 31.132C75.0638 31.944 74.3358 32.252 73.3978 32.252C71.9698 32.252 71.0038 31.454 71.0038 30.096C71.0038 28.584 72.1518 28.038 73.0058 27.898C73.2578 27.856 73.8038 27.772 74.6298 27.66C75.5678 27.534 75.8758 27.352 75.8758 26.876V26.624C75.8758 25.896 75.3018 25.532 74.1958 25.532C73.1178 25.532 72.5858 25.938 72.4878 26.834H71.3118C71.3398 25.14 72.5158 24.454 74.2518 24.454C76.0578 24.454 77.0098 25.154 77.0098 26.456V30.684C77.0098 31.062 77.2198 31.258 77.6398 31.258C77.7098 31.258 77.8218 31.244 77.8918 31.23ZM75.8758 29.452V28.29C75.3858 28.514 74.5878 28.64 73.9718 28.71C72.8798 28.836 72.1938 29.144 72.1938 30.068C72.1938 30.796 72.7538 31.23 73.6918 31.23C74.7138 31.23 75.8758 30.474 75.8758 29.452ZM83.8861 21.794V31.048H86.1401V32H80.2181V31.048H82.7521V22.746H80.2181V21.794H83.8861ZM95.2004 31.23V32.112C94.9064 32.196 94.6824 32.238 94.5004 32.238C93.6884 32.238 93.2824 31.888 93.1984 31.132C92.3724 31.944 91.6444 32.252 90.7064 32.252C89.2784 32.252 88.3124 31.454 88.3124 30.096C88.3124 28.584 89.4604 28.038 90.3144 27.898C90.5664 27.856 91.1124 27.772 91.9384 27.66C92.8764 27.534 93.1844 27.352 93.1844 26.876V26.624C93.1844 25.896 92.6104 25.532 91.5044 25.532C90.4264 25.532 89.8944 25.938 89.7964 26.834H88.6204C88.6484 25.14 89.8244 24.454 91.5604 24.454C93.3664 24.454 94.3184 25.154 94.3184 26.456V30.684C94.3184 31.062 94.5284 31.258 94.9484 31.258C95.0184 31.258 95.1304 31.244 95.2004 31.23ZM93.1844 29.452V28.29C92.6944 28.514 91.8964 28.64 91.2804 28.71C90.1884 28.836 89.5024 29.144 89.5024 30.068C89.5024 30.796 90.0624 31.23 91.0004 31.23C92.0224 31.23 93.1844 30.474 93.1844 29.452ZM97.3027 32V24.664H98.3807V25.882C98.9547 24.986 99.6547 24.454 100.817 24.454C102.091 24.454 103.141 25.098 103.141 26.456V32H101.979V26.918C101.979 25.938 101.279 25.476 100.467 25.476C99.1507 25.476 98.4647 26.61 98.4647 27.87V32H97.3027ZM112.005 27.086H110.829C110.703 26.12 110.059 25.518 109.037 25.518C107.525 25.518 106.937 26.96 106.937 28.416C106.937 29.872 107.595 31.174 109.065 31.174C110.087 31.174 110.717 30.6 110.913 29.438H112.089C111.935 31.202 110.843 32.252 109.037 32.252C106.895 32.252 105.719 30.572 105.719 28.416C105.719 26.218 106.867 24.44 109.051 24.44C110.843 24.44 111.963 25.532 112.005 27.086ZM120.715 29.732C120.463 31.272 119.301 32.252 117.579 32.252C115.367 32.252 114.247 30.642 114.247 28.402C114.247 25.952 115.577 24.44 117.607 24.44C119.875 24.44 120.869 26.134 120.869 28.682H115.465C115.507 30.124 116.207 31.174 117.621 31.174C118.573 31.174 119.217 30.712 119.539 29.732H120.715ZM117.593 25.518C116.277 25.518 115.591 26.498 115.493 27.73H119.609C119.609 26.512 118.853 25.518 117.593 25.518ZM128.866 26.666H127.648C127.62 25.938 127.06 25.476 126.178 25.476C125.226 25.476 124.582 25.896 124.582 26.554C124.582 27.072 124.946 27.38 125.632 27.562L127.298 27.996C128.53 28.318 129.16 28.92 129.16 29.956C129.16 31.384 128.04 32.252 126.22 32.252C124.302 32.252 123.294 31.412 123.21 29.774H124.442C124.554 30.768 125.156 31.216 126.248 31.216C127.284 31.216 127.97 30.824 127.97 30.138C127.97 29.508 127.662 29.242 126.864 29.032L125.324 28.626C123.994 28.276 123.392 27.73 123.392 26.61C123.392 25.28 124.484 24.44 126.206 24.44C127.914 24.44 128.838 25.28 128.866 26.666Z" fill="rgb(var(--colour-main))"></path><path d="M127.274 113V103.214H130.844C132.594 103.214 133.994 104.208 133.994 106.14C133.994 108.072 132.594 109.066 130.844 109.066H128.548V113H127.274ZM128.548 107.96H130.676C131.922 107.96 132.664 107.26 132.664 106.14C132.664 105.02 131.922 104.32 130.676 104.32H128.548V107.96ZM136.39 113V105.664H137.468V107.246C137.958 106.196 138.896 105.454 140.1 105.454C141.78 105.454 142.648 106.378 142.788 107.834H141.626C141.458 106.952 140.982 106.476 139.988 106.476C138.518 106.476 137.566 107.722 137.566 109.444V113H136.39ZM147.635 105.44C149.889 105.44 150.953 107.12 150.953 109.346C150.953 111.572 149.889 113.252 147.635 113.252C145.381 113.252 144.317 111.572 144.317 109.346C144.317 107.12 145.381 105.44 147.635 105.44ZM147.635 106.518C146.151 106.518 145.535 107.848 145.535 109.346C145.535 110.844 146.151 112.174 147.635 112.174C149.119 112.174 149.735 110.844 149.735 109.346C149.735 107.848 149.119 106.518 147.635 106.518ZM158.235 102.794H159.397V113H158.361V111.964C157.773 112.818 156.989 113.252 156.023 113.252C153.853 113.252 152.831 111.516 152.831 109.262C152.831 107.148 153.895 105.44 155.981 105.44C156.975 105.44 157.731 105.818 158.235 106.574V102.794ZM156.177 106.532C154.805 106.532 154.049 107.764 154.049 109.346C154.049 110.844 154.693 112.16 156.191 112.16C157.661 112.16 158.235 110.746 158.235 109.388C158.235 107.918 157.647 106.532 156.177 106.532ZM167.869 105.664V113H166.819V111.908C166.147 112.874 165.447 113.252 164.369 113.252C163.739 113.252 163.207 113.112 162.787 112.818C162.283 112.454 162.031 111.936 162.031 111.25V105.664H163.193V110.788C163.193 111.278 163.361 111.656 163.683 111.908C163.949 112.118 164.299 112.23 164.705 112.23C165.251 112.23 165.713 112.034 166.091 111.628C166.497 111.194 166.707 110.564 166.707 109.738V105.664H167.869ZM176.733 108.086H175.557C175.431 107.12 174.787 106.518 173.765 106.518C172.253 106.518 171.665 107.96 171.665 109.416C171.665 110.872 172.323 112.174 173.793 112.174C174.815 112.174 175.445 111.6 175.641 110.438H176.817C176.663 112.202 175.571 113.252 173.765 113.252C171.623 113.252 170.447 111.572 170.447 109.416C170.447 107.218 171.595 105.44 173.779 105.44C175.571 105.44 176.691 106.532 176.733 108.086ZM182.308 105.664H185.192V106.616H182.308V110.704C182.308 111.782 182.882 112.146 183.946 112.146C184.422 112.146 184.842 112.104 185.192 112.006V113.028C184.73 113.168 184.268 113.196 183.876 113.196C182.098 113.196 181.146 112.51 181.146 110.914V106.616H179.032V105.664H181.146V103.648H182.308V105.664Z" fill="rgb(var(--colour-main-500))"></path><path d="M312.874 113L312.006 110.074H308.632L307.764 113H306.42L309.514 103.214H311.152L314.232 113H312.874ZM308.954 108.982H311.684L310.312 104.39L308.954 108.982ZM315.928 113V103.214H319.498C321.248 103.214 322.648 104.208 322.648 106.14C322.648 108.072 321.248 109.066 319.498 109.066H317.202V113H315.928ZM317.202 107.96H319.33C320.576 107.96 321.318 107.26 321.318 106.14C321.318 105.02 320.576 104.32 319.33 104.32H317.202V107.96ZM324.905 113V111.908H326.977V104.306H324.905V103.214H330.379V104.306H328.293V111.908H330.379V113H324.905Z" fill="rgb(var(--colour-main-500))"></path><rect x="306" y="126" width="207" height="216" stroke="rgb(var(--colour-main-500))"></rect><path d="M166.779 239V231.902H164.161V230.978C166.471 230.88 166.667 230.74 167.087 229.102H168.011V239H166.779ZM175.517 228.99C178.065 228.99 178.765 231.51 178.765 234.114C178.765 236.718 178.065 239.252 175.517 239.252C172.969 239.252 172.269 236.718 172.269 234.114C172.269 231.51 172.969 228.99 175.517 228.99ZM175.517 230.054C174.075 230.054 173.417 231.65 173.417 234.114C173.417 235.304 173.571 236.298 173.893 236.998L176.651 230.516C176.357 230.208 175.979 230.054 175.517 230.054ZM177.617 234.114C177.617 233.036 177.491 232.126 177.225 231.44L174.523 237.852C174.789 238.076 175.125 238.188 175.517 238.188C176.959 238.188 177.617 236.578 177.617 234.114ZM194.926 235.934V229.214H196.228V236.116C196.228 238.384 194.66 239.252 192.812 239.252C190.908 239.252 189.424 238.342 189.424 236.116V229.214H190.726V235.934C190.726 237.642 191.692 238.104 192.812 238.104C193.946 238.104 194.926 237.614 194.926 235.934ZM204.882 232.042H203.622C203.58 230.922 202.922 230.096 201.564 230.096C200.22 230.096 199.506 230.768 199.506 231.65C199.506 232.462 199.926 232.924 200.836 233.134L202.838 233.596C204.364 233.946 205.162 234.954 205.162 236.214C205.162 238.16 203.748 239.252 201.69 239.252C199.254 239.252 197.952 237.964 197.924 235.878H199.184C199.198 237.18 200.066 238.09 201.718 238.09C203.188 238.09 203.846 237.39 203.846 236.396C203.846 235.528 203.37 235.038 202.404 234.814L200.374 234.338C198.96 234.002 198.19 233.12 198.19 231.776C198.19 230.138 199.506 228.99 201.606 228.99C203.65 228.99 204.882 230.236 204.882 231.86V232.042ZM210.037 239H206.873V229.214H210.037C212.515 229.214 213.761 231.258 213.761 234.1C213.761 236.956 212.515 239 210.037 239ZM208.175 230.362V237.852H209.813C211.647 237.852 212.403 236.438 212.403 234.114C212.403 231.776 211.647 230.362 209.813 230.362H208.175Z" fill="rgb(var(--colour-main))"></path><path d="M325.434 141.664V152.052H324.272V148.076C323.726 148.916 323.012 149.252 322.004 149.252C320.03 149.252 318.868 147.74 318.868 145.43C318.868 143.204 319.946 141.44 322.06 141.44C323.026 141.44 323.852 141.86 324.398 142.63V141.664H325.434ZM322.228 142.532C320.842 142.532 320.086 143.764 320.086 145.346C320.086 146.844 320.758 148.16 322.228 148.16C323.698 148.16 324.272 146.746 324.272 145.388C324.272 143.932 323.684 142.532 322.228 142.532ZM333.906 141.664V149H332.856V147.908C332.184 148.874 331.484 149.252 330.406 149.252C329.776 149.252 329.244 149.112 328.824 148.818C328.32 148.454 328.068 147.936 328.068 147.25V141.664H329.23V146.788C329.23 147.278 329.398 147.656 329.72 147.908C329.986 148.118 330.336 148.23 330.742 148.23C331.288 148.23 331.75 148.034 332.128 147.628C332.534 147.194 332.744 146.564 332.744 145.738V141.664H333.906ZM342.827 146.732C342.575 148.272 341.413 149.252 339.691 149.252C337.479 149.252 336.359 147.642 336.359 145.402C336.359 142.952 337.689 141.44 339.719 141.44C341.987 141.44 342.981 143.134 342.981 145.682H337.577C337.619 147.124 338.319 148.174 339.733 148.174C340.685 148.174 341.329 147.712 341.651 146.732H342.827ZM339.705 142.518C338.389 142.518 337.703 143.498 337.605 144.73H341.721C341.721 143.512 340.965 142.518 339.705 142.518ZM345.699 149V141.664H346.777V143.246C347.267 142.196 348.205 141.454 349.409 141.454C351.089 141.454 351.957 142.378 352.097 143.834H350.935C350.767 142.952 350.291 142.476 349.297 142.476C347.827 142.476 346.875 143.722 346.875 145.444V149H345.699ZM356.999 150.54C356.621 151.548 355.907 152.052 354.997 152.052C354.647 152.052 354.339 152.01 354.045 151.912V150.82C354.353 150.89 354.605 150.904 354.843 150.904C355.375 150.904 355.669 150.708 355.879 150.19L356.327 149.112L353.611 141.664H354.843L356.985 147.614L359.099 141.664H360.303L356.999 150.54Z" fill="rgb(var(--colour-purple))"></path><path d="M353.835 221V210.794H354.997V214.644C355.529 213.846 356.285 213.44 357.265 213.44C359.421 213.44 360.401 215.134 360.401 217.262C360.401 219.516 359.295 221.252 357.209 221.252C356.201 221.252 355.431 220.832 354.885 219.992V221H353.835ZM357.055 214.532C355.571 214.532 354.997 215.974 354.997 217.388C354.997 218.774 355.571 220.16 357.055 220.16C358.525 220.16 359.197 218.816 359.197 217.388C359.197 215.862 358.511 214.532 357.055 214.532ZM369.237 220.23V221.112C368.943 221.196 368.719 221.238 368.537 221.238C367.725 221.238 367.319 220.888 367.235 220.132C366.409 220.944 365.681 221.252 364.743 221.252C363.315 221.252 362.349 220.454 362.349 219.096C362.349 217.584 363.497 217.038 364.351 216.898C364.603 216.856 365.149 216.772 365.975 216.66C366.913 216.534 367.221 216.352 367.221 215.876V215.624C367.221 214.896 366.647 214.532 365.541 214.532C364.463 214.532 363.931 214.938 363.833 215.834H362.657C362.685 214.14 363.861 213.454 365.597 213.454C367.403 213.454 368.355 214.154 368.355 215.456V219.684C368.355 220.062 368.565 220.258 368.985 220.258C369.055 220.258 369.167 220.244 369.237 220.23ZM367.221 218.452V217.29C366.731 217.514 365.933 217.64 365.317 217.71C364.225 217.836 363.539 218.144 363.539 219.068C363.539 219.796 364.099 220.23 365.037 220.23C366.059 220.23 367.221 219.474 367.221 218.452ZM375.232 210.794V220.048H377.486V221H371.564V220.048H374.098V211.746H371.564V210.794H375.232ZM386.546 220.23V221.112C386.252 221.196 386.028 221.238 385.846 221.238C385.034 221.238 384.628 220.888 384.544 220.132C383.718 220.944 382.99 221.252 382.052 221.252C380.624 221.252 379.658 220.454 379.658 219.096C379.658 217.584 380.806 217.038 381.66 216.898C381.912 216.856 382.458 216.772 383.284 216.66C384.222 216.534 384.53 216.352 384.53 215.876V215.624C384.53 214.896 383.956 214.532 382.85 214.532C381.772 214.532 381.24 214.938 381.142 215.834H379.966C379.994 214.14 381.17 213.454 382.906 213.454C384.712 213.454 385.664 214.154 385.664 215.456V219.684C385.664 220.062 385.874 220.258 386.294 220.258C386.364 220.258 386.476 220.244 386.546 220.23ZM384.53 218.452V217.29C384.04 217.514 383.242 217.64 382.626 217.71C381.534 217.836 380.848 218.144 380.848 219.068C380.848 219.796 381.408 220.23 382.346 220.23C383.368 220.23 384.53 219.474 384.53 218.452ZM388.648 221V213.664H389.726V214.882C390.3 213.986 391 213.454 392.162 213.454C393.436 213.454 394.486 214.098 394.486 215.456V221H393.324V215.918C393.324 214.938 392.624 214.476 391.812 214.476C390.496 214.476 389.81 215.61 389.81 216.87V221H388.648ZM403.351 216.086H402.175C402.049 215.12 401.405 214.518 400.383 214.518C398.871 214.518 398.283 215.96 398.283 217.416C398.283 218.872 398.941 220.174 400.411 220.174C401.433 220.174 402.063 219.6 402.259 218.438H403.435C403.281 220.202 402.189 221.252 400.383 221.252C398.241 221.252 397.065 219.572 397.065 217.416C397.065 215.218 398.213 213.44 400.397 213.44C402.189 213.44 403.309 214.532 403.351 216.086ZM412.061 218.732C411.809 220.272 410.647 221.252 408.925 221.252C406.713 221.252 405.593 219.642 405.593 217.402C405.593 214.952 406.923 213.44 408.953 213.44C411.221 213.44 412.215 215.134 412.215 217.682H406.811C406.853 219.124 407.553 220.174 408.967 220.174C409.919 220.174 410.563 219.712 410.885 218.732H412.061ZM408.939 214.518C407.623 214.518 406.937 215.498 406.839 216.73H410.955C410.955 215.512 410.199 214.518 408.939 214.518Z" fill="rgb(var(--colour-main))"></path><path d="M374.476 143.82H377.85V149H376.898L376.786 147.656C376.31 148.762 375.428 149.252 374.336 149.252C371.998 149.252 370.514 147.39 370.514 144.17C370.514 140.838 372.096 138.99 374.476 138.99C376.184 138.99 377.458 139.844 377.878 141.916H376.548C376.282 140.572 375.498 140.138 374.476 140.138C372.754 140.138 371.872 141.678 371.872 144.1C371.872 146.83 372.866 148.104 374.364 148.104C375.988 148.104 376.702 146.858 376.702 145.248V144.968H374.476V143.82ZM386.098 146.732C385.846 148.272 384.684 149.252 382.962 149.252C380.75 149.252 379.63 147.642 379.63 145.402C379.63 142.952 380.96 141.44 382.99 141.44C385.258 141.44 386.252 143.134 386.252 145.682H380.848C380.89 147.124 381.59 148.174 383.004 148.174C383.956 148.174 384.6 147.712 384.922 146.732H386.098ZM382.976 142.518C381.66 142.518 380.974 143.498 380.876 144.73H384.992C384.992 143.512 384.236 142.518 382.976 142.518ZM391.616 141.664H394.5V142.616H391.616V146.704C391.616 147.782 392.19 148.146 393.254 148.146C393.73 148.146 394.15 148.104 394.5 148.006V149.028C394.038 149.168 393.576 149.196 393.184 149.196C391.406 149.196 390.454 148.51 390.454 146.914V142.616H388.34V141.664H390.454V139.648H391.616V141.664ZM400.985 149H397.177V139.214H400.663C402.413 139.214 403.617 140.166 403.617 141.706C403.617 142.644 403.169 143.582 402.315 143.89C403.337 144.226 403.939 145.038 403.939 146.214C403.939 147.684 402.917 149 400.985 149ZM398.451 140.32V143.414H400.467C401.517 143.414 402.287 143.078 402.287 141.888C402.287 140.684 401.517 140.32 400.467 140.32H398.451ZM398.451 144.52V147.894H400.831C402.063 147.894 402.609 147.194 402.609 146.2C402.609 145.22 402.063 144.52 400.831 144.52H398.451ZM412.509 148.23V149.112C412.215 149.196 411.991 149.238 411.809 149.238C410.997 149.238 410.591 148.888 410.507 148.132C409.681 148.944 408.953 149.252 408.015 149.252C406.587 149.252 405.621 148.454 405.621 147.096C405.621 145.584 406.769 145.038 407.623 144.898C407.875 144.856 408.421 144.772 409.247 144.66C410.185 144.534 410.493 144.352 410.493 143.876V143.624C410.493 142.896 409.919 142.532 408.813 142.532C407.735 142.532 407.203 142.938 407.105 143.834H405.929C405.957 142.14 407.133 141.454 408.869 141.454C410.675 141.454 411.627 142.154 411.627 143.456V147.684C411.627 148.062 411.837 148.258 412.257 148.258C412.327 148.258 412.439 148.244 412.509 148.23ZM410.493 146.452V145.29C410.003 145.514 409.205 145.64 408.589 145.71C407.497 145.836 406.811 146.144 406.811 147.068C406.811 147.796 407.371 148.23 408.309 148.23C409.331 148.23 410.493 147.474 410.493 146.452ZM418.503 138.794V148.048H420.757V149H414.835V148.048H417.369V139.746H414.835V138.794H418.503ZM429.818 148.23V149.112C429.524 149.196 429.3 149.238 429.118 149.238C428.306 149.238 427.9 148.888 427.816 148.132C426.99 148.944 426.262 149.252 425.324 149.252C423.896 149.252 422.93 148.454 422.93 147.096C422.93 145.584 424.078 145.038 424.932 144.898C425.184 144.856 425.73 144.772 426.556 144.66C427.494 144.534 427.802 144.352 427.802 143.876V143.624C427.802 142.896 427.228 142.532 426.122 142.532C425.044 142.532 424.512 142.938 424.414 143.834H423.238C423.266 142.14 424.442 141.454 426.178 141.454C427.984 141.454 428.936 142.154 428.936 143.456V147.684C428.936 148.062 429.146 148.258 429.566 148.258C429.636 148.258 429.748 148.244 429.818 148.23ZM427.802 146.452V145.29C427.312 145.514 426.514 145.64 425.898 145.71C424.806 145.836 424.12 146.144 424.12 147.068C424.12 147.796 424.68 148.23 425.618 148.23C426.64 148.23 427.802 147.474 427.802 146.452ZM431.92 149V141.664H432.998V142.882C433.572 141.986 434.272 141.454 435.434 141.454C436.708 141.454 437.758 142.098 437.758 143.456V149H436.596V143.918C436.596 142.938 435.896 142.476 435.084 142.476C433.768 142.476 433.082 143.61 433.082 144.87V149H431.92ZM446.622 144.086H445.446C445.32 143.12 444.676 142.518 443.654 142.518C442.142 142.518 441.554 143.96 441.554 145.416C441.554 146.872 442.212 148.174 443.682 148.174C444.704 148.174 445.334 147.6 445.53 146.438H446.706C446.552 148.202 445.46 149.252 443.654 149.252C441.512 149.252 440.336 147.572 440.336 145.416C440.336 143.218 441.484 141.44 443.668 141.44C445.46 141.44 446.58 142.532 446.622 144.086ZM455.332 146.732C455.08 148.272 453.918 149.252 452.196 149.252C449.984 149.252 448.864 147.642 448.864 145.402C448.864 142.952 450.194 141.44 452.224 141.44C454.492 141.44 455.486 143.134 455.486 145.682H450.082C450.124 147.124 450.824 148.174 452.238 148.174C453.19 148.174 453.834 147.712 454.156 146.732H455.332ZM452.21 142.518C450.894 142.518 450.208 143.498 450.11 144.73H454.226C454.226 143.512 453.47 142.518 452.21 142.518ZM340.615 192.794V202.048H342.869V203H336.947V202.048H339.481V193.746H336.947V192.794H340.615ZM351.481 200.732C351.229 202.272 350.067 203.252 348.345 203.252C346.133 203.252 345.013 201.642 345.013 199.402C345.013 196.952 346.343 195.44 348.373 195.44C350.641 195.44 351.635 197.134 351.635 199.682H346.231C346.273 201.124 346.973 202.174 348.387 202.174C349.339 202.174 349.983 201.712 350.305 200.732H351.481ZM348.359 196.518C347.043 196.518 346.357 197.498 346.259 198.73H350.375C350.375 197.512 349.619 196.518 348.359 196.518ZM358.889 192.794H360.051V203H359.015V201.964C358.427 202.818 357.643 203.252 356.677 203.252C354.507 203.252 353.485 201.516 353.485 199.262C353.485 197.148 354.549 195.44 356.635 195.44C357.629 195.44 358.385 195.818 358.889 196.574V192.794ZM356.831 196.532C355.459 196.532 354.703 197.764 354.703 199.346C354.703 200.844 355.347 202.16 356.845 202.16C358.315 202.16 358.889 200.746 358.889 199.388C358.889 197.918 358.301 196.532 356.831 196.532ZM365.415 206.052C363.819 206.052 362.615 205.394 362.419 203.84H363.637C363.805 204.666 364.379 205.072 365.443 205.072C366.913 205.072 367.515 204.344 367.515 202.384V201.964C367.081 202.818 366.297 203.252 365.331 203.252C363.161 203.252 362.139 201.558 362.139 199.304C362.139 197.148 363.203 195.44 365.289 195.44C366.283 195.44 367.039 195.818 367.543 196.574V195.664H368.705V201.81C368.705 202.832 368.621 203.602 368.453 204.134C368.047 205.408 366.997 206.052 365.415 206.052ZM365.499 202.16C366.969 202.16 367.543 200.746 367.543 199.388C367.543 197.918 366.955 196.532 365.485 196.532C364.113 196.532 363.357 197.764 363.357 199.346C363.357 200.844 364.001 202.16 365.499 202.16ZM377.444 200.732C377.192 202.272 376.03 203.252 374.308 203.252C372.096 203.252 370.976 201.642 370.976 199.402C370.976 196.952 372.306 195.44 374.336 195.44C376.604 195.44 377.598 197.134 377.598 199.682H372.194C372.236 201.124 372.936 202.174 374.35 202.174C375.302 202.174 375.946 201.712 376.268 200.732H377.444ZM374.322 196.518C373.006 196.518 372.32 197.498 372.222 198.73H376.338C376.338 197.512 375.582 196.518 374.322 196.518ZM380.316 203V195.664H381.394V197.246C381.884 196.196 382.822 195.454 384.026 195.454C385.706 195.454 386.574 196.378 386.714 197.834H385.552C385.384 196.952 384.908 196.476 383.914 196.476C382.444 196.476 381.492 197.722 381.492 199.444V203H380.316ZM394.108 203L393.24 200.074H389.866L388.998 203H387.654L390.748 193.214H392.386L395.466 203H394.108ZM390.188 198.982H392.918L391.546 194.39L390.188 198.982ZM403.351 198.086H402.175C402.049 197.12 401.405 196.518 400.383 196.518C398.871 196.518 398.283 197.96 398.283 199.416C398.283 200.872 398.941 202.174 400.411 202.174C401.433 202.174 402.063 201.6 402.259 200.438H403.435C403.281 202.202 402.189 203.252 400.383 203.252C398.241 203.252 397.065 201.572 397.065 199.416C397.065 197.218 398.213 195.44 400.397 195.44C402.189 195.44 403.309 196.532 403.351 198.086ZM412.005 198.086H410.829C410.703 197.12 410.059 196.518 409.037 196.518C407.525 196.518 406.937 197.96 406.937 199.416C406.937 200.872 407.595 202.174 409.065 202.174C410.087 202.174 410.717 201.6 410.913 200.438H412.089C411.935 202.202 410.843 203.252 409.037 203.252C406.895 203.252 405.719 201.572 405.719 199.416C405.719 197.218 406.867 195.44 409.051 195.44C410.843 195.44 411.963 196.532 412.005 198.086ZM417.523 195.44C419.777 195.44 420.841 197.12 420.841 199.346C420.841 201.572 419.777 203.252 417.523 203.252C415.269 203.252 414.205 201.572 414.205 199.346C414.205 197.12 415.269 195.44 417.523 195.44ZM417.523 196.518C416.039 196.518 415.423 197.848 415.423 199.346C415.423 200.844 416.039 202.174 417.523 202.174C419.007 202.174 419.623 200.844 419.623 199.346C419.623 197.848 419.007 196.518 417.523 196.518ZM429.104 195.664V203H428.054V201.908C427.382 202.874 426.682 203.252 425.604 203.252C424.974 203.252 424.442 203.112 424.022 202.818C423.518 202.454 423.266 201.936 423.266 201.25V195.664H424.428V200.788C424.428 201.278 424.596 201.656 424.918 201.908C425.184 202.118 425.534 202.23 425.94 202.23C426.486 202.23 426.948 202.034 427.326 201.628C427.732 201.194 427.942 200.564 427.942 199.738V195.664H429.104ZM431.92 203V195.664H432.998V196.882C433.572 195.986 434.272 195.454 435.434 195.454C436.708 195.454 437.758 196.098 437.758 197.456V203H436.596V197.918C436.596 196.938 435.896 196.476 435.084 196.476C433.768 196.476 433.082 197.61 433.082 198.87V203H431.92ZM443.542 195.664H446.426V196.616H443.542V200.704C443.542 201.782 444.116 202.146 445.18 202.146C445.656 202.146 446.076 202.104 446.426 202.006V203.028C445.964 203.168 445.502 203.196 445.11 203.196C443.332 203.196 442.38 202.51 442.38 200.914V196.616H440.266V195.664H442.38V193.648H443.542V195.664Z" fill="rgb(var(--colour-royal))"></path><path d="M461.747 138.08H463.007C461.467 139.844 460.669 141.888 460.669 144.1C460.669 146.312 461.467 148.356 463.007 150.12H461.747C460.403 148.608 459.535 146.41 459.535 144.1C459.535 141.79 460.403 139.592 461.747 138.08ZM461.747 161.568H459.843V159.664H461.747V161.568ZM459.843 165.096H461.747V167H459.843V165.096ZM321.374 186.134H320.114C321.654 184.37 322.452 182.326 322.452 180.114C322.452 177.902 321.654 175.858 320.114 174.094H321.374C322.718 175.606 323.586 177.804 323.586 180.114C323.586 182.424 322.718 184.622 321.374 186.134ZM337.703 179.638C338.599 179.638 338.935 179.246 338.935 178.238V175.928C338.935 174.794 339.523 174.094 340.461 174.094H341.749V175.018H340.867C340.181 175.018 339.985 175.214 339.985 175.942V178.182C339.985 179.316 339.705 179.764 338.725 180.1C339.705 180.422 339.985 180.898 339.985 182.032V184.272C339.985 185 340.181 185.196 340.867 185.196H341.749V186.12H340.461C339.523 186.12 338.935 185.42 338.935 184.286V181.976C338.935 180.968 338.599 180.562 337.703 180.562H337.311V179.638H337.703ZM453.092 192.08H454.352C452.812 193.844 452.014 195.888 452.014 198.1C452.014 200.312 452.812 202.356 454.352 204.12H453.092C451.748 202.608 450.88 200.41 450.88 198.1C450.88 195.79 451.748 193.592 453.092 192.08ZM459.843 204.134H458.583C460.123 202.37 460.921 200.326 460.921 198.114C460.921 195.902 460.123 193.858 458.583 192.094H459.843C461.187 193.606 462.055 195.804 462.055 198.114C462.055 200.424 461.187 202.622 459.843 204.134ZM476.171 197.638C477.067 197.638 477.403 197.246 477.403 196.238V193.928C477.403 192.794 477.991 192.094 478.929 192.094H480.217V193.018H479.335C478.649 193.018 478.453 193.214 478.453 193.942V196.182C478.453 197.316 478.173 197.764 477.193 198.1C478.173 198.422 478.453 198.898 478.453 200.032V202.272C478.453 203 478.649 203.196 479.335 203.196H480.217V204.12H478.929C477.991 204.12 477.403 203.42 477.403 202.286V199.976C477.403 198.968 477.067 198.562 476.171 198.562H475.779V197.638H476.171ZM341.567 234.576C340.671 234.576 340.335 234.968 340.335 235.976V238.286C340.335 239.42 339.747 240.12 338.809 240.12H337.521V239.196H338.403C339.089 239.196 339.285 239 339.285 238.272V236.032C339.285 234.898 339.565 234.45 340.545 234.114C339.565 233.792 339.285 233.316 339.285 232.182V229.942C339.285 229.214 339.089 229.018 338.403 229.018H337.521V228.094H338.809C339.747 228.094 340.335 228.794 340.335 229.928V232.238C340.335 233.246 340.671 233.652 341.567 233.652H341.959V234.576H341.567ZM324.258 252.576C323.362 252.576 323.026 252.968 323.026 253.976V256.286C323.026 257.42 322.438 258.12 321.5 258.12H320.212V257.196H321.094C321.78 257.196 321.976 257 321.976 256.272V254.032C321.976 252.898 322.256 252.45 323.236 252.114C322.256 251.792 321.976 251.316 321.976 250.182V247.942C321.976 247.214 321.78 247.018 321.094 247.018H320.212V246.094H321.5C322.438 246.094 323.026 246.794 323.026 247.928V250.238C323.026 251.246 323.362 251.652 324.258 251.652H324.65V252.576H324.258Z" fill="rgb(var(--colour-main-500))"></path><path d="M339.229 168.358V167.084C337.451 166.916 336.359 165.656 336.317 164.004H337.381C337.423 165.138 338.039 165.964 339.229 166.118V162.492L338.599 162.324C337.325 161.988 336.513 161.036 336.513 159.804C336.513 158.348 337.521 157.298 339.229 157.158V155.884H340.027V157.158C341.623 157.298 342.589 158.306 342.659 159.86H341.595C341.539 158.964 341.021 158.278 340.027 158.124V161.582L340.937 161.834C342.211 162.184 342.953 163.094 342.953 164.27C342.953 165.866 341.805 166.944 340.027 167.084V168.358H339.229ZM338.795 161.246L339.229 161.372V158.11C338.263 158.222 337.591 158.754 337.591 159.692C337.591 160.434 338.011 161.036 338.795 161.246ZM340.573 162.856L340.027 162.702V166.132C341.203 166.02 341.875 165.376 341.875 164.424C341.875 163.64 341.483 163.094 340.573 162.856ZM349.269 156.794V166.048H351.523V167H345.601V166.048H348.135V157.746H345.601V156.794H349.269ZM360.135 164.732C359.883 166.272 358.721 167.252 356.999 167.252C354.787 167.252 353.667 165.642 353.667 163.402C353.667 160.952 354.997 159.44 357.027 159.44C359.295 159.44 360.289 161.134 360.289 163.682H354.885C354.927 165.124 355.627 166.174 357.041 166.174C357.993 166.174 358.637 165.712 358.959 164.732H360.135ZM357.013 160.518C355.697 160.518 355.011 161.498 354.913 162.73H359.029C359.029 161.512 358.273 160.518 357.013 160.518ZM367.543 156.794H368.705V167H367.669V165.964C367.081 166.818 366.297 167.252 365.331 167.252C363.161 167.252 362.139 165.516 362.139 163.262C362.139 161.148 363.203 159.44 365.289 159.44C366.283 159.44 367.039 159.818 367.543 160.574V156.794ZM365.485 160.532C364.113 160.532 363.357 161.764 363.357 163.346C363.357 164.844 364.001 166.16 365.499 166.16C366.969 166.16 367.543 164.746 367.543 163.388C367.543 161.918 366.955 160.532 365.485 160.532ZM374.07 170.052C372.474 170.052 371.27 169.394 371.074 167.84H372.292C372.46 168.666 373.034 169.072 374.098 169.072C375.568 169.072 376.17 168.344 376.17 166.384V165.964C375.736 166.818 374.952 167.252 373.986 167.252C371.816 167.252 370.794 165.558 370.794 163.304C370.794 161.148 371.858 159.44 373.944 159.44C374.938 159.44 375.694 159.818 376.198 160.574V159.664H377.36V165.81C377.36 166.832 377.276 167.602 377.108 168.134C376.702 169.408 375.652 170.052 374.07 170.052ZM374.154 166.16C375.624 166.16 376.198 164.746 376.198 163.388C376.198 161.918 375.61 160.532 374.14 160.532C372.768 160.532 372.012 161.764 372.012 163.346C372.012 164.844 372.656 166.16 374.154 166.16ZM386.098 164.732C385.846 166.272 384.684 167.252 382.962 167.252C380.75 167.252 379.63 165.642 379.63 163.402C379.63 160.952 380.96 159.44 382.99 159.44C385.258 159.44 386.252 161.134 386.252 163.682H380.848C380.89 165.124 381.59 166.174 383.004 166.174C383.956 166.174 384.6 165.712 384.922 164.732H386.098ZM382.976 160.518C381.66 160.518 380.974 161.498 380.876 162.73H384.992C384.992 161.512 384.236 160.518 382.976 160.518ZM388.97 167V159.664H390.048V161.246C390.538 160.196 391.476 159.454 392.68 159.454C394.36 159.454 395.228 160.378 395.368 161.834H394.206C394.038 160.952 393.562 160.476 392.568 160.476C391.098 160.476 390.146 161.722 390.146 163.444V167H388.97ZM402.763 167L401.895 164.074H398.521L397.653 167H396.309L399.403 157.214H401.041L404.121 167H402.763ZM398.843 162.982H401.573L400.201 158.39L398.843 162.982ZM412.005 162.086H410.829C410.703 161.12 410.059 160.518 409.037 160.518C407.525 160.518 406.937 161.96 406.937 163.416C406.937 164.872 407.595 166.174 409.065 166.174C410.087 166.174 410.717 165.6 410.913 164.438H412.089C411.935 166.202 410.843 167.252 409.037 167.252C406.895 167.252 405.719 165.572 405.719 163.416C405.719 161.218 406.867 159.44 409.051 159.44C410.843 159.44 411.963 160.532 412.005 162.086ZM420.659 162.086H419.483C419.357 161.12 418.713 160.518 417.691 160.518C416.179 160.518 415.591 161.96 415.591 163.416C415.591 164.872 416.249 166.174 417.719 166.174C418.741 166.174 419.371 165.6 419.567 164.438H420.743C420.589 166.202 419.497 167.252 417.691 167.252C415.549 167.252 414.373 165.572 414.373 163.416C414.373 161.218 415.521 159.44 417.705 159.44C419.497 159.44 420.617 160.532 420.659 162.086ZM426.178 159.44C428.432 159.44 429.496 161.12 429.496 163.346C429.496 165.572 428.432 167.252 426.178 167.252C423.924 167.252 422.86 165.572 422.86 163.346C422.86 161.12 423.924 159.44 426.178 159.44ZM426.178 160.518C424.694 160.518 424.078 161.848 424.078 163.346C424.078 164.844 424.694 166.174 426.178 166.174C427.662 166.174 428.278 164.844 428.278 163.346C428.278 161.848 427.662 160.518 426.178 160.518ZM437.758 159.664V167H436.708V165.908C436.036 166.874 435.336 167.252 434.258 167.252C433.628 167.252 433.096 167.112 432.676 166.818C432.172 166.454 431.92 165.936 431.92 165.25V159.664H433.082V164.788C433.082 165.278 433.25 165.656 433.572 165.908C433.838 166.118 434.188 166.23 434.594 166.23C435.14 166.23 435.602 166.034 435.98 165.628C436.386 165.194 436.596 164.564 436.596 163.738V159.664H437.758ZM440.574 167V159.664H441.652V160.882C442.226 159.986 442.926 159.454 444.088 159.454C445.362 159.454 446.412 160.098 446.412 161.456V167H445.25V161.918C445.25 160.938 444.55 160.476 443.738 160.476C442.422 160.476 441.736 161.61 441.736 162.87V167H440.574ZM452.196 159.664H455.08V160.616H452.196V164.704C452.196 165.782 452.77 166.146 453.834 166.146C454.31 166.146 454.73 166.104 455.08 166.006V167.028C454.618 167.168 454.156 167.196 453.764 167.196C451.986 167.196 451.034 166.51 451.034 164.914V160.616H448.92V159.664H451.034V157.648H452.196V159.664Z" fill="rgb(var(--colour-forest))"></path><rect x="126" y="125.75" width="126" height="216" rx="16" stroke="rgb(var(--colour-main-500))"></rect></svg></div><div class="block tablet:hidden"><svg width="100%" height="100%" viewBox="0 0 379 414" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="378" height="414" transform="translate(0.501953)" fill="rgb(var(--colour-negative))"></rect><path d="M23.206 27.982H21.092V32H19.818V22.214H23.248C25.124 22.214 26.37 23.082 26.37 24.888C26.37 26.022 25.908 26.764 24.746 27.338C25.782 27.758 26.034 28.192 26.118 29.62L26.16 30.348C26.188 30.824 26.244 31.384 26.664 31.678V32H25.222C25.012 31.566 24.858 31.006 24.858 30.362V29.746C24.858 28.598 24.368 27.982 23.206 27.982ZM21.092 23.32V26.876H22.996C24.27 26.876 25.04 26.386 25.04 25.028C25.04 23.838 24.284 23.32 22.996 23.32H21.092ZM34.6743 29.732C34.4223 31.272 33.2603 32.252 31.5383 32.252C29.3263 32.252 28.2063 30.642 28.2063 28.402C28.2063 25.952 29.5363 24.44 31.5663 24.44C33.8343 24.44 34.8283 26.134 34.8283 28.682H29.4243C29.4663 30.124 30.1663 31.174 31.5803 31.174C32.5323 31.174 33.1763 30.712 33.4983 29.732H34.6743ZM31.5523 25.518C30.2363 25.518 29.5503 26.498 29.4523 27.73H33.5683C33.5683 26.512 32.8123 25.518 31.5523 25.518ZM43.7765 31.23V32.112C43.4825 32.196 43.2585 32.238 43.0765 32.238C42.2645 32.238 41.8585 31.888 41.7745 31.132C40.9485 31.944 40.2205 32.252 39.2825 32.252C37.8545 32.252 36.8885 31.454 36.8885 30.096C36.8885 28.584 38.0365 28.038 38.8905 27.898C39.1425 27.856 39.6885 27.772 40.5145 27.66C41.4525 27.534 41.7605 27.352 41.7605 26.876V26.624C41.7605 25.896 41.1865 25.532 40.0805 25.532C39.0025 25.532 38.4705 25.938 38.3725 26.834H37.1965C37.2245 25.14 38.4005 24.454 40.1365 24.454C41.9425 24.454 42.8945 25.154 42.8945 26.456V30.684C42.8945 31.062 43.1045 31.258 43.5245 31.258C43.5945 31.258 43.7065 31.244 43.7765 31.23ZM41.7605 29.452V28.29C41.2705 28.514 40.4725 28.64 39.8565 28.71C38.7645 28.836 38.0785 29.144 38.0785 30.068C38.0785 30.796 38.6385 31.23 39.5765 31.23C40.5985 31.23 41.7605 30.474 41.7605 29.452ZM50.7368 21.794H51.8988V32H50.8628V30.964C50.2748 31.818 49.4908 32.252 48.5248 32.252C46.3548 32.252 45.3328 30.516 45.3328 28.262C45.3328 26.148 46.3968 24.44 48.4828 24.44C49.4768 24.44 50.2328 24.818 50.7368 25.574V21.794ZM48.6788 25.532C47.3068 25.532 46.5508 26.764 46.5508 28.346C46.5508 29.844 47.1948 31.16 48.6928 31.16C50.1628 31.16 50.7368 29.746 50.7368 28.388C50.7368 26.918 50.1488 25.532 48.6788 25.532ZM66.8694 32H63.0614V22.214H66.5474C68.2974 22.214 69.5014 23.166 69.5014 24.706C69.5014 25.644 69.0534 26.582 68.1994 26.89C69.2214 27.226 69.8234 28.038 69.8234 29.214C69.8234 30.684 68.8014 32 66.8694 32ZM64.3354 23.32V26.414H66.3514C67.4014 26.414 68.1714 26.078 68.1714 24.888C68.1714 23.684 67.4014 23.32 66.3514 23.32H64.3354ZM64.3354 27.52V30.894H66.7154C67.9474 30.894 68.4934 30.194 68.4934 29.2C68.4934 28.22 67.9474 27.52 66.7154 27.52H64.3354ZM78.3937 31.23V32.112C78.0997 32.196 77.8757 32.238 77.6937 32.238C76.8817 32.238 76.4757 31.888 76.3917 31.132C75.5657 31.944 74.8377 32.252 73.8997 32.252C72.4717 32.252 71.5057 31.454 71.5057 30.096C71.5057 28.584 72.6537 28.038 73.5077 27.898C73.7597 27.856 74.3057 27.772 75.1317 27.66C76.0697 27.534 76.3777 27.352 76.3777 26.876V26.624C76.3777 25.896 75.8037 25.532 74.6977 25.532C73.6197 25.532 73.0877 25.938 72.9897 26.834H71.8137C71.8417 25.14 73.0177 24.454 74.7537 24.454C76.5597 24.454 77.5117 25.154 77.5117 26.456V30.684C77.5117 31.062 77.7217 31.258 78.1417 31.258C78.2117 31.258 78.3237 31.244 78.3937 31.23ZM76.3777 29.452V28.29C75.8877 28.514 75.0897 28.64 74.4737 28.71C73.3817 28.836 72.6957 29.144 72.6957 30.068C72.6957 30.796 73.2557 31.23 74.1937 31.23C75.2157 31.23 76.3777 30.474 76.3777 29.452ZM84.388 21.794V31.048H86.642V32H80.72V31.048H83.254V22.746H80.72V21.794H84.388ZM95.7023 31.23V32.112C95.4083 32.196 95.1843 32.238 95.0023 32.238C94.1903 32.238 93.7843 31.888 93.7003 31.132C92.8743 31.944 92.1463 32.252 91.2083 32.252C89.7803 32.252 88.8143 31.454 88.8143 30.096C88.8143 28.584 89.9623 28.038 90.8163 27.898C91.0683 27.856 91.6143 27.772 92.4403 27.66C93.3783 27.534 93.6863 27.352 93.6863 26.876V26.624C93.6863 25.896 93.1123 25.532 92.0063 25.532C90.9283 25.532 90.3963 25.938 90.2983 26.834H89.1223C89.1503 25.14 90.3263 24.454 92.0623 24.454C93.8683 24.454 94.8203 25.154 94.8203 26.456V30.684C94.8203 31.062 95.0303 31.258 95.4503 31.258C95.5203 31.258 95.6323 31.244 95.7023 31.23ZM93.6863 29.452V28.29C93.1963 28.514 92.3983 28.64 91.7823 28.71C90.6903 28.836 90.0043 29.144 90.0043 30.068C90.0043 30.796 90.5643 31.23 91.5023 31.23C92.5243 31.23 93.6863 30.474 93.6863 29.452ZM97.8046 32V24.664H98.8826V25.882C99.4566 24.986 100.157 24.454 101.319 24.454C102.593 24.454 103.643 25.098 103.643 26.456V32H102.481V26.918C102.481 25.938 101.781 25.476 100.969 25.476C99.6526 25.476 98.9666 26.61 98.9666 27.87V32H97.8046ZM112.507 27.086H111.331C111.205 26.12 110.561 25.518 109.539 25.518C108.027 25.518 107.439 26.96 107.439 28.416C107.439 29.872 108.097 31.174 109.567 31.174C110.589 31.174 111.219 30.6 111.415 29.438H112.591C112.437 31.202 111.345 32.252 109.539 32.252C107.397 32.252 106.221 30.572 106.221 28.416C106.221 26.218 107.369 24.44 109.553 24.44C111.345 24.44 112.465 25.532 112.507 27.086ZM121.217 29.732C120.965 31.272 119.803 32.252 118.081 32.252C115.869 32.252 114.749 30.642 114.749 28.402C114.749 25.952 116.079 24.44 118.109 24.44C120.377 24.44 121.371 26.134 121.371 28.682H115.967C116.009 30.124 116.709 31.174 118.123 31.174C119.075 31.174 119.719 30.712 120.041 29.732H121.217ZM118.095 25.518C116.779 25.518 116.093 26.498 115.995 27.73H120.111C120.111 26.512 119.355 25.518 118.095 25.518ZM129.368 26.666H128.15C128.122 25.938 127.562 25.476 126.68 25.476C125.728 25.476 125.084 25.896 125.084 26.554C125.084 27.072 125.448 27.38 126.134 27.562L127.8 27.996C129.032 28.318 129.662 28.92 129.662 29.956C129.662 31.384 128.542 32.252 126.722 32.252C124.804 32.252 123.796 31.412 123.712 29.774H124.944C125.056 30.768 125.658 31.216 126.75 31.216C127.786 31.216 128.472 30.824 128.472 30.138C128.472 29.508 128.164 29.242 127.366 29.032L125.826 28.626C124.496 28.276 123.894 27.73 123.894 26.61C123.894 25.28 124.986 24.44 126.708 24.44C128.416 24.44 129.34 25.28 129.368 26.666Z" fill="rgb(var(--colour-main))"></path><line x1="180.502" y1="234" x2="153.187" y2="234" stroke="rgb(var(--colour-main-500))"></line><path d="M162.002 243L153.002 234L162.002 225" stroke="rgb(var(--colour-main-500))"></path><path d="M19.776 113V103.214H23.346C25.096 103.214 26.496 104.208 26.496 106.14C26.496 108.072 25.096 109.066 23.346 109.066H21.05V113H19.776ZM21.05 107.96H23.178C24.424 107.96 25.166 107.26 25.166 106.14C25.166 105.02 24.424 104.32 23.178 104.32H21.05V107.96ZM28.8923 113V105.664H29.9703V107.246C30.4603 106.196 31.3983 105.454 32.6023 105.454C34.2823 105.454 35.1503 106.378 35.2903 107.834H34.1283C33.9603 106.952 33.4843 106.476 32.4903 106.476C31.0203 106.476 30.0683 107.722 30.0683 109.444V113H28.8923ZM40.1365 105.44C42.3905 105.44 43.4545 107.12 43.4545 109.346C43.4545 111.572 42.3905 113.252 40.1365 113.252C37.8825 113.252 36.8185 111.572 36.8185 109.346C36.8185 107.12 37.8825 105.44 40.1365 105.44ZM40.1365 106.518C38.6525 106.518 38.0365 107.848 38.0365 109.346C38.0365 110.844 38.6525 112.174 40.1365 112.174C41.6205 112.174 42.2365 110.844 42.2365 109.346C42.2365 107.848 41.6205 106.518 40.1365 106.518ZM50.7368 102.794H51.8988V113H50.8628V111.964C50.2748 112.818 49.4908 113.252 48.5248 113.252C46.3548 113.252 45.3328 111.516 45.3328 109.262C45.3328 107.148 46.3968 105.44 48.4828 105.44C49.4768 105.44 50.2328 105.818 50.7368 106.574V102.794ZM48.6788 106.532C47.3068 106.532 46.5508 107.764 46.5508 109.346C46.5508 110.844 47.1948 112.16 48.6928 112.16C50.1628 112.16 50.7368 110.746 50.7368 109.388C50.7368 107.918 50.1488 106.532 48.6788 106.532ZM60.3711 105.664V113H59.3211V111.908C58.6491 112.874 57.9491 113.252 56.8711 113.252C56.2411 113.252 55.7091 113.112 55.2891 112.818C54.7851 112.454 54.5331 111.936 54.5331 111.25V105.664H55.6951V110.788C55.6951 111.278 55.8631 111.656 56.1851 111.908C56.4511 112.118 56.8011 112.23 57.2071 112.23C57.7531 112.23 58.2151 112.034 58.5931 111.628C58.9991 111.194 59.2091 110.564 59.2091 109.738V105.664H60.3711ZM69.2354 108.086H68.0594C67.9334 107.12 67.2894 106.518 66.2674 106.518C64.7554 106.518 64.1674 107.96 64.1674 109.416C64.1674 110.872 64.8254 112.174 66.2954 112.174C67.3174 112.174 67.9474 111.6 68.1434 110.438H69.3194C69.1654 112.202 68.0734 113.252 66.2674 113.252C64.1254 113.252 62.9494 111.572 62.9494 109.416C62.9494 107.218 64.0974 105.44 66.2814 105.44C68.0734 105.44 69.1934 106.532 69.2354 108.086ZM74.8097 105.664H77.6937V106.616H74.8097V110.704C74.8097 111.782 75.3837 112.146 76.4477 112.146C76.9237 112.146 77.3437 112.104 77.6937 112.006V113.028C77.2317 113.168 76.7697 113.196 76.3777 113.196C74.5997 113.196 73.6477 112.51 73.6477 110.914V106.616H71.5337V105.664H73.6477V103.648H74.8097V105.664Z" fill="rgb(var(--colour-main-500))"></path><rect x="180.502" y="126" width="180" height="216" stroke="rgb(var(--colour-main-500))"></rect><rect x="18.502" y="126" width="126" height="216" rx="16" stroke="rgb(var(--colour-main-500))"></rect><path d="M187.376 113L186.508 110.074H183.134L182.266 113H180.922L184.016 103.214H185.654L188.734 113H187.376ZM183.456 108.982H186.186L184.814 104.39L183.456 108.982ZM190.43 113V103.214H194C195.75 103.214 197.15 104.208 197.15 106.14C197.15 108.072 195.75 109.066 194 109.066H191.704V113H190.43ZM191.704 107.96H193.832C195.078 107.96 195.82 107.26 195.82 106.14C195.82 105.02 195.078 104.32 193.832 104.32H191.704V107.96ZM199.407 113V111.908H201.479V104.306H199.407V103.214H204.881V104.306H202.795V111.908H204.881V113H199.407Z" fill="rgb(var(--colour-main-500))"></path><path d="M196.936 141.664V152.052H195.774V148.076C195.228 148.916 194.514 149.252 193.506 149.252C191.532 149.252 190.37 147.74 190.37 145.43C190.37 143.204 191.448 141.44 193.562 141.44C194.528 141.44 195.354 141.86 195.9 142.63V141.664H196.936ZM193.73 142.532C192.344 142.532 191.588 143.764 191.588 145.346C191.588 146.844 192.26 148.16 193.73 148.16C195.2 148.16 195.774 146.746 195.774 145.388C195.774 143.932 195.186 142.532 193.73 142.532ZM205.408 141.664V149H204.358V147.908C203.686 148.874 202.986 149.252 201.908 149.252C201.278 149.252 200.746 149.112 200.326 148.818C199.822 148.454 199.57 147.936 199.57 147.25V141.664H200.732V146.788C200.732 147.278 200.9 147.656 201.222 147.908C201.488 148.118 201.838 148.23 202.244 148.23C202.79 148.23 203.252 148.034 203.63 147.628C204.036 147.194 204.246 146.564 204.246 145.738V141.664H205.408ZM214.329 146.732C214.077 148.272 212.915 149.252 211.193 149.252C208.981 149.252 207.861 147.642 207.861 145.402C207.861 142.952 209.191 141.44 211.221 141.44C213.489 141.44 214.483 143.134 214.483 145.682H209.079C209.121 147.124 209.821 148.174 211.235 148.174C212.187 148.174 212.831 147.712 213.153 146.732H214.329ZM211.207 142.518C209.891 142.518 209.205 143.498 209.107 144.73H213.223C213.223 143.512 212.467 142.518 211.207 142.518ZM217.201 149V141.664H218.279V143.246C218.769 142.196 219.707 141.454 220.911 141.454C222.591 141.454 223.459 142.378 223.599 143.834H222.437C222.269 142.952 221.793 142.476 220.799 142.476C219.329 142.476 218.377 143.722 218.377 145.444V149H217.201ZM228.501 150.54C228.123 151.548 227.409 152.052 226.499 152.052C226.149 152.052 225.841 152.01 225.547 151.912V150.82C225.855 150.89 226.107 150.904 226.345 150.904C226.877 150.904 227.171 150.708 227.381 150.19L227.829 149.112L225.113 141.664H226.345L228.487 147.614L230.601 141.664H231.805L228.501 150.54Z" fill="rgb(var(--colour-purple))"></path><path d="M225.337 221V210.794H226.499V214.644C227.031 213.846 227.787 213.44 228.767 213.44C230.923 213.44 231.903 215.134 231.903 217.262C231.903 219.516 230.797 221.252 228.711 221.252C227.703 221.252 226.933 220.832 226.387 219.992V221H225.337ZM228.557 214.532C227.073 214.532 226.499 215.974 226.499 217.388C226.499 218.774 227.073 220.16 228.557 220.16C230.027 220.16 230.699 218.816 230.699 217.388C230.699 215.862 230.013 214.532 228.557 214.532ZM240.739 220.23V221.112C240.445 221.196 240.221 221.238 240.039 221.238C239.227 221.238 238.821 220.888 238.737 220.132C237.911 220.944 237.183 221.252 236.245 221.252C234.817 221.252 233.851 220.454 233.851 219.096C233.851 217.584 234.999 217.038 235.853 216.898C236.105 216.856 236.651 216.772 237.477 216.66C238.415 216.534 238.723 216.352 238.723 215.876V215.624C238.723 214.896 238.149 214.532 237.043 214.532C235.965 214.532 235.433 214.938 235.335 215.834H234.159C234.187 214.14 235.363 213.454 237.099 213.454C238.905 213.454 239.857 214.154 239.857 215.456V219.684C239.857 220.062 240.067 220.258 240.487 220.258C240.557 220.258 240.669 220.244 240.739 220.23ZM238.723 218.452V217.29C238.233 217.514 237.435 217.64 236.819 217.71C235.727 217.836 235.041 218.144 235.041 219.068C235.041 219.796 235.601 220.23 236.539 220.23C237.561 220.23 238.723 219.474 238.723 218.452ZM246.734 210.794V220.048H248.988V221H243.066V220.048H245.6V211.746H243.066V210.794H246.734ZM258.048 220.23V221.112C257.754 221.196 257.53 221.238 257.348 221.238C256.536 221.238 256.13 220.888 256.046 220.132C255.22 220.944 254.492 221.252 253.554 221.252C252.126 221.252 251.16 220.454 251.16 219.096C251.16 217.584 252.308 217.038 253.162 216.898C253.414 216.856 253.96 216.772 254.786 216.66C255.724 216.534 256.032 216.352 256.032 215.876V215.624C256.032 214.896 255.458 214.532 254.352 214.532C253.274 214.532 252.742 214.938 252.644 215.834H251.468C251.496 214.14 252.672 213.454 254.408 213.454C256.214 213.454 257.166 214.154 257.166 215.456V219.684C257.166 220.062 257.376 220.258 257.796 220.258C257.866 220.258 257.978 220.244 258.048 220.23ZM256.032 218.452V217.29C255.542 217.514 254.744 217.64 254.128 217.71C253.036 217.836 252.35 218.144 252.35 219.068C252.35 219.796 252.91 220.23 253.848 220.23C254.87 220.23 256.032 219.474 256.032 218.452ZM260.15 221V213.664H261.228V214.882C261.802 213.986 262.502 213.454 263.664 213.454C264.938 213.454 265.988 214.098 265.988 215.456V221H264.826V215.918C264.826 214.938 264.126 214.476 263.314 214.476C261.998 214.476 261.312 215.61 261.312 216.87V221H260.15ZM274.853 216.086H273.677C273.551 215.12 272.907 214.518 271.885 214.518C270.373 214.518 269.785 215.96 269.785 217.416C269.785 218.872 270.443 220.174 271.913 220.174C272.935 220.174 273.565 219.6 273.761 218.438H274.937C274.783 220.202 273.691 221.252 271.885 221.252C269.743 221.252 268.567 219.572 268.567 217.416C268.567 215.218 269.715 213.44 271.899 213.44C273.691 213.44 274.811 214.532 274.853 216.086ZM283.563 218.732C283.311 220.272 282.149 221.252 280.427 221.252C278.215 221.252 277.095 219.642 277.095 217.402C277.095 214.952 278.425 213.44 280.455 213.44C282.723 213.44 283.717 215.134 283.717 217.682H278.313C278.355 219.124 279.055 220.174 280.469 220.174C281.421 220.174 282.065 219.712 282.387 218.732H283.563ZM280.441 214.518C279.125 214.518 278.439 215.498 278.341 216.73H282.457C282.457 215.512 281.701 214.518 280.441 214.518Z" fill="rgb(var(--colour-main))"></path><path d="M245.978 143.82H249.352V149H248.4L248.288 147.656C247.812 148.762 246.93 149.252 245.838 149.252C243.5 149.252 242.016 147.39 242.016 144.17C242.016 140.838 243.598 138.99 245.978 138.99C247.686 138.99 248.96 139.844 249.38 141.916H248.05C247.784 140.572 247 140.138 245.978 140.138C244.256 140.138 243.374 141.678 243.374 144.1C243.374 146.83 244.368 148.104 245.866 148.104C247.49 148.104 248.204 146.858 248.204 145.248V144.968H245.978V143.82ZM257.6 146.732C257.348 148.272 256.186 149.252 254.464 149.252C252.252 149.252 251.132 147.642 251.132 145.402C251.132 142.952 252.462 141.44 254.492 141.44C256.76 141.44 257.754 143.134 257.754 145.682H252.35C252.392 147.124 253.092 148.174 254.506 148.174C255.458 148.174 256.102 147.712 256.424 146.732H257.6ZM254.478 142.518C253.162 142.518 252.476 143.498 252.378 144.73H256.494C256.494 143.512 255.738 142.518 254.478 142.518ZM263.118 141.664H266.002V142.616H263.118V146.704C263.118 147.782 263.692 148.146 264.756 148.146C265.232 148.146 265.652 148.104 266.002 148.006V149.028C265.54 149.168 265.078 149.196 264.686 149.196C262.908 149.196 261.956 148.51 261.956 146.914V142.616H259.842V141.664H261.956V139.648H263.118V141.664ZM272.487 149H268.679V139.214H272.165C273.915 139.214 275.119 140.166 275.119 141.706C275.119 142.644 274.671 143.582 273.817 143.89C274.839 144.226 275.441 145.038 275.441 146.214C275.441 147.684 274.419 149 272.487 149ZM269.953 140.32V143.414H271.969C273.019 143.414 273.789 143.078 273.789 141.888C273.789 140.684 273.019 140.32 271.969 140.32H269.953ZM269.953 144.52V147.894H272.333C273.565 147.894 274.111 147.194 274.111 146.2C274.111 145.22 273.565 144.52 272.333 144.52H269.953ZM284.011 148.23V149.112C283.717 149.196 283.493 149.238 283.311 149.238C282.499 149.238 282.093 148.888 282.009 148.132C281.183 148.944 280.455 149.252 279.517 149.252C278.089 149.252 277.123 148.454 277.123 147.096C277.123 145.584 278.271 145.038 279.125 144.898C279.377 144.856 279.923 144.772 280.749 144.66C281.687 144.534 281.995 144.352 281.995 143.876V143.624C281.995 142.896 281.421 142.532 280.315 142.532C279.237 142.532 278.705 142.938 278.607 143.834H277.431C277.459 142.14 278.635 141.454 280.371 141.454C282.177 141.454 283.129 142.154 283.129 143.456V147.684C283.129 148.062 283.339 148.258 283.759 148.258C283.829 148.258 283.941 148.244 284.011 148.23ZM281.995 146.452V145.29C281.505 145.514 280.707 145.64 280.091 145.71C278.999 145.836 278.313 146.144 278.313 147.068C278.313 147.796 278.873 148.23 279.811 148.23C280.833 148.23 281.995 147.474 281.995 146.452ZM290.005 138.794V148.048H292.259V149H286.337V148.048H288.871V139.746H286.337V138.794H290.005ZM301.32 148.23V149.112C301.026 149.196 300.802 149.238 300.62 149.238C299.808 149.238 299.402 148.888 299.318 148.132C298.492 148.944 297.764 149.252 296.826 149.252C295.398 149.252 294.432 148.454 294.432 147.096C294.432 145.584 295.58 145.038 296.434 144.898C296.686 144.856 297.232 144.772 298.058 144.66C298.996 144.534 299.304 144.352 299.304 143.876V143.624C299.304 142.896 298.73 142.532 297.624 142.532C296.546 142.532 296.014 142.938 295.916 143.834H294.74C294.768 142.14 295.944 141.454 297.68 141.454C299.486 141.454 300.438 142.154 300.438 143.456V147.684C300.438 148.062 300.648 148.258 301.068 148.258C301.138 148.258 301.25 148.244 301.32 148.23ZM299.304 146.452V145.29C298.814 145.514 298.016 145.64 297.4 145.71C296.308 145.836 295.622 146.144 295.622 147.068C295.622 147.796 296.182 148.23 297.12 148.23C298.142 148.23 299.304 147.474 299.304 146.452ZM303.422 149V141.664H304.5V142.882C305.074 141.986 305.774 141.454 306.936 141.454C308.21 141.454 309.26 142.098 309.26 143.456V149H308.098V143.918C308.098 142.938 307.398 142.476 306.586 142.476C305.27 142.476 304.584 143.61 304.584 144.87V149H303.422ZM318.124 144.086H316.948C316.822 143.12 316.178 142.518 315.156 142.518C313.644 142.518 313.056 143.96 313.056 145.416C313.056 146.872 313.714 148.174 315.184 148.174C316.206 148.174 316.836 147.6 317.032 146.438H318.208C318.054 148.202 316.962 149.252 315.156 149.252C313.014 149.252 311.838 147.572 311.838 145.416C311.838 143.218 312.986 141.44 315.17 141.44C316.962 141.44 318.082 142.532 318.124 144.086ZM326.834 146.732C326.582 148.272 325.42 149.252 323.698 149.252C321.486 149.252 320.366 147.642 320.366 145.402C320.366 142.952 321.696 141.44 323.726 141.44C325.994 141.44 326.988 143.134 326.988 145.682H321.584C321.626 147.124 322.326 148.174 323.74 148.174C324.692 148.174 325.336 147.712 325.658 146.732H326.834ZM323.712 142.518C322.396 142.518 321.71 143.498 321.612 144.73H325.728C325.728 143.512 324.972 142.518 323.712 142.518ZM212.117 192.794V202.048H214.371V203H208.449V202.048H210.983V193.746H208.449V192.794H212.117ZM222.983 200.732C222.731 202.272 221.569 203.252 219.847 203.252C217.635 203.252 216.515 201.642 216.515 199.402C216.515 196.952 217.845 195.44 219.875 195.44C222.143 195.44 223.137 197.134 223.137 199.682H217.733C217.775 201.124 218.475 202.174 219.889 202.174C220.841 202.174 221.485 201.712 221.807 200.732H222.983ZM219.861 196.518C218.545 196.518 217.859 197.498 217.761 198.73H221.877C221.877 197.512 221.121 196.518 219.861 196.518ZM230.391 192.794H231.553V203H230.517V201.964C229.929 202.818 229.145 203.252 228.179 203.252C226.009 203.252 224.987 201.516 224.987 199.262C224.987 197.148 226.051 195.44 228.137 195.44C229.131 195.44 229.887 195.818 230.391 196.574V192.794ZM228.333 196.532C226.961 196.532 226.205 197.764 226.205 199.346C226.205 200.844 226.849 202.16 228.347 202.16C229.817 202.16 230.391 200.746 230.391 199.388C230.391 197.918 229.803 196.532 228.333 196.532ZM236.917 206.052C235.321 206.052 234.117 205.394 233.921 203.84H235.139C235.307 204.666 235.881 205.072 236.945 205.072C238.415 205.072 239.017 204.344 239.017 202.384V201.964C238.583 202.818 237.799 203.252 236.833 203.252C234.663 203.252 233.641 201.558 233.641 199.304C233.641 197.148 234.705 195.44 236.791 195.44C237.785 195.44 238.541 195.818 239.045 196.574V195.664H240.207V201.81C240.207 202.832 240.123 203.602 239.955 204.134C239.549 205.408 238.499 206.052 236.917 206.052ZM237.001 202.16C238.471 202.16 239.045 200.746 239.045 199.388C239.045 197.918 238.457 196.532 236.987 196.532C235.615 196.532 234.859 197.764 234.859 199.346C234.859 200.844 235.503 202.16 237.001 202.16ZM248.946 200.732C248.694 202.272 247.532 203.252 245.81 203.252C243.598 203.252 242.478 201.642 242.478 199.402C242.478 196.952 243.808 195.44 245.838 195.44C248.106 195.44 249.1 197.134 249.1 199.682H243.696C243.738 201.124 244.438 202.174 245.852 202.174C246.804 202.174 247.448 201.712 247.77 200.732H248.946ZM245.824 196.518C244.508 196.518 243.822 197.498 243.724 198.73H247.84C247.84 197.512 247.084 196.518 245.824 196.518ZM251.818 203V195.664H252.896V197.246C253.386 196.196 254.324 195.454 255.528 195.454C257.208 195.454 258.076 196.378 258.216 197.834H257.054C256.886 196.952 256.41 196.476 255.416 196.476C253.946 196.476 252.994 197.722 252.994 199.444V203H251.818ZM265.61 203L264.742 200.074H261.368L260.5 203H259.156L262.25 193.214H263.888L266.968 203H265.61ZM261.69 198.982H264.42L263.048 194.39L261.69 198.982ZM274.853 198.086H273.677C273.551 197.12 272.907 196.518 271.885 196.518C270.373 196.518 269.785 197.96 269.785 199.416C269.785 200.872 270.443 202.174 271.913 202.174C272.935 202.174 273.565 201.6 273.761 200.438H274.937C274.783 202.202 273.691 203.252 271.885 203.252C269.743 203.252 268.567 201.572 268.567 199.416C268.567 197.218 269.715 195.44 271.899 195.44C273.691 195.44 274.811 196.532 274.853 198.086ZM283.507 198.086H282.331C282.205 197.12 281.561 196.518 280.539 196.518C279.027 196.518 278.439 197.96 278.439 199.416C278.439 200.872 279.097 202.174 280.567 202.174C281.589 202.174 282.219 201.6 282.415 200.438H283.591C283.437 202.202 282.345 203.252 280.539 203.252C278.397 203.252 277.221 201.572 277.221 199.416C277.221 197.218 278.369 195.44 280.553 195.44C282.345 195.44 283.465 196.532 283.507 198.086ZM289.025 195.44C291.279 195.44 292.343 197.12 292.343 199.346C292.343 201.572 291.279 203.252 289.025 203.252C286.771 203.252 285.707 201.572 285.707 199.346C285.707 197.12 286.771 195.44 289.025 195.44ZM289.025 196.518C287.541 196.518 286.925 197.848 286.925 199.346C286.925 200.844 287.541 202.174 289.025 202.174C290.509 202.174 291.125 200.844 291.125 199.346C291.125 197.848 290.509 196.518 289.025 196.518ZM300.606 195.664V203H299.556V201.908C298.884 202.874 298.184 203.252 297.106 203.252C296.476 203.252 295.944 203.112 295.524 202.818C295.02 202.454 294.768 201.936 294.768 201.25V195.664H295.93V200.788C295.93 201.278 296.098 201.656 296.42 201.908C296.686 202.118 297.036 202.23 297.442 202.23C297.988 202.23 298.45 202.034 298.828 201.628C299.234 201.194 299.444 200.564 299.444 199.738V195.664H300.606ZM303.422 203V195.664H304.5V196.882C305.074 195.986 305.774 195.454 306.936 195.454C308.21 195.454 309.26 196.098 309.26 197.456V203H308.098V197.918C308.098 196.938 307.398 196.476 306.586 196.476C305.27 196.476 304.584 197.61 304.584 198.87V203H303.422ZM315.044 195.664H317.928V196.616H315.044V200.704C315.044 201.782 315.618 202.146 316.682 202.146C317.158 202.146 317.578 202.104 317.928 202.006V203.028C317.466 203.168 317.004 203.196 316.612 203.196C314.834 203.196 313.882 202.51 313.882 200.914V196.616H311.768V195.664H313.882V193.648H315.044V195.664Z" fill="rgb(var(--colour-royal))"></path><path d="M333.249 138.08H334.509C332.969 139.844 332.171 141.888 332.171 144.1C332.171 146.312 332.969 148.356 334.509 150.12H333.249C331.905 148.608 331.037 146.41 331.037 144.1C331.037 141.79 331.905 139.592 333.249 138.08ZM333.249 161.568H331.345V159.664H333.249V161.568ZM331.345 165.096H333.249V167H331.345V165.096ZM192.876 186.134H191.616C193.156 184.37 193.954 182.326 193.954 180.114C193.954 177.902 193.156 175.858 191.616 174.094H192.876C194.22 175.606 195.088 177.804 195.088 180.114C195.088 182.424 194.22 184.622 192.876 186.134ZM209.205 179.638C210.101 179.638 210.437 179.246 210.437 178.238V175.928C210.437 174.794 211.025 174.094 211.963 174.094H213.251V175.018H212.369C211.683 175.018 211.487 175.214 211.487 175.942V178.182C211.487 179.316 211.207 179.764 210.227 180.1C211.207 180.422 211.487 180.898 211.487 182.032V184.272C211.487 185 211.683 185.196 212.369 185.196H213.251V186.12H211.963C211.025 186.12 210.437 185.42 210.437 184.286V181.976C210.437 180.968 210.101 180.562 209.205 180.562H208.813V179.638H209.205ZM324.594 192.08H325.854C324.314 193.844 323.516 195.888 323.516 198.1C323.516 200.312 324.314 202.356 325.854 204.12H324.594C323.25 202.608 322.382 200.41 322.382 198.1C322.382 195.79 323.25 193.592 324.594 192.08ZM331.345 204.134H330.085C331.625 202.37 332.423 200.326 332.423 198.114C332.423 195.902 331.625 193.858 330.085 192.094H331.345C332.689 193.606 333.557 195.804 333.557 198.114C333.557 200.424 332.689 202.622 331.345 204.134ZM339.019 197.638C339.915 197.638 340.251 197.246 340.251 196.238V193.928C340.251 192.794 340.839 192.094 341.777 192.094H343.065V193.018H342.183C341.497 193.018 341.301 193.214 341.301 193.942V196.182C341.301 197.316 341.021 197.764 340.041 198.1C341.021 198.422 341.301 198.898 341.301 200.032V202.272C341.301 203 341.497 203.196 342.183 203.196H343.065V204.12H341.777C340.839 204.12 340.251 203.42 340.251 202.286V199.976C340.251 198.968 339.915 198.562 339.019 198.562H338.627V197.638H339.019ZM213.069 234.576C212.173 234.576 211.837 234.968 211.837 235.976V238.286C211.837 239.42 211.249 240.12 210.311 240.12H209.023V239.196H209.905C210.591 239.196 210.787 239 210.787 238.272V236.032C210.787 234.898 211.067 234.45 212.047 234.114C211.067 233.792 210.787 233.316 210.787 232.182V229.942C210.787 229.214 210.591 229.018 209.905 229.018H209.023V228.094H210.311C211.249 228.094 211.837 228.794 211.837 229.928V232.238C211.837 233.246 212.173 233.652 213.069 233.652H213.461V234.576H213.069ZM195.76 252.576C194.864 252.576 194.528 252.968 194.528 253.976V256.286C194.528 257.42 193.94 258.12 193.002 258.12H191.714V257.196H192.596C193.282 257.196 193.478 257 193.478 256.272V254.032C193.478 252.898 193.758 252.45 194.738 252.114C193.758 251.792 193.478 251.316 193.478 250.182V247.942C193.478 247.214 193.282 247.018 192.596 247.018H191.714V246.094H193.002C193.94 246.094 194.528 246.794 194.528 247.928V250.238C194.528 251.246 194.864 251.652 195.76 251.652H196.152V252.576H195.76Z" fill="rgb(var(--colour-main-500))"></path><path d="M210.731 168.358V167.084C208.953 166.916 207.861 165.656 207.819 164.004H208.883C208.925 165.138 209.541 165.964 210.731 166.118V162.492L210.101 162.324C208.827 161.988 208.015 161.036 208.015 159.804C208.015 158.348 209.023 157.298 210.731 157.158V155.884H211.529V157.158C213.125 157.298 214.091 158.306 214.161 159.86H213.097C213.041 158.964 212.523 158.278 211.529 158.124V161.582L212.439 161.834C213.713 162.184 214.455 163.094 214.455 164.27C214.455 165.866 213.307 166.944 211.529 167.084V168.358H210.731ZM210.297 161.246L210.731 161.372V158.11C209.765 158.222 209.093 158.754 209.093 159.692C209.093 160.434 209.513 161.036 210.297 161.246ZM212.075 162.856L211.529 162.702V166.132C212.705 166.02 213.377 165.376 213.377 164.424C213.377 163.64 212.985 163.094 212.075 162.856ZM220.771 156.794V166.048H223.025V167H217.103V166.048H219.637V157.746H217.103V156.794H220.771ZM231.637 164.732C231.385 166.272 230.223 167.252 228.501 167.252C226.289 167.252 225.169 165.642 225.169 163.402C225.169 160.952 226.499 159.44 228.529 159.44C230.797 159.44 231.791 161.134 231.791 163.682H226.387C226.429 165.124 227.129 166.174 228.543 166.174C229.495 166.174 230.139 165.712 230.461 164.732H231.637ZM228.515 160.518C227.199 160.518 226.513 161.498 226.415 162.73H230.531C230.531 161.512 229.775 160.518 228.515 160.518ZM239.045 156.794H240.207V167H239.171V165.964C238.583 166.818 237.799 167.252 236.833 167.252C234.663 167.252 233.641 165.516 233.641 163.262C233.641 161.148 234.705 159.44 236.791 159.44C237.785 159.44 238.541 159.818 239.045 160.574V156.794ZM236.987 160.532C235.615 160.532 234.859 161.764 234.859 163.346C234.859 164.844 235.503 166.16 237.001 166.16C238.471 166.16 239.045 164.746 239.045 163.388C239.045 161.918 238.457 160.532 236.987 160.532ZM245.572 170.052C243.976 170.052 242.772 169.394 242.576 167.84H243.794C243.962 168.666 244.536 169.072 245.6 169.072C247.07 169.072 247.672 168.344 247.672 166.384V165.964C247.238 166.818 246.454 167.252 245.488 167.252C243.318 167.252 242.296 165.558 242.296 163.304C242.296 161.148 243.36 159.44 245.446 159.44C246.44 159.44 247.196 159.818 247.7 160.574V159.664H248.862V165.81C248.862 166.832 248.778 167.602 248.61 168.134C248.204 169.408 247.154 170.052 245.572 170.052ZM245.656 166.16C247.126 166.16 247.7 164.746 247.7 163.388C247.7 161.918 247.112 160.532 245.642 160.532C244.27 160.532 243.514 161.764 243.514 163.346C243.514 164.844 244.158 166.16 245.656 166.16ZM257.6 164.732C257.348 166.272 256.186 167.252 254.464 167.252C252.252 167.252 251.132 165.642 251.132 163.402C251.132 160.952 252.462 159.44 254.492 159.44C256.76 159.44 257.754 161.134 257.754 163.682H252.35C252.392 165.124 253.092 166.174 254.506 166.174C255.458 166.174 256.102 165.712 256.424 164.732H257.6ZM254.478 160.518C253.162 160.518 252.476 161.498 252.378 162.73H256.494C256.494 161.512 255.738 160.518 254.478 160.518ZM260.472 167V159.664H261.55V161.246C262.04 160.196 262.978 159.454 264.182 159.454C265.862 159.454 266.73 160.378 266.87 161.834H265.708C265.54 160.952 265.064 160.476 264.07 160.476C262.6 160.476 261.648 161.722 261.648 163.444V167H260.472ZM274.265 167L273.397 164.074H270.023L269.155 167H267.811L270.905 157.214H272.543L275.623 167H274.265ZM270.345 162.982H273.075L271.703 158.39L270.345 162.982ZM283.507 162.086H282.331C282.205 161.12 281.561 160.518 280.539 160.518C279.027 160.518 278.439 161.96 278.439 163.416C278.439 164.872 279.097 166.174 280.567 166.174C281.589 166.174 282.219 165.6 282.415 164.438H283.591C283.437 166.202 282.345 167.252 280.539 167.252C278.397 167.252 277.221 165.572 277.221 163.416C277.221 161.218 278.369 159.44 280.553 159.44C282.345 159.44 283.465 160.532 283.507 162.086ZM292.161 162.086H290.985C290.859 161.12 290.215 160.518 289.193 160.518C287.681 160.518 287.093 161.96 287.093 163.416C287.093 164.872 287.751 166.174 289.221 166.174C290.243 166.174 290.873 165.6 291.069 164.438H292.245C292.091 166.202 290.999 167.252 289.193 167.252C287.051 167.252 285.875 165.572 285.875 163.416C285.875 161.218 287.023 159.44 289.207 159.44C290.999 159.44 292.119 160.532 292.161 162.086ZM297.68 159.44C299.934 159.44 300.998 161.12 300.998 163.346C300.998 165.572 299.934 167.252 297.68 167.252C295.426 167.252 294.362 165.572 294.362 163.346C294.362 161.12 295.426 159.44 297.68 159.44ZM297.68 160.518C296.196 160.518 295.58 161.848 295.58 163.346C295.58 164.844 296.196 166.174 297.68 166.174C299.164 166.174 299.78 164.844 299.78 163.346C299.78 161.848 299.164 160.518 297.68 160.518ZM309.26 159.664V167H308.21V165.908C307.538 166.874 306.838 167.252 305.76 167.252C305.13 167.252 304.598 167.112 304.178 166.818C303.674 166.454 303.422 165.936 303.422 165.25V159.664H304.584V164.788C304.584 165.278 304.752 165.656 305.074 165.908C305.34 166.118 305.69 166.23 306.096 166.23C306.642 166.23 307.104 166.034 307.482 165.628C307.888 165.194 308.098 164.564 308.098 163.738V159.664H309.26ZM312.076 167V159.664H313.154V160.882C313.728 159.986 314.428 159.454 315.59 159.454C316.864 159.454 317.914 160.098 317.914 161.456V167H316.752V161.918C316.752 160.938 316.052 160.476 315.24 160.476C313.924 160.476 313.238 161.61 313.238 162.87V167H312.076ZM323.698 159.664H326.582V160.616H323.698V164.704C323.698 165.782 324.272 166.146 325.336 166.146C325.812 166.146 326.232 166.104 326.582 166.006V167.028C326.12 167.168 325.658 167.196 325.266 167.196C323.488 167.196 322.536 166.51 322.536 164.914V160.616H320.422V159.664H322.536V157.648H323.698V159.664Z" fill="rgb(var(--colour-forest))"></path><path d="M59.2811 239V231.902H56.6631V230.978C58.9731 230.88 59.1691 230.74 59.5891 229.102H60.5131V239H59.2811ZM68.0194 228.99C70.5674 228.99 71.2674 231.51 71.2674 234.114C71.2674 236.718 70.5674 239.252 68.0194 239.252C65.4714 239.252 64.7714 236.718 64.7714 234.114C64.7714 231.51 65.4714 228.99 68.0194 228.99ZM68.0194 230.054C66.5774 230.054 65.9194 231.65 65.9194 234.114C65.9194 235.304 66.0734 236.298 66.3954 236.998L69.1534 230.516C68.8594 230.208 68.4814 230.054 68.0194 230.054ZM70.1194 234.114C70.1194 233.036 69.9934 232.126 69.7274 231.44L67.0254 237.852C67.2914 238.076 67.6274 238.188 68.0194 238.188C69.4614 238.188 70.1194 236.578 70.1194 234.114ZM87.428 235.934V229.214H88.73V236.116C88.73 238.384 87.162 239.252 85.314 239.252C83.41 239.252 81.926 238.342 81.926 236.116V229.214H83.228V235.934C83.228 237.642 84.194 238.104 85.314 238.104C86.448 238.104 87.428 237.614 87.428 235.934ZM97.3843 232.042H96.1243C96.0823 230.922 95.4243 230.096 94.0663 230.096C92.7223 230.096 92.0083 230.768 92.0083 231.65C92.0083 232.462 92.4283 232.924 93.3383 233.134L95.3403 233.596C96.8663 233.946 97.6643 234.954 97.6643 236.214C97.6643 238.16 96.2503 239.252 94.1923 239.252C91.7563 239.252 90.4543 237.964 90.4263 235.878H91.6863C91.7003 237.18 92.5683 238.09 94.2203 238.09C95.6903 238.09 96.3483 237.39 96.3483 236.396C96.3483 235.528 95.8723 235.038 94.9063 234.814L92.8763 234.338C91.4623 234.002 90.6923 233.12 90.6923 231.776C90.6923 230.138 92.0083 228.99 94.1083 228.99C96.1523 228.99 97.3843 230.236 97.3843 231.86V232.042ZM102.539 239H99.3745V229.214H102.539C105.017 229.214 106.263 231.258 106.263 234.1C106.263 236.956 105.017 239 102.539 239ZM100.677 230.362V237.852H102.315C104.149 237.852 104.905 236.438 104.905 234.114C104.905 231.776 104.149 230.362 102.315 230.362H100.677Z" fill="rgb(var(--colour-main))"></path></svg></div></div><section id="read-balances-latest" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">a. </span>Latest</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#read-balances-latest">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ledgerAccount</code> query to look up a Ledger Account&#x27;s balance.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetBalances query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetBalance(
  $ledgerAccount: LedgerAccountMatchInput!
) {
  ledgerAccount(ledgerAccount: $ledgerAccount) {
    balance
  }
}</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetBalances variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerAccount&quot;: {
    &quot;path&quot;: &quot;assets/bank/user-cash&quot;,
    &quot;ledger&quot;: {
      &quot;ik&quot;: &quot;quickstart-ledger&quot;
    }
  }
}</code></pre></div></div></div></div></div></section><section id="read-balances-aggregated" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">b. </span>Aggregated</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#read-balances-aggregated">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Ledger Accounts have three balances:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ownBalance</code> is the sum of all Ledger Lines posted to the Ledger Account, excluding Ledger Lines in child Ledger Accounts</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">childBalance</code> is the sum of all Ledger Lines posted to the children of this Ledger Account</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">balance</code> is the sum of all Ledger Lines posted to this Ledger Account and its children</li>
</ul><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetAggregatedBalances query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetAggregatedBalances(
  $ledgerAccount: LedgerAccountMatchInput!
) {
  ledgerAccount(ledgerAccount: $ledgerAccount) {
    childBalance
    balance
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetAggregatedBalances variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerAccount&quot;: {
    &quot;path&quot;: &quot;liabilities/users&quot;
  }
}</code></pre></div></div></div></div></div></section><section id="read-balances-consistent" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">c. </span>Consistent</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#read-balances-consistent">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Balance reads are eventually consistent by default. This means that the balance may not reflect all the Ledger Lines in the account.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To read a strongly consistent balance, a Ledger Account must have its balances updated in a strongly consistent manner. This is set in the Schema on a Ledger Account&#x27;s <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">consistencyConfig</code>:</p><div class="pt-f2"><div class="relative flex min-w-f0"><div class="flex group-one bg-negative flex-col min-w-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div data-test-role="title" class="px-[1.25em] py-f2 flex flex-row flex-auto truncate hover:cursor-pointer group-two" role="button" tabindex="0"><div class="flex-initial"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Strongly consistent Ledger Accounts </span></div><div class="pl-f2 group-two-hover:text-main group-one-hover:block transition-colors"><div class="hidden laptop:block"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-s20 no-underline leading-none text-inherit bg-inherit border-none">↓</span></div><div class="laptop:hidden"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-fnormal no-underline leading-none text-inherit bg-inherit border-none">↓</span></div></div></div><div class="py-f2 px-[1.25em] hover:cursor-pointer hidden group-one-hover:block"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 hover:text-main bg-inherit border-none">Show</span></div></div><div class="max-h-f20 flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;key&quot;: &quot;strongly-consistent-ledger-accounts&quot;,
  &quot;name&quot;: &quot;Strongly consistent Ledger Accounts&quot;,
  &quot;chartOfAccounts&quot;: {
    &quot;defaultCurrency&quot;: { &quot;code&quot;: &quot;USD&quot; },
    &quot;accounts&quot;: [
      {
        &quot;key&quot;: &quot;liabilities&quot;,
        &quot;type&quot;: &quot;liability&quot;,
        &quot;children&quot;: [
          {
            &quot;key&quot;: &quot;users&quot;,
            &quot;template&quot;: true,
            &quot;consistencyConfig&quot;: {
              &quot;ownBalanceUpdates&quot;: &quot;strong&quot;
            },
            &quot;children&quot;: [
              {
                &quot;key&quot;: &quot;available&quot;,
                &quot;consistencyConfig&quot;: {
                  &quot;ownBalanceUpdates&quot;: &quot;strong&quot;
                }
              },
              {
                &quot;key&quot;: &quot;pending&quot;
              },
              {
                &quot;key&quot;: &quot;blocked&quot;
              }
            ]
          }
        ]
      }
    ]
  }
}</code></pre></div></div><div class="absolute w-full left-f0 bottom-f0 min-h-f20 bg-gradient-to-b from-transparent to-negative"> <!-- --> </div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Once a Ledger Account&#x27;s balance is updated consistently, set the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">consistencyMode</code> on balance queries to determine the consistency of the read you issue.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Strongly consistent ownBalance read</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetStronglyConsistentBalance(
    $ledgerAccount: LedgerAccountMatchInput!
) {
  ledgerAccount(ledgerAccount: $ledgerAccount) {
    ownBalance(consistencyMode: strong)
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">consistencyMode</code> can be set to:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">strong</code> to perform a strongly consistent balance read</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">eventual</code> to perform an eventually consistent balance read</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">use_account</code> to use the value of <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">consistencyConfig.ownBalanceUpdates</code> when performing a balance read</li>
</ul><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Strongly consistent ownBalance read variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerAccount&quot;: {
    &quot;path&quot;: &quot;liabilities/users:user-1/available&quot;,
    &quot;ledger&quot;: {
      &quot;ik&quot;: &quot;quickstart-ledger&quot;
    }
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Only <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ownBalance</code> can be queried with <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">consistencyMode: strong</code>.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Read the <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#configure-consistency">Configure consistency</a> section to learn more about <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>&#x27;s consistency semantics and Ledger Account consistency modes.</p></div></div></section><section id="read-balances-historical" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">d. </span>Historical</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#read-balances-historical">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To query the balance of a Ledger Account at a particular point in time use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">at</code> argument:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Balance queries</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetHistoricalBalances(
  $ledgerAccount: LedgerAccountMatchInput!
) {
  ledgerAccount(ledgerAccount: $ledgerAccount) {
    end_of_year: balance(at: &quot;1969&quot;)
    end_of_month: balance(at: &quot;1969-07&quot;)
    end_of_day: balance(at: &quot;1969-07-21&quot;)
    end_of_hour: balance(at: &quot;1969-07-21T02&quot;)
  }
}
</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">If you don&#x27;t specify <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">at</code>, you&#x27;ll get the <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#read-balances-latest">latest balance</a>. <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">at</code> is supported for all balances and works granularly to the hour.</p></div></div></section><section id="read-balances-balance-changes" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">e. </span>Balance changes</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#read-balances-balance-changes">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can also query the net change on a Ledger Account over a specific reporting period. This can be useful for <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#generate-reports">generating financial statements</a>.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Similar to balances, there are three types of balance changes:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ownBalanceChange</code>, how much <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ownBalance</code> changed</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">childBalanceChange</code>, how much <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">childBalance</code> changed</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">balanceChange</code>, how much <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">balance</code> changed</li>
</ul><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Balance change queries require you to specify a <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-period"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">period</code></a>. This can be a year, quarter, month, day or hour.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Balance change queries</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetBalanceChanges(
  $ledgerAccount: LedgerAccountMatchInput!
) {
  ledgerAccount(ledgerAccount: $ledgerAccount) {
    ownBalanceChange(period: &quot;1969&quot;)
    childBalanceChange(period: &quot;1969&quot;)
    balanceChange(period: &quot;1969&quot;)
    currentYear: balanceChange(period: &quot;1969&quot;)
    lastYear: balanceChange(period: &quot;1968&quot;)
    lastYearQ4: balanceChange(period: &quot;1968-Q4&quot;)
    lastYearDecember: balanceChange(period: &quot;1968-12&quot;)
    lastYearChristmas: balanceChange(period: &quot;1968-12-25&quot;)
    lastYearLastHour: balanceChange(period: &quot;1968-12-31T23&quot;)
  }
}
</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can also perform multiple balance queries using aliases.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Balance change query variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerAccount&quot;: {
    &quot;path&quot;: &quot;liabilities/users:user-1/available&quot;,
    &quot;ledger&quot;: {
      &quot;ik&quot;: &quot;quickstart-ledger&quot;
    }
  }
}</code></pre></div></div></div></div></div></section><section id="read-balances-multi-currency-mode" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">f. </span>Multi-currency mode</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#read-balances-multi-currency-mode">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">For Ledger Accounts in <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">currencyMode: multi</code>, use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">currency</code> argument to query the balance in a specific currency.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Multi-currency balance queries</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetMultiCurrencyBalances(
  $ledgerAccount: LedgerAccountMatchInput!
) {
  ledgerAccount(ledgerAccount: $ledgerAccount) {
    latestUSDBalance: balance(currency: { code: USD })
    latestGBPBalance: balance(currency: { code: GBP })

    USDBalanceChange:
      balanceChange(period: &quot;1969&quot;, currency: { code: USD })
    GBPBalanceChange:
      balanceChange(period: &quot;1969&quot;, currency: { code: GBP })
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Multi-currency balance query variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerAccount&quot;: {
    &quot;path&quot;: &quot;liabilities/users:user-1/available&quot;,
    &quot;ledger&quot;: {
      &quot;ik&quot;: &quot;quickstart-ledger&quot;
    }
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can also query balances in all of a multi-currency Ledger Account&#x27;s currencies, see <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#handle-currencies">Handle currencies</a>.</p></div></div></section><section id="read-balances-timezone-offsets" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">g. </span>Timezone offsets</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#read-balances-timezone-offsets">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Balance queries respect the Ledger&#x27;s <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">balanceUTCOffset</code> when specifying periods and times. This field is specified when creating the Ledger.</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">If a Ledger has an offset of <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">-08:00</code>, then querying <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">balance(at: &quot;1969-01-31&quot;)</code> returns the balance at midnight PT on that date, or 8am on 1969-02-01 UTC.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Querying <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">balanceChange(period: &quot;1969&quot;)</code> returns the net change between 8am on 1969-01-01 UTC and 8am on 1969-01-01 UTC. This gives you the net change between midnights local time.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Daylight savings is ignored, so every day throughout the year has exactly 24 hours.</li>
</ul></div></div></section></div></section>
<section id="query-data" class="first:0 pt-f6 tablet:pt-f3 pb-[2em] scroll-mt-[90px]"><span class="TopicContainer-title group-one text-s20 tablet:text-fnormal laptop:text-s20 block mb-[1em] "><span class="text-main-500">I<!-- --> </span>Query data<span class="pl-[0.5em] phone:invisible phone:group-one-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data">#</a></span></span><div class="TopicContainer-content py-[2em] first-of-type:pt-0 ml-0 phone:ml-[1.8em] tablet:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can flexibly query your data to generate financial reports, embed <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> in your product and build internal dashboards.</p><div class="pt-f2"><div class="hidden tablet:block"><svg width="100%" height="100%" viewBox="0 0 621 450" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="621" height="450" fill="rgb(var(--colour-negative))"></rect><line x1="306" y1="234" x2="260.251" y2="234" stroke="rgb(var(--colour-main-500))"></line><path d="M269.251 243L260.251 234L269.251 225" stroke="rgb(var(--colour-main-500))"></path><path d="M25.126 33.232L24.062 31.846C23.572 32.112 22.984 32.252 22.326 32.252C19.918 32.252 18.518 30.376 18.518 27.128C18.518 23.88 19.918 21.99 22.326 21.99C24.734 21.99 26.134 23.88 26.134 27.128C26.134 28.934 25.7 30.32 24.888 31.202L25.966 32.602L25.126 33.232ZM22.326 23.138C20.786 23.138 19.876 24.622 19.876 27.128C19.876 29.62 20.786 31.104 22.326 31.104C22.69 31.104 23.026 31.02 23.32 30.852L22.102 29.256L22.928 28.626L24.076 30.124C24.524 29.438 24.776 28.416 24.776 27.128C24.776 24.622 23.866 23.138 22.326 23.138ZM33.9063 24.664V32H32.8563V30.908C32.1843 31.874 31.4843 32.252 30.4063 32.252C29.7763 32.252 29.2443 32.112 28.8243 31.818C28.3203 31.454 28.0683 30.936 28.0683 30.25V24.664H29.2303V29.788C29.2303 30.278 29.3983 30.656 29.7203 30.908C29.9863 31.118 30.3363 31.23 30.7423 31.23C31.2883 31.23 31.7503 31.034 32.1283 30.628C32.5343 30.194 32.7443 29.564 32.7443 28.738V24.664H33.9063ZM42.8266 29.732C42.5746 31.272 41.4126 32.252 39.6906 32.252C37.4786 32.252 36.3586 30.642 36.3586 28.402C36.3586 25.952 37.6886 24.44 39.7186 24.44C41.9866 24.44 42.9806 26.134 42.9806 28.682H37.5766C37.6186 30.124 38.3186 31.174 39.7326 31.174C40.6846 31.174 41.3286 30.712 41.6506 29.732H42.8266ZM39.7046 25.518C38.3886 25.518 37.7026 26.498 37.6046 27.73H41.7206C41.7206 26.512 40.9646 25.518 39.7046 25.518ZM45.6989 32V24.664H46.7769V26.246C47.2669 25.196 48.2049 24.454 49.4089 24.454C51.0889 24.454 51.9569 25.378 52.0969 26.834H50.9349C50.7669 25.952 50.2909 25.476 49.2969 25.476C47.8269 25.476 46.8749 26.722 46.8749 28.444V32H45.6989ZM56.9992 33.54C56.6212 34.548 55.9072 35.052 54.9972 35.052C54.6472 35.052 54.3392 35.01 54.0452 34.912V33.82C54.3532 33.89 54.6052 33.904 54.8432 33.904C55.3752 33.904 55.6692 33.708 55.8792 33.19L56.3272 32.112L53.6112 24.664H54.8432L56.9852 30.614L59.0992 24.664H60.3032L56.9992 33.54ZM74.1538 32H70.9898V22.214H74.1538C76.6318 22.214 77.8778 24.258 77.8778 27.1C77.8778 29.956 76.6318 32 74.1538 32ZM72.2918 23.362V30.852H73.9298C75.7638 30.852 76.5198 29.438 76.5198 27.114C76.5198 24.776 75.7638 23.362 73.9298 23.362H72.2918ZM86.5461 31.23V32.112C86.2521 32.196 86.0281 32.238 85.8461 32.238C85.0341 32.238 84.6281 31.888 84.5441 31.132C83.7181 31.944 82.9901 32.252 82.0521 32.252C80.6241 32.252 79.6581 31.454 79.6581 30.096C79.6581 28.584 80.8061 28.038 81.6601 27.898C81.9121 27.856 82.4581 27.772 83.2841 27.66C84.2221 27.534 84.5301 27.352 84.5301 26.876V26.624C84.5301 25.896 83.9561 25.532 82.8501 25.532C81.7721 25.532 81.2401 25.938 81.1421 26.834H79.9661C79.9941 25.14 81.1701 24.454 82.9061 24.454C84.7121 24.454 85.6641 25.154 85.6641 26.456V30.684C85.6641 31.062 85.8741 31.258 86.2941 31.258C86.3641 31.258 86.4761 31.244 86.5461 31.23ZM84.5301 29.452V28.29C84.0401 28.514 83.2421 28.64 82.6261 28.71C81.5341 28.836 80.8481 29.144 80.8481 30.068C80.8481 30.796 81.4081 31.23 82.3461 31.23C83.3681 31.23 84.5301 30.474 84.5301 29.452ZM91.6164 24.664H94.5004V25.616H91.6164V29.704C91.6164 30.782 92.1904 31.146 93.2544 31.146C93.7304 31.146 94.1504 31.104 94.5004 31.006V32.028C94.0384 32.168 93.5764 32.196 93.1844 32.196C91.4064 32.196 90.4544 31.51 90.4544 29.914V25.616H88.3404V24.664H90.4544V22.648H91.6164V24.664ZM103.855 31.23V32.112C103.561 32.196 103.337 32.238 103.155 32.238C102.343 32.238 101.937 31.888 101.853 31.132C101.027 31.944 100.299 32.252 99.3607 32.252C97.9327 32.252 96.9667 31.454 96.9667 30.096C96.9667 28.584 98.1147 28.038 98.9687 27.898C99.2207 27.856 99.7667 27.772 100.593 27.66C101.531 27.534 101.839 27.352 101.839 26.876V26.624C101.839 25.896 101.265 25.532 100.159 25.532C99.0807 25.532 98.5487 25.938 98.4507 26.834H97.2747C97.3027 25.14 98.4787 24.454 100.215 24.454C102.021 24.454 102.973 25.154 102.973 26.456V30.684C102.973 31.062 103.183 31.258 103.603 31.258C103.673 31.258 103.785 31.244 103.855 31.23ZM101.839 29.452V28.29C101.349 28.514 100.551 28.64 99.9347 28.71C98.8427 28.836 98.1567 29.144 98.1567 30.068C98.1567 30.796 98.7167 31.23 99.6547 31.23C100.677 31.23 101.839 30.474 101.839 29.452Z" fill="rgb(var(--colour-main))"></path><path d="M127.274 113V103.214H130.844C132.594 103.214 133.994 104.208 133.994 106.14C133.994 108.072 132.594 109.066 130.844 109.066H128.548V113H127.274ZM128.548 107.96H130.676C131.922 107.96 132.664 107.26 132.664 106.14C132.664 105.02 131.922 104.32 130.676 104.32H128.548V107.96ZM136.39 113V105.664H137.468V107.246C137.958 106.196 138.896 105.454 140.1 105.454C141.78 105.454 142.648 106.378 142.788 107.834H141.626C141.458 106.952 140.982 106.476 139.988 106.476C138.518 106.476 137.566 107.722 137.566 109.444V113H136.39ZM147.635 105.44C149.889 105.44 150.953 107.12 150.953 109.346C150.953 111.572 149.889 113.252 147.635 113.252C145.381 113.252 144.317 111.572 144.317 109.346C144.317 107.12 145.381 105.44 147.635 105.44ZM147.635 106.518C146.151 106.518 145.535 107.848 145.535 109.346C145.535 110.844 146.151 112.174 147.635 112.174C149.119 112.174 149.735 110.844 149.735 109.346C149.735 107.848 149.119 106.518 147.635 106.518ZM158.235 102.794H159.397V113H158.361V111.964C157.773 112.818 156.989 113.252 156.023 113.252C153.853 113.252 152.831 111.516 152.831 109.262C152.831 107.148 153.895 105.44 155.981 105.44C156.975 105.44 157.731 105.818 158.235 106.574V102.794ZM156.177 106.532C154.805 106.532 154.049 107.764 154.049 109.346C154.049 110.844 154.693 112.16 156.191 112.16C157.661 112.16 158.235 110.746 158.235 109.388C158.235 107.918 157.647 106.532 156.177 106.532ZM167.869 105.664V113H166.819V111.908C166.147 112.874 165.447 113.252 164.369 113.252C163.739 113.252 163.207 113.112 162.787 112.818C162.283 112.454 162.031 111.936 162.031 111.25V105.664H163.193V110.788C163.193 111.278 163.361 111.656 163.683 111.908C163.949 112.118 164.299 112.23 164.705 112.23C165.251 112.23 165.713 112.034 166.091 111.628C166.497 111.194 166.707 110.564 166.707 109.738V105.664H167.869ZM176.733 108.086H175.557C175.431 107.12 174.787 106.518 173.765 106.518C172.253 106.518 171.665 107.96 171.665 109.416C171.665 110.872 172.323 112.174 173.793 112.174C174.815 112.174 175.445 111.6 175.641 110.438H176.817C176.663 112.202 175.571 113.252 173.765 113.252C171.623 113.252 170.447 111.572 170.447 109.416C170.447 107.218 171.595 105.44 173.779 105.44C175.571 105.44 176.691 106.532 176.733 108.086ZM182.308 105.664H185.192V106.616H182.308V110.704C182.308 111.782 182.882 112.146 183.946 112.146C184.422 112.146 184.842 112.104 185.192 112.006V113.028C184.73 113.168 184.268 113.196 183.876 113.196C182.098 113.196 181.146 112.51 181.146 110.914V106.616H179.032V105.664H181.146V103.648H182.308V105.664Z" fill="rgb(var(--colour-main-500))"></path><path d="M312.874 113L312.006 110.074H308.632L307.764 113H306.42L309.514 103.214H311.152L314.232 113H312.874ZM308.954 108.982H311.684L310.312 104.39L308.954 108.982ZM315.928 113V103.214H319.498C321.248 103.214 322.648 104.208 322.648 106.14C322.648 108.072 321.248 109.066 319.498 109.066H317.202V113H315.928ZM317.202 107.96H319.33C320.576 107.96 321.318 107.26 321.318 106.14C321.318 105.02 320.576 104.32 319.33 104.32H317.202V107.96ZM324.905 113V111.908H326.977V104.306H324.905V103.214H330.379V104.306H328.293V111.908H330.379V113H324.905Z" fill="rgb(var(--colour-main-500))"></path><rect x="306" y="126" width="207" height="216" stroke="rgb(var(--colour-main-500))"></rect><path d="M163.773 211.214H165.075V219.852H169.737V221H163.773V211.214ZM174.443 212.614V211.214H175.843V212.614H174.443ZM175.717 213.664V220.048H177.971V221H172.049V220.048H174.569V214.616H172.049V213.664H175.717ZM180.76 221V213.664H181.838V214.882C182.412 213.986 183.112 213.454 184.274 213.454C185.548 213.454 186.598 214.098 186.598 215.456V221H185.436V215.918C185.436 214.938 184.736 214.476 183.924 214.476C182.608 214.476 181.922 215.61 181.922 216.87V221H180.76ZM195.518 218.732C195.266 220.272 194.104 221.252 192.382 221.252C190.17 221.252 189.05 219.642 189.05 217.402C189.05 214.952 190.38 213.44 192.41 213.44C194.678 213.44 195.672 215.134 195.672 217.682H190.268C190.31 219.124 191.01 220.174 192.424 220.174C193.376 220.174 194.02 219.712 194.342 218.732H195.518ZM192.396 214.518C191.08 214.518 190.394 215.498 190.296 216.73H194.412C194.412 215.512 193.656 214.518 192.396 214.518ZM209.551 221V213.902H206.933V212.978C209.243 212.88 209.439 212.74 209.859 211.102H210.783V221H209.551ZM163.773 229.214H165.075V237.852H169.737V239H163.773V229.214ZM174.443 230.614V229.214H175.843V230.614H174.443ZM175.717 231.664V238.048H177.971V239H172.049V238.048H174.569V232.616H172.049V231.664H175.717ZM180.76 239V231.664H181.838V232.882C182.412 231.986 183.112 231.454 184.274 231.454C185.548 231.454 186.598 232.098 186.598 233.456V239H185.436V233.918C185.436 232.938 184.736 232.476 183.924 232.476C182.608 232.476 181.922 233.61 181.922 234.87V239H180.76ZM195.518 236.732C195.266 238.272 194.104 239.252 192.382 239.252C190.17 239.252 189.05 237.642 189.05 235.402C189.05 232.952 190.38 231.44 192.41 231.44C194.678 231.44 195.672 233.134 195.672 235.682H190.268C190.31 237.124 191.01 238.174 192.424 238.174C193.376 238.174 194.02 237.712 194.342 236.732H195.518ZM192.396 232.518C191.08 232.518 190.394 233.498 190.296 234.73H194.412C194.412 233.512 193.656 232.518 192.396 232.518ZM212.911 237.922V239H206.303C206.457 236.704 207.073 235.738 209.089 234.632L210.391 233.918C211.273 233.428 211.721 232.798 211.721 231.944C211.721 230.838 211.133 230.068 209.887 230.068C208.445 230.068 207.857 231.048 207.759 232.49H206.527C206.597 230.25 207.717 228.99 209.929 228.99C211.931 228.99 212.981 230.306 212.981 231.944C212.981 233.204 212.295 234.184 210.895 234.926L209.495 235.668C208.319 236.298 207.773 236.998 207.689 237.922H212.911ZM163.773 247.214H165.075V255.852H169.737V257H163.773V247.214ZM174.443 248.614V247.214H175.843V248.614H174.443ZM175.717 249.664V256.048H177.971V257H172.049V256.048H174.569V250.616H172.049V249.664H175.717ZM180.76 257V249.664H181.838V250.882C182.412 249.986 183.112 249.454 184.274 249.454C185.548 249.454 186.598 250.098 186.598 251.456V257H185.436V251.918C185.436 250.938 184.736 250.476 183.924 250.476C182.608 250.476 181.922 251.61 181.922 252.87V257H180.76ZM195.518 254.732C195.266 256.272 194.104 257.252 192.382 257.252C190.17 257.252 189.05 255.642 189.05 253.402C189.05 250.952 190.38 249.44 192.41 249.44C194.678 249.44 195.672 251.134 195.672 253.682H190.268C190.31 255.124 191.01 256.174 192.424 256.174C193.376 256.174 194.02 255.712 194.342 254.732H195.518ZM192.396 250.518C191.08 250.518 190.394 251.498 190.296 252.73H194.412C194.412 251.512 193.656 250.518 192.396 250.518ZM209.649 252.366H208.963V251.316C210.391 251.386 211.413 251.148 211.413 249.734C211.413 248.628 210.671 248.068 209.649 248.068C208.389 248.068 207.759 248.698 207.717 250.168H206.485C206.513 248.082 207.661 246.99 209.649 246.99C211.427 246.99 212.659 247.886 212.659 249.692C212.659 250.63 212.225 251.414 211.259 251.778C212.421 252.184 212.953 252.954 212.953 254.2C212.953 256.104 211.581 257.252 209.607 257.252C207.521 257.252 206.387 256.202 206.275 254.088H207.521C207.591 255.446 208.235 256.174 209.649 256.174C211.077 256.174 211.707 255.278 211.707 254.214C211.707 252.996 210.993 252.366 209.649 252.366Z" fill="rgb(var(--colour-main))"></path><path d="M326.434 141.664V152.052H325.272V148.076C324.726 148.916 324.012 149.252 323.004 149.252C321.03 149.252 319.868 147.74 319.868 145.43C319.868 143.204 320.946 141.44 323.06 141.44C324.026 141.44 324.852 141.86 325.398 142.63V141.664H326.434ZM323.228 142.532C321.842 142.532 321.086 143.764 321.086 145.346C321.086 146.844 321.758 148.16 323.228 148.16C324.698 148.16 325.272 146.746 325.272 145.388C325.272 143.932 324.684 142.532 323.228 142.532ZM334.906 141.664V149H333.856V147.908C333.184 148.874 332.484 149.252 331.406 149.252C330.776 149.252 330.244 149.112 329.824 148.818C329.32 148.454 329.068 147.936 329.068 147.25V141.664H330.23V146.788C330.23 147.278 330.398 147.656 330.72 147.908C330.986 148.118 331.336 148.23 331.742 148.23C332.288 148.23 332.75 148.034 333.128 147.628C333.534 147.194 333.744 146.564 333.744 145.738V141.664H334.906ZM343.827 146.732C343.575 148.272 342.413 149.252 340.691 149.252C338.479 149.252 337.359 147.642 337.359 145.402C337.359 142.952 338.689 141.44 340.719 141.44C342.987 141.44 343.981 143.134 343.981 145.682H338.577C338.619 147.124 339.319 148.174 340.733 148.174C341.685 148.174 342.329 147.712 342.651 146.732H343.827ZM340.705 142.518C339.389 142.518 338.703 143.498 338.605 144.73H342.721C342.721 143.512 341.965 142.518 340.705 142.518ZM346.699 149V141.664H347.777V143.246C348.267 142.196 349.205 141.454 350.409 141.454C352.089 141.454 352.957 142.378 353.097 143.834H351.935C351.767 142.952 351.291 142.476 350.297 142.476C348.827 142.476 347.875 143.722 347.875 145.444V149H346.699ZM357.999 150.54C357.621 151.548 356.907 152.052 355.997 152.052C355.647 152.052 355.339 152.01 355.045 151.912V150.82C355.353 150.89 355.605 150.904 355.843 150.904C356.375 150.904 356.669 150.708 356.879 150.19L357.327 149.112L354.611 141.664H355.843L357.985 147.614L360.099 141.664H361.303L357.999 150.54Z" fill="rgb(var(--colour-purple))"></path><path d="M358.923 210.794V220.048H361.177V221H355.255V220.048H357.789V211.746H355.255V210.794H358.923ZM366.023 212.614V211.214H367.423V212.614H366.023ZM367.297 213.664V220.048H369.551V221H363.629V220.048H366.149V214.616H363.629V213.664H367.297ZM372.34 221V213.664H373.418V214.882C373.992 213.986 374.692 213.454 375.854 213.454C377.128 213.454 378.178 214.098 378.178 215.456V221H377.016V215.918C377.016 214.938 376.316 214.476 375.504 214.476C374.188 214.476 373.502 215.61 373.502 216.87V221H372.34ZM387.098 218.732C386.846 220.272 385.684 221.252 383.962 221.252C381.75 221.252 380.63 219.642 380.63 217.402C380.63 214.952 381.96 213.44 383.99 213.44C386.258 213.44 387.252 215.134 387.252 217.682H381.848C381.89 219.124 382.59 220.174 384.004 220.174C384.956 220.174 385.6 219.712 385.922 218.732H387.098ZM383.976 214.518C382.66 214.518 381.974 215.498 381.876 216.73H385.992C385.992 215.512 385.236 214.518 383.976 214.518ZM395.248 215.666H394.03C394.002 214.938 393.442 214.476 392.56 214.476C391.608 214.476 390.964 214.896 390.964 215.554C390.964 216.072 391.328 216.38 392.014 216.562L393.68 216.996C394.912 217.318 395.542 217.92 395.542 218.956C395.542 220.384 394.422 221.252 392.602 221.252C390.684 221.252 389.676 220.412 389.592 218.774H390.824C390.936 219.768 391.538 220.216 392.63 220.216C393.666 220.216 394.352 219.824 394.352 219.138C394.352 218.508 394.044 218.242 393.246 218.032L391.706 217.626C390.376 217.276 389.774 216.73 389.774 215.61C389.774 214.28 390.866 213.44 392.588 213.44C394.296 213.44 395.22 214.28 395.248 215.666Z" fill="rgb(var(--colour-main))"></path><path d="M372.662 139.214H373.964V147.852H378.626V149H372.662V139.214ZM383.332 140.614V139.214H384.732V140.614H383.332ZM384.606 141.664V148.048H386.86V149H380.938V148.048H383.458V142.616H380.938V141.664H384.606ZM395.248 143.666H394.03C394.002 142.938 393.442 142.476 392.56 142.476C391.608 142.476 390.964 142.896 390.964 143.554C390.964 144.072 391.328 144.38 392.014 144.562L393.68 144.996C394.912 145.318 395.542 145.92 395.542 146.956C395.542 148.384 394.422 149.252 392.602 149.252C390.684 149.252 389.676 148.412 389.592 146.774H390.824C390.936 147.768 391.538 148.216 392.63 148.216C393.666 148.216 394.352 147.824 394.352 147.138C394.352 146.508 394.044 146.242 393.246 146.032L391.706 145.626C390.376 145.276 389.774 144.73 389.774 143.61C389.774 142.28 390.866 141.44 392.588 141.44C394.296 141.44 395.22 142.28 395.248 143.666ZM401.271 141.664H404.155V142.616H401.271V146.704C401.271 147.782 401.845 148.146 402.909 148.146C403.385 148.146 403.805 148.104 404.155 148.006V149.028C403.693 149.168 403.231 149.196 402.839 149.196C401.061 149.196 400.109 148.51 400.109 146.914V142.616H397.995V141.664H400.109V139.648H401.271V141.664ZM407.279 139.214H408.581V147.852H413.243V149H407.279V139.214ZM417.949 140.614V139.214H419.349V140.614H417.949ZM419.223 141.664V148.048H421.477V149H415.555V148.048H418.075V142.616H415.555V141.664H419.223ZM424.266 149V141.664H425.344V142.882C425.918 141.986 426.618 141.454 427.78 141.454C429.054 141.454 430.104 142.098 430.104 143.456V149H428.942V143.918C428.942 142.938 428.242 142.476 427.43 142.476C426.114 142.476 425.428 143.61 425.428 144.87V149H424.266ZM439.024 146.732C438.772 148.272 437.61 149.252 435.888 149.252C433.676 149.252 432.556 147.642 432.556 145.402C432.556 142.952 433.886 141.44 435.916 141.44C438.184 141.44 439.178 143.134 439.178 145.682H433.774C433.816 147.124 434.516 148.174 435.93 148.174C436.882 148.174 437.526 147.712 437.848 146.732H439.024ZM435.902 142.518C434.586 142.518 433.9 143.498 433.802 144.73H437.918C437.918 143.512 437.162 142.518 435.902 142.518ZM447.174 143.666H445.956C445.928 142.938 445.368 142.476 444.486 142.476C443.534 142.476 442.89 142.896 442.89 143.554C442.89 144.072 443.254 144.38 443.94 144.562L445.606 144.996C446.838 145.318 447.468 145.92 447.468 146.956C447.468 148.384 446.348 149.252 444.528 149.252C442.61 149.252 441.602 148.412 441.518 146.774H442.75C442.862 147.768 443.464 148.216 444.556 148.216C445.592 148.216 446.278 147.824 446.278 147.138C446.278 146.508 445.97 146.242 445.172 146.032L443.632 145.626C442.302 145.276 441.7 144.73 441.7 143.61C441.7 142.28 442.792 141.44 444.514 141.44C446.222 141.44 447.146 142.28 447.174 143.666ZM341.615 192.794V202.048H343.869V203H337.947V202.048H340.481V193.746H337.947V192.794H341.615ZM352.481 200.732C352.229 202.272 351.067 203.252 349.345 203.252C347.133 203.252 346.013 201.642 346.013 199.402C346.013 196.952 347.343 195.44 349.373 195.44C351.641 195.44 352.635 197.134 352.635 199.682H347.231C347.273 201.124 347.973 202.174 349.387 202.174C350.339 202.174 350.983 201.712 351.305 200.732H352.481ZM349.359 196.518C348.043 196.518 347.357 197.498 347.259 198.73H351.375C351.375 197.512 350.619 196.518 349.359 196.518ZM359.889 192.794H361.051V203H360.015V201.964C359.427 202.818 358.643 203.252 357.677 203.252C355.507 203.252 354.485 201.516 354.485 199.262C354.485 197.148 355.549 195.44 357.635 195.44C358.629 195.44 359.385 195.818 359.889 196.574V192.794ZM357.831 196.532C356.459 196.532 355.703 197.764 355.703 199.346C355.703 200.844 356.347 202.16 357.845 202.16C359.315 202.16 359.889 200.746 359.889 199.388C359.889 197.918 359.301 196.532 357.831 196.532ZM366.415 206.052C364.819 206.052 363.615 205.394 363.419 203.84H364.637C364.805 204.666 365.379 205.072 366.443 205.072C367.913 205.072 368.515 204.344 368.515 202.384V201.964C368.081 202.818 367.297 203.252 366.331 203.252C364.161 203.252 363.139 201.558 363.139 199.304C363.139 197.148 364.203 195.44 366.289 195.44C367.283 195.44 368.039 195.818 368.543 196.574V195.664H369.705V201.81C369.705 202.832 369.621 203.602 369.453 204.134C369.047 205.408 367.997 206.052 366.415 206.052ZM366.499 202.16C367.969 202.16 368.543 200.746 368.543 199.388C368.543 197.918 367.955 196.532 366.485 196.532C365.113 196.532 364.357 197.764 364.357 199.346C364.357 200.844 365.001 202.16 366.499 202.16ZM378.444 200.732C378.192 202.272 377.03 203.252 375.308 203.252C373.096 203.252 371.976 201.642 371.976 199.402C371.976 196.952 373.306 195.44 375.336 195.44C377.604 195.44 378.598 197.134 378.598 199.682H373.194C373.236 201.124 373.936 202.174 375.35 202.174C376.302 202.174 376.946 201.712 377.268 200.732H378.444ZM375.322 196.518C374.006 196.518 373.32 197.498 373.222 198.73H377.338C377.338 197.512 376.582 196.518 375.322 196.518ZM381.316 203V195.664H382.394V197.246C382.884 196.196 383.822 195.454 385.026 195.454C386.706 195.454 387.574 196.378 387.714 197.834H386.552C386.384 196.952 385.908 196.476 384.914 196.476C383.444 196.476 382.492 197.722 382.492 199.444V203H381.316ZM395.108 203L394.24 200.074H390.866L389.998 203H388.654L391.748 193.214H393.386L396.466 203H395.108ZM391.188 198.982H393.918L392.546 194.39L391.188 198.982ZM404.351 198.086H403.175C403.049 197.12 402.405 196.518 401.383 196.518C399.871 196.518 399.283 197.96 399.283 199.416C399.283 200.872 399.941 202.174 401.411 202.174C402.433 202.174 403.063 201.6 403.259 200.438H404.435C404.281 202.202 403.189 203.252 401.383 203.252C399.241 203.252 398.065 201.572 398.065 199.416C398.065 197.218 399.213 195.44 401.397 195.44C403.189 195.44 404.309 196.532 404.351 198.086ZM413.005 198.086H411.829C411.703 197.12 411.059 196.518 410.037 196.518C408.525 196.518 407.937 197.96 407.937 199.416C407.937 200.872 408.595 202.174 410.065 202.174C411.087 202.174 411.717 201.6 411.913 200.438H413.089C412.935 202.202 411.843 203.252 410.037 203.252C407.895 203.252 406.719 201.572 406.719 199.416C406.719 197.218 407.867 195.44 410.051 195.44C411.843 195.44 412.963 196.532 413.005 198.086ZM418.523 195.44C420.777 195.44 421.841 197.12 421.841 199.346C421.841 201.572 420.777 203.252 418.523 203.252C416.269 203.252 415.205 201.572 415.205 199.346C415.205 197.12 416.269 195.44 418.523 195.44ZM418.523 196.518C417.039 196.518 416.423 197.848 416.423 199.346C416.423 200.844 417.039 202.174 418.523 202.174C420.007 202.174 420.623 200.844 420.623 199.346C420.623 197.848 420.007 196.518 418.523 196.518ZM430.104 195.664V203H429.054V201.908C428.382 202.874 427.682 203.252 426.604 203.252C425.974 203.252 425.442 203.112 425.022 202.818C424.518 202.454 424.266 201.936 424.266 201.25V195.664H425.428V200.788C425.428 201.278 425.596 201.656 425.918 201.908C426.184 202.118 426.534 202.23 426.94 202.23C427.486 202.23 427.948 202.034 428.326 201.628C428.732 201.194 428.942 200.564 428.942 199.738V195.664H430.104ZM432.92 203V195.664H433.998V196.882C434.572 195.986 435.272 195.454 436.434 195.454C437.708 195.454 438.758 196.098 438.758 197.456V203H437.596V197.918C437.596 196.938 436.896 196.476 436.084 196.476C434.768 196.476 434.082 197.61 434.082 198.87V203H432.92ZM444.542 195.664H447.426V196.616H444.542V200.704C444.542 201.782 445.116 202.146 446.18 202.146C446.656 202.146 447.076 202.104 447.426 202.006V203.028C446.964 203.168 446.502 203.196 446.11 203.196C444.332 203.196 443.38 202.51 443.38 200.914V196.616H441.266V195.664H443.38V193.648H444.542V195.664Z" fill="rgb(var(--colour-royal))"></path><path d="M454.092 138.08H455.352C453.812 139.844 453.014 141.888 453.014 144.1C453.014 146.312 453.812 148.356 455.352 150.12H454.092C452.748 148.608 451.88 146.41 451.88 144.1C451.88 141.79 452.748 139.592 454.092 138.08ZM462.747 161.568H460.843V159.664H462.747V161.568ZM460.843 165.096H462.747V167H460.843V165.096ZM322.374 186.134H321.114C322.654 184.37 323.452 182.326 323.452 180.114C323.452 177.902 322.654 175.858 321.114 174.094H322.374C323.718 175.606 324.586 177.804 324.586 180.114C324.586 182.424 323.718 184.622 322.374 186.134ZM338.703 179.638C339.599 179.638 339.935 179.246 339.935 178.238V175.928C339.935 174.794 340.523 174.094 341.461 174.094H342.749V175.018H341.867C341.181 175.018 340.985 175.214 340.985 175.942V178.182C340.985 179.316 340.705 179.764 339.725 180.1C340.705 180.422 340.985 180.898 340.985 182.032V184.272C340.985 185 341.181 185.196 341.867 185.196H342.749V186.12H341.461C340.523 186.12 339.935 185.42 339.935 184.286V181.976C339.935 180.968 339.599 180.562 338.703 180.562H338.311V179.638H338.703ZM454.092 192.08H455.352C453.812 193.844 453.014 195.888 453.014 198.1C453.014 200.312 453.812 202.356 455.352 204.12H454.092C452.748 202.608 451.88 200.41 451.88 198.1C451.88 195.79 452.748 193.592 454.092 192.08ZM460.843 204.134H459.583C461.123 202.37 461.921 200.326 461.921 198.114C461.921 195.902 461.123 193.858 459.583 192.094H460.843C462.187 193.606 463.055 195.804 463.055 198.114C463.055 200.424 462.187 202.622 460.843 204.134ZM477.171 197.638C478.067 197.638 478.403 197.246 478.403 196.238V193.928C478.403 192.794 478.991 192.094 479.929 192.094H481.217V193.018H480.335C479.649 193.018 479.453 193.214 479.453 193.942V196.182C479.453 197.316 479.173 197.764 478.193 198.1C479.173 198.422 479.453 198.898 479.453 200.032V202.272C479.453 203 479.649 203.196 480.335 203.196H481.217V204.12H479.929C478.991 204.12 478.403 203.42 478.403 202.286V199.976C478.403 198.968 478.067 198.562 477.171 198.562H476.779V197.638H477.171ZM399.283 215.638C400.179 215.638 400.515 215.246 400.515 214.238V211.928C400.515 210.794 401.103 210.094 402.041 210.094H403.329V211.018H402.447C401.761 211.018 401.565 211.214 401.565 211.942V214.182C401.565 215.316 401.285 215.764 400.305 216.1C401.285 216.422 401.565 216.898 401.565 218.032V220.272C401.565 221 401.761 221.196 402.447 221.196H403.329V222.12H402.041C401.103 222.12 400.515 221.42 400.515 220.286V217.976C400.515 216.968 400.179 216.562 399.283 216.562H398.891V215.638H399.283ZM411.162 219.096H413.066V221H411.162V219.096ZM417.574 219.096H419.478V221H417.574V219.096ZM423.986 219.096H425.89V221H423.986V219.096ZM437.764 216.576C436.868 216.576 436.532 216.968 436.532 217.976V220.286C436.532 221.42 435.944 222.12 435.006 222.12H433.718V221.196H434.6C435.286 221.196 435.482 221 435.482 220.272V218.032C435.482 216.898 435.762 216.45 436.742 216.114C435.762 215.792 435.482 215.316 435.482 214.182V211.942C435.482 211.214 435.286 211.018 434.6 211.018H433.718V210.094H435.006C435.944 210.094 436.532 210.794 436.532 211.928V214.238C436.532 215.246 436.868 215.652 437.764 215.652H438.156V216.576H437.764ZM342.567 234.576C341.671 234.576 341.335 234.968 341.335 235.976V238.286C341.335 239.42 340.747 240.12 339.809 240.12H338.521V239.196H339.403C340.089 239.196 340.285 239 340.285 238.272V236.032C340.285 234.898 340.565 234.45 341.545 234.114C340.565 233.792 340.285 233.316 340.285 232.182V229.942C340.285 229.214 340.089 229.018 339.403 229.018H338.521V228.094H339.809C340.747 228.094 341.335 228.794 341.335 229.928V232.238C341.335 233.246 341.671 233.652 342.567 233.652H342.959V234.576H342.567ZM325.258 252.576C324.362 252.576 324.026 252.968 324.026 253.976V256.286C324.026 257.42 323.438 258.12 322.5 258.12H321.212V257.196H322.094C322.78 257.196 322.976 257 322.976 256.272V254.032C322.976 252.898 323.256 252.45 324.236 252.114C323.256 251.792 322.976 251.316 322.976 250.182V247.942C322.976 247.214 322.78 247.018 322.094 247.018H321.212V246.094H322.5C323.438 246.094 324.026 246.794 324.026 247.928V250.238C324.026 251.246 324.362 251.652 325.258 251.652H325.65V252.576H325.258Z" fill="rgb(var(--colour-main-500))"></path><path d="M340.229 168.358V167.084C338.451 166.916 337.359 165.656 337.317 164.004H338.381C338.423 165.138 339.039 165.964 340.229 166.118V162.492L339.599 162.324C338.325 161.988 337.513 161.036 337.513 159.804C337.513 158.348 338.521 157.298 340.229 157.158V155.884H341.027V157.158C342.623 157.298 343.589 158.306 343.659 159.86H342.595C342.539 158.964 342.021 158.278 341.027 158.124V161.582L341.937 161.834C343.211 162.184 343.953 163.094 343.953 164.27C343.953 165.866 342.805 166.944 341.027 167.084V168.358H340.229ZM339.795 161.246L340.229 161.372V158.11C339.263 158.222 338.591 158.754 338.591 159.692C338.591 160.434 339.011 161.036 339.795 161.246ZM341.573 162.856L341.027 162.702V166.132C342.203 166.02 342.875 165.376 342.875 164.424C342.875 163.64 342.483 163.094 341.573 162.856ZM350.269 156.794V166.048H352.523V167H346.601V166.048H349.135V157.746H346.601V156.794H350.269ZM361.135 164.732C360.883 166.272 359.721 167.252 357.999 167.252C355.787 167.252 354.667 165.642 354.667 163.402C354.667 160.952 355.997 159.44 358.027 159.44C360.295 159.44 361.289 161.134 361.289 163.682H355.885C355.927 165.124 356.627 166.174 358.041 166.174C358.993 166.174 359.637 165.712 359.959 164.732H361.135ZM358.013 160.518C356.697 160.518 356.011 161.498 355.913 162.73H360.029C360.029 161.512 359.273 160.518 358.013 160.518ZM368.543 156.794H369.705V167H368.669V165.964C368.081 166.818 367.297 167.252 366.331 167.252C364.161 167.252 363.139 165.516 363.139 163.262C363.139 161.148 364.203 159.44 366.289 159.44C367.283 159.44 368.039 159.818 368.543 160.574V156.794ZM366.485 160.532C365.113 160.532 364.357 161.764 364.357 163.346C364.357 164.844 365.001 166.16 366.499 166.16C367.969 166.16 368.543 164.746 368.543 163.388C368.543 161.918 367.955 160.532 366.485 160.532ZM375.07 170.052C373.474 170.052 372.27 169.394 372.074 167.84H373.292C373.46 168.666 374.034 169.072 375.098 169.072C376.568 169.072 377.17 168.344 377.17 166.384V165.964C376.736 166.818 375.952 167.252 374.986 167.252C372.816 167.252 371.794 165.558 371.794 163.304C371.794 161.148 372.858 159.44 374.944 159.44C375.938 159.44 376.694 159.818 377.198 160.574V159.664H378.36V165.81C378.36 166.832 378.276 167.602 378.108 168.134C377.702 169.408 376.652 170.052 375.07 170.052ZM375.154 166.16C376.624 166.16 377.198 164.746 377.198 163.388C377.198 161.918 376.61 160.532 375.14 160.532C373.768 160.532 373.012 161.764 373.012 163.346C373.012 164.844 373.656 166.16 375.154 166.16ZM387.098 164.732C386.846 166.272 385.684 167.252 383.962 167.252C381.75 167.252 380.63 165.642 380.63 163.402C380.63 160.952 381.96 159.44 383.99 159.44C386.258 159.44 387.252 161.134 387.252 163.682H381.848C381.89 165.124 382.59 166.174 384.004 166.174C384.956 166.174 385.6 165.712 385.922 164.732H387.098ZM383.976 160.518C382.66 160.518 381.974 161.498 381.876 162.73H385.992C385.992 161.512 385.236 160.518 383.976 160.518ZM389.97 167V159.664H391.048V161.246C391.538 160.196 392.476 159.454 393.68 159.454C395.36 159.454 396.228 160.378 396.368 161.834H395.206C395.038 160.952 394.562 160.476 393.568 160.476C392.098 160.476 391.146 161.722 391.146 163.444V167H389.97ZM403.763 167L402.895 164.074H399.521L398.653 167H397.309L400.403 157.214H402.041L405.121 167H403.763ZM399.843 162.982H402.573L401.201 158.39L399.843 162.982ZM413.005 162.086H411.829C411.703 161.12 411.059 160.518 410.037 160.518C408.525 160.518 407.937 161.96 407.937 163.416C407.937 164.872 408.595 166.174 410.065 166.174C411.087 166.174 411.717 165.6 411.913 164.438H413.089C412.935 166.202 411.843 167.252 410.037 167.252C407.895 167.252 406.719 165.572 406.719 163.416C406.719 161.218 407.867 159.44 410.051 159.44C411.843 159.44 412.963 160.532 413.005 162.086ZM421.659 162.086H420.483C420.357 161.12 419.713 160.518 418.691 160.518C417.179 160.518 416.591 161.96 416.591 163.416C416.591 164.872 417.249 166.174 418.719 166.174C419.741 166.174 420.371 165.6 420.567 164.438H421.743C421.589 166.202 420.497 167.252 418.691 167.252C416.549 167.252 415.373 165.572 415.373 163.416C415.373 161.218 416.521 159.44 418.705 159.44C420.497 159.44 421.617 160.532 421.659 162.086ZM427.178 159.44C429.432 159.44 430.496 161.12 430.496 163.346C430.496 165.572 429.432 167.252 427.178 167.252C424.924 167.252 423.86 165.572 423.86 163.346C423.86 161.12 424.924 159.44 427.178 159.44ZM427.178 160.518C425.694 160.518 425.078 161.848 425.078 163.346C425.078 164.844 425.694 166.174 427.178 166.174C428.662 166.174 429.278 164.844 429.278 163.346C429.278 161.848 428.662 160.518 427.178 160.518ZM438.758 159.664V167H437.708V165.908C437.036 166.874 436.336 167.252 435.258 167.252C434.628 167.252 434.096 167.112 433.676 166.818C433.172 166.454 432.92 165.936 432.92 165.25V159.664H434.082V164.788C434.082 165.278 434.25 165.656 434.572 165.908C434.838 166.118 435.188 166.23 435.594 166.23C436.14 166.23 436.602 166.034 436.98 165.628C437.386 165.194 437.596 164.564 437.596 163.738V159.664H438.758ZM441.574 167V159.664H442.652V160.882C443.226 159.986 443.926 159.454 445.088 159.454C446.362 159.454 447.412 160.098 447.412 161.456V167H446.25V161.918C446.25 160.938 445.55 160.476 444.738 160.476C443.422 160.476 442.736 161.61 442.736 162.87V167H441.574ZM453.196 159.664H456.08V160.616H453.196V164.704C453.196 165.782 453.77 166.146 454.834 166.146C455.31 166.146 455.73 166.104 456.08 166.006V167.028C455.618 167.168 455.156 167.196 454.764 167.196C452.986 167.196 452.034 166.51 452.034 164.914V160.616H449.92V159.664H452.034V157.648H453.196V159.664Z" fill="rgb(var(--colour-forest))"></path><rect x="126" y="125.75" width="126" height="216" rx="16" stroke="rgb(var(--colour-main-500))"></rect></svg></div><div class="block tablet:hidden"><svg width="100%" height="100%" viewBox="0 0 379 414" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="378" height="414" transform="translate(0.501953)" fill="rgb(var(--colour-negative))"></rect><path d="M25.628 33.232L24.564 31.846C24.074 32.112 23.486 32.252 22.828 32.252C20.42 32.252 19.02 30.376 19.02 27.128C19.02 23.88 20.42 21.99 22.828 21.99C25.236 21.99 26.636 23.88 26.636 27.128C26.636 28.934 26.202 30.32 25.39 31.202L26.468 32.602L25.628 33.232ZM22.828 23.138C21.288 23.138 20.378 24.622 20.378 27.128C20.378 29.62 21.288 31.104 22.828 31.104C23.192 31.104 23.528 31.02 23.822 30.852L22.604 29.256L23.43 28.626L24.578 30.124C25.026 29.438 25.278 28.416 25.278 27.128C25.278 24.622 24.368 23.138 22.828 23.138ZM34.4083 24.664V32H33.3583V30.908C32.6863 31.874 31.9863 32.252 30.9083 32.252C30.2783 32.252 29.7463 32.112 29.3263 31.818C28.8223 31.454 28.5703 30.936 28.5703 30.25V24.664H29.7323V29.788C29.7323 30.278 29.9003 30.656 30.2223 30.908C30.4883 31.118 30.8383 31.23 31.2443 31.23C31.7903 31.23 32.2523 31.034 32.6303 30.628C33.0363 30.194 33.2463 29.564 33.2463 28.738V24.664H34.4083ZM43.3285 29.732C43.0765 31.272 41.9145 32.252 40.1925 32.252C37.9805 32.252 36.8605 30.642 36.8605 28.402C36.8605 25.952 38.1905 24.44 40.2205 24.44C42.4885 24.44 43.4825 26.134 43.4825 28.682H38.0785C38.1205 30.124 38.8205 31.174 40.2345 31.174C41.1865 31.174 41.8305 30.712 42.1525 29.732H43.3285ZM40.2065 25.518C38.8905 25.518 38.2045 26.498 38.1065 27.73H42.2225C42.2225 26.512 41.4665 25.518 40.2065 25.518ZM46.2008 32V24.664H47.2788V26.246C47.7688 25.196 48.7068 24.454 49.9108 24.454C51.5908 24.454 52.4588 25.378 52.5988 26.834H51.4368C51.2688 25.952 50.7928 25.476 49.7988 25.476C48.3288 25.476 47.3768 26.722 47.3768 28.444V32H46.2008ZM57.5011 33.54C57.1231 34.548 56.4091 35.052 55.4991 35.052C55.1491 35.052 54.8411 35.01 54.5471 34.912V33.82C54.8551 33.89 55.1071 33.904 55.3451 33.904C55.8771 33.904 56.1711 33.708 56.3811 33.19L56.8291 32.112L54.1131 24.664H55.3451L57.4871 30.614L59.6011 24.664H60.8051L57.5011 33.54ZM74.6557 32H71.4917V22.214H74.6557C77.1337 22.214 78.3797 24.258 78.3797 27.1C78.3797 29.956 77.1337 32 74.6557 32ZM72.7937 23.362V30.852H74.4317C76.2657 30.852 77.0217 29.438 77.0217 27.114C77.0217 24.776 76.2657 23.362 74.4317 23.362H72.7937ZM87.048 31.23V32.112C86.754 32.196 86.53 32.238 86.348 32.238C85.536 32.238 85.13 31.888 85.046 31.132C84.22 31.944 83.492 32.252 82.554 32.252C81.126 32.252 80.16 31.454 80.16 30.096C80.16 28.584 81.308 28.038 82.162 27.898C82.414 27.856 82.96 27.772 83.786 27.66C84.724 27.534 85.032 27.352 85.032 26.876V26.624C85.032 25.896 84.458 25.532 83.352 25.532C82.274 25.532 81.742 25.938 81.644 26.834H80.468C80.496 25.14 81.672 24.454 83.408 24.454C85.214 24.454 86.166 25.154 86.166 26.456V30.684C86.166 31.062 86.376 31.258 86.796 31.258C86.866 31.258 86.978 31.244 87.048 31.23ZM85.032 29.452V28.29C84.542 28.514 83.744 28.64 83.128 28.71C82.036 28.836 81.35 29.144 81.35 30.068C81.35 30.796 81.91 31.23 82.848 31.23C83.87 31.23 85.032 30.474 85.032 29.452ZM92.1183 24.664H95.0023V25.616H92.1183V29.704C92.1183 30.782 92.6923 31.146 93.7563 31.146C94.2323 31.146 94.6523 31.104 95.0023 31.006V32.028C94.5403 32.168 94.0783 32.196 93.6863 32.196C91.9083 32.196 90.9563 31.51 90.9563 29.914V25.616H88.8423V24.664H90.9563V22.648H92.1183V24.664ZM104.357 31.23V32.112C104.063 32.196 103.839 32.238 103.657 32.238C102.845 32.238 102.439 31.888 102.355 31.132C101.529 31.944 100.801 32.252 99.8626 32.252C98.4346 32.252 97.4686 31.454 97.4686 30.096C97.4686 28.584 98.6166 28.038 99.4706 27.898C99.7226 27.856 100.269 27.772 101.095 27.66C102.033 27.534 102.341 27.352 102.341 26.876V26.624C102.341 25.896 101.767 25.532 100.661 25.532C99.5826 25.532 99.0506 25.938 98.9526 26.834H97.7766C97.8046 25.14 98.9806 24.454 100.717 24.454C102.523 24.454 103.475 25.154 103.475 26.456V30.684C103.475 31.062 103.685 31.258 104.105 31.258C104.175 31.258 104.287 31.244 104.357 31.23ZM102.341 29.452V28.29C101.851 28.514 101.053 28.64 100.437 28.71C99.3446 28.836 98.6586 29.144 98.6586 30.068C98.6586 30.796 99.2186 31.23 100.157 31.23C101.179 31.23 102.341 30.474 102.341 29.452Z" fill="rgb(var(--colour-main))"></path><line x1="180.502" y1="234" x2="153.187" y2="234" stroke="rgb(var(--colour-main-500))"></line><path d="M162.002 243L153.002 234L162.002 225" stroke="rgb(var(--colour-main-500))"></path><path d="M19.776 113V103.214H23.346C25.096 103.214 26.496 104.208 26.496 106.14C26.496 108.072 25.096 109.066 23.346 109.066H21.05V113H19.776ZM21.05 107.96H23.178C24.424 107.96 25.166 107.26 25.166 106.14C25.166 105.02 24.424 104.32 23.178 104.32H21.05V107.96ZM28.8923 113V105.664H29.9703V107.246C30.4603 106.196 31.3983 105.454 32.6023 105.454C34.2823 105.454 35.1503 106.378 35.2903 107.834H34.1283C33.9603 106.952 33.4843 106.476 32.4903 106.476C31.0203 106.476 30.0683 107.722 30.0683 109.444V113H28.8923ZM40.1365 105.44C42.3905 105.44 43.4545 107.12 43.4545 109.346C43.4545 111.572 42.3905 113.252 40.1365 113.252C37.8825 113.252 36.8185 111.572 36.8185 109.346C36.8185 107.12 37.8825 105.44 40.1365 105.44ZM40.1365 106.518C38.6525 106.518 38.0365 107.848 38.0365 109.346C38.0365 110.844 38.6525 112.174 40.1365 112.174C41.6205 112.174 42.2365 110.844 42.2365 109.346C42.2365 107.848 41.6205 106.518 40.1365 106.518ZM50.7368 102.794H51.8988V113H50.8628V111.964C50.2748 112.818 49.4908 113.252 48.5248 113.252C46.3548 113.252 45.3328 111.516 45.3328 109.262C45.3328 107.148 46.3968 105.44 48.4828 105.44C49.4768 105.44 50.2328 105.818 50.7368 106.574V102.794ZM48.6788 106.532C47.3068 106.532 46.5508 107.764 46.5508 109.346C46.5508 110.844 47.1948 112.16 48.6928 112.16C50.1628 112.16 50.7368 110.746 50.7368 109.388C50.7368 107.918 50.1488 106.532 48.6788 106.532ZM60.3711 105.664V113H59.3211V111.908C58.6491 112.874 57.9491 113.252 56.8711 113.252C56.2411 113.252 55.7091 113.112 55.2891 112.818C54.7851 112.454 54.5331 111.936 54.5331 111.25V105.664H55.6951V110.788C55.6951 111.278 55.8631 111.656 56.1851 111.908C56.4511 112.118 56.8011 112.23 57.2071 112.23C57.7531 112.23 58.2151 112.034 58.5931 111.628C58.9991 111.194 59.2091 110.564 59.2091 109.738V105.664H60.3711ZM69.2354 108.086H68.0594C67.9334 107.12 67.2894 106.518 66.2674 106.518C64.7554 106.518 64.1674 107.96 64.1674 109.416C64.1674 110.872 64.8254 112.174 66.2954 112.174C67.3174 112.174 67.9474 111.6 68.1434 110.438H69.3194C69.1654 112.202 68.0734 113.252 66.2674 113.252C64.1254 113.252 62.9494 111.572 62.9494 109.416C62.9494 107.218 64.0974 105.44 66.2814 105.44C68.0734 105.44 69.1934 106.532 69.2354 108.086ZM74.8097 105.664H77.6937V106.616H74.8097V110.704C74.8097 111.782 75.3837 112.146 76.4477 112.146C76.9237 112.146 77.3437 112.104 77.6937 112.006V113.028C77.2317 113.168 76.7697 113.196 76.3777 113.196C74.5997 113.196 73.6477 112.51 73.6477 110.914V106.616H71.5337V105.664H73.6477V103.648H74.8097V105.664Z" fill="rgb(var(--colour-main-500))"></path><rect x="180.502" y="126" width="180" height="216" stroke="rgb(var(--colour-main-500))"></rect><rect x="18.502" y="126" width="126" height="216" rx="16" stroke="rgb(var(--colour-main-500))"></rect><path d="M187.376 113L186.508 110.074H183.134L182.266 113H180.922L184.016 103.214H185.654L188.734 113H187.376ZM183.456 108.982H186.186L184.814 104.39L183.456 108.982ZM190.43 113V103.214H194C195.75 103.214 197.15 104.208 197.15 106.14C197.15 108.072 195.75 109.066 194 109.066H191.704V113H190.43ZM191.704 107.96H193.832C195.078 107.96 195.82 107.26 195.82 106.14C195.82 105.02 195.078 104.32 193.832 104.32H191.704V107.96ZM199.407 113V111.908H201.479V104.306H199.407V103.214H204.881V104.306H202.795V111.908H204.881V113H199.407Z" fill="rgb(var(--colour-main-500))"></path><path d="M196.936 141.664V152.052H195.774V148.076C195.228 148.916 194.514 149.252 193.506 149.252C191.532 149.252 190.37 147.74 190.37 145.43C190.37 143.204 191.448 141.44 193.562 141.44C194.528 141.44 195.354 141.86 195.9 142.63V141.664H196.936ZM193.73 142.532C192.344 142.532 191.588 143.764 191.588 145.346C191.588 146.844 192.26 148.16 193.73 148.16C195.2 148.16 195.774 146.746 195.774 145.388C195.774 143.932 195.186 142.532 193.73 142.532ZM205.408 141.664V149H204.358V147.908C203.686 148.874 202.986 149.252 201.908 149.252C201.278 149.252 200.746 149.112 200.326 148.818C199.822 148.454 199.57 147.936 199.57 147.25V141.664H200.732V146.788C200.732 147.278 200.9 147.656 201.222 147.908C201.488 148.118 201.838 148.23 202.244 148.23C202.79 148.23 203.252 148.034 203.63 147.628C204.036 147.194 204.246 146.564 204.246 145.738V141.664H205.408ZM214.329 146.732C214.077 148.272 212.915 149.252 211.193 149.252C208.981 149.252 207.861 147.642 207.861 145.402C207.861 142.952 209.191 141.44 211.221 141.44C213.489 141.44 214.483 143.134 214.483 145.682H209.079C209.121 147.124 209.821 148.174 211.235 148.174C212.187 148.174 212.831 147.712 213.153 146.732H214.329ZM211.207 142.518C209.891 142.518 209.205 143.498 209.107 144.73H213.223C213.223 143.512 212.467 142.518 211.207 142.518ZM217.201 149V141.664H218.279V143.246C218.769 142.196 219.707 141.454 220.911 141.454C222.591 141.454 223.459 142.378 223.599 143.834H222.437C222.269 142.952 221.793 142.476 220.799 142.476C219.329 142.476 218.377 143.722 218.377 145.444V149H217.201ZM228.501 150.54C228.123 151.548 227.409 152.052 226.499 152.052C226.149 152.052 225.841 152.01 225.547 151.912V150.82C225.855 150.89 226.107 150.904 226.345 150.904C226.877 150.904 227.171 150.708 227.381 150.19L227.829 149.112L225.113 141.664H226.345L228.487 147.614L230.601 141.664H231.805L228.501 150.54Z" fill="rgb(var(--colour-purple))"></path><path d="M229.425 210.794V220.048H231.679V221H225.757V220.048H228.291V211.746H225.757V210.794H229.425ZM236.525 212.614V211.214H237.925V212.614H236.525ZM237.799 213.664V220.048H240.053V221H234.131V220.048H236.651V214.616H234.131V213.664H237.799ZM242.842 221V213.664H243.92V214.882C244.494 213.986 245.194 213.454 246.356 213.454C247.63 213.454 248.68 214.098 248.68 215.456V221H247.518V215.918C247.518 214.938 246.818 214.476 246.006 214.476C244.69 214.476 244.004 215.61 244.004 216.87V221H242.842ZM257.6 218.732C257.348 220.272 256.186 221.252 254.464 221.252C252.252 221.252 251.132 219.642 251.132 217.402C251.132 214.952 252.462 213.44 254.492 213.44C256.76 213.44 257.754 215.134 257.754 217.682H252.35C252.392 219.124 253.092 220.174 254.506 220.174C255.458 220.174 256.102 219.712 256.424 218.732H257.6ZM254.478 214.518C253.162 214.518 252.476 215.498 252.378 216.73H256.494C256.494 215.512 255.738 214.518 254.478 214.518ZM265.75 215.666H264.532C264.504 214.938 263.944 214.476 263.062 214.476C262.11 214.476 261.466 214.896 261.466 215.554C261.466 216.072 261.83 216.38 262.516 216.562L264.182 216.996C265.414 217.318 266.044 217.92 266.044 218.956C266.044 220.384 264.924 221.252 263.104 221.252C261.186 221.252 260.178 220.412 260.094 218.774H261.326C261.438 219.768 262.04 220.216 263.132 220.216C264.168 220.216 264.854 219.824 264.854 219.138C264.854 218.508 264.546 218.242 263.748 218.032L262.208 217.626C260.878 217.276 260.276 216.73 260.276 215.61C260.276 214.28 261.368 213.44 263.09 213.44C264.798 213.44 265.722 214.28 265.75 215.666Z" fill="rgb(var(--colour-main))"></path><path d="M243.164 139.214H244.466V147.852H249.128V149H243.164V139.214ZM253.834 140.614V139.214H255.234V140.614H253.834ZM255.108 141.664V148.048H257.362V149H251.44V148.048H253.96V142.616H251.44V141.664H255.108ZM265.75 143.666H264.532C264.504 142.938 263.944 142.476 263.062 142.476C262.11 142.476 261.466 142.896 261.466 143.554C261.466 144.072 261.83 144.38 262.516 144.562L264.182 144.996C265.414 145.318 266.044 145.92 266.044 146.956C266.044 148.384 264.924 149.252 263.104 149.252C261.186 149.252 260.178 148.412 260.094 146.774H261.326C261.438 147.768 262.04 148.216 263.132 148.216C264.168 148.216 264.854 147.824 264.854 147.138C264.854 146.508 264.546 146.242 263.748 146.032L262.208 145.626C260.878 145.276 260.276 144.73 260.276 143.61C260.276 142.28 261.368 141.44 263.09 141.44C264.798 141.44 265.722 142.28 265.75 143.666ZM271.773 141.664H274.657V142.616H271.773V146.704C271.773 147.782 272.347 148.146 273.411 148.146C273.887 148.146 274.307 148.104 274.657 148.006V149.028C274.195 149.168 273.733 149.196 273.341 149.196C271.563 149.196 270.611 148.51 270.611 146.914V142.616H268.497V141.664H270.611V139.648H271.773V141.664ZM277.781 139.214H279.083V147.852H283.745V149H277.781V139.214ZM288.451 140.614V139.214H289.851V140.614H288.451ZM289.725 141.664V148.048H291.979V149H286.057V148.048H288.577V142.616H286.057V141.664H289.725ZM294.768 149V141.664H295.846V142.882C296.42 141.986 297.12 141.454 298.282 141.454C299.556 141.454 300.606 142.098 300.606 143.456V149H299.444V143.918C299.444 142.938 298.744 142.476 297.932 142.476C296.616 142.476 295.93 143.61 295.93 144.87V149H294.768ZM309.526 146.732C309.274 148.272 308.112 149.252 306.39 149.252C304.178 149.252 303.058 147.642 303.058 145.402C303.058 142.952 304.388 141.44 306.418 141.44C308.686 141.44 309.68 143.134 309.68 145.682H304.276C304.318 147.124 305.018 148.174 306.432 148.174C307.384 148.174 308.028 147.712 308.35 146.732H309.526ZM306.404 142.518C305.088 142.518 304.402 143.498 304.304 144.73H308.42C308.42 143.512 307.664 142.518 306.404 142.518ZM317.676 143.666H316.458C316.43 142.938 315.87 142.476 314.988 142.476C314.036 142.476 313.392 142.896 313.392 143.554C313.392 144.072 313.756 144.38 314.442 144.562L316.108 144.996C317.34 145.318 317.97 145.92 317.97 146.956C317.97 148.384 316.85 149.252 315.03 149.252C313.112 149.252 312.104 148.412 312.02 146.774H313.252C313.364 147.768 313.966 148.216 315.058 148.216C316.094 148.216 316.78 147.824 316.78 147.138C316.78 146.508 316.472 146.242 315.674 146.032L314.134 145.626C312.804 145.276 312.202 144.73 312.202 143.61C312.202 142.28 313.294 141.44 315.016 141.44C316.724 141.44 317.648 142.28 317.676 143.666ZM212.117 192.794V202.048H214.371V203H208.449V202.048H210.983V193.746H208.449V192.794H212.117ZM222.983 200.732C222.731 202.272 221.569 203.252 219.847 203.252C217.635 203.252 216.515 201.642 216.515 199.402C216.515 196.952 217.845 195.44 219.875 195.44C222.143 195.44 223.137 197.134 223.137 199.682H217.733C217.775 201.124 218.475 202.174 219.889 202.174C220.841 202.174 221.485 201.712 221.807 200.732H222.983ZM219.861 196.518C218.545 196.518 217.859 197.498 217.761 198.73H221.877C221.877 197.512 221.121 196.518 219.861 196.518ZM230.391 192.794H231.553V203H230.517V201.964C229.929 202.818 229.145 203.252 228.179 203.252C226.009 203.252 224.987 201.516 224.987 199.262C224.987 197.148 226.051 195.44 228.137 195.44C229.131 195.44 229.887 195.818 230.391 196.574V192.794ZM228.333 196.532C226.961 196.532 226.205 197.764 226.205 199.346C226.205 200.844 226.849 202.16 228.347 202.16C229.817 202.16 230.391 200.746 230.391 199.388C230.391 197.918 229.803 196.532 228.333 196.532ZM236.917 206.052C235.321 206.052 234.117 205.394 233.921 203.84H235.139C235.307 204.666 235.881 205.072 236.945 205.072C238.415 205.072 239.017 204.344 239.017 202.384V201.964C238.583 202.818 237.799 203.252 236.833 203.252C234.663 203.252 233.641 201.558 233.641 199.304C233.641 197.148 234.705 195.44 236.791 195.44C237.785 195.44 238.541 195.818 239.045 196.574V195.664H240.207V201.81C240.207 202.832 240.123 203.602 239.955 204.134C239.549 205.408 238.499 206.052 236.917 206.052ZM237.001 202.16C238.471 202.16 239.045 200.746 239.045 199.388C239.045 197.918 238.457 196.532 236.987 196.532C235.615 196.532 234.859 197.764 234.859 199.346C234.859 200.844 235.503 202.16 237.001 202.16ZM248.946 200.732C248.694 202.272 247.532 203.252 245.81 203.252C243.598 203.252 242.478 201.642 242.478 199.402C242.478 196.952 243.808 195.44 245.838 195.44C248.106 195.44 249.1 197.134 249.1 199.682H243.696C243.738 201.124 244.438 202.174 245.852 202.174C246.804 202.174 247.448 201.712 247.77 200.732H248.946ZM245.824 196.518C244.508 196.518 243.822 197.498 243.724 198.73H247.84C247.84 197.512 247.084 196.518 245.824 196.518ZM251.818 203V195.664H252.896V197.246C253.386 196.196 254.324 195.454 255.528 195.454C257.208 195.454 258.076 196.378 258.216 197.834H257.054C256.886 196.952 256.41 196.476 255.416 196.476C253.946 196.476 252.994 197.722 252.994 199.444V203H251.818ZM265.61 203L264.742 200.074H261.368L260.5 203H259.156L262.25 193.214H263.888L266.968 203H265.61ZM261.69 198.982H264.42L263.048 194.39L261.69 198.982ZM274.853 198.086H273.677C273.551 197.12 272.907 196.518 271.885 196.518C270.373 196.518 269.785 197.96 269.785 199.416C269.785 200.872 270.443 202.174 271.913 202.174C272.935 202.174 273.565 201.6 273.761 200.438H274.937C274.783 202.202 273.691 203.252 271.885 203.252C269.743 203.252 268.567 201.572 268.567 199.416C268.567 197.218 269.715 195.44 271.899 195.44C273.691 195.44 274.811 196.532 274.853 198.086ZM283.507 198.086H282.331C282.205 197.12 281.561 196.518 280.539 196.518C279.027 196.518 278.439 197.96 278.439 199.416C278.439 200.872 279.097 202.174 280.567 202.174C281.589 202.174 282.219 201.6 282.415 200.438H283.591C283.437 202.202 282.345 203.252 280.539 203.252C278.397 203.252 277.221 201.572 277.221 199.416C277.221 197.218 278.369 195.44 280.553 195.44C282.345 195.44 283.465 196.532 283.507 198.086ZM289.025 195.44C291.279 195.44 292.343 197.12 292.343 199.346C292.343 201.572 291.279 203.252 289.025 203.252C286.771 203.252 285.707 201.572 285.707 199.346C285.707 197.12 286.771 195.44 289.025 195.44ZM289.025 196.518C287.541 196.518 286.925 197.848 286.925 199.346C286.925 200.844 287.541 202.174 289.025 202.174C290.509 202.174 291.125 200.844 291.125 199.346C291.125 197.848 290.509 196.518 289.025 196.518ZM300.606 195.664V203H299.556V201.908C298.884 202.874 298.184 203.252 297.106 203.252C296.476 203.252 295.944 203.112 295.524 202.818C295.02 202.454 294.768 201.936 294.768 201.25V195.664H295.93V200.788C295.93 201.278 296.098 201.656 296.42 201.908C296.686 202.118 297.036 202.23 297.442 202.23C297.988 202.23 298.45 202.034 298.828 201.628C299.234 201.194 299.444 200.564 299.444 199.738V195.664H300.606ZM303.422 203V195.664H304.5V196.882C305.074 195.986 305.774 195.454 306.936 195.454C308.21 195.454 309.26 196.098 309.26 197.456V203H308.098V197.918C308.098 196.938 307.398 196.476 306.586 196.476C305.27 196.476 304.584 197.61 304.584 198.87V203H303.422ZM315.044 195.664H317.928V196.616H315.044V200.704C315.044 201.782 315.618 202.146 316.682 202.146C317.158 202.146 317.578 202.104 317.928 202.006V203.028C317.466 203.168 317.004 203.196 316.612 203.196C314.834 203.196 313.882 202.51 313.882 200.914V196.616H311.768V195.664H313.882V193.648H315.044V195.664Z" fill="rgb(var(--colour-royal))"></path><path d="M324.594 138.08H325.854C324.314 139.844 323.516 141.888 323.516 144.1C323.516 146.312 324.314 148.356 325.854 150.12H324.594C323.25 148.608 322.382 146.41 322.382 144.1C322.382 141.79 323.25 139.592 324.594 138.08ZM333.249 161.568H331.345V159.664H333.249V161.568ZM331.345 165.096H333.249V167H331.345V165.096ZM192.876 186.134H191.616C193.156 184.37 193.954 182.326 193.954 180.114C193.954 177.902 193.156 175.858 191.616 174.094H192.876C194.22 175.606 195.088 177.804 195.088 180.114C195.088 182.424 194.22 184.622 192.876 186.134ZM209.205 179.638C210.101 179.638 210.437 179.246 210.437 178.238V175.928C210.437 174.794 211.025 174.094 211.963 174.094H213.251V175.018H212.369C211.683 175.018 211.487 175.214 211.487 175.942V178.182C211.487 179.316 211.207 179.764 210.227 180.1C211.207 180.422 211.487 180.898 211.487 182.032V184.272C211.487 185 211.683 185.196 212.369 185.196H213.251V186.12H211.963C211.025 186.12 210.437 185.42 210.437 184.286V181.976C210.437 180.968 210.101 180.562 209.205 180.562H208.813V179.638H209.205ZM324.594 192.08H325.854C324.314 193.844 323.516 195.888 323.516 198.1C323.516 200.312 324.314 202.356 325.854 204.12H324.594C323.25 202.608 322.382 200.41 322.382 198.1C322.382 195.79 323.25 193.592 324.594 192.08ZM331.345 204.134H330.085C331.625 202.37 332.423 200.326 332.423 198.114C332.423 195.902 331.625 193.858 330.085 192.094H331.345C332.689 193.606 333.557 195.804 333.557 198.114C333.557 200.424 332.689 202.622 331.345 204.134ZM339.019 197.638C339.915 197.638 340.251 197.246 340.251 196.238V193.928C340.251 192.794 340.839 192.094 341.777 192.094H343.065V193.018H342.183C341.497 193.018 341.301 193.214 341.301 193.942V196.182C341.301 197.316 341.021 197.764 340.041 198.1C341.021 198.422 341.301 198.898 341.301 200.032V202.272C341.301 203 341.497 203.196 342.183 203.196H343.065V204.12H341.777C340.839 204.12 340.251 203.42 340.251 202.286V199.976C340.251 198.968 339.915 198.562 339.019 198.562H338.627V197.638H339.019ZM269.785 215.638C270.681 215.638 271.017 215.246 271.017 214.238V211.928C271.017 210.794 271.605 210.094 272.543 210.094H273.831V211.018H272.949C272.263 211.018 272.067 211.214 272.067 211.942V214.182C272.067 215.316 271.787 215.764 270.807 216.1C271.787 216.422 272.067 216.898 272.067 218.032V220.272C272.067 221 272.263 221.196 272.949 221.196H273.831V222.12H272.543C271.605 222.12 271.017 221.42 271.017 220.286V217.976C271.017 216.968 270.681 216.562 269.785 216.562H269.393V215.638H269.785ZM281.664 219.096H283.568V221H281.664V219.096ZM288.076 219.096H289.98V221H288.076V219.096ZM294.488 219.096H296.392V221H294.488V219.096ZM308.266 216.576C307.37 216.576 307.034 216.968 307.034 217.976V220.286C307.034 221.42 306.446 222.12 305.508 222.12H304.22V221.196H305.102C305.788 221.196 305.984 221 305.984 220.272V218.032C305.984 216.898 306.264 216.45 307.244 216.114C306.264 215.792 305.984 215.316 305.984 214.182V211.942C305.984 211.214 305.788 211.018 305.102 211.018H304.22V210.094H305.508C306.446 210.094 307.034 210.794 307.034 211.928V214.238C307.034 215.246 307.37 215.652 308.266 215.652H308.658V216.576H308.266ZM213.069 234.576C212.173 234.576 211.837 234.968 211.837 235.976V238.286C211.837 239.42 211.249 240.12 210.311 240.12H209.023V239.196H209.905C210.591 239.196 210.787 239 210.787 238.272V236.032C210.787 234.898 211.067 234.45 212.047 234.114C211.067 233.792 210.787 233.316 210.787 232.182V229.942C210.787 229.214 210.591 229.018 209.905 229.018H209.023V228.094H210.311C211.249 228.094 211.837 228.794 211.837 229.928V232.238C211.837 233.246 212.173 233.652 213.069 233.652H213.461V234.576H213.069ZM195.76 252.576C194.864 252.576 194.528 252.968 194.528 253.976V256.286C194.528 257.42 193.94 258.12 193.002 258.12H191.714V257.196H192.596C193.282 257.196 193.478 257 193.478 256.272V254.032C193.478 252.898 193.758 252.45 194.738 252.114C193.758 251.792 193.478 251.316 193.478 250.182V247.942C193.478 247.214 193.282 247.018 192.596 247.018H191.714V246.094H193.002C193.94 246.094 194.528 246.794 194.528 247.928V250.238C194.528 251.246 194.864 251.652 195.76 251.652H196.152V252.576H195.76Z" fill="rgb(var(--colour-main-500))"></path><path d="M210.731 168.358V167.084C208.953 166.916 207.861 165.656 207.819 164.004H208.883C208.925 165.138 209.541 165.964 210.731 166.118V162.492L210.101 162.324C208.827 161.988 208.015 161.036 208.015 159.804C208.015 158.348 209.023 157.298 210.731 157.158V155.884H211.529V157.158C213.125 157.298 214.091 158.306 214.161 159.86H213.097C213.041 158.964 212.523 158.278 211.529 158.124V161.582L212.439 161.834C213.713 162.184 214.455 163.094 214.455 164.27C214.455 165.866 213.307 166.944 211.529 167.084V168.358H210.731ZM210.297 161.246L210.731 161.372V158.11C209.765 158.222 209.093 158.754 209.093 159.692C209.093 160.434 209.513 161.036 210.297 161.246ZM212.075 162.856L211.529 162.702V166.132C212.705 166.02 213.377 165.376 213.377 164.424C213.377 163.64 212.985 163.094 212.075 162.856ZM220.771 156.794V166.048H223.025V167H217.103V166.048H219.637V157.746H217.103V156.794H220.771ZM231.637 164.732C231.385 166.272 230.223 167.252 228.501 167.252C226.289 167.252 225.169 165.642 225.169 163.402C225.169 160.952 226.499 159.44 228.529 159.44C230.797 159.44 231.791 161.134 231.791 163.682H226.387C226.429 165.124 227.129 166.174 228.543 166.174C229.495 166.174 230.139 165.712 230.461 164.732H231.637ZM228.515 160.518C227.199 160.518 226.513 161.498 226.415 162.73H230.531C230.531 161.512 229.775 160.518 228.515 160.518ZM239.045 156.794H240.207V167H239.171V165.964C238.583 166.818 237.799 167.252 236.833 167.252C234.663 167.252 233.641 165.516 233.641 163.262C233.641 161.148 234.705 159.44 236.791 159.44C237.785 159.44 238.541 159.818 239.045 160.574V156.794ZM236.987 160.532C235.615 160.532 234.859 161.764 234.859 163.346C234.859 164.844 235.503 166.16 237.001 166.16C238.471 166.16 239.045 164.746 239.045 163.388C239.045 161.918 238.457 160.532 236.987 160.532ZM245.572 170.052C243.976 170.052 242.772 169.394 242.576 167.84H243.794C243.962 168.666 244.536 169.072 245.6 169.072C247.07 169.072 247.672 168.344 247.672 166.384V165.964C247.238 166.818 246.454 167.252 245.488 167.252C243.318 167.252 242.296 165.558 242.296 163.304C242.296 161.148 243.36 159.44 245.446 159.44C246.44 159.44 247.196 159.818 247.7 160.574V159.664H248.862V165.81C248.862 166.832 248.778 167.602 248.61 168.134C248.204 169.408 247.154 170.052 245.572 170.052ZM245.656 166.16C247.126 166.16 247.7 164.746 247.7 163.388C247.7 161.918 247.112 160.532 245.642 160.532C244.27 160.532 243.514 161.764 243.514 163.346C243.514 164.844 244.158 166.16 245.656 166.16ZM257.6 164.732C257.348 166.272 256.186 167.252 254.464 167.252C252.252 167.252 251.132 165.642 251.132 163.402C251.132 160.952 252.462 159.44 254.492 159.44C256.76 159.44 257.754 161.134 257.754 163.682H252.35C252.392 165.124 253.092 166.174 254.506 166.174C255.458 166.174 256.102 165.712 256.424 164.732H257.6ZM254.478 160.518C253.162 160.518 252.476 161.498 252.378 162.73H256.494C256.494 161.512 255.738 160.518 254.478 160.518ZM260.472 167V159.664H261.55V161.246C262.04 160.196 262.978 159.454 264.182 159.454C265.862 159.454 266.73 160.378 266.87 161.834H265.708C265.54 160.952 265.064 160.476 264.07 160.476C262.6 160.476 261.648 161.722 261.648 163.444V167H260.472ZM274.265 167L273.397 164.074H270.023L269.155 167H267.811L270.905 157.214H272.543L275.623 167H274.265ZM270.345 162.982H273.075L271.703 158.39L270.345 162.982ZM283.507 162.086H282.331C282.205 161.12 281.561 160.518 280.539 160.518C279.027 160.518 278.439 161.96 278.439 163.416C278.439 164.872 279.097 166.174 280.567 166.174C281.589 166.174 282.219 165.6 282.415 164.438H283.591C283.437 166.202 282.345 167.252 280.539 167.252C278.397 167.252 277.221 165.572 277.221 163.416C277.221 161.218 278.369 159.44 280.553 159.44C282.345 159.44 283.465 160.532 283.507 162.086ZM292.161 162.086H290.985C290.859 161.12 290.215 160.518 289.193 160.518C287.681 160.518 287.093 161.96 287.093 163.416C287.093 164.872 287.751 166.174 289.221 166.174C290.243 166.174 290.873 165.6 291.069 164.438H292.245C292.091 166.202 290.999 167.252 289.193 167.252C287.051 167.252 285.875 165.572 285.875 163.416C285.875 161.218 287.023 159.44 289.207 159.44C290.999 159.44 292.119 160.532 292.161 162.086ZM297.68 159.44C299.934 159.44 300.998 161.12 300.998 163.346C300.998 165.572 299.934 167.252 297.68 167.252C295.426 167.252 294.362 165.572 294.362 163.346C294.362 161.12 295.426 159.44 297.68 159.44ZM297.68 160.518C296.196 160.518 295.58 161.848 295.58 163.346C295.58 164.844 296.196 166.174 297.68 166.174C299.164 166.174 299.78 164.844 299.78 163.346C299.78 161.848 299.164 160.518 297.68 160.518ZM309.26 159.664V167H308.21V165.908C307.538 166.874 306.838 167.252 305.76 167.252C305.13 167.252 304.598 167.112 304.178 166.818C303.674 166.454 303.422 165.936 303.422 165.25V159.664H304.584V164.788C304.584 165.278 304.752 165.656 305.074 165.908C305.34 166.118 305.69 166.23 306.096 166.23C306.642 166.23 307.104 166.034 307.482 165.628C307.888 165.194 308.098 164.564 308.098 163.738V159.664H309.26ZM312.076 167V159.664H313.154V160.882C313.728 159.986 314.428 159.454 315.59 159.454C316.864 159.454 317.914 160.098 317.914 161.456V167H316.752V161.918C316.752 160.938 316.052 160.476 315.24 160.476C313.924 160.476 313.238 161.61 313.238 162.87V167H312.076ZM323.698 159.664H326.582V160.616H323.698V164.704C323.698 165.782 324.272 166.146 325.336 166.146C325.812 166.146 326.232 166.104 326.582 166.006V167.028C326.12 167.168 325.658 167.196 325.266 167.196C323.488 167.196 322.536 166.51 322.536 164.914V160.616H320.422V159.664H322.536V157.648H323.698V159.664Z" fill="rgb(var(--colour-forest))"></path><path d="M57.2751 211.214H58.5771V219.852H63.2391V221H57.2751V211.214ZM67.9454 212.614V211.214H69.3454V212.614H67.9454ZM69.2194 213.664V220.048H71.4734V221H65.5514V220.048H68.0714V214.616H65.5514V213.664H69.2194ZM74.2617 221V213.664H75.3397V214.882C75.9137 213.986 76.6137 213.454 77.7757 213.454C79.0497 213.454 80.0997 214.098 80.0997 215.456V221H78.9377V215.918C78.9377 214.938 78.2377 214.476 77.4257 214.476C76.1097 214.476 75.4237 215.61 75.4237 216.87V221H74.2617ZM89.02 218.732C88.768 220.272 87.606 221.252 85.884 221.252C83.672 221.252 82.552 219.642 82.552 217.402C82.552 214.952 83.882 213.44 85.912 213.44C88.18 213.44 89.174 215.134 89.174 217.682H83.77C83.812 219.124 84.512 220.174 85.926 220.174C86.878 220.174 87.522 219.712 87.844 218.732H89.02ZM85.898 214.518C84.582 214.518 83.896 215.498 83.798 216.73H87.914C87.914 215.512 87.158 214.518 85.898 214.518ZM103.053 221V213.902H100.435V212.978C102.745 212.88 102.941 212.74 103.361 211.102H104.285V221H103.053ZM57.2751 229.214H58.5771V237.852H63.2391V239H57.2751V229.214ZM67.9454 230.614V229.214H69.3454V230.614H67.9454ZM69.2194 231.664V238.048H71.4734V239H65.5514V238.048H68.0714V232.616H65.5514V231.664H69.2194ZM74.2617 239V231.664H75.3397V232.882C75.9137 231.986 76.6137 231.454 77.7757 231.454C79.0497 231.454 80.0997 232.098 80.0997 233.456V239H78.9377V233.918C78.9377 232.938 78.2377 232.476 77.4257 232.476C76.1097 232.476 75.4237 233.61 75.4237 234.87V239H74.2617ZM89.02 236.732C88.768 238.272 87.606 239.252 85.884 239.252C83.672 239.252 82.552 237.642 82.552 235.402C82.552 232.952 83.882 231.44 85.912 231.44C88.18 231.44 89.174 233.134 89.174 235.682H83.77C83.812 237.124 84.512 238.174 85.926 238.174C86.878 238.174 87.522 237.712 87.844 236.732H89.02ZM85.898 232.518C84.582 232.518 83.896 233.498 83.798 234.73H87.914C87.914 233.512 87.158 232.518 85.898 232.518ZM106.413 237.922V239H99.8045C99.9585 236.704 100.575 235.738 102.591 234.632L103.893 233.918C104.775 233.428 105.223 232.798 105.223 231.944C105.223 230.838 104.635 230.068 103.389 230.068C101.947 230.068 101.359 231.048 101.261 232.49H100.029C100.099 230.25 101.219 228.99 103.431 228.99C105.433 228.99 106.483 230.306 106.483 231.944C106.483 233.204 105.797 234.184 104.397 234.926L102.997 235.668C101.821 236.298 101.275 236.998 101.191 237.922H106.413ZM57.2751 247.214H58.5771V255.852H63.2391V257H57.2751V247.214ZM67.9454 248.614V247.214H69.3454V248.614H67.9454ZM69.2194 249.664V256.048H71.4734V257H65.5514V256.048H68.0714V250.616H65.5514V249.664H69.2194ZM74.2617 257V249.664H75.3397V250.882C75.9137 249.986 76.6137 249.454 77.7757 249.454C79.0497 249.454 80.0997 250.098 80.0997 251.456V257H78.9377V251.918C78.9377 250.938 78.2377 250.476 77.4257 250.476C76.1097 250.476 75.4237 251.61 75.4237 252.87V257H74.2617ZM89.02 254.732C88.768 256.272 87.606 257.252 85.884 257.252C83.672 257.252 82.552 255.642 82.552 253.402C82.552 250.952 83.882 249.44 85.912 249.44C88.18 249.44 89.174 251.134 89.174 253.682H83.77C83.812 255.124 84.512 256.174 85.926 256.174C86.878 256.174 87.522 255.712 87.844 254.732H89.02ZM85.898 250.518C84.582 250.518 83.896 251.498 83.798 252.73H87.914C87.914 251.512 87.158 250.518 85.898 250.518ZM103.151 252.366H102.465V251.316C103.893 251.386 104.915 251.148 104.915 249.734C104.915 248.628 104.173 248.068 103.151 248.068C101.891 248.068 101.261 248.698 101.219 250.168H99.9865C100.015 248.082 101.163 246.99 103.151 246.99C104.929 246.99 106.161 247.886 106.161 249.692C106.161 250.63 105.727 251.414 104.761 251.778C105.923 252.184 106.455 252.954 106.455 254.2C106.455 256.104 105.083 257.252 103.109 257.252C101.023 257.252 99.8885 256.202 99.7765 254.088H101.023C101.093 255.446 101.737 256.174 103.151 256.174C104.579 256.174 105.209 255.278 105.209 254.214C105.209 252.996 104.495 252.366 103.151 252.366Z" fill="rgb(var(--colour-main))"></path></svg></div></div><section id="query-data-basics" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">a. </span>Basics</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-basics">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><section id="query-data-basics-graphql" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">GraphQL</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-basics-graphql">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2"><span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> is a GraphQL API, so data in the system is modeled as a graph. Entities in the API are nodes, and their relationships with other entities are edges. Ledgers have Ledger Accounts; Ledger Accounts and Ledger Entries have Ledger Lines; and so on.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2"><span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> exposes several <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#queries">queries</a> as entry points to the data graph. They return data about a single entity, or a list of entities.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">When making a query, you can fetch related entities using expansions. As opposed to a REST interface, where you may require several round-trips to query nested data, expansions are nested queries that you let you retrieve related data in a single request.  For example, you can <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/#query-data-ledger-entries-expand-lines">expand from a Ledger Entry to all the Ledger Lines</a> in it in one API call.</p></div></section><section id="query-data-basics-connection-types" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Connection types</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-basics-connection-types">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2"><span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> uses <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://relay.dev/graphql/connections.htm">connection types</a> to return lists of entities. A connection type is a list of nodes, and a <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">pageInfo</code> object that contains cursors to the next and previous pages of results.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">ListLedgerAccounts</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query ListLedgerAccounts($ledger: LedgerMatchInput!) {
  ledger(ledger: $ledger) {
    ledgerAccounts {
      nodes {
        name
        type
      }
      pageInfo {
        hasNextPage
        endCursor
        hasPreviousPage
        startCursor
      }
    }
  }
}
</code></pre></div></div></div></div></section><section id="query-data-basics-filtering" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Filtering</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-basics-filtering">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can filter connection types with a <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">filter</code> argument.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">For example, you can filter a list of Ledger Accounts by their type:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerAccounts query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query FilterLedgerAccounts(
    $ledger: LedgerMatchInput!,
    $filter: LedgerAccountsFilterSet!
) {
  ledger(ledger: $ledger) {
    ledgerAccounts {
      nodes {
        name
        type
      }
      pageInfo {
        hasNextPage
        endCursor
        hasPreviousPage
        startCursor
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerAccounts variables - by type</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  },
  &quot;filter&quot;: {
    &quot;type&quot;: {
      &quot;equalTo&quot;: &quot;asset&quot;
    }
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can combine filters by adding multiple components to the filter block. Results are AND&#x27;d:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerAccounts variables - by type</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  },
  &quot;filter&quot;: {
    &quot;type&quot;: {
      &quot;equalTo&quot;: &quot;asset&quot;,
      &quot;hasParentLedgerAccount&quot;: true
    }
  }
}</code></pre></div></div></div></div></section><section id="query-data-basics-pagination" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Pagination</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-basics-pagination">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Fields that return lists support cursor-based pagination:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Results are returned under a <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">nodes</code> property as an array. The <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">pageInfo</code> property contains cursors pointing to the next page and previous pages.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">You can send a cursor to the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">after</code> (or <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">before</code>) arguments on list fields to retrieve a specific page.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">The <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">first</code> (or <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">last</code>) argument sets the page size. The default is 20 and the maximum is 200.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Once a page size has been set in the initial request, all subsequent pagination requests have to use the same page size.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Results are returned in a deterministic order. This is generally reverse chronological, newest first. This sort is by posted date for Ledger Lines and Ledger Entries, or creation date for other entities.</li>
</ul><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">This query uses pagination to retrieve two Ledger Accounts at a time:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerAccounts query with pagination</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetLedgerAccounts(
    $ledgerIk: SafeString!
    $after: String
    $first: Int
    $before: String
  ) {
    ledger(ledger: { ik: $ledgerIk }) {
      ledgerAccounts(
        after: $after
        first: $first
        before: $before
      ) {
        nodes {
          path
          name
          type
        }
        pageInfo {
          hasNextPage
          endCursor
          hasPreviousPage
          startCursor
        }
      }
    }
  }</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerAccounts variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerIk&quot;: &quot;ik-used-to-create-ledger&quot;,
  &quot;first&quot;: 2
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The response is:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerAccounts first page response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;ledger&quot;: {
      &quot;ledgerAccounts&quot;: {
        &quot;nodes&quot;: [
          {
            &quot;path&quot;: &quot;assets/test-assets/test:1&quot;,
            &quot;name&quot;: &quot;Test 1&quot;,
            &quot;type&quot;: &quot;asset&quot;
          },
          {
            &quot;path&quot;: &quot;assets/test-assets/test:2&quot;,
            &quot;name&quot;: &quot;Test 2&quot;,
            &quot;type&quot;: &quot;asset&quot;
          }
        ],
        &quot;pageInfo&quot;: {
          &quot;hasNextPage&quot;: true,
          &quot;endCursor&quot;: &quot;&lt;some-end-cursor&gt;&quot;,
          &quot;hasPreviousPage&quot;: false,
          &quot;startCursor&quot;: null
        }
      }
    }
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To retrieve the next page, send the same query but with the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">after</code> parameter set on <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ledgerAccounts</code>:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerAccounts next page variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerIk&quot;: &quot;ik-used-to-create-ledger&quot;,
  &quot;after&quot;: &quot;&lt;some-end-cursor&gt;&quot;
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The response is:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerAccounts second page response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;ledger&quot;: {
      &quot;ledgerAccounts&quot;: {
        &quot;nodes&quot;: [
          {
            &quot;path&quot;: &quot;assets/test-assets/test:3&quot;,
            &quot;name&quot;: &quot;Test 3&quot;,
            &quot;type&quot;: &quot;asset&quot;
          },
          {
            &quot;path&quot;: &quot;assets/test-assets/test:4&quot;,
            &quot;name&quot;: &quot;Test 4&quot;,
            &quot;type&quot;: &quot;asset&quot;
          }
        ],
        &quot;pageInfo&quot;: {
          &quot;hasNextPage&quot;: false,
          &quot;endCursor&quot;: null,
          &quot;hasPreviousPage&quot;: true,
          &quot;startCursor&quot;: &quot;&lt;some-start-cursor&gt;&quot;
        }
      }
    }
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To retrieve the previous page of results, send the same query but with the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">before</code> parameter set on <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ledgerAccounts</code>. The response is the first page of results.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerAccounts previous page variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerIk&quot;: &quot;ik-used-to-create-ledger&quot;,
  &quot;before&quot;: &quot;&lt;some-start-cursor&gt;&quot;
}</code></pre></div></div></div></div></section></div></div></section><section id="query-data-ledgers" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">b. </span>Ledgers</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledgers">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><section id="query-data-ledgers-lookup" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Lookup</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledgers-lookup">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ledger</code> query to retrieve a Ledger by the IK used to create it:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedger</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetLedger($ledger: LedgerMatchInput!) {
  ledger(ledger: $ledger) {
    name
    created
    balanceUTCOffset
    ledgerAccounts {
      nodes {
        name
        type
      }
    }
    schema {
      key
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedger variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  }
}</code></pre></div></div></div></div></section><section id="query-data-ledgers-list" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">List</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledgers-list">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ledgers</code> query to list all the Ledgers in your workspace:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">ListLedgers</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query ListLedgers {
  ledgers {
    nodes {
      name
      created
      balanceUTCOffset
      ledgerAccounts {
        nodes {
          name
          type
        }
      }
      schema {
        key
      }
    }
    pageInfo {
      hasNextPage
      endCursor
      hasPreviousPage
      startCursor
    }
  }
}
</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The response is a <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#query-data-basics-pagination">paginated</a> list of Ledgers.</p></div></section></div></div></section><section id="query-data-ledger-accounts" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">c. </span>Ledger Accounts</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-accounts">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><section id="query-data-ledger-accounts-lookup" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Lookup</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-accounts-lookup">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ledgerAccount</code> query to retrieve a Ledger Account by its path in the Schema:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerAccount</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetLedgerAccount(
  $ledgerAccount: LedgerAccountMatchInput!
) {
  ledgerAccount(ledgerAccount: $ledgerAccount) {
    path
    name
    balance
    type
    lines {
      nodes {
        amount
        posted
      }
    }
  }
}
</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The IK of the Ledger needs to be provided along with the Ledger Account&#x27;s path:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerAccount Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerAccount&quot;: {
    &quot;path&quot;: &quot;assets/bank/user-cash&quot;,
    &quot;ledger&quot;: {
      &quot;ik&quot;: &quot;quickstart-ledger&quot;
    }
  }
}</code></pre></div></div></div></div></section><section id="query-data-ledger-accounts-lookup-multiple" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Lookup multiple</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-accounts-lookup-multiple">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can also retrieve multiple Ledger Accounts using the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ledgerAccounts</code> query and the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">in</code> filter:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">ListLedgerAccounts</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query ListLedgerAccounts($ledger: LedgerMatchInput!) {
  ledger(ledger: $ledger) {
    ledgerAccounts {
      nodes {
        name
        type
      }
      pageInfo {
        hasNextPage
        endCursor
        hasPreviousPage
        startCursor
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerAccount Variables with In</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  },
  &quot;filter&quot;: {
    &quot;ledgerAccount&quot;: {
      &quot;in&quot;: [
        {
          &quot;path&quot;: &quot;assets/banks/user-cash&quot;
        },
        {
          &quot;path&quot;: &quot;income-root/income-revenue-root&quot;
        }
      ]
    }
  }
}</code></pre></div></div></div></div></section><section id="query-data-ledger-accounts-list" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">List</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-accounts-list">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ledger.ledgerAccounts</code> query to list all Ledger Accounts within a Ledger:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">ListLedgerAccounts</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query ListLedgerAccounts($ledger: LedgerMatchInput!) {
  ledger(ledger: $ledger) {
    ledgerAccounts {
      nodes {
        name
        type
      }
      pageInfo {
        hasNextPage
        endCursor
        hasPreviousPage
        startCursor
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">ListLedgerAccounts variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The response is a <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#query-data-basics-pagination">paginated</a> list of Ledger Accounts.</p></div></section><section id="query-data-ledger-accounts-list-balances" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">List balances</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-accounts-list-balances">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Since a Ledger Account can have balances in multiple currencies, you can list its balance and balance changes across all currencies:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerAccountBalances</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetLedgerAccountBalances(
  $ledgerAccount: LedgerAccountMatchInput!
) {
  ledgerAccount(ledgerAccount: $ledgerAccount) {
    path
    name
    balances {
      nodes {
        amount
        currency {
          code
          customCurrencyId
        }
      }
    }
    end_of_year_balances: balances(at: &quot;1969&quot;) {
      nodes {
        amount
        currency {
          code
          customCurrencyId
        }
      }
    }
    last_year: balanceChanges(period: &quot;1968&quot;) {
      nodes {
        amount
        currency {
          code
          customCurrencyId
        }
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerAccountBalances Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerAccount&quot;: {
    &quot;path&quot;: &quot;assets/bank/user-cash&quot;,
    &quot;ledger&quot;: {
      &quot;ik&quot;: &quot;quickstart-ledger&quot;
    }
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Read more about handling multi-currency balances in <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#handle-currencies">Handle currencies</a>.</p></div></section><section id="query-data-ledger-accounts-filter-by-type" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Filter by type</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-accounts-filter-by-type">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">type</code> parameter to filter Ledger Account lists:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerAccounts query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query FilterLedgerAccounts(
    $ledger: LedgerMatchInput!,
    $filter: LedgerAccountsFilterSet!
) {
  ledger(ledger: $ledger) {
    ledgerAccounts(filter: $filter) {
      nodes {
        name
        type
      }
      pageInfo {
        hasNextPage
        endCursor
        hasPreviousPage
        startCursor
      }
    }
  }
}
</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">type</code> to filter Ledger Accounts by their type:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerAccounts variables - by type</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  },
  &quot;filter&quot;: {
    &quot;type&quot;: {
      &quot;equalTo&quot;: &quot;asset&quot;
    }
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can also filter for multiple types in one query, using <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">in</code>. This can be useful to <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#generate-reports">Generate reports</a>:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerAccounts variables - type in</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  },
  &quot;filter&quot;: {
    &quot;type&quot;: {
      &quot;in&quot;: [&quot;asset&quot;, &quot;liability&quot;]
    }
  }
}</code></pre></div></div></div></div></section><section id="query-data-ledger-accounts-filter-by-path" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Filter by path</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-accounts-filter-by-path">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">path</code> and wildcard matching (<code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">*</code>) in place of template variables to query all instances of Ledger Accounts with <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">template: true</code>.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerAccounts query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query FilterLedgerAccounts(
    $ledger: LedgerMatchInput!,
    $filter: LedgerAccountsFilterSet!
) {
  ledger(ledger: $ledger) {
    ledgerAccounts(filter: $filter) {
      nodes {
        name
        type
      }
      pageInfo {
        hasNextPage
        endCursor
        hasPreviousPage
        startCursor
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerAccounts variables - by external account</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  },
  &quot;filter&quot;: {
    &quot;path&quot;: {
      &quot;matches&quot;: &quot;liability-root/user:*/pending&quot;
    }
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Read more about filtering Ledger Accounts in <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#query-data-basics-filtering">filtering</a>.</p></div></section><section id="query-data-ledger-accounts-filter-by-link" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Filter by Link</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-accounts-filter-by-link">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">linkedAccount</code> to filter Ledger Accounts by the External Account they&#x27;re linked to:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerAccounts query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query FilterLedgerAccounts(
    $ledger: LedgerMatchInput!,
    $filter: LedgerAccountsFilterSet!
) {
  ledger(ledger: $ledger) {
    ledgerAccounts(filter: $filter) {
      nodes {
        name
        type
      }
      pageInfo {
        hasNextPage
        endCursor
        hasPreviousPage
        startCursor
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerAccounts variables - by external account</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  },
  &quot;filter&quot;: {
    &quot;linkedAccount&quot;: {
      &quot;in&quot;: [
        {
          &quot;linkId&quot;: &quot;&lt;link id&gt;&quot;,
          &quot;externalId&quot;: &quot;account-id-at-bank&quot;
        },
        {
          &quot;linkId&quot;: &quot;&lt;link id&gt;&quot;,
          &quot;externalId&quot;: &quot;account2-id-at-bank&quot;
        }
      ]
    }
  }
}</code></pre></div></div></div></div></section><section id="query-data-ledger-accounts-filter-by-parent" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Filter by parent</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-accounts-filter-by-parent">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">hasParentLedgerAccount</code> to filter Ledger Accounts by their parent status:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerAccounts query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query FilterLedgerAccounts(
    $ledger: LedgerMatchInput!,
    $filter: LedgerAccountsFilterSet!
) {
  ledger(ledger: $ledger) {
    ledgerAccounts(filter: $filter) {
      nodes {
        name
        type
      }
      pageInfo {
        hasNextPage
        endCursor
        hasPreviousPage
        startCursor
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerAccounts variables - by external account</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  },
  &quot;filter&quot;: {
    &quot;hasParentLedgerAccount&quot;: false
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Read more about filtering Ledger Accounts in <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#query-data-basics-filtering">filtering</a>.</p></div></section></div></div></section><section id="query-data-ledger-lines" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">d. </span>Ledger Lines</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-lines">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><section id="query-data-ledger-lines-lookup" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Lookup</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-lines-lookup">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ledgerLine</code> query to retrieve a Ledger Line by its ID:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerLine</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetLedgerLine(
  $ledgerLine: LedgerLineMatchInput!
) {
  ledgerLine(ledgerLine: $ledgerLine) {
    amount
    currency {
      code
      customCurrencyId
    }
    account {
      name
      type
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerAccountLines Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerLine&quot;: {
    &quot;id&quot;: &quot;&lt;ledger line ID&gt;&quot;
  }
}</code></pre></div></div></div></div></section><section id="query-data-ledger-lines-list" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">List</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-lines-list">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ledgerAccount.lines</code> query to list the lines in a Ledger Account:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerAccountLines</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetLedgerAccountLines(
  $ledgerAccount: LedgerAccountMatchInput!
) {
  ledgerAccount(ledgerAccount: $ledgerAccount) {
    path
    name
    lines {
      nodes {
        amount
        currency {
          code
          customCurrencyId
        }
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerAccountLines Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerAccount&quot;: {
    &quot;path&quot;: &quot;assets/bank/user-cash&quot;,
    &quot;ledger&quot;: {
      &quot;ik&quot;: &quot;quickstart-ledger&quot;
    }
  }
}</code></pre></div></div></div></div></section><section id="query-data-ledger-lines-filter-by-posted" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Filter by posted</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-lines-filter-by-posted">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">posted</code> to filter Ledger Lines by their posted timestamp between any two points in time:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerAccountLines</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetLedgerAccountLines(
  $ledgerAccount: LedgerAccountMatchInput!,
  $filter: LedgerLinesFilterSet!
) {
  ledgerAccount(ledgerAccount: $ledgerAccount) {
    path
    name
    lines(filter: $filter) {
      nodes {
        id
        amount
        currency {
          code
          customCurrencyId
        }
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerAccountLines Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerAccount&quot;: {
    &quot;path&quot;: &quot;assets/banks/user-cash&quot;,
    &quot;ledger&quot;: {
      &quot;ik&quot;: &quot;quickstart-ledger&quot;
    }
  },
  &quot;filter&quot;: {
    &quot;posted&quot;: {
      &quot;after&quot;: &quot;1969-07-01T00:00:00.000Z&quot;,
      &quot;before&quot;: &quot;1969-07-30T23:59:59.999Z&quot;
    }
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">after</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">before</code> filters are inclusive, so use timestamps for the first and last moments of the period you&#x27;re querying for.</p></div></section><section id="query-data-ledger-lines-filter-by-key" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Filter by key</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-lines-filter-by-key">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">key</code> to filter Ledger Lines by their keys in your Schema:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerAccountLines</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetLedgerAccountLines(
  $ledgerAccount: LedgerAccountMatchInput!,
  $filter: LedgerLinesFilterSet!
) {
  ledgerAccount(ledgerAccount: $ledgerAccount) {
    path
    name
    lines(filter: $filter) {
      nodes {
        id
        amount
        currency {
          code
          customCurrencyId
        }
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerAccountLines Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerAccount&quot;: {
    &quot;path&quot;: &quot;assets/banks/user-cash&quot;,
    &quot;ledger&quot;: {
      &quot;ik&quot;: &quot;quickstart-ledger&quot;
    }
  },
  &quot;linesFilter&quot;: {
    &quot;key&quot;: {
      &quot;equalTo&quot;: &quot;increase_user_balance&quot;
    }
  }
}</code></pre></div></div></div></div></section></div></div></section><section id="query-data-ledger-entries" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">e. </span>Ledger Entries</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-entries">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><section id="query-data-ledger-entries-lookup" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Lookup</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-entries-lookup">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ledgerEntry</code> query to retrieve a Ledger Entry by its IK. You provide the IK when posting entries via <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">addLedgerEntry</code>:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerEntry</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetLedgerEntry(
  $ledgerEntry: LedgerEntryMatchInput!
) {
  ledgerEntry(ledgerEntry: $ledgerEntry) {
    id
    ik
    ledger {
      id
      name
    }
    lines {
      nodes {
        amount
        currency {
          code
          customCurrencyId
        }
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerEntry Variables - by IK</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerEntry&quot;: {
    &quot;ik&quot;: &quot;&lt;ledger entry IK&gt;&quot;
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">When you <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#reconcile-transactions-reconcile-a-tx">Reconcile transactions</a> using <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">reconcileTx</code>, the IK is the Transaction&#x27;s <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">externalId</code>. Query <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">entry.ik</code> in <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ReconcileTxResult</code> to retrieve it:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Querying IK in reconcileTx</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation ReconcileTx(
  $entry: LedgerEntryInput!
) {
  reconcileTx(entry: $entry) {
    ... on ReconcileTxResult {
      entry {
        ik
        type
        created
        posted
      }
      lines {
        amount
        account {
          path
        }
      }
    }
    ... on Error {
      code
      message
    }
  }
}
</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A Ledger Entry can also be retrieved using its ID:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerEntry Variables - by ID</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerEntry&quot;: {
    &quot;id&quot;: &quot;&lt;ledger entry ID&gt;&quot;
  }
}</code></pre></div></div></div></div></section><section id="query-data-ledger-entries-lookup-multiple" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Lookup multiple</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-entries-lookup-multiple">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can also retrieve multiple Ledger Entries using the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ledgerEntries</code> query and the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">in</code> filter:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">ListLedgerEntries</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query ListLedgerEntries(
  $ledger: LedgerMatchInput!
  $filter: LedgerEntriesFilterSet!
) {
  ledger(ledger: $ledger) {
    ledgerEntries(filter: $filter) {
      nodes {
        ik
        type
        posted
        lines {
          nodes {
            amount
            account {
              path
            }
          }
        }
      }
      pageInfo {
        hasNextPage
        endCursor
        hasPreviousPage
        startCursor
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">ListLedgerEntries Variables with In</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  },
  &quot;filter&quot;: {
    &quot;ledgerEntry&quot;: {
      &quot;in&quot;: [
        {
          &quot;ik&quot;: &quot;fund-user-1-account&quot;
        },
        {
          &quot;ik&quot;: &quot;fund-user-2-account&quot;
        }
      ]
    }
  }
}</code></pre></div></div></div></div></section><section id="query-data-ledger-entries-list-by-group" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">List by group</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-entries-list-by-group">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can get a <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#query-data-basics-pagination">paginated</a> list of Ledger Entries in a given group using the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ledgerEntryGroup.ledgerEntries</code> expansion:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetGroupedLedgerEntries</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetGroupedLedgerEntries(
  $ledger: LedgerMatchInput!,
  $entryGroup: EntryGroupMatchInput!,
) {
  ledger(ledger: $ledger) {
    ledgerEntryGroup(ledgerEntryGroup: $entryGroup) {
      ledgerEntries {
        nodes {
          ik
          description
          posted
        }
        pageInfo {
          endCursor
          hasNextPage
          hasPreviousPage
          startCursor
        }
      }
    }
  }
}</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetGroupedLedgerEntries Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerEntryGroup&quot;: {
    &quot;key&quot;: &quot;withdrawal&quot;,
    &quot;value&quot;: &quot;12345&quot;
  },
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The response is:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetGroupedLedgerEntries Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;ledger&quot;: {
      &quot;ledgerEntryGroup&quot;: {
        &quot;ledgerEntries&quot;: {
          &quot;nodes&quot;: [
            {
              &quot;ik&quot;: &quot;ledger-entry-2&quot;,
              &quot;description&quot;:&quot;User user-id withdrawal settled&quot;,
              &quot;posted&quot;: &quot;1969-06-21T02:56:05.000Z&quot;
            },
            {
              &quot;ik&quot;: &quot;ledger-entry-1&quot;,
              &quot;description&quot;: &quot;User user-id initiated withdrawal for 50000.&quot;,
              &quot;posted&quot;: &quot;1969-06-16T13:32:00.000Z&quot;
            }
          ],
          &quot;pageInfo&quot;: {
            &quot;hasNextPage&quot;: false,
            &quot;endCursor&quot;: null,
            &quot;hasPreviousPage&quot;: false,
            &quot;startCursor&quot;: null
          }
        }
      }
    }
  }
}</code></pre></div></div></div></div></section><section id="query-data-ledger-entries-expand-lines" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Expand lines</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-entries-expand-lines">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ledgerEntry.lines</code> expansion to list the Ledger Lines in a Ledger Entry:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerEntryLines</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetLedgerEntryLines(
  $ledgerEntry: LedgerEntryMatchInput!
) {
  ledgerEntry(ledgerEntry: $ledgerEntry) {
    id
    ik
    lines {
      nodes {
        account {
          path
        }
        amount
        currency {
          code
          customCurrencyId
        }
      }
      pageInfo {
        endCursor
        hasNextPage
        hasPreviousPage
        startCursor
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerEntryLines Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerEntry&quot;: {
    &quot;ik&quot;: &quot;&lt;ledger entry IK&gt;&quot;
  }
}</code></pre></div></div></div></div></section><section id="query-data-ledger-entries-filter-by-posted" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Filter by posted</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-entries-filter-by-posted">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Similar to Ledger Lines, Ledger Entries can be filtered by their posted timestamp between any two points in time using <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">posted</code>:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerEntries</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query FilterLedgerEntries(
  $ledger: LedgerMatchInput!,
  $entriesFilter: LedgerEntriesFilterSet!
) {
  ledger(ledger: $ledger) {
    ledgerEntries(filter: $entriesFilter) {
      nodes {
        ik
        type
        posted
        lines {
          nodes {
            amount
            account {
              path
            }
          }
        }
      }
    }
  }
}
</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">after</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">before</code> to filter Ledger Entries by their posted timestamp between any two points in time:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerEntries Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  },
  &quot;entriesFilter&quot;: {
    &quot;posted&quot;: {
      &quot;after&quot;: &quot;01-01-1968&quot;,
      &quot;before&quot;: &quot;01-01-1969&quot;
    }
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">date</code> to filter Ledger Entries by the date they were posted on:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerEntries Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  },
  &quot;entriesFilter&quot;: {
    &quot;date&quot;: {
      &quot;equalTo&quot;: &quot;12-31-1968&quot;
    }
  }
}</code></pre></div></div></div></div></section><section id="query-data-ledger-entries-filter-by-type" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Filter by type</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-entries-filter-by-type">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">type</code> to filter Ledger Entries by their type defined in your Schema:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerEntries</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query FilterLedgerEntries(
  $ledger: LedgerMatchInput!,
  $entriesFilter: LedgerEntriesFilterSet!
) {
  ledger(ledger: $ledger) {
    ledgerEntries(filter: $entriesFilter) {
      nodes {
        ik
        type
        posted
        lines {
          nodes {
            amount
            account {
              path
            }
          }
        }
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerEntries Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  },
  &quot;entriesFilter&quot;: {
    &quot;type&quot;: {
      &quot;in&quot;: [&quot;withdrawal&quot;, &quot;p2p_transfer&quot;]
    }
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To retrieve Ledger Entries of multiple types, use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">in</code> operator:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerEntries Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  },
  &quot;entriesFilter&quot;: {
    &quot;type&quot;: {
      &quot;in&quot;: [&quot;withdrawal&quot;, &quot;p2p_transfer&quot;]
    }
  }
}</code></pre></div></div></div></div></section><section id="query-data-ledger-entries-filter-by-tag" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Filter by tag</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-entries-filter-by-tag">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">tag</code> to filter Ledger Entries by <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#store-metadata">tags</a>:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerEntries</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query FilterLedgerEntries(
  $ledger: LedgerMatchInput!,
  $entriesFilter: LedgerEntriesFilterSet!
) {
  ledger(ledger: $ledger) {
    ledgerEntries(filter: $entriesFilter) {
      nodes {
        ik
        type
        posted
        tags {
          key
          value
        }
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerEntries Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  },
  &quot;entriesFilter&quot;: {
    &quot;tag&quot;: {
      &quot;equalTo&quot;: {
        &quot;key&quot;: &quot;user_id&quot;,
        &quot;value&quot;: &quot;user-1&quot;
      }
    }
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">in</code> operator to return Ledger Entries that have any of the specified tags:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">FilterLedgerEntries Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  },
  &quot;entriesFilter&quot;: {
    &quot;tag&quot;: {
      &quot;in&quot;: [{
        &quot;key&quot;: &quot;user_id&quot;,
        &quot;value&quot;: &quot;user-1&quot;
      },{
        &quot;key&quot;: &quot;user_id&quot;,
        &quot;value&quot;: &quot;user-2&quot;
      }]
    }
  }
}</code></pre></div></div></div></div></section></div></div></section><section id="query-data-ledger-entry-groups" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">f. </span>Ledger Entry Groups</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-entry-groups">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">See <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#group-ledger-entries">Group Ledger Entries</a> for more information about how to use Ledger Entry Groups.</p><section id="query-data-ledger-entry-groups-lookup" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Lookup</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-entry-groups-lookup">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ledger.ledgerEntryGroup</code> expansion to lookup a group by key and value.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerEntryGroup</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetLedgerEntryGroup(
  $ledger: LedgerMatchInput!
  $entryGroup: EntryGroupMatchInput!
) {
  ledger(ledger: $ledger) {
    ledgerEntryGroup(ledgerEntryGroup: $entryGroup) {
      key
      value
      created
    }
  }
}</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerEntryGroup Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;entryGroup&quot;: {
    &quot;key&quot;: &quot;withdrawal&quot;,
    &quot;value&quot;: &quot;12345&quot;
  },
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The response is:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerEntryGroup Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;ledger&quot;: {
      &quot;ledgerEntryGroup&quot;: {
        &quot;key&quot;: &quot;withdrawal&quot;,
        &quot;value&quot;: &quot;12345&quot;,
        &quot;created&quot;: &quot;1969-06-16T13:32:00.000Z&quot;
      }
    }
  }
}</code></pre></div></div></div></div></section><section id="query-data-ledger-entry-groups-list" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">List</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-entry-groups-list">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">ListLedgerEntryGroups</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query ListLedgerEntryGroups(
  $ledger: LedgerMatchInput!
) {
  ledger(ledger: $ledger) {
    ledgerEntryGroups {
      nodes {
        key
        value
        created
      }
      pageInfo {
        endCursor
        hasNextPage
        hasPreviousPage
        startCursor
      }
    }
  }
}</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">ListLedgerEntryGroups Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The response is:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">ListLedgerEntryGroups Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;ledger&quot;: {
      &quot;ledgerEntryGroups&quot;: {
        &quot;nodes&quot;: [
          {
            &quot;key&quot;: &quot;withdrawal&quot;,
            &quot;value&quot;: &quot;12345&quot;,
            &quot;created&quot;: &quot;1969-06-16T13:32:00.000Z&quot;
          },
          {
            &quot;key&quot;: &quot;withdrawal&quot;,
            &quot;value&quot;: &quot;54321&quot;,
            &quot;created&quot;: &quot;1969-06-21T02:56:05.000Z&quot;
          }
        ],
        &quot;pageInfo&quot;: {
          &quot;endCursor&quot;: null,
          &quot;hasNextPage&quot;: false,
          &quot;hasPreviousPage&quot;: false,
          &quot;startCursor&quot;: null
        }
      }
    }
  }
}</code></pre></div></div></div></div></section><section id="query-data-ledger-entry-groups-filter" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Filter</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-ledger-entry-groups-filter">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can filter groups by <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">key</code> and/or <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">created</code></p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">ListLedgerEntryGroups</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query ListLedgerEntryGroups(
  $ledger: LedgerMatchInput!
  $filter: LedgerEntryGroupsFilterSet,
) {
  ledger(ledger: $ledger) {
    ledgerEntryGroups(filter: $filter) {
      nodes {
        key
        value
        created
      }
      pageInfo {
        endCursor
        hasNextPage
        hasPreviousPage
        startCursor
      }
    }
  }
}</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">ListLedgerEntryGroups Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  },
  &quot;filter&quot;: {
    &quot;key&quot;: {
      &quot;equalTo&quot;: &quot;withdrawal&quot;
    },
    &quot;created&quot;: {
      &quot;before&quot;: &quot;1969-06-20T00:00:00.000Z&quot;
    }
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The response is:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">ListLedgerEntryGroups Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;ledger&quot;: {
      &quot;ledgerEntryGroups&quot;: {
        &quot;nodes&quot;: [
          {
            &quot;key&quot;: &quot;withdrawal&quot;,
            &quot;value&quot;: &quot;12345&quot;,
            &quot;created&quot;: &quot;1969-06-16T13:32:00.000Z&quot;
          }
        ],
        &quot;pageInfo&quot;: {
          &quot;endCursor&quot;: null,
          &quot;hasNextPage&quot;: false,
          &quot;hasPreviousPage&quot;: false,
          &quot;startCursor&quot;: null
        }
      }
    }
  }
}</code></pre></div></div></div></div></section></div></div></section><section id="query-data-links" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">g. </span>Links</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-links">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><section id="query-data-links-lookup" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Lookup</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-links-lookup">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">link</code> query to retrieve a Link by ID:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLink</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetLink($link: LinkMatchInput!) {
  link(link: $link) {
    __typename
    name
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLink Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;link&quot;: {
    &quot;id&quot;: &quot;&lt;Link ID&gt;&quot;
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">__typename</code> field will indicate whether it is a <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#reconcile-transactions-native-links">Native Link</a> or a <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#reconcile-transactions-link-any-system">Custom Link</a>.</p></div></section><section id="query-data-links-external-accounts" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">External Accounts</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-links-external-accounts">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">link.externalAccounts</code> to list External Accounts represented by the Link.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLinkExternalAccounts</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetLinkExternalAccounts($link: LinkMatchInput!) {
  link(link: $link) {
    id
    externalAccounts {
      nodes {
        name
        id
        externalId
      }
      pageInfo {
        hasNextPage
        endCursor
        hasPreviousPage
        startCursor
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLinkExternalAccounts Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;link&quot;: {
    &quot;id&quot;: &quot;&lt;Link ID&gt;&quot;
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The response is a <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#query-data-basics-pagination">paginated</a> list of External Accounts.</p></div></section></div></div></section><section id="query-data-external-accounts" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">h. </span>External Accounts</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-external-accounts">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><section id="query-data-external-accounts-lookup" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Lookup</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-external-accounts-lookup">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">externalAccount</code> query to retrieve an ExternalAccount by its ID at your external system:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetExternalAccountByExternalIdAndLinkId</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetExternalAccount(
  $externalId: ID!
  $linkId: ID!
) {
  externalAccount(
    externalAccount: {
      externalId: $externalId
      linkId: $linkId
    }
  ) {
    name
    link {
      __typename
      id
      name
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetExternalAccountByExternalIdAndLinkId Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;externalId&quot;: &quot;&lt;External ID&gt;&quot;,
  &quot;linkId&quot;: &quot;&lt;Link ID&gt;&quot;
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Or by its <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> ID:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetExternalAccountByFragmentID</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetExternalAccount($id: ID!) {
  externalAccount(externalAccount: { id: $id }) {
    name
    externalId
    linkId
    link {
      __typename
      id
      name
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetExternalAccountByFragmentID Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;id&quot;: &quot;&lt;Fragment External Account ID&gt;&quot;
}</code></pre></div></div></div></div></section><section id="query-data-external-accounts-txs" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Txs</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-external-accounts-txs">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">externalAccount.txs</code> query to list Txs synced to an External Account:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">ListExternalAccountTxs</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query ListExternalAccountTxs(
  $externalAccount: ExternalAccountMatchInput!
  $after: String
  $first: Int
  $before: String
) {
  externalAccount(
    externalAccount: $externalAccount
  ) {
    externalId
    link {
      __typename
      id
      name
    }
    txs(
      after: $after
      first: $first
      before: $before
    ) {
      nodes {
        externalId
      }
      pageInfo {
        hasNextPage
        endCursor
        hasPreviousPage
        startCursor
      }
    }
  }
}
</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You may optionally specify <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">before</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">after</code> to paginate the results and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">first</code> to specify the page size.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">ListExternalAccountTxs Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;externalAccount&quot;: {
    &quot;externalId&quot;: &quot;&lt;External ID&gt;&quot;,
    &quot;linkId&quot;: &quot;&lt;Link ID&gt;&quot;
  },
  &quot;after&quot;: &quot;2023-07-01T00:00:00.000Z&quot;,
  &quot;before&quot;: &quot;2023-07-30T23:59:59.999Z&quot;,
  &quot;first&quot;: 20
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The response is a <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#query-data-basics-pagination">paginated</a> list of Txs.</p></div></section><section id="query-data-external-accounts-linked-accounts" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Linked Accounts</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-external-accounts-linked-accounts">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">externalAccount.ledgerAccounts</code> query to list Ledger Accounts linked to this External Account:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetExternalAccountLinkedAccounts</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetExternalAccountLinkedAccounts(
  $externalAccount: ExternalAccountMatchInput!
) {
  externalAccount(
    externalAccount: $externalAccount
  ) {
    externalId
    name
    link {
      __typename
      id
      name
    }
    ledgerAccounts {
      nodes {
        path
        name
        type
      }
      pageInfo {
        hasNextPage
        endCursor
        hasPreviousPage
        startCursor
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetExternalAccountLinkedAccounts Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;externalAccount&quot;: {
    &quot;externalId&quot;: &quot;&lt;External ID&gt;&quot;,
    &quot;linkId&quot;: &quot;&lt;Link ID&gt;&quot;
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The response is a <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#query-data-basics-pagination">paginated</a> list of Ledger Accounts.</p></div></section></div></div></section><section id="query-data-txs" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">i. </span>Txs</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-txs">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><section id="query-data-txs-lookup" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Lookup</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-txs-lookup">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">tx</code> query to retrieve a Tx by its ID and Account ID at your external system:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetTxByExternalIds</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetTx(
  $externalId: ID!
  $externalAccountId: ID!
  $linkId: ID!
) {
  tx(
    tx: {
      externalId: $externalId
      externalAccountId: $externalAccountId
      linkId: $linkId
    }
  ) {
    id
    description
    amount
    currency {
      code
    }
    externalId
    link {
      id
    }
    externalAccount {
      id
      externalId
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetTxByExternalIds Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;externalAccountId&quot;: &quot;&lt;External Account ID&gt;&quot;,
  &quot;external&quot;: &quot;&lt;External Tx ID&gt;&quot;,
  &quot;linkId&quot;: &quot;&lt;Link ID&gt;&quot;
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Or by its <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> ID:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetTxByFragmentID</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetTx(
  $id: ID!
) {
  tx(
    tx: {
      id: $id
    }
  ) {
    id
    description
    amount
    currency {
      code
    }
    externalId
    link {
      id
    }
    externalAccount {
      id
      externalId
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetTxByFragmentID Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;id&quot;: &quot;&lt;Fragment ID&gt;&quot;
}</code></pre></div></div></div></div></section><section id="query-data-txs-unreconciled" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Unreconciled</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-txs-unreconciled">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ledgerAccount.unreconciledTx</code> query to list a Ledger Account&#x27;s unreconciled Txs:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetUnreconciledTxs</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetUnreconciledTxs(
  $ledgerAccount: LedgerAccountMatchInput!
  $after: String
  $first: Int
  $before: String
) {
  ledgerAccount(ledgerAccount: $ledgerAccount) {
    path
    unreconciledTxs(
      after: $after
      first: $first
      before: $before
    ) {
      nodes {
        id
        description
        amount
        currency {
          code
        }
        externalId
        link {
          id
        }
        externalAccount {
          id
          externalId
        }
      }
      pageInfo {
        hasNextPage
        endCursor
        hasPreviousPage
        startCursor
      }
    }
  }
}
</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You may optionally specify <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">before</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">after</code> to paginate the results and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">first</code> to specify the page size.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetUnreconciledTxs Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerAccount&quot;: {
    &quot;path&quot;: &quot;assets/bank/user-cash&quot;,
    &quot;ledger&quot;: {
      &quot;ik&quot;: &quot;quickstart-ledger&quot;
    }
  },
  &quot;after&quot;: &quot;2023-07-01T00:00:00.000Z&quot;,
  &quot;before&quot;: &quot;2023-07-30T23:59:59.999Z&quot;,
  &quot;first&quot;: 20
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The response is a <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#query-data-basics-pagination">paginated</a> list of Txs.</p></div></section></div></div></section><section id="query-data-schemas" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">j. </span>Schemas</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-schemas">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><section id="query-data-schemas-lookup" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Lookup</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-schemas-lookup">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">schema</code> query to retrieve a Schema by its key:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetSchema</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetSchema($schema: SchemaMatchInput!) {
  schema(schema: $schema) {
    key
    name
    latestVersion: version {
      created
      version
    }
    firstVersion: version(version: 1) {
      created
      version
    }
  }
}
</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">When retrieving a Schema, use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">version</code> argument to query a specific version of the Schema. By default, the latest version is returned:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetSchema Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;schema&quot;: {
    &quot;key&quot;: &quot;quickstart-schema&quot;
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The JSON of a Schema version can be retrieved by querying the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">json</code> field:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLatestSchemaJSON</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetLatestSchemaJSON(
  $schema: SchemaMatchInput!
) {
  schema(schema: $schema) {
    key
    name
    version {
      created
      version
      json
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLatestSchemaJSON Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;schema&quot;: {
    &quot;key&quot;: &quot;quickstart-schema&quot;
  }
}</code></pre></div></div></div></div></section><section id="query-data-schemas-list-versions" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">List versions</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-schemas-list-versions">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">schema.versions</code> query to query all the versions of your Schema:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">ListSchemaVersions</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query ListSchemaVersions(
  $schema: SchemaMatchInput!
) {
  schema(schema: $schema) {
    key
    name
    versions {
      nodes {
        created
        version
        json
      }
    }
  }
}
</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The response is a <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#query-data-basics-pagination">paginated</a> list of your Schema&#x27;s versions:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">ListSchemaVersions Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;schema&quot;: {
    &quot;key&quot;: &quot;quickstart-schema&quot;
  }
}</code></pre></div></div></div></div></section><section id="query-data-schemas-list-ledgers" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">List Ledgers</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-schemas-list-ledgers">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">schema.ledgers</code> query to list the Ledgers created off a Schema:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">ListSchemaLedgers</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query ListSchemaLedgers(
  $schema: SchemaMatchInput!
) {
  schema(schema: $schema) {
    key
    name
    ledgers {
      nodes {
        ik
        name
        created
        balanceUTCOffset
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">ListSchemaLedgers Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;schema&quot;: {
    &quot;key&quot;: &quot;quickstart-schema&quot;
  }
}</code></pre></div></div></div></div></section><section id="query-data-schemas-migration-status" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Migration status</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#query-data-schemas-migration-status">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2"><span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> asynchronously migrates Ledgers when their Schema is updated. The current status of a Ledger&#x27;s migration can be queried using the API, via <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">version.migrations</code>:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerMigrationStatus</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetLedgerMigrationStatus(
  $schema: SchemaMatchInput!
) {
  schema(schema: $schema) {
    key
    name
    latestVersion: version {
      migrations {
        nodes {
          ledger {
            ik
            name
          }
          status
        }
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">ListSchemaLedgers Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;schema&quot;: {
    &quot;key&quot;: &quot;quickstart-schema&quot;
  }
}</code></pre></div></div></div></div></section></div></div></section></div></section>
<section id="generate-reports" class="first:0 pt-f6 tablet:pt-f3 pb-[2em] scroll-mt-[90px]"><span class="TopicContainer-title group-one text-s20 tablet:text-fnormal laptop:text-s20 block mb-[1em] "><span class="text-main-500">J<!-- --> </span>Generate reports<span class="pl-[0.5em] phone:invisible phone:group-one-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#generate-reports">#</a></span></span><div class="TopicContainer-content py-[2em] first-of-type:pt-0 ml-0 phone:ml-[1.8em] tablet:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2"><span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> supports queries for generating common financial reports.</p><div class="pt-f2"><div class="hidden tablet:block"><svg width="100%" height="100%" viewBox="0 0 621 450" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="621" height="450" fill="rgb(var(--colour-negative))"></rect><rect x="153" y="189" width="81" height="99" fill="rgb(var(--colour-negative))" stroke="rgb(var(--colour-main))"></rect><rect x="144" y="180" width="81" height="99" fill="rgb(var(--colour-negative))" stroke="rgb(var(--colour-main))"></rect><line x1="306" y1="234" x2="260.251" y2="234" stroke="rgb(var(--colour-main-500))"></line><path d="M269.251 243L260.251 234L269.251 225" stroke="rgb(var(--colour-main-500))"></path><path d="M22.55 26.82H25.924V32H24.972L24.86 30.656C24.384 31.762 23.502 32.252 22.41 32.252C20.072 32.252 18.588 30.39 18.588 27.17C18.588 23.838 20.17 21.99 22.55 21.99C24.258 21.99 25.532 22.844 25.952 24.916H24.622C24.356 23.572 23.572 23.138 22.55 23.138C20.828 23.138 19.946 24.678 19.946 27.1C19.946 29.83 20.94 31.104 22.438 31.104C24.062 31.104 24.776 29.858 24.776 28.248V27.968H22.55V26.82ZM34.1723 29.732C33.9203 31.272 32.7583 32.252 31.0363 32.252C28.8243 32.252 27.7043 30.642 27.7043 28.402C27.7043 25.952 29.0343 24.44 31.0643 24.44C33.3323 24.44 34.3263 26.134 34.3263 28.682H28.9223C28.9643 30.124 29.6643 31.174 31.0783 31.174C32.0303 31.174 32.6743 30.712 32.9963 29.732H34.1723ZM31.0503 25.518C29.7343 25.518 29.0483 26.498 28.9503 27.73H33.0663C33.0663 26.512 32.3103 25.518 31.0503 25.518ZM36.7226 32V24.664H37.8006V25.882C38.3746 24.986 39.0746 24.454 40.2366 24.454C41.5106 24.454 42.5606 25.098 42.5606 26.456V32H41.3986V26.918C41.3986 25.938 40.6986 25.476 39.8866 25.476C38.5706 25.476 37.8846 26.61 37.8846 27.87V32H36.7226ZM51.4809 29.732C51.2289 31.272 50.0669 32.252 48.3449 32.252C46.1329 32.252 45.0129 30.642 45.0129 28.402C45.0129 25.952 46.3429 24.44 48.3729 24.44C50.6409 24.44 51.6349 26.134 51.6349 28.682H46.2309C46.2729 30.124 46.9729 31.174 48.3869 31.174C49.3389 31.174 49.9829 30.712 50.3049 29.732H51.4809ZM48.3589 25.518C47.0429 25.518 46.3569 26.498 46.2589 27.73H50.3749C50.3749 26.512 49.6189 25.518 48.3589 25.518ZM54.3532 32V24.664H55.4312V26.246C55.9212 25.196 56.8592 24.454 58.0632 24.454C59.7432 24.454 60.6112 25.378 60.7512 26.834H59.5892C59.4212 25.952 58.9452 25.476 57.9512 25.476C56.4812 25.476 55.5292 26.722 55.5292 28.444V32H54.3532ZM69.2375 31.23V32.112C68.9435 32.196 68.7195 32.238 68.5375 32.238C67.7255 32.238 67.3195 31.888 67.2355 31.132C66.4095 31.944 65.6815 32.252 64.7435 32.252C63.3155 32.252 62.3495 31.454 62.3495 30.096C62.3495 28.584 63.4975 28.038 64.3515 27.898C64.6035 27.856 65.1495 27.772 65.9755 27.66C66.9135 27.534 67.2215 27.352 67.2215 26.876V26.624C67.2215 25.896 66.6475 25.532 65.5415 25.532C64.4635 25.532 63.9315 25.938 63.8335 26.834H62.6575C62.6855 25.14 63.8615 24.454 65.5975 24.454C67.4035 24.454 68.3555 25.154 68.3555 26.456V30.684C68.3555 31.062 68.5655 31.258 68.9855 31.258C69.0555 31.258 69.1675 31.244 69.2375 31.23ZM67.2215 29.452V28.29C66.7315 28.514 65.9335 28.64 65.3175 28.71C64.2255 28.836 63.5395 29.144 63.5395 30.068C63.5395 30.796 64.0995 31.23 65.0375 31.23C66.0595 31.23 67.2215 30.474 67.2215 29.452ZM74.3078 24.664H77.1918V25.616H74.3078V29.704C74.3078 30.782 74.8818 31.146 75.9458 31.146C76.4218 31.146 76.8418 31.104 77.1918 31.006V32.028C76.7298 32.168 76.2678 32.196 75.8758 32.196C74.0978 32.196 73.1458 31.51 73.1458 29.914V25.616H71.0318V24.664H73.1458V22.648H74.3078V24.664ZM86.0981 29.732C85.8461 31.272 84.6841 32.252 82.9621 32.252C80.7501 32.252 79.6301 30.642 79.6301 28.402C79.6301 25.952 80.9601 24.44 82.9901 24.44C85.2581 24.44 86.2521 26.134 86.2521 28.682H80.8481C80.8901 30.124 81.5901 31.174 83.0041 31.174C83.9561 31.174 84.6001 30.712 84.9221 29.732H86.0981ZM82.9761 25.518C81.6601 25.518 80.9741 26.498 80.8761 27.73H84.9921C84.9921 26.512 84.2361 25.518 82.9761 25.518ZM100.593 27.982H98.4787V32H97.2047V22.214H100.635C102.511 22.214 103.757 23.082 103.757 24.888C103.757 26.022 103.295 26.764 102.133 27.338C103.169 27.758 103.421 28.192 103.505 29.62L103.547 30.348C103.575 30.824 103.631 31.384 104.051 31.678V32H102.609C102.399 31.566 102.245 31.006 102.245 30.362V29.746C102.245 28.598 101.755 27.982 100.593 27.982ZM98.4787 23.32V26.876H100.383C101.657 26.876 102.427 26.386 102.427 25.028C102.427 23.838 101.671 23.32 100.383 23.32H98.4787ZM112.061 29.732C111.809 31.272 110.647 32.252 108.925 32.252C106.713 32.252 105.593 30.642 105.593 28.402C105.593 25.952 106.923 24.44 108.953 24.44C111.221 24.44 112.215 26.134 112.215 28.682H106.811C106.853 30.124 107.553 31.174 108.967 31.174C109.919 31.174 110.563 30.712 110.885 29.732H112.061ZM108.939 25.518C107.623 25.518 106.937 26.498 106.839 27.73H110.955C110.955 26.512 110.199 25.518 108.939 25.518ZM115.591 35.052H114.415V24.664H115.493V25.756C116.039 24.874 116.809 24.44 117.831 24.44C120.015 24.44 120.981 26.302 120.981 28.416C120.981 30.516 119.945 32.252 117.845 32.252C116.893 32.252 116.207 31.93 115.591 31.16V35.052ZM117.635 25.532C116.179 25.532 115.591 26.918 115.591 28.346C115.591 29.774 116.179 31.16 117.635 31.16C119.105 31.16 119.763 29.802 119.763 28.388C119.763 26.904 119.119 25.532 117.635 25.532ZM126.178 24.44C128.432 24.44 129.496 26.12 129.496 28.346C129.496 30.572 128.432 32.252 126.178 32.252C123.924 32.252 122.86 30.572 122.86 28.346C122.86 26.12 123.924 24.44 126.178 24.44ZM126.178 25.518C124.694 25.518 124.078 26.848 124.078 28.346C124.078 29.844 124.694 31.174 126.178 31.174C127.662 31.174 128.278 29.844 128.278 28.346C128.278 26.848 127.662 25.518 126.178 25.518ZM132.242 32V24.664H133.32V26.246C133.81 25.196 134.748 24.454 135.952 24.454C137.632 24.454 138.5 25.378 138.64 26.834H137.478C137.31 25.952 136.834 25.476 135.84 25.476C134.37 25.476 133.418 26.722 133.418 28.444V32H132.242ZM143.542 24.664H146.426V25.616H143.542V29.704C143.542 30.782 144.116 31.146 145.18 31.146C145.656 31.146 146.076 31.104 146.426 31.006V32.028C145.964 32.168 145.502 32.196 145.11 32.196C143.332 32.196 142.38 31.51 142.38 29.914V25.616H140.266V24.664H142.38V22.648H143.542V24.664ZM154.828 26.666H153.61C153.582 25.938 153.022 25.476 152.14 25.476C151.188 25.476 150.544 25.896 150.544 26.554C150.544 27.072 150.908 27.38 151.594 27.562L153.26 27.996C154.492 28.318 155.122 28.92 155.122 29.956C155.122 31.384 154.002 32.252 152.182 32.252C150.264 32.252 149.256 31.412 149.172 29.774H150.404C150.516 30.768 151.118 31.216 152.21 31.216C153.246 31.216 153.932 30.824 153.932 30.138C153.932 29.508 153.624 29.242 152.826 29.032L151.286 28.626C149.956 28.276 149.354 27.73 149.354 26.61C149.354 25.28 150.446 24.44 152.168 24.44C153.876 24.44 154.8 25.28 154.828 26.666Z" fill="rgb(var(--colour-main))"></path><path d="M127.274 113V103.214H130.844C132.594 103.214 133.994 104.208 133.994 106.14C133.994 108.072 132.594 109.066 130.844 109.066H128.548V113H127.274ZM128.548 107.96H130.676C131.922 107.96 132.664 107.26 132.664 106.14C132.664 105.02 131.922 104.32 130.676 104.32H128.548V107.96ZM136.39 113V105.664H137.468V107.246C137.958 106.196 138.896 105.454 140.1 105.454C141.78 105.454 142.648 106.378 142.788 107.834H141.626C141.458 106.952 140.982 106.476 139.988 106.476C138.518 106.476 137.566 107.722 137.566 109.444V113H136.39ZM147.635 105.44C149.889 105.44 150.953 107.12 150.953 109.346C150.953 111.572 149.889 113.252 147.635 113.252C145.381 113.252 144.317 111.572 144.317 109.346C144.317 107.12 145.381 105.44 147.635 105.44ZM147.635 106.518C146.151 106.518 145.535 107.848 145.535 109.346C145.535 110.844 146.151 112.174 147.635 112.174C149.119 112.174 149.735 110.844 149.735 109.346C149.735 107.848 149.119 106.518 147.635 106.518ZM158.235 102.794H159.397V113H158.361V111.964C157.773 112.818 156.989 113.252 156.023 113.252C153.853 113.252 152.831 111.516 152.831 109.262C152.831 107.148 153.895 105.44 155.981 105.44C156.975 105.44 157.731 105.818 158.235 106.574V102.794ZM156.177 106.532C154.805 106.532 154.049 107.764 154.049 109.346C154.049 110.844 154.693 112.16 156.191 112.16C157.661 112.16 158.235 110.746 158.235 109.388C158.235 107.918 157.647 106.532 156.177 106.532ZM167.869 105.664V113H166.819V111.908C166.147 112.874 165.447 113.252 164.369 113.252C163.739 113.252 163.207 113.112 162.787 112.818C162.283 112.454 162.031 111.936 162.031 111.25V105.664H163.193V110.788C163.193 111.278 163.361 111.656 163.683 111.908C163.949 112.118 164.299 112.23 164.705 112.23C165.251 112.23 165.713 112.034 166.091 111.628C166.497 111.194 166.707 110.564 166.707 109.738V105.664H167.869ZM176.733 108.086H175.557C175.431 107.12 174.787 106.518 173.765 106.518C172.253 106.518 171.665 107.96 171.665 109.416C171.665 110.872 172.323 112.174 173.793 112.174C174.815 112.174 175.445 111.6 175.641 110.438H176.817C176.663 112.202 175.571 113.252 173.765 113.252C171.623 113.252 170.447 111.572 170.447 109.416C170.447 107.218 171.595 105.44 173.779 105.44C175.571 105.44 176.691 106.532 176.733 108.086ZM182.308 105.664H185.192V106.616H182.308V110.704C182.308 111.782 182.882 112.146 183.946 112.146C184.422 112.146 184.842 112.104 185.192 112.006V113.028C184.73 113.168 184.268 113.196 183.876 113.196C182.098 113.196 181.146 112.51 181.146 110.914V106.616H179.032V105.664H181.146V103.648H182.308V105.664Z" fill="rgb(var(--colour-main-500))"></path><path d="M312.874 113L312.006 110.074H308.632L307.764 113H306.42L309.514 103.214H311.152L314.232 113H312.874ZM308.954 108.982H311.684L310.312 104.39L308.954 108.982ZM315.928 113V103.214H319.498C321.248 103.214 322.648 104.208 322.648 106.14C322.648 108.072 321.248 109.066 319.498 109.066H317.202V113H315.928ZM317.202 107.96H319.33C320.576 107.96 321.318 107.26 321.318 106.14C321.318 105.02 320.576 104.32 319.33 104.32H317.202V107.96ZM324.905 113V111.908H326.977V104.306H324.905V103.214H330.379V104.306H328.293V111.908H330.379V113H324.905Z" fill="rgb(var(--colour-main-500))"></path><rect x="306" y="126" width="207" height="216" stroke="rgb(var(--colour-main-500))"></rect><rect x="126" y="126" width="126" height="216" rx="16" stroke="rgb(var(--colour-main-500))"></rect><path d="M159.306 225H155.498V215.214H158.984C160.734 215.214 161.938 216.166 161.938 217.706C161.938 218.644 161.49 219.582 160.636 219.89C161.658 220.226 162.26 221.038 162.26 222.214C162.26 223.684 161.238 225 159.306 225ZM156.772 216.32V219.414H158.788C159.838 219.414 160.608 219.078 160.608 217.888C160.608 216.684 159.838 216.32 158.788 216.32H156.772ZM156.772 220.52V223.894H159.152C160.384 223.894 160.93 223.194 160.93 222.2C160.93 221.22 160.384 220.52 159.152 220.52H156.772ZM170.83 224.23V225.112C170.536 225.196 170.312 225.238 170.13 225.238C169.318 225.238 168.912 224.888 168.828 224.132C168.002 224.944 167.274 225.252 166.336 225.252C164.908 225.252 163.942 224.454 163.942 223.096C163.942 221.584 165.09 221.038 165.944 220.898C166.196 220.856 166.742 220.772 167.568 220.66C168.506 220.534 168.814 220.352 168.814 219.876V219.624C168.814 218.896 168.24 218.532 167.134 218.532C166.056 218.532 165.524 218.938 165.426 219.834H164.25C164.278 218.14 165.454 217.454 167.19 217.454C168.996 217.454 169.948 218.154 169.948 219.456V223.684C169.948 224.062 170.158 224.258 170.578 224.258C170.648 224.258 170.76 224.244 170.83 224.23ZM168.814 222.452V221.29C168.324 221.514 167.526 221.64 166.91 221.71C165.818 221.836 165.132 222.144 165.132 223.068C165.132 223.796 165.692 224.23 166.63 224.23C167.652 224.23 168.814 223.474 168.814 222.452ZM176.825 214.794V224.048H179.079V225H173.157V224.048H175.691V215.746H173.157V214.794H176.825ZM188.139 224.23V225.112C187.845 225.196 187.621 225.238 187.439 225.238C186.627 225.238 186.221 224.888 186.137 224.132C185.311 224.944 184.583 225.252 183.645 225.252C182.217 225.252 181.251 224.454 181.251 223.096C181.251 221.584 182.399 221.038 183.253 220.898C183.505 220.856 184.051 220.772 184.877 220.66C185.815 220.534 186.123 220.352 186.123 219.876V219.624C186.123 218.896 185.549 218.532 184.443 218.532C183.365 218.532 182.833 218.938 182.735 219.834H181.559C181.587 218.14 182.763 217.454 184.499 217.454C186.305 217.454 187.257 218.154 187.257 219.456V223.684C187.257 224.062 187.467 224.258 187.887 224.258C187.957 224.258 188.069 224.244 188.139 224.23ZM186.123 222.452V221.29C185.633 221.514 184.835 221.64 184.219 221.71C183.127 221.836 182.441 222.144 182.441 223.068C182.441 223.796 183.001 224.23 183.939 224.23C184.961 224.23 186.123 223.474 186.123 222.452ZM190.241 225V217.664H191.319V218.882C191.893 217.986 192.593 217.454 193.755 217.454C195.029 217.454 196.079 218.098 196.079 219.456V225H194.917V219.918C194.917 218.938 194.217 218.476 193.405 218.476C192.089 218.476 191.403 219.61 191.403 220.87V225H190.241ZM204.943 220.086H203.767C203.641 219.12 202.997 218.518 201.975 218.518C200.463 218.518 199.875 219.96 199.875 221.416C199.875 222.872 200.533 224.174 202.003 224.174C203.025 224.174 203.655 223.6 203.851 222.438H205.027C204.873 224.202 203.781 225.252 201.975 225.252C199.833 225.252 198.657 223.572 198.657 221.416C198.657 219.218 199.805 217.44 201.989 217.44C203.781 217.44 204.901 218.532 204.943 220.086ZM213.654 222.732C213.402 224.272 212.24 225.252 210.518 225.252C208.306 225.252 207.186 223.642 207.186 221.402C207.186 218.952 208.516 217.44 210.546 217.44C212.814 217.44 213.808 219.134 213.808 221.682H208.404C208.446 223.124 209.146 224.174 210.56 224.174C211.512 224.174 212.156 223.712 212.478 222.732H213.654ZM210.532 218.518C209.216 218.518 208.53 219.498 208.432 220.73H212.548C212.548 219.512 211.792 218.518 210.532 218.518ZM170.592 236.042H169.332C169.29 234.922 168.632 234.096 167.274 234.096C165.93 234.096 165.216 234.768 165.216 235.65C165.216 236.462 165.636 236.924 166.546 237.134L168.548 237.596C170.074 237.946 170.872 238.954 170.872 240.214C170.872 242.16 169.458 243.252 167.4 243.252C164.964 243.252 163.662 241.964 163.634 239.878H164.894C164.908 241.18 165.776 242.09 167.428 242.09C168.898 242.09 169.556 241.39 169.556 240.396C169.556 239.528 169.08 239.038 168.114 238.814L166.084 238.338C164.67 238.002 163.9 237.12 163.9 235.776C163.9 234.138 165.216 232.99 167.316 232.99C169.36 232.99 170.592 234.236 170.592 235.86V236.042ZM172.933 243V232.794H174.095V236.756C174.613 235.986 175.285 235.454 176.447 235.454C177.721 235.454 178.771 236.098 178.771 237.456V243H177.609V237.918C177.609 236.938 176.909 236.476 176.097 236.476C174.781 236.476 174.095 237.61 174.095 238.87V243H172.933ZM187.691 240.732C187.439 242.272 186.277 243.252 184.555 243.252C182.343 243.252 181.223 241.642 181.223 239.402C181.223 236.952 182.553 235.44 184.583 235.44C186.851 235.44 187.845 237.134 187.845 239.682H182.441C182.483 241.124 183.183 242.174 184.597 242.174C185.549 242.174 186.193 241.712 186.515 240.732H187.691ZM184.569 236.518C183.253 236.518 182.567 237.498 182.469 238.73H186.585C186.585 237.512 185.829 236.518 184.569 236.518ZM196.345 240.732C196.093 242.272 194.931 243.252 193.209 243.252C190.997 243.252 189.877 241.642 189.877 239.402C189.877 236.952 191.207 235.44 193.237 235.44C195.505 235.44 196.499 237.134 196.499 239.682H191.095C191.137 241.124 191.837 242.174 193.251 242.174C194.203 242.174 194.847 241.712 195.169 240.732H196.345ZM193.223 236.518C191.907 236.518 191.221 237.498 191.123 238.73H195.239C195.239 237.512 194.483 236.518 193.223 236.518ZM201.863 235.664H204.747V236.616H201.863V240.704C201.863 241.782 202.437 242.146 203.501 242.146C203.977 242.146 204.397 242.104 204.747 242.006V243.028C204.285 243.168 203.823 243.196 203.431 243.196C201.653 243.196 200.701 242.51 200.701 240.914V236.616H198.587V235.664H200.701V233.648H201.863V235.664Z" fill="rgb(var(--colour-main))"></path><path d="M322.434 141.664V152.052H321.272V148.076C320.726 148.916 320.012 149.252 319.004 149.252C317.03 149.252 315.868 147.74 315.868 145.43C315.868 143.204 316.946 141.44 319.06 141.44C320.026 141.44 320.852 141.86 321.398 142.63V141.664H322.434ZM319.228 142.532C317.842 142.532 317.086 143.764 317.086 145.346C317.086 146.844 317.758 148.16 319.228 148.16C320.698 148.16 321.272 146.746 321.272 145.388C321.272 143.932 320.684 142.532 319.228 142.532ZM330.906 141.664V149H329.856V147.908C329.184 148.874 328.484 149.252 327.406 149.252C326.776 149.252 326.244 149.112 325.824 148.818C325.32 148.454 325.068 147.936 325.068 147.25V141.664H326.23V146.788C326.23 147.278 326.398 147.656 326.72 147.908C326.986 148.118 327.336 148.23 327.742 148.23C328.288 148.23 328.75 148.034 329.128 147.628C329.534 147.194 329.744 146.564 329.744 145.738V141.664H330.906ZM339.827 146.732C339.575 148.272 338.413 149.252 336.691 149.252C334.479 149.252 333.359 147.642 333.359 145.402C333.359 142.952 334.689 141.44 336.719 141.44C338.987 141.44 339.981 143.134 339.981 145.682H334.577C334.619 147.124 335.319 148.174 336.733 148.174C337.685 148.174 338.329 147.712 338.651 146.732H339.827ZM336.705 142.518C335.389 142.518 334.703 143.498 334.605 144.73H338.721C338.721 143.512 337.965 142.518 336.705 142.518ZM342.699 149V141.664H343.777V143.246C344.267 142.196 345.205 141.454 346.409 141.454C348.089 141.454 348.957 142.378 349.097 143.834H347.935C347.767 142.952 347.291 142.476 346.297 142.476C344.827 142.476 343.875 143.722 343.875 145.444V149H342.699ZM353.999 150.54C353.621 151.548 352.907 152.052 351.997 152.052C351.647 152.052 351.339 152.01 351.045 151.912V150.82C351.353 150.89 351.605 150.904 351.843 150.904C352.375 150.904 352.669 150.708 352.879 150.19L353.327 149.112L350.611 141.664H351.843L353.985 147.614L356.099 141.664H357.303L353.999 150.54Z" fill="rgb(var(--colour-purple))"></path><path d="M354.923 210.794V220.048H357.177V221H351.255V220.048H353.789V211.746H351.255V210.794H354.923ZM365.789 218.732C365.537 220.272 364.375 221.252 362.653 221.252C360.441 221.252 359.321 219.642 359.321 217.402C359.321 214.952 360.651 213.44 362.681 213.44C364.949 213.44 365.943 215.134 365.943 217.682H360.539C360.581 219.124 361.281 220.174 362.695 220.174C363.647 220.174 364.291 219.712 364.613 218.732H365.789ZM362.667 214.518C361.351 214.518 360.665 215.498 360.567 216.73H364.683C364.683 215.512 363.927 214.518 362.667 214.518ZM373.198 210.794H374.36V221H373.324V219.964C372.736 220.818 371.952 221.252 370.986 221.252C368.816 221.252 367.794 219.516 367.794 217.262C367.794 215.148 368.858 213.44 370.944 213.44C371.938 213.44 372.694 213.818 373.198 214.574V210.794ZM371.14 214.532C369.768 214.532 369.012 215.764 369.012 217.346C369.012 218.844 369.656 220.16 371.154 220.16C372.624 220.16 373.198 218.746 373.198 217.388C373.198 215.918 372.61 214.532 371.14 214.532ZM379.724 224.052C378.128 224.052 376.924 223.394 376.728 221.84H377.946C378.114 222.666 378.688 223.072 379.752 223.072C381.222 223.072 381.824 222.344 381.824 220.384V219.964C381.39 220.818 380.606 221.252 379.64 221.252C377.47 221.252 376.448 219.558 376.448 217.304C376.448 215.148 377.512 213.44 379.598 213.44C380.592 213.44 381.348 213.818 381.852 214.574V213.664H383.014V219.81C383.014 220.832 382.93 221.602 382.762 222.134C382.356 223.408 381.306 224.052 379.724 224.052ZM379.808 220.16C381.278 220.16 381.852 218.746 381.852 217.388C381.852 215.918 381.264 214.532 379.794 214.532C378.422 214.532 377.666 215.764 377.666 217.346C377.666 218.844 378.31 220.16 379.808 220.16ZM391.752 218.732C391.5 220.272 390.338 221.252 388.616 221.252C386.404 221.252 385.284 219.642 385.284 217.402C385.284 214.952 386.614 213.44 388.644 213.44C390.912 213.44 391.906 215.134 391.906 217.682H386.502C386.544 219.124 387.244 220.174 388.658 220.174C389.61 220.174 390.254 219.712 390.576 218.732H391.752ZM388.63 214.518C387.314 214.518 386.628 215.498 386.53 216.73H390.646C390.646 215.512 389.89 214.518 388.63 214.518ZM394.625 221V213.664H395.703V215.246C396.193 214.196 397.131 213.454 398.335 213.454C400.015 213.454 400.883 214.378 401.023 215.834H399.861C399.693 214.952 399.217 214.476 398.223 214.476C396.753 214.476 395.801 215.722 395.801 217.444V221H394.625ZM408.417 221L407.549 218.074H404.175L403.307 221H401.963L405.057 211.214H406.695L409.775 221H408.417ZM404.497 216.982H407.227L405.855 212.39L404.497 216.982ZM417.659 216.086H416.483C416.357 215.12 415.713 214.518 414.691 214.518C413.179 214.518 412.591 215.96 412.591 217.416C412.591 218.872 413.249 220.174 414.719 220.174C415.741 220.174 416.371 219.6 416.567 218.438H417.743C417.589 220.202 416.497 221.252 414.691 221.252C412.549 221.252 411.373 219.572 411.373 217.416C411.373 215.218 412.521 213.44 414.705 213.44C416.497 213.44 417.617 214.532 417.659 216.086ZM426.314 216.086H425.138C425.012 215.12 424.368 214.518 423.346 214.518C421.834 214.518 421.246 215.96 421.246 217.416C421.246 218.872 421.904 220.174 423.374 220.174C424.396 220.174 425.026 219.6 425.222 218.438H426.398C426.244 220.202 425.152 221.252 423.346 221.252C421.204 221.252 420.028 219.572 420.028 217.416C420.028 215.218 421.176 213.44 423.36 213.44C425.152 213.44 426.272 214.532 426.314 216.086ZM431.832 213.44C434.086 213.44 435.15 215.12 435.15 217.346C435.15 219.572 434.086 221.252 431.832 221.252C429.578 221.252 428.514 219.572 428.514 217.346C428.514 215.12 429.578 213.44 431.832 213.44ZM431.832 214.518C430.348 214.518 429.732 215.848 429.732 217.346C429.732 218.844 430.348 220.174 431.832 220.174C433.316 220.174 433.932 218.844 433.932 217.346C433.932 215.848 433.316 214.518 431.832 214.518ZM443.412 213.664V221H442.362V219.908C441.69 220.874 440.99 221.252 439.912 221.252C439.282 221.252 438.75 221.112 438.33 220.818C437.826 220.454 437.574 219.936 437.574 219.25V213.664H438.736V218.788C438.736 219.278 438.904 219.656 439.226 219.908C439.492 220.118 439.842 220.23 440.248 220.23C440.794 220.23 441.256 220.034 441.634 219.628C442.04 219.194 442.25 218.564 442.25 217.738V213.664H443.412ZM446.228 221V213.664H447.306V214.882C447.88 213.986 448.58 213.454 449.742 213.454C451.016 213.454 452.066 214.098 452.066 215.456V221H450.904V215.918C450.904 214.938 450.204 214.476 449.392 214.476C448.076 214.476 447.39 215.61 447.39 216.87V221H446.228ZM457.851 213.664H460.735V214.616H457.851V218.704C457.851 219.782 458.425 220.146 459.489 220.146C459.965 220.146 460.385 220.104 460.735 220.006V221.028C460.273 221.168 459.811 221.196 459.419 221.196C457.641 221.196 456.689 220.51 456.689 218.914V214.616H454.575V213.664H456.689V211.648H457.851V213.664ZM469.137 215.666H467.919C467.891 214.938 467.331 214.476 466.449 214.476C465.497 214.476 464.853 214.896 464.853 215.554C464.853 216.072 465.217 216.38 465.903 216.562L467.569 216.996C468.801 217.318 469.431 217.92 469.431 218.956C469.431 220.384 468.311 221.252 466.491 221.252C464.573 221.252 463.565 220.412 463.481 218.774H464.713C464.825 219.768 465.427 220.216 466.519 220.216C467.555 220.216 468.241 219.824 468.241 219.138C468.241 218.508 467.933 218.242 467.135 218.032L465.595 217.626C464.265 217.276 463.663 216.73 463.663 215.61C463.663 214.28 464.755 213.44 466.477 213.44C468.185 213.44 469.109 214.28 469.137 215.666Z" fill="rgb(var(--colour-main))"></path><path d="M371.476 143.82H374.85V149H373.898L373.786 147.656C373.31 148.762 372.428 149.252 371.336 149.252C368.998 149.252 367.514 147.39 367.514 144.17C367.514 140.838 369.096 138.99 371.476 138.99C373.184 138.99 374.458 139.844 374.878 141.916H373.548C373.282 140.572 372.498 140.138 371.476 140.138C369.754 140.138 368.872 141.678 368.872 144.1C368.872 146.83 369.866 148.104 371.364 148.104C372.988 148.104 373.702 146.858 373.702 145.248V144.968H371.476V143.82ZM383.098 146.732C382.846 148.272 381.684 149.252 379.962 149.252C377.75 149.252 376.63 147.642 376.63 145.402C376.63 142.952 377.96 141.44 379.99 141.44C382.258 141.44 383.252 143.134 383.252 145.682H377.848C377.89 147.124 378.59 148.174 380.004 148.174C380.956 148.174 381.6 147.712 381.922 146.732H383.098ZM379.976 142.518C378.66 142.518 377.974 143.498 377.876 144.73H381.992C381.992 143.512 381.236 142.518 379.976 142.518ZM388.616 141.664H391.5V142.616H388.616V146.704C388.616 147.782 389.19 148.146 390.254 148.146C390.73 148.146 391.15 148.104 391.5 148.006V149.028C391.038 149.168 390.576 149.196 390.184 149.196C388.406 149.196 387.454 148.51 387.454 146.914V142.616H385.34V141.664H387.454V139.648H388.616V141.664ZM397.985 149H394.177V139.214H397.663C399.413 139.214 400.617 140.166 400.617 141.706C400.617 142.644 400.169 143.582 399.315 143.89C400.337 144.226 400.939 145.038 400.939 146.214C400.939 147.684 399.917 149 397.985 149ZM395.451 140.32V143.414H397.467C398.517 143.414 399.287 143.078 399.287 141.888C399.287 140.684 398.517 140.32 397.467 140.32H395.451ZM395.451 144.52V147.894H397.831C399.063 147.894 399.609 147.194 399.609 146.2C399.609 145.22 399.063 144.52 397.831 144.52H395.451ZM409.509 148.23V149.112C409.215 149.196 408.991 149.238 408.809 149.238C407.997 149.238 407.591 148.888 407.507 148.132C406.681 148.944 405.953 149.252 405.015 149.252C403.587 149.252 402.621 148.454 402.621 147.096C402.621 145.584 403.769 145.038 404.623 144.898C404.875 144.856 405.421 144.772 406.247 144.66C407.185 144.534 407.493 144.352 407.493 143.876V143.624C407.493 142.896 406.919 142.532 405.813 142.532C404.735 142.532 404.203 142.938 404.105 143.834H402.929C402.957 142.14 404.133 141.454 405.869 141.454C407.675 141.454 408.627 142.154 408.627 143.456V147.684C408.627 148.062 408.837 148.258 409.257 148.258C409.327 148.258 409.439 148.244 409.509 148.23ZM407.493 146.452V145.29C407.003 145.514 406.205 145.64 405.589 145.71C404.497 145.836 403.811 146.144 403.811 147.068C403.811 147.796 404.371 148.23 405.309 148.23C406.331 148.23 407.493 147.474 407.493 146.452ZM415.503 138.794V148.048H417.757V149H411.835V148.048H414.369V139.746H411.835V138.794H415.503ZM426.818 148.23V149.112C426.524 149.196 426.3 149.238 426.118 149.238C425.306 149.238 424.9 148.888 424.816 148.132C423.99 148.944 423.262 149.252 422.324 149.252C420.896 149.252 419.93 148.454 419.93 147.096C419.93 145.584 421.078 145.038 421.932 144.898C422.184 144.856 422.73 144.772 423.556 144.66C424.494 144.534 424.802 144.352 424.802 143.876V143.624C424.802 142.896 424.228 142.532 423.122 142.532C422.044 142.532 421.512 142.938 421.414 143.834H420.238C420.266 142.14 421.442 141.454 423.178 141.454C424.984 141.454 425.936 142.154 425.936 143.456V147.684C425.936 148.062 426.146 148.258 426.566 148.258C426.636 148.258 426.748 148.244 426.818 148.23ZM424.802 146.452V145.29C424.312 145.514 423.514 145.64 422.898 145.71C421.806 145.836 421.12 146.144 421.12 147.068C421.12 147.796 421.68 148.23 422.618 148.23C423.64 148.23 424.802 147.474 424.802 146.452ZM428.92 149V141.664H429.998V142.882C430.572 141.986 431.272 141.454 432.434 141.454C433.708 141.454 434.758 142.098 434.758 143.456V149H433.596V143.918C433.596 142.938 432.896 142.476 432.084 142.476C430.768 142.476 430.082 143.61 430.082 144.87V149H428.92ZM443.622 144.086H442.446C442.32 143.12 441.676 142.518 440.654 142.518C439.142 142.518 438.554 143.96 438.554 145.416C438.554 146.872 439.212 148.174 440.682 148.174C441.704 148.174 442.334 147.6 442.53 146.438H443.706C443.552 148.202 442.46 149.252 440.654 149.252C438.512 149.252 437.336 147.572 437.336 145.416C437.336 143.218 438.484 141.44 440.668 141.44C442.46 141.44 443.58 142.532 443.622 144.086ZM452.332 146.732C452.08 148.272 450.918 149.252 449.196 149.252C446.984 149.252 445.864 147.642 445.864 145.402C445.864 142.952 447.194 141.44 449.224 141.44C451.492 141.44 452.486 143.134 452.486 145.682H447.082C447.124 147.124 447.824 148.174 449.238 148.174C450.19 148.174 450.834 147.712 451.156 146.732H452.332ZM449.21 142.518C447.894 142.518 447.208 143.498 447.11 144.73H451.226C451.226 143.512 450.47 142.518 449.21 142.518ZM461.197 142.042H459.937C459.895 140.922 459.237 140.096 457.879 140.096C456.535 140.096 455.821 140.768 455.821 141.65C455.821 142.462 456.241 142.924 457.151 143.134L459.153 143.596C460.679 143.946 461.477 144.954 461.477 146.214C461.477 148.16 460.063 149.252 458.005 149.252C455.569 149.252 454.267 147.964 454.239 145.878H455.499C455.513 147.18 456.381 148.09 458.033 148.09C459.503 148.09 460.161 147.39 460.161 146.396C460.161 145.528 459.685 145.038 458.719 144.814L456.689 144.338C455.275 144.002 454.505 143.12 454.505 141.776C454.505 140.138 455.821 138.99 457.921 138.99C459.965 138.99 461.197 140.236 461.197 141.86V142.042ZM463.537 149V138.794H464.699V142.756C465.217 141.986 465.889 141.454 467.051 141.454C468.325 141.454 469.375 142.098 469.375 143.456V149H468.213V143.918C468.213 142.938 467.513 142.476 466.701 142.476C465.385 142.476 464.699 143.61 464.699 144.87V149H463.537ZM478.295 146.732C478.043 148.272 476.881 149.252 475.159 149.252C472.947 149.252 471.827 147.642 471.827 145.402C471.827 142.952 473.157 141.44 475.187 141.44C477.455 141.44 478.449 143.134 478.449 145.682H473.045C473.087 147.124 473.787 148.174 475.201 148.174C476.153 148.174 476.797 147.712 477.119 146.732H478.295ZM475.173 142.518C473.857 142.518 473.171 143.498 473.073 144.73H477.189C477.189 143.512 476.433 142.518 475.173 142.518ZM486.95 146.732C486.698 148.272 485.536 149.252 483.814 149.252C481.602 149.252 480.482 147.642 480.482 145.402C480.482 142.952 481.812 141.44 483.842 141.44C486.11 141.44 487.104 143.134 487.104 145.682H481.7C481.742 147.124 482.442 148.174 483.856 148.174C484.808 148.174 485.452 147.712 485.774 146.732H486.95ZM483.828 142.518C482.512 142.518 481.826 143.498 481.728 144.73H485.844C485.844 143.512 485.088 142.518 483.828 142.518ZM492.468 141.664H495.352V142.616H492.468V146.704C492.468 147.782 493.042 148.146 494.106 148.146C494.582 148.146 495.002 148.104 495.352 148.006V149.028C494.89 149.168 494.428 149.196 494.036 149.196C492.258 149.196 491.306 148.51 491.306 146.914V142.616H489.192V141.664H491.306V139.648H492.468V141.664ZM337.615 192.794V202.048H339.869V203H333.947V202.048H336.481V193.746H333.947V192.794H337.615ZM348.481 200.732C348.229 202.272 347.067 203.252 345.345 203.252C343.133 203.252 342.013 201.642 342.013 199.402C342.013 196.952 343.343 195.44 345.373 195.44C347.641 195.44 348.635 197.134 348.635 199.682H343.231C343.273 201.124 343.973 202.174 345.387 202.174C346.339 202.174 346.983 201.712 347.305 200.732H348.481ZM345.359 196.518C344.043 196.518 343.357 197.498 343.259 198.73H347.375C347.375 197.512 346.619 196.518 345.359 196.518ZM355.889 192.794H357.051V203H356.015V201.964C355.427 202.818 354.643 203.252 353.677 203.252C351.507 203.252 350.485 201.516 350.485 199.262C350.485 197.148 351.549 195.44 353.635 195.44C354.629 195.44 355.385 195.818 355.889 196.574V192.794ZM353.831 196.532C352.459 196.532 351.703 197.764 351.703 199.346C351.703 200.844 352.347 202.16 353.845 202.16C355.315 202.16 355.889 200.746 355.889 199.388C355.889 197.918 355.301 196.532 353.831 196.532ZM362.415 206.052C360.819 206.052 359.615 205.394 359.419 203.84H360.637C360.805 204.666 361.379 205.072 362.443 205.072C363.913 205.072 364.515 204.344 364.515 202.384V201.964C364.081 202.818 363.297 203.252 362.331 203.252C360.161 203.252 359.139 201.558 359.139 199.304C359.139 197.148 360.203 195.44 362.289 195.44C363.283 195.44 364.039 195.818 364.543 196.574V195.664H365.705V201.81C365.705 202.832 365.621 203.602 365.453 204.134C365.047 205.408 363.997 206.052 362.415 206.052ZM362.499 202.16C363.969 202.16 364.543 200.746 364.543 199.388C364.543 197.918 363.955 196.532 362.485 196.532C361.113 196.532 360.357 197.764 360.357 199.346C360.357 200.844 361.001 202.16 362.499 202.16ZM374.444 200.732C374.192 202.272 373.03 203.252 371.308 203.252C369.096 203.252 367.976 201.642 367.976 199.402C367.976 196.952 369.306 195.44 371.336 195.44C373.604 195.44 374.598 197.134 374.598 199.682H369.194C369.236 201.124 369.936 202.174 371.35 202.174C372.302 202.174 372.946 201.712 373.268 200.732H374.444ZM371.322 196.518C370.006 196.518 369.32 197.498 369.222 198.73H373.338C373.338 197.512 372.582 196.518 371.322 196.518ZM377.316 203V195.664H378.394V197.246C378.884 196.196 379.822 195.454 381.026 195.454C382.706 195.454 383.574 196.378 383.714 197.834H382.552C382.384 196.952 381.908 196.476 380.914 196.476C379.444 196.476 378.492 197.722 378.492 199.444V203H377.316Z" fill="rgb(var(--colour-royal))"></path><path d="M502.018 138.08H503.278C501.738 139.844 500.94 141.888 500.94 144.1C500.94 146.312 501.738 148.356 503.278 150.12H502.018C500.674 148.608 499.806 146.41 499.806 144.1C499.806 141.79 500.674 139.592 502.018 138.08ZM398.167 161.568H396.263V159.664H398.167V161.568ZM396.263 165.096H398.167V167H396.263V165.096ZM318.374 186.134H317.114C318.654 184.37 319.452 182.326 319.452 180.114C319.452 177.902 318.654 175.858 317.114 174.094H318.374C319.718 175.606 320.586 177.804 320.586 180.114C320.586 182.424 319.718 184.622 318.374 186.134ZM334.703 179.638C335.599 179.638 335.935 179.246 335.935 178.238V175.928C335.935 174.794 336.523 174.094 337.461 174.094H338.749V175.018H337.867C337.181 175.018 336.985 175.214 336.985 175.942V178.182C336.985 179.316 336.705 179.764 335.725 180.1C336.705 180.422 336.985 180.898 336.985 182.032V184.272C336.985 185 337.181 185.196 337.867 185.196H338.749V186.12H337.461C336.523 186.12 335.935 185.42 335.935 184.286V181.976C335.935 180.968 335.599 180.562 334.703 180.562H334.311V179.638H334.703ZM389.512 192.08H390.772C389.232 193.844 388.434 195.888 388.434 198.1C388.434 200.312 389.232 202.356 390.772 204.12H389.512C388.168 202.608 387.3 200.41 387.3 198.1C387.3 195.79 388.168 193.592 389.512 192.08ZM398.507 201.096H400.411V203H398.507V201.096ZM404.919 201.096H406.823V203H404.919V201.096ZM411.331 201.096H413.235V203H411.331V201.096ZM422.226 204.134H420.966C422.506 202.37 423.304 200.326 423.304 198.114C423.304 195.902 422.506 193.858 420.966 192.094H422.226C423.57 193.606 424.438 195.804 424.438 198.114C424.438 200.424 423.57 202.622 422.226 204.134ZM438.554 197.638C439.45 197.638 439.786 197.246 439.786 196.238V193.928C439.786 192.794 440.374 192.094 441.312 192.094H442.6V193.018H441.718C441.032 193.018 440.836 193.214 440.836 193.942V196.182C440.836 197.316 440.556 197.764 439.576 198.1C440.556 198.422 440.836 198.898 440.836 200.032V202.272C440.836 203 441.032 203.196 441.718 203.196H442.6V204.12H441.312C440.374 204.12 439.786 203.42 439.786 202.286V199.976C439.786 198.968 439.45 198.562 438.554 198.562H438.162V197.638H438.554ZM481.826 215.638C482.722 215.638 483.058 215.246 483.058 214.238V211.928C483.058 210.794 483.646 210.094 484.584 210.094H485.872V211.018H484.99C484.304 211.018 484.108 211.214 484.108 211.942V214.182C484.108 215.316 483.828 215.764 482.848 216.1C483.828 216.422 484.108 216.898 484.108 218.032V220.272C484.108 221 484.304 221.196 484.99 221.196H485.872V222.12H484.584C483.646 222.12 483.058 221.42 483.058 220.286V217.976C483.058 216.968 482.722 216.562 481.826 216.562H481.434V215.638H481.826ZM337.927 237.096H339.831V239H337.927V237.096ZM344.339 237.096H346.243V239H344.339V237.096ZM350.751 237.096H352.655V239H350.751V237.096ZM364.529 234.576C363.633 234.576 363.297 234.968 363.297 235.976V238.286C363.297 239.42 362.709 240.12 361.771 240.12H360.483V239.196H361.365C362.051 239.196 362.247 239 362.247 238.272V236.032C362.247 234.898 362.527 234.45 363.507 234.114C362.527 233.792 362.247 233.316 362.247 232.182V229.942C362.247 229.214 362.051 229.018 361.365 229.018H360.483V228.094H361.771C362.709 228.094 363.297 228.794 363.297 229.928V232.238C363.297 233.246 363.633 233.652 364.529 233.652H364.921V234.576H364.529ZM338.567 252.576C337.671 252.576 337.335 252.968 337.335 253.976V256.286C337.335 257.42 336.747 258.12 335.809 258.12H334.521V257.196H335.403C336.089 257.196 336.285 257 336.285 256.272V254.032C336.285 252.898 336.565 252.45 337.545 252.114C336.565 251.792 336.285 251.316 336.285 250.182V247.942C336.285 247.214 336.089 247.018 335.403 247.018H334.521V246.094H335.809C336.747 246.094 337.335 246.794 337.335 247.928V250.238C337.335 251.246 337.671 251.652 338.567 251.652H338.959V252.576H338.567ZM321.258 270.576C320.362 270.576 320.026 270.968 320.026 271.976V274.286C320.026 275.42 319.438 276.12 318.5 276.12H317.212V275.196H318.094C318.78 275.196 318.976 275 318.976 274.272V272.032C318.976 270.898 319.256 270.45 320.236 270.114C319.256 269.792 318.976 269.316 318.976 268.182V265.942C318.976 265.214 318.78 265.018 318.094 265.018H317.212V264.094H318.5C319.438 264.094 320.026 264.794 320.026 265.928V268.238C320.026 269.246 320.362 269.652 321.258 269.652H321.65V270.576H321.258Z" fill="rgb(var(--colour-main-500))"></path><path d="M336.229 168.358V167.084C334.451 166.916 333.359 165.656 333.317 164.004H334.381C334.423 165.138 335.039 165.964 336.229 166.118V162.492L335.599 162.324C334.325 161.988 333.513 161.036 333.513 159.804C333.513 158.348 334.521 157.298 336.229 157.158V155.884H337.027V157.158C338.623 157.298 339.589 158.306 339.659 159.86H338.595C338.539 158.964 338.021 158.278 337.027 158.124V161.582L337.937 161.834C339.211 162.184 339.953 163.094 339.953 164.27C339.953 165.866 338.805 166.944 337.027 167.084V168.358H336.229ZM335.795 161.246L336.229 161.372V158.11C335.263 158.222 334.591 158.754 334.591 159.692C334.591 160.434 335.011 161.036 335.795 161.246ZM337.573 162.856L337.027 162.702V166.132C338.203 166.02 338.875 165.376 338.875 164.424C338.875 163.64 338.483 163.094 337.573 162.856ZM346.269 156.794V166.048H348.523V167H342.601V166.048H345.135V157.746H342.601V156.794H346.269ZM357.135 164.732C356.883 166.272 355.721 167.252 353.999 167.252C351.787 167.252 350.667 165.642 350.667 163.402C350.667 160.952 351.997 159.44 354.027 159.44C356.295 159.44 357.289 161.134 357.289 163.682H351.885C351.927 165.124 352.627 166.174 354.041 166.174C354.993 166.174 355.637 165.712 355.959 164.732H357.135ZM354.013 160.518C352.697 160.518 352.011 161.498 351.913 162.73H356.029C356.029 161.512 355.273 160.518 354.013 160.518ZM364.543 156.794H365.705V167H364.669V165.964C364.081 166.818 363.297 167.252 362.331 167.252C360.161 167.252 359.139 165.516 359.139 163.262C359.139 161.148 360.203 159.44 362.289 159.44C363.283 159.44 364.039 159.818 364.543 160.574V156.794ZM362.485 160.532C361.113 160.532 360.357 161.764 360.357 163.346C360.357 164.844 361.001 166.16 362.499 166.16C363.969 166.16 364.543 164.746 364.543 163.388C364.543 161.918 363.955 160.532 362.485 160.532ZM371.07 170.052C369.474 170.052 368.27 169.394 368.074 167.84H369.292C369.46 168.666 370.034 169.072 371.098 169.072C372.568 169.072 373.17 168.344 373.17 166.384V165.964C372.736 166.818 371.952 167.252 370.986 167.252C368.816 167.252 367.794 165.558 367.794 163.304C367.794 161.148 368.858 159.44 370.944 159.44C371.938 159.44 372.694 159.818 373.198 160.574V159.664H374.36V165.81C374.36 166.832 374.276 167.602 374.108 168.134C373.702 169.408 372.652 170.052 371.07 170.052ZM371.154 166.16C372.624 166.16 373.198 164.746 373.198 163.388C373.198 161.918 372.61 160.532 371.14 160.532C369.768 160.532 369.012 161.764 369.012 163.346C369.012 164.844 369.656 166.16 371.154 166.16ZM383.098 164.732C382.846 166.272 381.684 167.252 379.962 167.252C377.75 167.252 376.63 165.642 376.63 163.402C376.63 160.952 377.96 159.44 379.99 159.44C382.258 159.44 383.252 161.134 383.252 163.682H377.848C377.89 165.124 378.59 166.174 380.004 166.174C380.956 166.174 381.6 165.712 381.922 164.732H383.098ZM379.976 160.518C378.66 160.518 377.974 161.498 377.876 162.73H381.992C381.992 161.512 381.236 160.518 379.976 160.518ZM385.97 167V159.664H387.048V161.246C387.538 160.196 388.476 159.454 389.68 159.454C391.36 159.454 392.228 160.378 392.368 161.834H391.206C391.038 160.952 390.562 160.476 389.568 160.476C388.098 160.476 387.146 161.722 387.146 163.444V167H385.97Z" fill="rgb(var(--colour-forest))"></path></svg></div><div class="block tablet:hidden"><svg width="100%" height="100%" viewBox="0 0 379 414" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="378" height="414" transform="translate(0.501953)" fill="rgb(var(--colour-negative))"></rect><path d="M23.052 26.82H26.426V32H25.474L25.362 30.656C24.886 31.762 24.004 32.252 22.912 32.252C20.574 32.252 19.09 30.39 19.09 27.17C19.09 23.838 20.672 21.99 23.052 21.99C24.76 21.99 26.034 22.844 26.454 24.916H25.124C24.858 23.572 24.074 23.138 23.052 23.138C21.33 23.138 20.448 24.678 20.448 27.1C20.448 29.83 21.442 31.104 22.94 31.104C24.564 31.104 25.278 29.858 25.278 28.248V27.968H23.052V26.82ZM34.6743 29.732C34.4223 31.272 33.2603 32.252 31.5383 32.252C29.3263 32.252 28.2063 30.642 28.2063 28.402C28.2063 25.952 29.5363 24.44 31.5663 24.44C33.8343 24.44 34.8283 26.134 34.8283 28.682H29.4243C29.4663 30.124 30.1663 31.174 31.5803 31.174C32.5323 31.174 33.1763 30.712 33.4983 29.732H34.6743ZM31.5523 25.518C30.2363 25.518 29.5503 26.498 29.4523 27.73H33.5683C33.5683 26.512 32.8123 25.518 31.5523 25.518ZM37.2245 32V24.664H38.3025V25.882C38.8765 24.986 39.5765 24.454 40.7385 24.454C42.0125 24.454 43.0625 25.098 43.0625 26.456V32H41.9005V26.918C41.9005 25.938 41.2005 25.476 40.3885 25.476C39.0725 25.476 38.3865 26.61 38.3865 27.87V32H37.2245ZM51.9828 29.732C51.7308 31.272 50.5688 32.252 48.8468 32.252C46.6348 32.252 45.5148 30.642 45.5148 28.402C45.5148 25.952 46.8448 24.44 48.8748 24.44C51.1428 24.44 52.1368 26.134 52.1368 28.682H46.7328C46.7748 30.124 47.4748 31.174 48.8888 31.174C49.8408 31.174 50.4848 30.712 50.8068 29.732H51.9828ZM48.8608 25.518C47.5448 25.518 46.8588 26.498 46.7608 27.73H50.8768C50.8768 26.512 50.1208 25.518 48.8608 25.518ZM54.8551 32V24.664H55.9331V26.246C56.4231 25.196 57.3611 24.454 58.5651 24.454C60.2451 24.454 61.1131 25.378 61.2531 26.834H60.0911C59.9231 25.952 59.4471 25.476 58.4531 25.476C56.9831 25.476 56.0311 26.722 56.0311 28.444V32H54.8551ZM69.7394 31.23V32.112C69.4454 32.196 69.2214 32.238 69.0394 32.238C68.2274 32.238 67.8214 31.888 67.7374 31.132C66.9114 31.944 66.1834 32.252 65.2454 32.252C63.8174 32.252 62.8514 31.454 62.8514 30.096C62.8514 28.584 63.9994 28.038 64.8534 27.898C65.1054 27.856 65.6514 27.772 66.4774 27.66C67.4154 27.534 67.7234 27.352 67.7234 26.876V26.624C67.7234 25.896 67.1494 25.532 66.0434 25.532C64.9654 25.532 64.4334 25.938 64.3354 26.834H63.1594C63.1874 25.14 64.3634 24.454 66.0994 24.454C67.9054 24.454 68.8574 25.154 68.8574 26.456V30.684C68.8574 31.062 69.0674 31.258 69.4874 31.258C69.5574 31.258 69.6694 31.244 69.7394 31.23ZM67.7234 29.452V28.29C67.2334 28.514 66.4354 28.64 65.8194 28.71C64.7274 28.836 64.0414 29.144 64.0414 30.068C64.0414 30.796 64.6014 31.23 65.5394 31.23C66.5614 31.23 67.7234 30.474 67.7234 29.452ZM74.8097 24.664H77.6937V25.616H74.8097V29.704C74.8097 30.782 75.3837 31.146 76.4477 31.146C76.9237 31.146 77.3437 31.104 77.6937 31.006V32.028C77.2317 32.168 76.7697 32.196 76.3777 32.196C74.5997 32.196 73.6477 31.51 73.6477 29.914V25.616H71.5337V24.664H73.6477V22.648H74.8097V24.664ZM86.6 29.732C86.348 31.272 85.186 32.252 83.464 32.252C81.252 32.252 80.132 30.642 80.132 28.402C80.132 25.952 81.462 24.44 83.492 24.44C85.76 24.44 86.754 26.134 86.754 28.682H81.35C81.392 30.124 82.092 31.174 83.506 31.174C84.458 31.174 85.102 30.712 85.424 29.732H86.6ZM83.478 25.518C82.162 25.518 81.476 26.498 81.378 27.73H85.494C85.494 26.512 84.738 25.518 83.478 25.518ZM101.095 27.982H98.9806V32H97.7066V22.214H101.137C103.013 22.214 104.259 23.082 104.259 24.888C104.259 26.022 103.797 26.764 102.635 27.338C103.671 27.758 103.923 28.192 104.007 29.62L104.049 30.348C104.077 30.824 104.133 31.384 104.553 31.678V32H103.111C102.901 31.566 102.747 31.006 102.747 30.362V29.746C102.747 28.598 102.257 27.982 101.095 27.982ZM98.9806 23.32V26.876H100.885C102.159 26.876 102.929 26.386 102.929 25.028C102.929 23.838 102.173 23.32 100.885 23.32H98.9806ZM112.563 29.732C112.311 31.272 111.149 32.252 109.427 32.252C107.215 32.252 106.095 30.642 106.095 28.402C106.095 25.952 107.425 24.44 109.455 24.44C111.723 24.44 112.717 26.134 112.717 28.682H107.313C107.355 30.124 108.055 31.174 109.469 31.174C110.421 31.174 111.065 30.712 111.387 29.732H112.563ZM109.441 25.518C108.125 25.518 107.439 26.498 107.341 27.73H111.457C111.457 26.512 110.701 25.518 109.441 25.518ZM116.093 35.052H114.917V24.664H115.995V25.756C116.541 24.874 117.311 24.44 118.333 24.44C120.517 24.44 121.483 26.302 121.483 28.416C121.483 30.516 120.447 32.252 118.347 32.252C117.395 32.252 116.709 31.93 116.093 31.16V35.052ZM118.137 25.532C116.681 25.532 116.093 26.918 116.093 28.346C116.093 29.774 116.681 31.16 118.137 31.16C119.607 31.16 120.265 29.802 120.265 28.388C120.265 26.904 119.621 25.532 118.137 25.532ZM126.68 24.44C128.934 24.44 129.998 26.12 129.998 28.346C129.998 30.572 128.934 32.252 126.68 32.252C124.426 32.252 123.362 30.572 123.362 28.346C123.362 26.12 124.426 24.44 126.68 24.44ZM126.68 25.518C125.196 25.518 124.58 26.848 124.58 28.346C124.58 29.844 125.196 31.174 126.68 31.174C128.164 31.174 128.78 29.844 128.78 28.346C128.78 26.848 128.164 25.518 126.68 25.518ZM132.744 32V24.664H133.822V26.246C134.312 25.196 135.25 24.454 136.454 24.454C138.134 24.454 139.002 25.378 139.142 26.834H137.98C137.812 25.952 137.336 25.476 136.342 25.476C134.872 25.476 133.92 26.722 133.92 28.444V32H132.744ZM144.044 24.664H146.928V25.616H144.044V29.704C144.044 30.782 144.618 31.146 145.682 31.146C146.158 31.146 146.578 31.104 146.928 31.006V32.028C146.466 32.168 146.004 32.196 145.612 32.196C143.834 32.196 142.882 31.51 142.882 29.914V25.616H140.768V24.664H142.882V22.648H144.044V24.664ZM155.33 26.666H154.112C154.084 25.938 153.524 25.476 152.642 25.476C151.69 25.476 151.046 25.896 151.046 26.554C151.046 27.072 151.41 27.38 152.096 27.562L153.762 27.996C154.994 28.318 155.624 28.92 155.624 29.956C155.624 31.384 154.504 32.252 152.684 32.252C150.766 32.252 149.758 31.412 149.674 29.774H150.906C151.018 30.768 151.62 31.216 152.712 31.216C153.748 31.216 154.434 30.824 154.434 30.138C154.434 29.508 154.126 29.242 153.328 29.032L151.788 28.626C150.458 28.276 149.856 27.73 149.856 26.61C149.856 25.28 150.948 24.44 152.67 24.44C154.378 24.44 155.302 25.28 155.33 26.666Z" fill="rgb(var(--colour-main))"></path><line x1="180.502" y1="234" x2="153.187" y2="234" stroke="rgb(var(--colour-main-500))"></line><path d="M162.002 243L153.002 234L162.002 225" stroke="rgb(var(--colour-main-500))"></path><path d="M19.776 113V103.214H23.346C25.096 103.214 26.496 104.208 26.496 106.14C26.496 108.072 25.096 109.066 23.346 109.066H21.05V113H19.776ZM21.05 107.96H23.178C24.424 107.96 25.166 107.26 25.166 106.14C25.166 105.02 24.424 104.32 23.178 104.32H21.05V107.96ZM28.8923 113V105.664H29.9703V107.246C30.4603 106.196 31.3983 105.454 32.6023 105.454C34.2823 105.454 35.1503 106.378 35.2903 107.834H34.1283C33.9603 106.952 33.4843 106.476 32.4903 106.476C31.0203 106.476 30.0683 107.722 30.0683 109.444V113H28.8923ZM40.1365 105.44C42.3905 105.44 43.4545 107.12 43.4545 109.346C43.4545 111.572 42.3905 113.252 40.1365 113.252C37.8825 113.252 36.8185 111.572 36.8185 109.346C36.8185 107.12 37.8825 105.44 40.1365 105.44ZM40.1365 106.518C38.6525 106.518 38.0365 107.848 38.0365 109.346C38.0365 110.844 38.6525 112.174 40.1365 112.174C41.6205 112.174 42.2365 110.844 42.2365 109.346C42.2365 107.848 41.6205 106.518 40.1365 106.518ZM50.7368 102.794H51.8988V113H50.8628V111.964C50.2748 112.818 49.4908 113.252 48.5248 113.252C46.3548 113.252 45.3328 111.516 45.3328 109.262C45.3328 107.148 46.3968 105.44 48.4828 105.44C49.4768 105.44 50.2328 105.818 50.7368 106.574V102.794ZM48.6788 106.532C47.3068 106.532 46.5508 107.764 46.5508 109.346C46.5508 110.844 47.1948 112.16 48.6928 112.16C50.1628 112.16 50.7368 110.746 50.7368 109.388C50.7368 107.918 50.1488 106.532 48.6788 106.532ZM60.3711 105.664V113H59.3211V111.908C58.6491 112.874 57.9491 113.252 56.8711 113.252C56.2411 113.252 55.7091 113.112 55.2891 112.818C54.7851 112.454 54.5331 111.936 54.5331 111.25V105.664H55.6951V110.788C55.6951 111.278 55.8631 111.656 56.1851 111.908C56.4511 112.118 56.8011 112.23 57.2071 112.23C57.7531 112.23 58.2151 112.034 58.5931 111.628C58.9991 111.194 59.2091 110.564 59.2091 109.738V105.664H60.3711ZM69.2354 108.086H68.0594C67.9334 107.12 67.2894 106.518 66.2674 106.518C64.7554 106.518 64.1674 107.96 64.1674 109.416C64.1674 110.872 64.8254 112.174 66.2954 112.174C67.3174 112.174 67.9474 111.6 68.1434 110.438H69.3194C69.1654 112.202 68.0734 113.252 66.2674 113.252C64.1254 113.252 62.9494 111.572 62.9494 109.416C62.9494 107.218 64.0974 105.44 66.2814 105.44C68.0734 105.44 69.1934 106.532 69.2354 108.086ZM74.8097 105.664H77.6937V106.616H74.8097V110.704C74.8097 111.782 75.3837 112.146 76.4477 112.146C76.9237 112.146 77.3437 112.104 77.6937 112.006V113.028C77.2317 113.168 76.7697 113.196 76.3777 113.196C74.5997 113.196 73.6477 112.51 73.6477 110.914V106.616H71.5337V105.664H73.6477V103.648H74.8097V105.664Z" fill="rgb(var(--colour-main-500))"></path><rect x="180.502" y="126" width="180" height="216" stroke="rgb(var(--colour-main-500))"></rect><path d="M187.376 113L186.508 110.074H183.134L182.266 113H180.922L184.016 103.214H185.654L188.734 113H187.376ZM183.456 108.982H186.186L184.814 104.39L183.456 108.982ZM190.43 113V103.214H194C195.75 103.214 197.15 104.208 197.15 106.14C197.15 108.072 195.75 109.066 194 109.066H191.704V113H190.43ZM191.704 107.96H193.832C195.078 107.96 195.82 107.26 195.82 106.14C195.82 105.02 195.078 104.32 193.832 104.32H191.704V107.96ZM199.407 113V111.908H201.479V104.306H199.407V103.214H204.881V104.306H202.795V111.908H204.881V113H199.407Z" fill="rgb(var(--colour-main-500))"></path><rect x="45.502" y="189" width="81" height="99" fill="rgb(var(--colour-negative))" stroke="rgb(var(--colour-main))"></rect><rect x="36.502" y="180" width="81" height="99" fill="rgb(var(--colour-negative))" stroke="rgb(var(--colour-main))"></rect><rect x="18.502" y="126" width="126" height="216" rx="16" stroke="rgb(var(--colour-main-500))"></rect><path d="M51.8079 225H47.9999V215.214H51.4859C53.2359 215.214 54.4399 216.166 54.4399 217.706C54.4399 218.644 53.9919 219.582 53.1379 219.89C54.1599 220.226 54.7619 221.038 54.7619 222.214C54.7619 223.684 53.7399 225 51.8079 225ZM49.2739 216.32V219.414H51.2899C52.3399 219.414 53.1099 219.078 53.1099 217.888C53.1099 216.684 52.3399 216.32 51.2899 216.32H49.2739ZM49.2739 220.52V223.894H51.6539C52.8859 223.894 53.4319 223.194 53.4319 222.2C53.4319 221.22 52.8859 220.52 51.6539 220.52H49.2739ZM63.3322 224.23V225.112C63.0382 225.196 62.8142 225.238 62.6322 225.238C61.8202 225.238 61.4142 224.888 61.3302 224.132C60.5042 224.944 59.7762 225.252 58.8382 225.252C57.4102 225.252 56.4442 224.454 56.4442 223.096C56.4442 221.584 57.5922 221.038 58.4462 220.898C58.6982 220.856 59.2442 220.772 60.0702 220.66C61.0082 220.534 61.3162 220.352 61.3162 219.876V219.624C61.3162 218.896 60.7422 218.532 59.6362 218.532C58.5582 218.532 58.0262 218.938 57.9282 219.834H56.7522C56.7802 218.14 57.9562 217.454 59.6922 217.454C61.4982 217.454 62.4502 218.154 62.4502 219.456V223.684C62.4502 224.062 62.6602 224.258 63.0802 224.258C63.1502 224.258 63.2622 224.244 63.3322 224.23ZM61.3162 222.452V221.29C60.8262 221.514 60.0282 221.64 59.4122 221.71C58.3202 221.836 57.6342 222.144 57.6342 223.068C57.6342 223.796 58.1942 224.23 59.1322 224.23C60.1542 224.23 61.3162 223.474 61.3162 222.452ZM69.3265 214.794V224.048H71.5805V225H65.6585V224.048H68.1925V215.746H65.6585V214.794H69.3265ZM80.6408 224.23V225.112C80.3468 225.196 80.1228 225.238 79.9408 225.238C79.1288 225.238 78.7228 224.888 78.6388 224.132C77.8128 224.944 77.0848 225.252 76.1468 225.252C74.7188 225.252 73.7528 224.454 73.7528 223.096C73.7528 221.584 74.9008 221.038 75.7548 220.898C76.0068 220.856 76.5528 220.772 77.3788 220.66C78.3168 220.534 78.6248 220.352 78.6248 219.876V219.624C78.6248 218.896 78.0508 218.532 76.9448 218.532C75.8668 218.532 75.3348 218.938 75.2368 219.834H74.0608C74.0888 218.14 75.2648 217.454 77.0008 217.454C78.8068 217.454 79.7588 218.154 79.7588 219.456V223.684C79.7588 224.062 79.9688 224.258 80.3888 224.258C80.4588 224.258 80.5708 224.244 80.6408 224.23ZM78.6248 222.452V221.29C78.1348 221.514 77.3368 221.64 76.7208 221.71C75.6288 221.836 74.9428 222.144 74.9428 223.068C74.9428 223.796 75.5028 224.23 76.4408 224.23C77.4628 224.23 78.6248 223.474 78.6248 222.452ZM82.7431 225V217.664H83.8211V218.882C84.3951 217.986 85.0951 217.454 86.2571 217.454C87.5311 217.454 88.5811 218.098 88.5811 219.456V225H87.4191V219.918C87.4191 218.938 86.7191 218.476 85.9071 218.476C84.5911 218.476 83.9051 219.61 83.9051 220.87V225H82.7431ZM97.4454 220.086H96.2694C96.1434 219.12 95.4994 218.518 94.4774 218.518C92.9654 218.518 92.3774 219.96 92.3774 221.416C92.3774 222.872 93.0354 224.174 94.5054 224.174C95.5274 224.174 96.1574 223.6 96.3534 222.438H97.5294C97.3754 224.202 96.2834 225.252 94.4774 225.252C92.3354 225.252 91.1594 223.572 91.1594 221.416C91.1594 219.218 92.3074 217.44 94.4914 217.44C96.2834 217.44 97.4034 218.532 97.4454 220.086ZM106.156 222.732C105.904 224.272 104.742 225.252 103.02 225.252C100.808 225.252 99.6877 223.642 99.6877 221.402C99.6877 218.952 101.018 217.44 103.048 217.44C105.316 217.44 106.31 219.134 106.31 221.682H100.906C100.948 223.124 101.648 224.174 103.062 224.174C104.014 224.174 104.658 223.712 104.98 222.732H106.156ZM103.034 218.518C101.718 218.518 101.032 219.498 100.934 220.73H105.05C105.05 219.512 104.294 218.518 103.034 218.518ZM63.0942 236.042H61.8342C61.7922 234.922 61.1342 234.096 59.7762 234.096C58.4322 234.096 57.7182 234.768 57.7182 235.65C57.7182 236.462 58.1382 236.924 59.0482 237.134L61.0502 237.596C62.5762 237.946 63.3742 238.954 63.3742 240.214C63.3742 242.16 61.9602 243.252 59.9022 243.252C57.4662 243.252 56.1642 241.964 56.1362 239.878H57.3962C57.4102 241.18 58.2782 242.09 59.9302 242.09C61.4002 242.09 62.0582 241.39 62.0582 240.396C62.0582 239.528 61.5822 239.038 60.6162 238.814L58.5862 238.338C57.1722 238.002 56.4022 237.12 56.4022 235.776C56.4022 234.138 57.7182 232.99 59.8182 232.99C61.8622 232.99 63.0942 234.236 63.0942 235.86V236.042ZM65.4345 243V232.794H66.5965V236.756C67.1145 235.986 67.7865 235.454 68.9485 235.454C70.2225 235.454 71.2725 236.098 71.2725 237.456V243H70.1105V237.918C70.1105 236.938 69.4105 236.476 68.5985 236.476C67.2825 236.476 66.5965 237.61 66.5965 238.87V243H65.4345ZM80.1928 240.732C79.9408 242.272 78.7788 243.252 77.0568 243.252C74.8448 243.252 73.7248 241.642 73.7248 239.402C73.7248 236.952 75.0548 235.44 77.0848 235.44C79.3528 235.44 80.3468 237.134 80.3468 239.682H74.9428C74.9848 241.124 75.6848 242.174 77.0988 242.174C78.0508 242.174 78.6948 241.712 79.0168 240.732H80.1928ZM77.0708 236.518C75.7548 236.518 75.0688 237.498 74.9708 238.73H79.0868C79.0868 237.512 78.3308 236.518 77.0708 236.518ZM88.8471 240.732C88.5951 242.272 87.4331 243.252 85.7111 243.252C83.4991 243.252 82.3791 241.642 82.3791 239.402C82.3791 236.952 83.7091 235.44 85.7391 235.44C88.0071 235.44 89.0011 237.134 89.0011 239.682H83.5971C83.6391 241.124 84.3391 242.174 85.7531 242.174C86.7051 242.174 87.3491 241.712 87.6711 240.732H88.8471ZM85.7251 236.518C84.4091 236.518 83.7231 237.498 83.6251 238.73H87.7411C87.7411 237.512 86.9851 236.518 85.7251 236.518ZM94.3654 235.664H97.2494V236.616H94.3654V240.704C94.3654 241.782 94.9394 242.146 96.0034 242.146C96.4794 242.146 96.8994 242.104 97.2494 242.006V243.028C96.7874 243.168 96.3254 243.196 95.9334 243.196C94.1554 243.196 93.2034 242.51 93.2034 240.914V236.616H91.0894V235.664H93.2034V233.648H94.3654V235.664Z" fill="rgb(var(--colour-main))"></path><path d="M196.936 141.664V152.052H195.774V148.076C195.228 148.916 194.514 149.252 193.506 149.252C191.532 149.252 190.37 147.74 190.37 145.43C190.37 143.204 191.448 141.44 193.562 141.44C194.528 141.44 195.354 141.86 195.9 142.63V141.664H196.936ZM193.73 142.532C192.344 142.532 191.588 143.764 191.588 145.346C191.588 146.844 192.26 148.16 193.73 148.16C195.2 148.16 195.774 146.746 195.774 145.388C195.774 143.932 195.186 142.532 193.73 142.532ZM205.408 141.664V149H204.358V147.908C203.686 148.874 202.986 149.252 201.908 149.252C201.278 149.252 200.746 149.112 200.326 148.818C199.822 148.454 199.57 147.936 199.57 147.25V141.664H200.732V146.788C200.732 147.278 200.9 147.656 201.222 147.908C201.488 148.118 201.838 148.23 202.244 148.23C202.79 148.23 203.252 148.034 203.63 147.628C204.036 147.194 204.246 146.564 204.246 145.738V141.664H205.408ZM214.329 146.732C214.077 148.272 212.915 149.252 211.193 149.252C208.981 149.252 207.861 147.642 207.861 145.402C207.861 142.952 209.191 141.44 211.221 141.44C213.489 141.44 214.483 143.134 214.483 145.682H209.079C209.121 147.124 209.821 148.174 211.235 148.174C212.187 148.174 212.831 147.712 213.153 146.732H214.329ZM211.207 142.518C209.891 142.518 209.205 143.498 209.107 144.73H213.223C213.223 143.512 212.467 142.518 211.207 142.518ZM217.201 149V141.664H218.279V143.246C218.769 142.196 219.707 141.454 220.911 141.454C222.591 141.454 223.459 142.378 223.599 143.834H222.437C222.269 142.952 221.793 142.476 220.799 142.476C219.329 142.476 218.377 143.722 218.377 145.444V149H217.201ZM228.501 150.54C228.123 151.548 227.409 152.052 226.499 152.052C226.149 152.052 225.841 152.01 225.547 151.912V150.82C225.855 150.89 226.107 150.904 226.345 150.904C226.877 150.904 227.171 150.708 227.381 150.19L227.829 149.112L225.113 141.664H226.345L228.487 147.614L230.601 141.664H231.805L228.501 150.54Z" fill="rgb(var(--colour-purple))"></path><path d="M229.425 228.794V238.048H231.679V239H225.757V238.048H228.291V229.746H225.757V228.794H229.425ZM240.291 236.732C240.039 238.272 238.877 239.252 237.155 239.252C234.943 239.252 233.823 237.642 233.823 235.402C233.823 232.952 235.153 231.44 237.183 231.44C239.451 231.44 240.445 233.134 240.445 235.682H235.041C235.083 237.124 235.783 238.174 237.197 238.174C238.149 238.174 238.793 237.712 239.115 236.732H240.291ZM237.169 232.518C235.853 232.518 235.167 233.498 235.069 234.73H239.185C239.185 233.512 238.429 232.518 237.169 232.518ZM247.7 228.794H248.862V239H247.826V237.964C247.238 238.818 246.454 239.252 245.488 239.252C243.318 239.252 242.296 237.516 242.296 235.262C242.296 233.148 243.36 231.44 245.446 231.44C246.44 231.44 247.196 231.818 247.7 232.574V228.794ZM245.642 232.532C244.27 232.532 243.514 233.764 243.514 235.346C243.514 236.844 244.158 238.16 245.656 238.16C247.126 238.16 247.7 236.746 247.7 235.388C247.7 233.918 247.112 232.532 245.642 232.532ZM254.226 242.052C252.63 242.052 251.426 241.394 251.23 239.84H252.448C252.616 240.666 253.19 241.072 254.254 241.072C255.724 241.072 256.326 240.344 256.326 238.384V237.964C255.892 238.818 255.108 239.252 254.142 239.252C251.972 239.252 250.95 237.558 250.95 235.304C250.95 233.148 252.014 231.44 254.1 231.44C255.094 231.44 255.85 231.818 256.354 232.574V231.664H257.516V237.81C257.516 238.832 257.432 239.602 257.264 240.134C256.858 241.408 255.808 242.052 254.226 242.052ZM254.31 238.16C255.78 238.16 256.354 236.746 256.354 235.388C256.354 233.918 255.766 232.532 254.296 232.532C252.924 232.532 252.168 233.764 252.168 235.346C252.168 236.844 252.812 238.16 254.31 238.16ZM266.254 236.732C266.002 238.272 264.84 239.252 263.118 239.252C260.906 239.252 259.786 237.642 259.786 235.402C259.786 232.952 261.116 231.44 263.146 231.44C265.414 231.44 266.408 233.134 266.408 235.682H261.004C261.046 237.124 261.746 238.174 263.16 238.174C264.112 238.174 264.756 237.712 265.078 236.732H266.254ZM263.132 232.518C261.816 232.518 261.13 233.498 261.032 234.73H265.148C265.148 233.512 264.392 232.518 263.132 232.518ZM269.127 239V231.664H270.205V233.246C270.695 232.196 271.633 231.454 272.837 231.454C274.517 231.454 275.385 232.378 275.525 233.834H274.363C274.195 232.952 273.719 232.476 272.725 232.476C271.255 232.476 270.303 233.722 270.303 235.444V239H269.127ZM282.919 239L282.051 236.074H278.677L277.809 239H276.465L279.559 229.214H281.197L284.277 239H282.919ZM278.999 234.982H281.729L280.357 230.39L278.999 234.982ZM292.161 234.086H290.985C290.859 233.12 290.215 232.518 289.193 232.518C287.681 232.518 287.093 233.96 287.093 235.416C287.093 236.872 287.751 238.174 289.221 238.174C290.243 238.174 290.873 237.6 291.069 236.438H292.245C292.091 238.202 290.999 239.252 289.193 239.252C287.051 239.252 285.875 237.572 285.875 235.416C285.875 233.218 287.023 231.44 289.207 231.44C290.999 231.44 292.119 232.532 292.161 234.086ZM300.816 234.086H299.64C299.514 233.12 298.87 232.518 297.848 232.518C296.336 232.518 295.748 233.96 295.748 235.416C295.748 236.872 296.406 238.174 297.876 238.174C298.898 238.174 299.528 237.6 299.724 236.438H300.9C300.746 238.202 299.654 239.252 297.848 239.252C295.706 239.252 294.53 237.572 294.53 235.416C294.53 233.218 295.678 231.44 297.862 231.44C299.654 231.44 300.774 232.532 300.816 234.086ZM306.334 231.44C308.588 231.44 309.652 233.12 309.652 235.346C309.652 237.572 308.588 239.252 306.334 239.252C304.08 239.252 303.016 237.572 303.016 235.346C303.016 233.12 304.08 231.44 306.334 231.44ZM306.334 232.518C304.85 232.518 304.234 233.848 304.234 235.346C304.234 236.844 304.85 238.174 306.334 238.174C307.818 238.174 308.434 236.844 308.434 235.346C308.434 233.848 307.818 232.518 306.334 232.518ZM317.914 231.664V239H316.864V237.908C316.192 238.874 315.492 239.252 314.414 239.252C313.784 239.252 313.252 239.112 312.832 238.818C312.328 238.454 312.076 237.936 312.076 237.25V231.664H313.238V236.788C313.238 237.278 313.406 237.656 313.728 237.908C313.994 238.118 314.344 238.23 314.75 238.23C315.296 238.23 315.758 238.034 316.136 237.628C316.542 237.194 316.752 236.564 316.752 235.738V231.664H317.914ZM320.73 239V231.664H321.808V232.882C322.382 231.986 323.082 231.454 324.244 231.454C325.518 231.454 326.568 232.098 326.568 233.456V239H325.406V233.918C325.406 232.938 324.706 232.476 323.894 232.476C322.578 232.476 321.892 233.61 321.892 234.87V239H320.73ZM332.353 231.664H335.237V232.616H332.353V236.704C332.353 237.782 332.927 238.146 333.991 238.146C334.467 238.146 334.887 238.104 335.237 238.006V239.028C334.775 239.168 334.313 239.196 333.921 239.196C332.143 239.196 331.191 238.51 331.191 236.914V232.616H329.077V231.664H331.191V229.648H332.353V231.664ZM343.639 233.666H342.421C342.393 232.938 341.833 232.476 340.951 232.476C339.999 232.476 339.355 232.896 339.355 233.554C339.355 234.072 339.719 234.38 340.405 234.562L342.071 234.996C343.303 235.318 343.933 235.92 343.933 236.956C343.933 238.384 342.813 239.252 340.993 239.252C339.075 239.252 338.067 238.412 337.983 236.774H339.215C339.327 237.768 339.929 238.216 341.021 238.216C342.057 238.216 342.743 237.824 342.743 237.138C342.743 236.508 342.435 236.242 341.637 236.032L340.097 235.626C338.767 235.276 338.165 234.73 338.165 233.61C338.165 232.28 339.257 231.44 340.979 231.44C342.687 231.44 343.611 232.28 343.639 233.666Z" fill="rgb(var(--colour-main))"></path><path d="M194.052 161.82H197.426V167H196.474L196.362 165.656C195.886 166.762 195.004 167.252 193.912 167.252C191.574 167.252 190.09 165.39 190.09 162.17C190.09 158.838 191.672 156.99 194.052 156.99C195.76 156.99 197.034 157.844 197.454 159.916H196.124C195.858 158.572 195.074 158.138 194.052 158.138C192.33 158.138 191.448 159.678 191.448 162.1C191.448 164.83 192.442 166.104 193.94 166.104C195.564 166.104 196.278 164.858 196.278 163.248V162.968H194.052V161.82ZM205.674 164.732C205.422 166.272 204.26 167.252 202.538 167.252C200.326 167.252 199.206 165.642 199.206 163.402C199.206 160.952 200.536 159.44 202.566 159.44C204.834 159.44 205.828 161.134 205.828 163.682H200.424C200.466 165.124 201.166 166.174 202.58 166.174C203.532 166.174 204.176 165.712 204.498 164.732H205.674ZM202.552 160.518C201.236 160.518 200.55 161.498 200.452 162.73H204.568C204.568 161.512 203.812 160.518 202.552 160.518ZM211.193 159.664H214.077V160.616H211.193V164.704C211.193 165.782 211.767 166.146 212.831 166.146C213.307 166.146 213.727 166.104 214.077 166.006V167.028C213.615 167.168 213.153 167.196 212.761 167.196C210.983 167.196 210.031 166.51 210.031 164.914V160.616H207.917V159.664H210.031V157.648H211.193V159.664ZM220.561 167H216.753V157.214H220.239C221.989 157.214 223.193 158.166 223.193 159.706C223.193 160.644 222.745 161.582 221.891 161.89C222.913 162.226 223.515 163.038 223.515 164.214C223.515 165.684 222.493 167 220.561 167ZM218.027 158.32V161.414H220.043C221.093 161.414 221.863 161.078 221.863 159.888C221.863 158.684 221.093 158.32 220.043 158.32H218.027ZM218.027 162.52V165.894H220.407C221.639 165.894 222.185 165.194 222.185 164.2C222.185 163.22 221.639 162.52 220.407 162.52H218.027ZM232.085 166.23V167.112C231.791 167.196 231.567 167.238 231.385 167.238C230.573 167.238 230.167 166.888 230.083 166.132C229.257 166.944 228.529 167.252 227.591 167.252C226.163 167.252 225.197 166.454 225.197 165.096C225.197 163.584 226.345 163.038 227.199 162.898C227.451 162.856 227.997 162.772 228.823 162.66C229.761 162.534 230.069 162.352 230.069 161.876V161.624C230.069 160.896 229.495 160.532 228.389 160.532C227.311 160.532 226.779 160.938 226.681 161.834H225.505C225.533 160.14 226.709 159.454 228.445 159.454C230.251 159.454 231.203 160.154 231.203 161.456V165.684C231.203 166.062 231.413 166.258 231.833 166.258C231.903 166.258 232.015 166.244 232.085 166.23ZM230.069 164.452V163.29C229.579 163.514 228.781 163.64 228.165 163.71C227.073 163.836 226.387 164.144 226.387 165.068C226.387 165.796 226.947 166.23 227.885 166.23C228.907 166.23 230.069 165.474 230.069 164.452ZM238.079 156.794V166.048H240.333V167H234.411V166.048H236.945V157.746H234.411V156.794H238.079ZM249.394 166.23V167.112C249.1 167.196 248.876 167.238 248.694 167.238C247.882 167.238 247.476 166.888 247.392 166.132C246.566 166.944 245.838 167.252 244.9 167.252C243.472 167.252 242.506 166.454 242.506 165.096C242.506 163.584 243.654 163.038 244.508 162.898C244.76 162.856 245.306 162.772 246.132 162.66C247.07 162.534 247.378 162.352 247.378 161.876V161.624C247.378 160.896 246.804 160.532 245.698 160.532C244.62 160.532 244.088 160.938 243.99 161.834H242.814C242.842 160.14 244.018 159.454 245.754 159.454C247.56 159.454 248.512 160.154 248.512 161.456V165.684C248.512 166.062 248.722 166.258 249.142 166.258C249.212 166.258 249.324 166.244 249.394 166.23ZM247.378 164.452V163.29C246.888 163.514 246.09 163.64 245.474 163.71C244.382 163.836 243.696 164.144 243.696 165.068C243.696 165.796 244.256 166.23 245.194 166.23C246.216 166.23 247.378 165.474 247.378 164.452ZM251.496 167V159.664H252.574V160.882C253.148 159.986 253.848 159.454 255.01 159.454C256.284 159.454 257.334 160.098 257.334 161.456V167H256.172V161.918C256.172 160.938 255.472 160.476 254.66 160.476C253.344 160.476 252.658 161.61 252.658 162.87V167H251.496ZM266.198 162.086H265.022C264.896 161.12 264.252 160.518 263.23 160.518C261.718 160.518 261.13 161.96 261.13 163.416C261.13 164.872 261.788 166.174 263.258 166.174C264.28 166.174 264.91 165.6 265.106 164.438H266.282C266.128 166.202 265.036 167.252 263.23 167.252C261.088 167.252 259.912 165.572 259.912 163.416C259.912 161.218 261.06 159.44 263.244 159.44C265.036 159.44 266.156 160.532 266.198 162.086ZM274.909 164.732C274.657 166.272 273.495 167.252 271.773 167.252C269.561 167.252 268.441 165.642 268.441 163.402C268.441 160.952 269.771 159.44 271.801 159.44C274.069 159.44 275.063 161.134 275.063 163.682H269.659C269.701 165.124 270.401 166.174 271.815 166.174C272.767 166.174 273.411 165.712 273.733 164.732H274.909ZM271.787 160.518C270.471 160.518 269.785 161.498 269.687 162.73H273.803C273.803 161.512 273.047 160.518 271.787 160.518ZM283.773 160.042H282.513C282.471 158.922 281.813 158.096 280.455 158.096C279.111 158.096 278.397 158.768 278.397 159.65C278.397 160.462 278.817 160.924 279.727 161.134L281.729 161.596C283.255 161.946 284.053 162.954 284.053 164.214C284.053 166.16 282.639 167.252 280.581 167.252C278.145 167.252 276.843 165.964 276.815 163.878H278.075C278.089 165.18 278.957 166.09 280.609 166.09C282.079 166.09 282.737 165.39 282.737 164.396C282.737 163.528 282.261 163.038 281.295 162.814L279.265 162.338C277.851 162.002 277.081 161.12 277.081 159.776C277.081 158.138 278.397 156.99 280.497 156.99C282.541 156.99 283.773 158.236 283.773 159.86V160.042ZM286.113 167V156.794H287.275V160.756C287.793 159.986 288.465 159.454 289.627 159.454C290.901 159.454 291.951 160.098 291.951 161.456V167H290.789V161.918C290.789 160.938 290.089 160.476 289.277 160.476C287.961 160.476 287.275 161.61 287.275 162.87V167H286.113ZM300.872 164.732C300.62 166.272 299.458 167.252 297.736 167.252C295.524 167.252 294.404 165.642 294.404 163.402C294.404 160.952 295.734 159.44 297.764 159.44C300.032 159.44 301.026 161.134 301.026 163.682H295.622C295.664 165.124 296.364 166.174 297.778 166.174C298.73 166.174 299.374 165.712 299.696 164.732H300.872ZM297.75 160.518C296.434 160.518 295.748 161.498 295.65 162.73H299.766C299.766 161.512 299.01 160.518 297.75 160.518ZM309.526 164.732C309.274 166.272 308.112 167.252 306.39 167.252C304.178 167.252 303.058 165.642 303.058 163.402C303.058 160.952 304.388 159.44 306.418 159.44C308.686 159.44 309.68 161.134 309.68 163.682H304.276C304.318 165.124 305.018 166.174 306.432 166.174C307.384 166.174 308.028 165.712 308.35 164.732H309.526ZM306.404 160.518C305.088 160.518 304.402 161.498 304.304 162.73H308.42C308.42 161.512 307.664 160.518 306.404 160.518ZM315.044 159.664H317.928V160.616H315.044V164.704C315.044 165.782 315.618 166.146 316.682 166.146C317.158 166.146 317.578 166.104 317.928 166.006V167.028C317.466 167.168 317.004 167.196 316.612 167.196C314.834 167.196 313.882 166.51 313.882 164.914V160.616H311.768V159.664H313.882V157.648H315.044V159.664ZM212.117 210.794V220.048H214.371V221H208.449V220.048H210.983V211.746H208.449V210.794H212.117ZM222.983 218.732C222.731 220.272 221.569 221.252 219.847 221.252C217.635 221.252 216.515 219.642 216.515 217.402C216.515 214.952 217.845 213.44 219.875 213.44C222.143 213.44 223.137 215.134 223.137 217.682H217.733C217.775 219.124 218.475 220.174 219.889 220.174C220.841 220.174 221.485 219.712 221.807 218.732H222.983ZM219.861 214.518C218.545 214.518 217.859 215.498 217.761 216.73H221.877C221.877 215.512 221.121 214.518 219.861 214.518ZM230.391 210.794H231.553V221H230.517V219.964C229.929 220.818 229.145 221.252 228.179 221.252C226.009 221.252 224.987 219.516 224.987 217.262C224.987 215.148 226.051 213.44 228.137 213.44C229.131 213.44 229.887 213.818 230.391 214.574V210.794ZM228.333 214.532C226.961 214.532 226.205 215.764 226.205 217.346C226.205 218.844 226.849 220.16 228.347 220.16C229.817 220.16 230.391 218.746 230.391 217.388C230.391 215.918 229.803 214.532 228.333 214.532ZM236.917 224.052C235.321 224.052 234.117 223.394 233.921 221.84H235.139C235.307 222.666 235.881 223.072 236.945 223.072C238.415 223.072 239.017 222.344 239.017 220.384V219.964C238.583 220.818 237.799 221.252 236.833 221.252C234.663 221.252 233.641 219.558 233.641 217.304C233.641 215.148 234.705 213.44 236.791 213.44C237.785 213.44 238.541 213.818 239.045 214.574V213.664H240.207V219.81C240.207 220.832 240.123 221.602 239.955 222.134C239.549 223.408 238.499 224.052 236.917 224.052ZM237.001 220.16C238.471 220.16 239.045 218.746 239.045 217.388C239.045 215.918 238.457 214.532 236.987 214.532C235.615 214.532 234.859 215.764 234.859 217.346C234.859 218.844 235.503 220.16 237.001 220.16ZM248.946 218.732C248.694 220.272 247.532 221.252 245.81 221.252C243.598 221.252 242.478 219.642 242.478 217.402C242.478 214.952 243.808 213.44 245.838 213.44C248.106 213.44 249.1 215.134 249.1 217.682H243.696C243.738 219.124 244.438 220.174 245.852 220.174C246.804 220.174 247.448 219.712 247.77 218.732H248.946ZM245.824 214.518C244.508 214.518 243.822 215.498 243.724 216.73H247.84C247.84 215.512 247.084 214.518 245.824 214.518ZM251.818 221V213.664H252.896V215.246C253.386 214.196 254.324 213.454 255.528 213.454C257.208 213.454 258.076 214.378 258.216 215.834H257.054C256.886 214.952 256.41 214.476 255.416 214.476C253.946 214.476 252.994 215.722 252.994 217.444V221H251.818Z" fill="rgb(var(--colour-royal))"></path><path d="M324.594 156.08H325.854C324.314 157.844 323.516 159.888 323.516 162.1C323.516 164.312 324.314 166.356 325.854 168.12H324.594C323.25 166.608 322.382 164.41 322.382 162.1C322.382 159.79 323.25 157.592 324.594 156.08ZM272.669 179.568H270.765V177.664H272.669V179.568ZM270.765 183.096H272.669V185H270.765V183.096ZM192.876 204.134H191.616C193.156 202.37 193.954 200.326 193.954 198.114C193.954 195.902 193.156 193.858 191.616 192.094H192.876C194.22 193.606 195.088 195.804 195.088 198.114C195.088 200.424 194.22 202.622 192.876 204.134ZM209.205 197.638C210.101 197.638 210.437 197.246 210.437 196.238V193.928C210.437 192.794 211.025 192.094 211.963 192.094H213.251V193.018H212.369C211.683 193.018 211.487 193.214 211.487 193.942V196.182C211.487 197.316 211.207 197.764 210.227 198.1C211.207 198.422 211.487 198.898 211.487 200.032V202.272C211.487 203 211.683 203.196 212.369 203.196H213.251V204.12H211.963C211.025 204.12 210.437 203.42 210.437 202.286V199.976C210.437 198.968 210.101 198.562 209.205 198.562H208.813V197.638H209.205ZM264.014 210.08H265.274C263.734 211.844 262.936 213.888 262.936 216.1C262.936 218.312 263.734 220.356 265.274 222.12H264.014C262.67 220.608 261.802 218.41 261.802 216.1C261.802 213.79 262.67 211.592 264.014 210.08ZM273.009 219.096H274.913V221H273.009V219.096ZM279.421 219.096H281.325V221H279.421V219.096ZM285.833 219.096H287.737V221H285.833V219.096ZM296.728 222.134H295.468C297.008 220.37 297.806 218.326 297.806 216.114C297.806 213.902 297.008 211.858 295.468 210.094H296.728C298.072 211.606 298.94 213.804 298.94 216.114C298.94 218.424 298.072 220.622 296.728 222.134ZM313.056 215.638C313.952 215.638 314.288 215.246 314.288 214.238V211.928C314.288 210.794 314.876 210.094 315.814 210.094H317.102V211.018H316.22C315.534 211.018 315.338 211.214 315.338 211.942V214.182C315.338 215.316 315.058 215.764 314.078 216.1C315.058 216.422 315.338 216.898 315.338 218.032V220.272C315.338 221 315.534 221.196 316.22 221.196H317.102V222.12H315.814C314.876 222.12 314.288 221.42 314.288 220.286V217.976C314.288 216.968 313.952 216.562 313.056 216.562H312.664V215.638H313.056ZM347.673 233.638C348.569 233.638 348.905 233.246 348.905 232.238V229.928C348.905 228.794 349.493 228.094 350.431 228.094H351.719V229.018H350.837C350.151 229.018 349.955 229.214 349.955 229.942V232.182C349.955 233.316 349.675 233.764 348.695 234.1C349.675 234.422 349.955 234.898 349.955 236.032V238.272C349.955 239 350.151 239.196 350.837 239.196H351.719V240.12H350.431C349.493 240.12 348.905 239.42 348.905 238.286V235.976C348.905 234.968 348.569 234.562 347.673 234.562H347.281V233.638H347.673ZM212.429 255.096H214.333V257H212.429V255.096ZM218.841 255.096H220.745V257H218.841V255.096ZM225.253 255.096H227.157V257H225.253V255.096ZM239.031 252.576C238.135 252.576 237.799 252.968 237.799 253.976V256.286C237.799 257.42 237.211 258.12 236.273 258.12H234.985V257.196H235.867C236.553 257.196 236.749 257 236.749 256.272V254.032C236.749 252.898 237.029 252.45 238.009 252.114C237.029 251.792 236.749 251.316 236.749 250.182V247.942C236.749 247.214 236.553 247.018 235.867 247.018H234.985V246.094H236.273C237.211 246.094 237.799 246.794 237.799 247.928V250.238C237.799 251.246 238.135 251.652 239.031 251.652H239.423V252.576H239.031ZM213.069 270.576C212.173 270.576 211.837 270.968 211.837 271.976V274.286C211.837 275.42 211.249 276.12 210.311 276.12H209.023V275.196H209.905C210.591 275.196 210.787 275 210.787 274.272V272.032C210.787 270.898 211.067 270.45 212.047 270.114C211.067 269.792 210.787 269.316 210.787 268.182V265.942C210.787 265.214 210.591 265.018 209.905 265.018H209.023V264.094H210.311C211.249 264.094 211.837 264.794 211.837 265.928V268.238C211.837 269.246 212.173 269.652 213.069 269.652H213.461V270.576H213.069ZM195.76 288.576C194.864 288.576 194.528 288.968 194.528 289.976V292.286C194.528 293.42 193.94 294.12 193.002 294.12H191.714V293.196H192.596C193.282 293.196 193.478 293 193.478 292.272V290.032C193.478 288.898 193.758 288.45 194.738 288.114C193.758 287.792 193.478 287.316 193.478 286.182V283.942C193.478 283.214 193.282 283.018 192.596 283.018H191.714V282.094H193.002C193.94 282.094 194.528 282.794 194.528 283.928V286.238C194.528 287.246 194.864 287.652 195.76 287.652H196.152V288.576H195.76Z" fill="rgb(var(--colour-main-500))"></path><path d="M210.731 186.358V185.084C208.953 184.916 207.861 183.656 207.819 182.004H208.883C208.925 183.138 209.541 183.964 210.731 184.118V180.492L210.101 180.324C208.827 179.988 208.015 179.036 208.015 177.804C208.015 176.348 209.023 175.298 210.731 175.158V173.884H211.529V175.158C213.125 175.298 214.091 176.306 214.161 177.86H213.097C213.041 176.964 212.523 176.278 211.529 176.124V179.582L212.439 179.834C213.713 180.184 214.455 181.094 214.455 182.27C214.455 183.866 213.307 184.944 211.529 185.084V186.358H210.731ZM210.297 179.246L210.731 179.372V176.11C209.765 176.222 209.093 176.754 209.093 177.692C209.093 178.434 209.513 179.036 210.297 179.246ZM212.075 180.856L211.529 180.702V184.132C212.705 184.02 213.377 183.376 213.377 182.424C213.377 181.64 212.985 181.094 212.075 180.856ZM220.771 174.794V184.048H223.025V185H217.103V184.048H219.637V175.746H217.103V174.794H220.771ZM231.637 182.732C231.385 184.272 230.223 185.252 228.501 185.252C226.289 185.252 225.169 183.642 225.169 181.402C225.169 178.952 226.499 177.44 228.529 177.44C230.797 177.44 231.791 179.134 231.791 181.682H226.387C226.429 183.124 227.129 184.174 228.543 184.174C229.495 184.174 230.139 183.712 230.461 182.732H231.637ZM228.515 178.518C227.199 178.518 226.513 179.498 226.415 180.73H230.531C230.531 179.512 229.775 178.518 228.515 178.518ZM239.045 174.794H240.207V185H239.171V183.964C238.583 184.818 237.799 185.252 236.833 185.252C234.663 185.252 233.641 183.516 233.641 181.262C233.641 179.148 234.705 177.44 236.791 177.44C237.785 177.44 238.541 177.818 239.045 178.574V174.794ZM236.987 178.532C235.615 178.532 234.859 179.764 234.859 181.346C234.859 182.844 235.503 184.16 237.001 184.16C238.471 184.16 239.045 182.746 239.045 181.388C239.045 179.918 238.457 178.532 236.987 178.532ZM245.572 188.052C243.976 188.052 242.772 187.394 242.576 185.84H243.794C243.962 186.666 244.536 187.072 245.6 187.072C247.07 187.072 247.672 186.344 247.672 184.384V183.964C247.238 184.818 246.454 185.252 245.488 185.252C243.318 185.252 242.296 183.558 242.296 181.304C242.296 179.148 243.36 177.44 245.446 177.44C246.44 177.44 247.196 177.818 247.7 178.574V177.664H248.862V183.81C248.862 184.832 248.778 185.602 248.61 186.134C248.204 187.408 247.154 188.052 245.572 188.052ZM245.656 184.16C247.126 184.16 247.7 182.746 247.7 181.388C247.7 179.918 247.112 178.532 245.642 178.532C244.27 178.532 243.514 179.764 243.514 181.346C243.514 182.844 244.158 184.16 245.656 184.16ZM257.6 182.732C257.348 184.272 256.186 185.252 254.464 185.252C252.252 185.252 251.132 183.642 251.132 181.402C251.132 178.952 252.462 177.44 254.492 177.44C256.76 177.44 257.754 179.134 257.754 181.682H252.35C252.392 183.124 253.092 184.174 254.506 184.174C255.458 184.174 256.102 183.712 256.424 182.732H257.6ZM254.478 178.518C253.162 178.518 252.476 179.498 252.378 180.73H256.494C256.494 179.512 255.738 178.518 254.478 178.518ZM260.472 185V177.664H261.55V179.246C262.04 178.196 262.978 177.454 264.182 177.454C265.862 177.454 266.73 178.378 266.87 179.834H265.708C265.54 178.952 265.064 178.476 264.07 178.476C262.6 178.476 261.648 179.722 261.648 181.444V185H260.472Z" fill="rgb(var(--colour-forest))"></path></svg></div></div><section id="generate-reports-balance-sheet" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">a. </span>Balance sheet</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#generate-reports-balance-sheet">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A balance sheet reports the net worth of a business at the end of a reporting period.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Balance sheet query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetBalanceSheet(
  $ledgerIk: SafeString!
  $balanceAtEndOf: LastMoment!
  $accountsFilter: LedgerAccountsFilterSet!
) {
  ledger(ledger: { ik: $ledgerIk }) {
    ledgerAccounts(filter: $accountsFilter) {
      nodes {
        id
        name
        type
        balance(at: $balanceAtEndOf)
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Balance sheet parameters</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerIk&quot;: &quot;ik-used-to-create-ledger&quot;,
  &quot;accountsFilter&quot;: {
    &quot;type&quot;: {
      &quot;in&quot;: [&quot;asset&quot;, &quot;liability&quot;]
    }
  },
  &quot;balanceAtEndOf&quot;: &quot;1969&quot;
}
</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Generate a balance sheet by querying <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">balance</code> on all <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">asset</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">liability</code> Ledger Accounts.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Providing a <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-lastmoment"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">LastMoment</code></a> to the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">at</code> parameter on <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">balance</code> returns the balance at the end of that period. Values provided to <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">in</code> operators are OR&#x27;d, so both <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">asset</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">liability</code> accounts are returned.</p></div></div></section><section id="generate-reports-income-statement" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">b. </span>Income statement</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#generate-reports-income-statement">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">An income statement reports how a business&#x27;s net worth changed over the course of a reporting period.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Income statement query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetIncomeStatement(
  $ledgerIk: SafeString!
  $balanceChangeDuring: Period!
  $accountsFilter: LedgerAccountsFilterSet!
) {
  ledger(ledger: { ik: $ledgerIk }) {
    ledgerAccounts(filter: $accountsFilter) {
      nodes {
        path
        name
        type
        balanceChange(period: $balanceChangeDuring)
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Income statement parameters</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerIk&quot;: &quot;ik-used-to-create-ledger&quot;,
  &quot;accountsFilter&quot;: {
    &quot;type&quot;: {
      &quot;in&quot;: [&quot;income&quot;, &quot;expense&quot;]
    }
  },
  &quot;balanceChangeDuring&quot;: &quot;1969&quot;
}
</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Generate an income statement by querying <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">balanceChange</code> on all <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">income</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">expense</code> Ledger Accounts.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Providing a <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-period"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">Period</code></a> to the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">period</code> parameter on <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">balanceChange</code> retrieves the difference in the Ledger Account&#x27;s balance between the start and end of that period.</p></div></div></section><section id="generate-reports-account-statement" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">c. </span>Account statement</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#generate-reports-account-statement">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">An account statement reports how a Ledger Account changed over the course of a reporting period. It contains a Ledger Account&#x27;s starting balance, ending balance and all Ledger Lines posted to it.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Monthly account statement query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetAccountStatement(
  $accountMatch: LedgerAccountMatchInput!
  $startingBalanceAtEndOf: LastMoment!
  $endingBalanceAtEndOf: LastMoment!
  $linesFilter: LedgerLinesFilterSet!
) {
  ledgerAccount(ledgerAccount: $accountMatch) {
    path
    name
    type
    startingBalance: balance(at: $startingBalanceAtEndOf)
    endingBalance: balance(at: $endingBalanceAtEndOf)
    lines(filter: $linesFilter) {
      nodes {
        id
        key
        posted
        description
        amount
        ledgerEntryId
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Monthly account statement variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;accountMatch&quot;: {
    &quot;ledger&quot;: {
      &quot;ik&quot;: &quot;ik-used-to-create-ledger&quot;
    },
    &quot;path&quot;: &quot;liabilities/customer-deposits/customer:123&quot;
  },
  &quot;linesFilter&quot;: {
    &quot;posted&quot;: {
      &quot;after&quot;: &quot;1969-07-01T00:00:00.000Z&quot;,
      &quot;before&quot;: &quot;1969-07-30T23:59:59.999Z&quot;
    }
  },
  &quot;startingBalanceAtEndOf&quot;: &quot;1969-06&quot;,
  &quot;endingBalanceAtEndOf&quot;: &quot;1969-07&quot;
}
</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Generate an account statement by querying for <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">balance</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">lines</code> on a Ledger Account.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Get the starting balance by passing a <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-datetime"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">DateTime</code></a> to the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">at</code> parameter on <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">balance</code>. Use a GraphQL alias to make multiple <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">balance</code> queries within one request.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To get all Ledger Lines that were posted during the reporting period, use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">filter</code> parameter on <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">lines</code>. The <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">after</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">before</code> filters are inclusive, so use timestamps for the first and last moments of the reporting period.</p></div></div></section><section id="generate-reports-journal-export" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">d. </span>Journal export</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#generate-reports-journal-export">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A journal export lists all Ledger Entries posted to a Ledger during a reporting period.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Journal export query</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetJournalExport(
  $ledgerIk: SafeString!
  $entriesFilter: LedgerEntriesFilterSet!
  $entriesCursor: String
) {
  ledger(ledger: { ik: $ledgerIk }) {
    ledgerEntries(filter: $entriesFilter, after: $entriesCursor) {
      nodes {
        id
        type
        posted
        description
        lines {
          nodes {
            id
            description
            account {
              name
              path
              type
            }
            amount
          }
        }
      }
      pageInfo {
        hasNextPage
        endCursor
      }
    }
  }
}
</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Journal export variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerIk&quot;: &quot;ik-used-to-create-ledger&quot;,
  &quot;entriesFilter&quot;: {
    &quot;posted&quot;: {
      &quot;after&quot;: &quot;1969-01-01T00:00:00.000Z&quot;,
      &quot;before&quot;: &quot;1969-03-31T23:59:59.999Z&quot;
    }
  },
  &quot;entriesCursor&quot;: &quot;{{data.ledger.ledgerEntries.pageInfo.endCursor}}&quot;
}
</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Generate a journal export by listing Ledger Entries. For each Ledger Entry, include its Ledger Lines and their Ledger Accounts.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">This can be a long list, so query <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">pageInfo</code> to get a <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#query-data-basics-pagination">pagination cursor</a>. It can be passed to the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">after</code> parameter on <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ledgerEntries</code> to page through the results.</p></div></div></section></div></section>
<section id="configure-consistency" class="first:0 pt-f6 tablet:pt-f3 pb-[2em] scroll-mt-[90px]"><span class="TopicContainer-title group-one text-s20 tablet:text-fnormal laptop:text-s20 block mb-[1em] "><span class="text-main-500">K<!-- --> </span>Configure Consistency<span class="pl-[0.5em] phone:invisible phone:group-one-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#configure-consistency">#</a></span></span><div class="TopicContainer-content py-[2em] first-of-type:pt-0 ml-0 phone:ml-[1.8em] tablet:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To ensure correctness at scale, <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span>&#x27;s consistency mode lets you build guardrails without sacrificing performance.</p><div class="pt-f2"><div class="hidden tablet:block"><svg width="100%" height="100%" viewBox="0 0 621 450" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="621" height="450" fill="rgb(var(--colour-negative))"></rect><path d="M26.05 24.944H24.72C24.44 23.88 23.922 23.138 22.676 23.138C20.814 23.138 20.114 24.776 20.114 27.128C20.114 29.774 21.01 31.104 22.676 31.104C23.978 31.104 24.538 30.264 24.818 28.682H26.148C25.882 31.048 24.58 32.252 22.662 32.252C20.114 32.252 18.756 30.278 18.756 27.142C18.756 24.328 19.82 21.99 22.718 21.99C24.664 21.99 25.756 23.264 26.05 24.944ZM30.9803 24.44C33.2343 24.44 34.2983 26.12 34.2983 28.346C34.2983 30.572 33.2343 32.252 30.9803 32.252C28.7263 32.252 27.6623 30.572 27.6623 28.346C27.6623 26.12 28.7263 24.44 30.9803 24.44ZM30.9803 25.518C29.4963 25.518 28.8803 26.848 28.8803 28.346C28.8803 29.844 29.4963 31.174 30.9803 31.174C32.4643 31.174 33.0803 29.844 33.0803 28.346C33.0803 26.848 32.4643 25.518 30.9803 25.518ZM36.7226 32V24.664H37.8006V25.882C38.3746 24.986 39.0746 24.454 40.2366 24.454C41.5106 24.454 42.5606 25.098 42.5606 26.456V32H41.3986V26.918C41.3986 25.938 40.6986 25.476 39.8866 25.476C38.5706 25.476 37.8846 26.61 37.8846 27.87V32H36.7226ZM50.9769 26.666H49.7589C49.7309 25.938 49.1709 25.476 48.2889 25.476C47.3369 25.476 46.6929 25.896 46.6929 26.554C46.6929 27.072 47.0569 27.38 47.7429 27.562L49.4089 27.996C50.6409 28.318 51.2709 28.92 51.2709 29.956C51.2709 31.384 50.1509 32.252 48.3309 32.252C46.4129 32.252 45.4049 31.412 45.3209 29.774H46.5529C46.6649 30.768 47.2669 31.216 48.3589 31.216C49.3949 31.216 50.0809 30.824 50.0809 30.138C50.0809 29.508 49.7729 29.242 48.9749 29.032L47.4349 28.626C46.1049 28.276 45.5029 27.73 45.5029 26.61C45.5029 25.28 46.5949 24.44 48.3169 24.44C50.0249 24.44 50.9489 25.28 50.9769 26.666ZM56.3692 23.614V22.214H57.7692V23.614H56.3692ZM57.6432 24.664V31.048H59.8972V32H53.9752V31.048H56.4952V25.616H53.9752V24.664H57.6432ZM68.2855 26.666H67.0675C67.0395 25.938 66.4795 25.476 65.5975 25.476C64.6455 25.476 64.0015 25.896 64.0015 26.554C64.0015 27.072 64.3655 27.38 65.0515 27.562L66.7175 27.996C67.9495 28.318 68.5795 28.92 68.5795 29.956C68.5795 31.384 67.4595 32.252 65.6395 32.252C63.7215 32.252 62.7135 31.412 62.6295 29.774H63.8615C63.9735 30.768 64.5755 31.216 65.6675 31.216C66.7035 31.216 67.3895 30.824 67.3895 30.138C67.3895 29.508 67.0815 29.242 66.2835 29.032L64.7435 28.626C63.4135 28.276 62.8115 27.73 62.8115 26.61C62.8115 25.28 63.9035 24.44 65.6255 24.44C67.3335 24.44 68.2575 25.28 68.2855 26.666ZM74.3078 24.664H77.1918V25.616H74.3078V29.704C74.3078 30.782 74.8818 31.146 75.9458 31.146C76.4218 31.146 76.8418 31.104 77.1918 31.006V32.028C76.7298 32.168 76.2678 32.196 75.8758 32.196C74.0978 32.196 73.1458 31.51 73.1458 29.914V25.616H71.0318V24.664H73.1458V22.648H74.3078V24.664ZM86.0981 29.732C85.8461 31.272 84.6841 32.252 82.9621 32.252C80.7501 32.252 79.6301 30.642 79.6301 28.402C79.6301 25.952 80.9601 24.44 82.9901 24.44C85.2581 24.44 86.2521 26.134 86.2521 28.682H80.8481C80.8901 30.124 81.5901 31.174 83.0041 31.174C83.9561 31.174 84.6001 30.712 84.9221 29.732H86.0981ZM82.9761 25.518C81.6601 25.518 80.9741 26.498 80.8761 27.73H84.9921C84.9921 26.512 84.2361 25.518 82.9761 25.518ZM88.6484 32V24.664H89.7264V25.882C90.3004 24.986 91.0004 24.454 92.1624 24.454C93.4364 24.454 94.4864 25.098 94.4864 26.456V32H93.3244V26.918C93.3244 25.938 92.6244 25.476 91.8124 25.476C90.4964 25.476 89.8104 26.61 89.8104 27.87V32H88.6484ZM103.351 27.086H102.175C102.049 26.12 101.405 25.518 100.383 25.518C98.8707 25.518 98.2827 26.96 98.2827 28.416C98.2827 29.872 98.9407 31.174 100.411 31.174C101.433 31.174 102.063 30.6 102.259 29.438H103.435C103.281 31.202 102.189 32.252 100.383 32.252C98.2407 32.252 97.0647 30.572 97.0647 28.416C97.0647 26.218 98.2127 24.44 100.397 24.44C102.189 24.44 103.309 25.532 103.351 27.086ZM108.925 33.54C108.547 34.548 107.833 35.052 106.923 35.052C106.573 35.052 106.265 35.01 105.971 34.912V33.82C106.279 33.89 106.531 33.904 106.769 33.904C107.301 33.904 107.595 33.708 107.805 33.19L108.253 32.112L105.537 24.664H106.769L108.911 30.614L111.025 24.664H112.229L108.925 33.54Z" fill="rgb(var(--colour-main))"></path><rect x="279" y="143.5" width="306" height="207" stroke="rgb(var(--colour-main-500))"></rect><rect x="36.1914" y="126" width="188.809" height="225" stroke="rgb(var(--colour-main-500))"></rect><rect x="279" y="125.5" width="306" height="18" stroke="rgb(var(--colour-main-500))"></rect><path d="M281.03 113V104.838H286.98V105.902H282.262V108.282H286.42V109.346H282.262V113H281.03ZM288.76 113V104.838H292.61C294.206 104.838 295.172 105.636 295.172 107.022C295.172 107.974 294.766 108.562 293.786 108.996C294.738 109.374 294.906 109.654 294.948 111.082C294.948 111.25 295.004 111.922 295.06 112.174C295.102 112.384 295.2 112.566 295.452 112.734V113H294.01C293.828 112.636 293.744 112.272 293.744 111.642C293.744 111.32 293.758 111.194 293.758 110.872C293.758 109.99 293.394 109.57 292.414 109.57H289.992V113H288.76ZM289.992 108.506H292.302C293.324 108.506 293.898 108.156 293.898 107.204C293.898 106.252 293.338 105.902 292.302 105.902H289.992V108.506ZM296.533 113L299.585 104.838H301.111L304.107 113H302.763L301.965 110.788H298.661L297.835 113H296.533ZM298.983 109.752H301.615L300.327 106.196L298.983 109.752ZM308.897 113.14C306.475 113.14 304.963 111.334 304.963 108.996C304.963 106.518 306.503 104.698 309.023 104.698C310.787 104.698 312.229 105.608 312.537 107.344H311.305C311.039 106.294 310.115 105.776 309.009 105.776C307.161 105.776 306.195 107.162 306.195 108.954C306.195 110.76 307.287 112.076 309.051 112.076C310.563 112.076 311.557 111.194 311.557 109.878V109.724H309.177V108.66H312.621V113.042H311.711L311.599 111.838C310.773 112.762 309.961 113.14 308.897 113.14ZM314.583 113V104.838H316.333L318.671 111.768L320.953 104.838H322.703V113H321.527V106.294L319.301 113H318.027L315.773 106.294V113H314.583ZM324.777 113V104.838H330.769V105.902H326.009V108.282H330.559V109.346H326.009V111.936H330.979V113H324.777ZM332.676 113V104.838H333.992L338.248 111.18V104.838H339.438V113H338.094L333.866 106.672V113H332.676ZM343.514 113V105.902H340.742V104.838H347.504V105.902H344.746V113H343.514Z" fill="rgb(var(--colour-main-500))"></path><path d="M37.274 113V103.214H40.844C42.594 103.214 43.994 104.208 43.994 106.14C43.994 108.072 42.594 109.066 40.844 109.066H38.548V113H37.274ZM38.548 107.96H40.676C41.922 107.96 42.664 107.26 42.664 106.14C42.664 105.02 41.922 104.32 40.676 104.32H38.548V107.96ZM46.3903 113V105.664H47.4683V107.246C47.9583 106.196 48.8963 105.454 50.1003 105.454C51.7803 105.454 52.6483 106.378 52.7883 107.834H51.6263C51.4583 106.952 50.9823 106.476 49.9883 106.476C48.5183 106.476 47.5663 107.722 47.5663 109.444V113H46.3903ZM57.6346 105.44C59.8886 105.44 60.9526 107.12 60.9526 109.346C60.9526 111.572 59.8886 113.252 57.6346 113.252C55.3806 113.252 54.3166 111.572 54.3166 109.346C54.3166 107.12 55.3806 105.44 57.6346 105.44ZM55.5346 109.346C55.5346 110.844 56.1506 112.174 57.6346 112.174C59.1186 112.174 59.7346 110.844 59.7346 109.346C59.7346 107.848 59.1186 106.518 57.6346 106.518C56.1506 106.518 55.5346 107.848 55.5346 109.346ZM68.2349 102.794H69.3969V113H68.3609V111.964C67.7729 112.818 66.9889 113.252 66.0229 113.252C63.8529 113.252 62.8309 111.516 62.8309 109.262C62.8309 107.148 63.8949 105.44 65.9809 105.44C66.9749 105.44 67.7309 105.818 68.2349 106.574V102.794ZM64.0489 109.346C64.0489 110.844 64.6929 112.16 66.1909 112.16C67.6609 112.16 68.2349 110.746 68.2349 109.388C68.2349 107.918 67.6469 106.532 66.1769 106.532C64.8049 106.532 64.0489 107.764 64.0489 109.346ZM77.8692 105.664V113H76.8192V111.908C76.1472 112.874 75.4472 113.252 74.3692 113.252C73.7392 113.252 73.2072 113.112 72.7872 112.818C72.2832 112.454 72.0312 111.936 72.0312 111.25V105.664H73.1932V110.788C73.1932 111.278 73.3612 111.656 73.6832 111.908C73.9492 112.118 74.2992 112.23 74.7052 112.23C75.2512 112.23 75.7132 112.034 76.0912 111.628C76.4972 111.194 76.7072 110.564 76.7072 109.738V105.664H77.8692ZM85.5575 108.086C85.4315 107.12 84.7875 106.518 83.7655 106.518C82.2535 106.518 81.6655 107.96 81.6655 109.416C81.6655 110.872 82.3235 112.174 83.7935 112.174C84.8155 112.174 85.4455 111.6 85.6415 110.438H86.8175C86.6635 112.202 85.5715 113.252 83.7655 113.252C81.6235 113.252 80.4475 111.572 80.4475 109.416C80.4475 107.218 81.5955 105.44 83.7795 105.44C85.5715 105.44 86.6915 106.532 86.7335 108.086H85.5575ZM92.3078 105.664H95.1918V106.616H92.3078V110.704C92.3078 111.782 92.8818 112.16 93.9458 112.16C94.4218 112.16 94.8418 112.132 95.1918 112.034V113.028C94.7298 113.168 94.2678 113.196 93.8758 113.196C92.0978 113.196 91.1458 112.51 91.1458 110.914V106.616H89.0318V105.664H91.1458V103.648H92.3078V105.664Z" fill="rgb(var(--colour-main-500))"></path><circle cx="291" cy="134.5" r="3" fill="rgb(var(--colour-canvas))"></circle><circle cx="300" cy="134.5" r="3" fill="rgb(var(--colour-canvas))"></circle><circle cx="309" cy="134.5" r="3" fill="rgb(var(--colour-canvas))"></circle><line x1="225" y1="180" x2="248" y2="180" stroke="rgb(var(--colour-main-500))"></line><path d="M239 171L248 180L239 189" stroke="rgb(var(--colour-main-500))"></path><path d="M56.966 148.23V149.112C56.672 149.196 56.448 149.238 56.266 149.238C55.454 149.238 55.048 148.888 54.964 148.132C54.138 148.944 53.41 149.252 52.472 149.252C51.044 149.252 50.078 148.454 50.078 147.096C50.078 145.584 51.226 145.038 52.08 144.898C52.332 144.856 52.878 144.772 53.704 144.66C54.642 144.534 54.95 144.352 54.95 143.876V143.624C54.95 142.896 54.376 142.532 53.27 142.532C52.192 142.532 51.66 142.938 51.562 143.834H50.386C50.414 142.14 51.59 141.454 53.326 141.454C55.132 141.454 56.084 142.154 56.084 143.456V147.684C56.084 148.062 56.294 148.258 56.714 148.258C56.784 148.258 56.896 148.244 56.966 148.23ZM54.95 146.452V145.29C54.46 145.514 53.662 145.64 53.046 145.71C51.954 145.836 51.268 146.144 51.268 147.068C51.268 147.796 51.828 148.23 52.766 148.23C53.788 148.23 54.95 147.474 54.95 146.452ZM63.9263 138.794H65.0883V149H64.0523V147.964C63.4643 148.818 62.6803 149.252 61.7143 149.252C59.5443 149.252 58.5223 147.516 58.5223 145.262C58.5223 143.148 59.5863 141.44 61.6723 141.44C62.6663 141.44 63.4223 141.818 63.9263 142.574V138.794ZM61.8683 142.532C60.4963 142.532 59.7403 143.764 59.7403 145.346C59.7403 146.844 60.3843 148.16 61.8823 148.16C63.3523 148.16 63.9263 146.746 63.9263 145.388C63.9263 143.918 63.3383 142.532 61.8683 142.532ZM72.5806 138.794H73.7426V149H72.7066V147.964C72.1186 148.818 71.3346 149.252 70.3686 149.252C68.1986 149.252 67.1766 147.516 67.1766 145.262C67.1766 143.148 68.2406 141.44 70.3266 141.44C71.3206 141.44 72.0766 141.818 72.5806 142.574V138.794ZM70.5226 142.532C69.1506 142.532 68.3946 143.764 68.3946 145.346C68.3946 146.844 69.0386 148.16 70.5366 148.16C72.0066 148.16 72.5806 146.746 72.5806 145.388C72.5806 143.918 71.9926 142.532 70.5226 142.532ZM76.6989 139.214H78.0009V147.852H82.6629V149H76.6989V139.214ZM91.1352 146.732C90.8832 148.272 89.7212 149.252 87.9992 149.252C85.7872 149.252 84.6672 147.642 84.6672 145.402C84.6672 142.952 85.9972 141.44 88.0272 141.44C90.2952 141.44 91.2892 143.134 91.2892 145.682H85.8852C85.9272 147.124 86.6272 148.174 88.0412 148.174C88.9932 148.174 89.6372 147.712 89.9592 146.732H91.1352ZM88.0132 142.518C86.6972 142.518 86.0112 143.498 85.9132 144.73H90.0292C90.0292 143.512 89.2732 142.518 88.0132 142.518ZM98.5435 138.794H99.7055V149H98.6695V147.964C98.0815 148.818 97.2975 149.252 96.3315 149.252C94.1615 149.252 93.1395 147.516 93.1395 145.262C93.1395 143.148 94.2035 141.44 96.2895 141.44C97.2835 141.44 98.0395 141.818 98.5435 142.574V138.794ZM96.4855 142.532C95.1135 142.532 94.3575 143.764 94.3575 145.346C94.3575 146.844 95.0015 148.16 96.4995 148.16C97.9695 148.16 98.5435 146.746 98.5435 145.388C98.5435 143.918 97.9555 142.532 96.4855 142.532ZM105.07 152.052C103.474 152.052 102.27 151.394 102.074 149.84H103.292C103.46 150.666 104.034 151.072 105.098 151.072C106.568 151.072 107.17 150.344 107.17 148.384V147.964C106.736 148.818 105.952 149.252 104.986 149.252C102.816 149.252 101.794 147.558 101.794 145.304C101.794 143.148 102.858 141.44 104.944 141.44C105.938 141.44 106.694 141.818 107.198 142.574V141.664H108.36V147.81C108.36 148.832 108.276 149.602 108.108 150.134C107.702 151.408 106.652 152.052 105.07 152.052ZM105.154 148.16C106.624 148.16 107.198 146.746 107.198 145.388C107.198 143.918 106.61 142.532 105.14 142.532C103.768 142.532 103.012 143.764 103.012 145.346C103.012 146.844 103.656 148.16 105.154 148.16ZM117.098 146.732C116.846 148.272 115.684 149.252 113.962 149.252C111.75 149.252 110.63 147.642 110.63 145.402C110.63 142.952 111.96 141.44 113.99 141.44C116.258 141.44 117.252 143.134 117.252 145.682H111.848C111.89 147.124 112.59 148.174 114.004 148.174C114.956 148.174 115.6 147.712 115.922 146.732H117.098ZM113.976 142.518C112.66 142.518 111.974 143.498 111.876 144.73H115.992C115.992 143.512 115.236 142.518 113.976 142.518ZM119.97 149V141.664H121.048V143.246C121.538 142.196 122.476 141.454 123.68 141.454C125.36 141.454 126.228 142.378 126.368 143.834H125.206C125.038 142.952 124.562 142.476 123.568 142.476C122.098 142.476 121.146 143.722 121.146 145.444V149H119.97ZM133.973 144.562H129.773V147.852H134.435V149H128.471V139.214H134.183V140.362H129.773V143.414H133.973V144.562ZM136.957 149V141.664H138.035V142.882C138.609 141.986 139.309 141.454 140.471 141.454C141.745 141.454 142.795 142.098 142.795 143.456V149H141.633V143.918C141.633 142.938 140.933 142.476 140.121 142.476C138.805 142.476 138.119 143.61 138.119 144.87V149H136.957ZM148.579 141.664H151.463V142.616H148.579V146.704C148.579 147.782 149.153 148.146 150.217 148.146C150.693 148.146 151.113 148.104 151.463 148.006V149.028C151.001 149.168 150.539 149.196 150.147 149.196C148.369 149.196 147.417 148.51 147.417 146.914V142.616H145.303V141.664H147.417V139.648H148.579V141.664ZM154.588 149V141.664H155.666V143.246C156.156 142.196 157.094 141.454 158.298 141.454C159.978 141.454 160.846 142.378 160.986 143.834H159.824C159.656 142.952 159.18 142.476 158.186 142.476C156.716 142.476 155.764 143.722 155.764 145.444V149H154.588ZM165.888 150.54C165.51 151.548 164.796 152.052 163.886 152.052C163.536 152.052 163.228 152.01 162.934 151.912V150.82C163.242 150.89 163.494 150.904 163.732 150.904C164.264 150.904 164.558 150.708 164.768 150.19L165.216 149.112L162.5 141.664H163.732L165.874 147.614L167.988 141.664H169.192L165.888 150.54Z" fill="rgb(var(--colour-royal))"></path><path d="M175.438 138.08H176.698C175.158 139.844 174.36 141.888 174.36 144.1C174.36 146.312 175.158 148.356 176.698 150.12H175.438C174.094 148.608 173.226 146.41 173.226 144.1C173.226 141.79 174.094 139.592 175.438 138.08ZM52.374 204.134H51.114C52.654 202.37 53.452 200.326 53.452 198.114C53.452 195.902 52.654 193.858 51.114 192.094H52.374C53.718 193.606 54.586 195.804 54.586 198.114C54.586 200.424 53.718 202.622 52.374 204.134Z" fill="rgb(var(--colour-main-500))"></path><path d="M74.2746 166.23V167.112C73.9806 167.196 73.7566 167.238 73.5746 167.238C72.7626 167.238 72.3566 166.888 72.2726 166.132C71.4466 166.944 70.7186 167.252 69.7806 167.252C68.3526 167.252 67.3866 166.454 67.3866 165.096C67.3866 163.584 68.5346 163.038 69.3886 162.898C69.6406 162.856 70.1866 162.772 71.0126 162.66C71.9506 162.534 72.2586 162.352 72.2586 161.876V161.624C72.2586 160.896 71.6846 160.532 70.5786 160.532C69.5006 160.532 68.9686 160.938 68.8706 161.834H67.6946C67.7226 160.14 68.8986 159.454 70.6346 159.454C72.4406 159.454 73.3926 160.154 73.3926 161.456V165.684C73.3926 166.062 73.6026 166.258 74.0226 166.258C74.0926 166.258 74.2046 166.244 74.2746 166.23ZM72.2586 164.452V163.29C71.7686 163.514 70.9706 163.64 70.3546 163.71C69.2626 163.836 68.5766 164.144 68.5766 165.068C68.5766 165.796 69.1366 166.23 70.0746 166.23C71.0966 166.23 72.2586 165.474 72.2586 164.452ZM75.5089 167V159.664H76.6009V160.42C76.9089 159.958 77.4969 159.496 78.2809 159.496C78.9949 159.496 79.5689 159.874 79.7789 160.476C80.0729 159.986 80.6609 159.496 81.4869 159.496C82.3969 159.496 83.0689 160.098 83.0689 161.022V167H81.9209V161.26C81.9209 160.742 81.5849 160.476 81.1089 160.476C80.3249 160.476 79.8629 160.938 79.8629 161.708V167H78.7149V161.26C78.7149 160.742 78.3789 160.476 77.9029 160.476C77.1189 160.476 76.6569 160.938 76.6569 161.708V167H75.5089ZM87.9432 159.44C90.1972 159.44 91.2612 161.12 91.2612 163.346C91.2612 165.572 90.1972 167.252 87.9432 167.252C85.6892 167.252 84.6252 165.572 84.6252 163.346C84.6252 161.12 85.6892 159.44 87.9432 159.44ZM87.9432 160.518C86.4592 160.518 85.8432 161.848 85.8432 163.346C85.8432 164.844 86.4592 166.174 87.9432 166.174C89.4272 166.174 90.0432 164.844 90.0432 163.346C90.0432 161.848 89.4272 160.518 87.9432 160.518ZM99.5235 159.664V167H98.4735V165.908C97.8015 166.874 97.1015 167.252 96.0235 167.252C95.3935 167.252 94.8615 167.112 94.4415 166.818C93.9375 166.454 93.6855 165.936 93.6855 165.25V159.664H94.8475V164.788C94.8475 165.278 95.0155 165.656 95.3375 165.908C95.6035 166.118 95.9535 166.23 96.3595 166.23C96.9055 166.23 97.3675 166.034 97.7455 165.628C98.1515 165.194 98.3615 164.564 98.3615 163.738V159.664H99.5235ZM102.34 167V159.664H103.418V160.882C103.992 159.986 104.692 159.454 105.854 159.454C107.128 159.454 108.178 160.098 108.178 161.456V167H107.016V161.918C107.016 160.938 106.316 160.476 105.504 160.476C104.188 160.476 103.502 161.61 103.502 162.87V167H102.34ZM113.962 159.664H116.846V160.616H113.962V164.704C113.962 165.782 114.536 166.146 115.6 166.146C116.076 166.146 116.496 166.104 116.846 166.006V167.028C116.384 167.168 115.922 167.196 115.53 167.196C113.752 167.196 112.8 166.51 112.8 164.914V160.616H110.686V159.664H112.8V157.648H113.962V159.664ZM123.512 161.568H121.608V159.664H123.512V161.568ZM121.608 165.096H123.512V167H121.608V165.096ZM137.223 161.988H142.515V162.996H137.223V161.988ZM145.205 157.214H151.841V158.25C149.643 161.316 148.397 163.654 147.809 167H146.493C147.459 162.912 148.425 161.526 150.637 158.292H145.205V157.214ZM154.798 157.214H159.922V158.292H155.806L155.4 161.148C155.932 160.672 156.618 160.504 157.29 160.504C159.054 160.504 160.44 161.764 160.44 163.794C160.44 165.796 159.152 167.252 157.038 167.252C155.904 167.252 154.056 166.762 153.748 164.606H154.994C155.274 165.656 155.974 166.174 157.038 166.174C158.452 166.174 159.18 165.208 159.18 163.85C159.18 162.492 158.522 161.54 157.08 161.54C156.296 161.54 155.708 161.834 155.19 162.52H154.07L154.798 157.214ZM70.4526 188.052C68.8566 188.052 67.6526 187.394 67.4566 185.84H68.6746C68.8426 186.666 69.4166 187.072 70.4806 187.072C71.9506 187.072 72.5526 186.344 72.5526 184.384V183.964C72.1186 184.818 71.3346 185.252 70.3686 185.252C68.1986 185.252 67.1766 183.558 67.1766 181.304C67.1766 179.148 68.2406 177.44 70.3266 177.44C71.3206 177.44 72.0766 177.818 72.5806 178.574V177.664H73.7426V183.81C73.7426 184.832 73.6586 185.602 73.4906 186.134C73.0846 187.408 72.0346 188.052 70.4526 188.052ZM70.5366 184.16C72.0066 184.16 72.5806 182.746 72.5806 181.388C72.5806 179.918 71.9926 178.532 70.5226 178.532C69.1506 178.532 68.3946 179.764 68.3946 181.346C68.3946 182.844 69.0386 184.16 70.5366 184.16ZM79.3449 177.664H82.2289V178.616H79.3449V182.704C79.3449 183.782 79.9189 184.146 80.9829 184.146C81.4589 184.146 81.8789 184.104 82.2289 184.006V185.028C81.7669 185.168 81.3049 185.196 80.9129 185.196C79.1349 185.196 78.1829 184.51 78.1829 182.914V178.616H76.0689V177.664H78.1829V175.648H79.3449V177.664ZM91.1352 182.732C90.8832 184.272 89.7212 185.252 87.9992 185.252C85.7872 185.252 84.6672 183.642 84.6672 181.402C84.6672 178.952 85.9972 177.44 88.0272 177.44C90.2952 177.44 91.2892 179.134 91.2892 181.682H85.8852C85.9272 183.124 86.6272 184.174 88.0412 184.174C88.9932 184.174 89.6372 183.712 89.9592 182.732H91.1352ZM88.0132 178.518C86.6972 178.518 86.0112 179.498 85.9132 180.73H90.0292C90.0292 179.512 89.2732 178.518 88.0132 178.518ZM97.5495 179.568H95.6455V177.664H97.5495V179.568ZM95.6455 183.096H97.5495V185H95.6455V183.096ZM113.906 174.99C116.454 174.99 117.154 177.51 117.154 180.114C117.154 182.718 116.454 185.252 113.906 185.252C111.358 185.252 110.658 182.718 110.658 180.114C110.658 177.51 111.358 174.99 113.906 174.99ZM113.906 176.054C112.464 176.054 111.806 177.65 111.806 180.114C111.806 181.304 111.96 182.298 112.282 182.998L115.04 176.516C114.746 176.208 114.368 176.054 113.906 176.054ZM116.006 180.114C116.006 179.036 115.88 178.126 115.614 177.44L112.912 183.852C113.178 184.076 113.514 184.188 113.906 184.188C115.348 184.188 116.006 182.578 116.006 180.114Z" fill="rgb(var(--colour-main))"></path><circle cx="315" cy="180.5" r="6" fill="#5AC93B"></circle><path d="M316.82 183.995H317.79L315.59 177.005H314.42L312.21 183.995H313.17L313.79 181.905H316.2L316.82 183.995ZM314.02 181.125L314.99 177.845L315.97 181.125H314.02Z" fill="rgb(var(--colour-negative))"></path><path d="M333.874 185.5L333.006 182.574H329.632L328.764 185.5H327.42L330.514 175.714H332.152L335.232 185.5H333.874ZM329.954 181.482H332.684L331.312 176.89L329.954 181.482ZM342.668 180.166H341.45C341.422 179.438 340.862 178.976 339.98 178.976C339.028 178.976 338.384 179.396 338.384 180.054C338.384 180.572 338.748 180.88 339.434 181.062L341.1 181.496C342.332 181.818 342.962 182.42 342.962 183.456C342.962 184.884 341.842 185.752 340.022 185.752C338.104 185.752 337.096 184.912 337.012 183.274H338.244C338.356 184.268 338.958 184.716 340.05 184.716C341.086 184.716 341.772 184.324 341.772 183.638C341.772 183.008 341.464 182.742 340.666 182.532L339.126 182.126C337.796 181.776 337.194 181.23 337.194 180.11C337.194 178.78 338.286 177.94 340.008 177.94C341.716 177.94 342.64 178.78 342.668 180.166ZM351.323 180.166H350.105C350.077 179.438 349.517 178.976 348.635 178.976C347.683 178.976 347.039 179.396 347.039 180.054C347.039 180.572 347.403 180.88 348.089 181.062L349.755 181.496C350.987 181.818 351.617 182.42 351.617 183.456C351.617 184.884 350.497 185.752 348.677 185.752C346.759 185.752 345.751 184.912 345.667 183.274H346.899C347.011 184.268 347.613 184.716 348.705 184.716C349.741 184.716 350.427 184.324 350.427 183.638C350.427 183.008 350.119 182.742 349.321 182.532L347.781 182.126C346.451 181.776 345.849 181.23 345.849 180.11C345.849 178.78 346.941 177.94 348.663 177.94C350.371 177.94 351.295 178.78 351.323 180.166ZM360.481 183.232C360.229 184.772 359.067 185.752 357.345 185.752C355.133 185.752 354.013 184.142 354.013 181.902C354.013 179.452 355.343 177.94 357.373 177.94C359.641 177.94 360.635 179.634 360.635 182.182H355.231C355.273 183.624 355.973 184.674 357.387 184.674C358.339 184.674 358.983 184.212 359.305 183.232H360.481ZM357.359 179.018C356.043 179.018 355.357 179.998 355.259 181.23H359.375C359.375 180.012 358.619 179.018 357.359 179.018ZM365.999 178.164H368.883V179.116H365.999V183.204C365.999 184.282 366.573 184.646 367.637 184.646C368.113 184.646 368.533 184.604 368.883 184.506V185.528C368.421 185.668 367.959 185.696 367.567 185.696C365.789 185.696 364.837 185.01 364.837 183.414V179.116H362.723V178.164H364.837V176.148H365.999V178.164Z" fill="rgb(var(--colour-main))"></path><path d="M540.637 175.714H545.761V176.792H541.645L541.239 179.648C541.771 179.172 542.457 179.004 543.129 179.004C544.893 179.004 546.279 180.264 546.279 182.294C546.279 184.296 544.991 185.752 542.877 185.752C541.743 185.752 539.895 185.262 539.587 183.106H540.833C541.113 184.156 541.813 184.674 542.877 184.674C544.291 184.674 545.019 183.708 545.019 182.35C545.019 180.992 544.361 180.04 542.919 180.04C542.135 180.04 541.547 180.334 541.029 181.02H539.909L540.637 175.714ZM551.672 175.49C554.22 175.49 554.92 178.01 554.92 180.614C554.92 183.218 554.22 185.752 551.672 185.752C549.124 185.752 548.424 183.218 548.424 180.614C548.424 178.01 549.124 175.49 551.672 175.49ZM551.672 176.554C550.23 176.554 549.572 178.15 549.572 180.614C549.572 181.804 549.726 182.798 550.048 183.498L552.806 177.016C552.512 176.708 552.134 176.554 551.672 176.554ZM553.772 180.614C553.772 179.536 553.646 178.626 553.38 177.94L550.678 184.352C550.944 184.576 551.28 184.688 551.672 184.688C553.114 184.688 553.772 183.078 553.772 180.614Z" fill="rgb(var(--colour-main))"></path><rect x="297" y="162.5" width="271" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M252 171L261 180L252 189" stroke="rgb(var(--colour-orange))"></path><path d="M270 189L261 180L270 171" stroke="rgb(var(--colour-orange))"></path></svg></div><div class="block tablet:hidden"><svg width="100%" height="100%" viewBox="0 0 378 360" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="378" height="360" fill="rgb(var(--colour-negative))"></rect><path d="M26.05 24.944H24.72C24.44 23.88 23.922 23.138 22.676 23.138C20.814 23.138 20.114 24.776 20.114 27.128C20.114 29.774 21.01 31.104 22.676 31.104C23.978 31.104 24.538 30.264 24.818 28.682H26.148C25.882 31.048 24.58 32.252 22.662 32.252C20.114 32.252 18.756 30.278 18.756 27.142C18.756 24.328 19.82 21.99 22.718 21.99C24.664 21.99 25.756 23.264 26.05 24.944ZM30.9803 24.44C33.2343 24.44 34.2983 26.12 34.2983 28.346C34.2983 30.572 33.2343 32.252 30.9803 32.252C28.7263 32.252 27.6623 30.572 27.6623 28.346C27.6623 26.12 28.7263 24.44 30.9803 24.44ZM30.9803 25.518C29.4963 25.518 28.8803 26.848 28.8803 28.346C28.8803 29.844 29.4963 31.174 30.9803 31.174C32.4643 31.174 33.0803 29.844 33.0803 28.346C33.0803 26.848 32.4643 25.518 30.9803 25.518ZM36.7226 32V24.664H37.8006V25.882C38.3746 24.986 39.0746 24.454 40.2366 24.454C41.5106 24.454 42.5606 25.098 42.5606 26.456V32H41.3986V26.918C41.3986 25.938 40.6986 25.476 39.8866 25.476C38.5706 25.476 37.8846 26.61 37.8846 27.87V32H36.7226ZM50.9769 26.666H49.7589C49.7309 25.938 49.1709 25.476 48.2889 25.476C47.3369 25.476 46.6929 25.896 46.6929 26.554C46.6929 27.072 47.0569 27.38 47.7429 27.562L49.4089 27.996C50.6409 28.318 51.2709 28.92 51.2709 29.956C51.2709 31.384 50.1509 32.252 48.3309 32.252C46.4129 32.252 45.4049 31.412 45.3209 29.774H46.5529C46.6649 30.768 47.2669 31.216 48.3589 31.216C49.3949 31.216 50.0809 30.824 50.0809 30.138C50.0809 29.508 49.7729 29.242 48.9749 29.032L47.4349 28.626C46.1049 28.276 45.5029 27.73 45.5029 26.61C45.5029 25.28 46.5949 24.44 48.3169 24.44C50.0249 24.44 50.9489 25.28 50.9769 26.666ZM56.3692 23.614V22.214H57.7692V23.614H56.3692ZM57.6432 24.664V31.048H59.8972V32H53.9752V31.048H56.4952V25.616H53.9752V24.664H57.6432ZM68.2855 26.666H67.0675C67.0395 25.938 66.4795 25.476 65.5975 25.476C64.6455 25.476 64.0015 25.896 64.0015 26.554C64.0015 27.072 64.3655 27.38 65.0515 27.562L66.7175 27.996C67.9495 28.318 68.5795 28.92 68.5795 29.956C68.5795 31.384 67.4595 32.252 65.6395 32.252C63.7215 32.252 62.7135 31.412 62.6295 29.774H63.8615C63.9735 30.768 64.5755 31.216 65.6675 31.216C66.7035 31.216 67.3895 30.824 67.3895 30.138C67.3895 29.508 67.0815 29.242 66.2835 29.032L64.7435 28.626C63.4135 28.276 62.8115 27.73 62.8115 26.61C62.8115 25.28 63.9035 24.44 65.6255 24.44C67.3335 24.44 68.2575 25.28 68.2855 26.666ZM74.3078 24.664H77.1918V25.616H74.3078V29.704C74.3078 30.782 74.8818 31.146 75.9458 31.146C76.4218 31.146 76.8418 31.104 77.1918 31.006V32.028C76.7298 32.168 76.2678 32.196 75.8758 32.196C74.0978 32.196 73.1458 31.51 73.1458 29.914V25.616H71.0318V24.664H73.1458V22.648H74.3078V24.664ZM86.0981 29.732C85.8461 31.272 84.6841 32.252 82.9621 32.252C80.7501 32.252 79.6301 30.642 79.6301 28.402C79.6301 25.952 80.9601 24.44 82.9901 24.44C85.2581 24.44 86.2521 26.134 86.2521 28.682H80.8481C80.8901 30.124 81.5901 31.174 83.0041 31.174C83.9561 31.174 84.6001 30.712 84.9221 29.732H86.0981ZM82.9761 25.518C81.6601 25.518 80.9741 26.498 80.8761 27.73H84.9921C84.9921 26.512 84.2361 25.518 82.9761 25.518ZM88.6484 32V24.664H89.7264V25.882C90.3004 24.986 91.0004 24.454 92.1624 24.454C93.4364 24.454 94.4864 25.098 94.4864 26.456V32H93.3244V26.918C93.3244 25.938 92.6244 25.476 91.8124 25.476C90.4964 25.476 89.8104 26.61 89.8104 27.87V32H88.6484ZM103.351 27.086H102.175C102.049 26.12 101.405 25.518 100.383 25.518C98.8707 25.518 98.2827 26.96 98.2827 28.416C98.2827 29.872 98.9407 31.174 100.411 31.174C101.433 31.174 102.063 30.6 102.259 29.438H103.435C103.281 31.202 102.189 32.252 100.383 32.252C98.2407 32.252 97.0647 30.572 97.0647 28.416C97.0647 26.218 98.2127 24.44 100.397 24.44C102.189 24.44 103.309 25.532 103.351 27.086ZM108.925 33.54C108.547 34.548 107.833 35.052 106.923 35.052C106.573 35.052 106.265 35.01 105.971 34.912V33.82C106.279 33.89 106.531 33.904 106.769 33.904C107.301 33.904 107.595 33.708 107.805 33.19L108.253 32.112L105.537 24.664H106.769L108.911 30.614L111.025 24.664H112.229L108.925 33.54Z" fill="rgb(var(--colour-main))"></path><rect x="225" y="143.5" width="135" height="153.5" stroke="rgb(var(--colour-main-500))"></rect><rect x="18.1914" y="126" width="152.809" height="171" stroke="rgb(var(--colour-main-500))"></rect><rect x="225" y="125.5" width="135" height="18" stroke="rgb(var(--colour-main-500))"></rect><path d="M227.03 113V104.838H232.98V105.902H228.262V108.282H232.42V109.346H228.262V113H227.03ZM234.76 113V104.838H238.61C240.206 104.838 241.172 105.636 241.172 107.022C241.172 107.974 240.766 108.562 239.786 108.996C240.738 109.374 240.906 109.654 240.948 111.082C240.948 111.25 241.004 111.922 241.06 112.174C241.102 112.384 241.2 112.566 241.452 112.734V113H240.01C239.828 112.636 239.744 112.272 239.744 111.642C239.744 111.32 239.758 111.194 239.758 110.872C239.758 109.99 239.394 109.57 238.414 109.57H235.992V113H234.76ZM235.992 108.506H238.302C239.324 108.506 239.898 108.156 239.898 107.204C239.898 106.252 239.338 105.902 238.302 105.902H235.992V108.506ZM242.533 113L245.585 104.838H247.111L250.107 113H248.763L247.965 110.788H244.661L243.835 113H242.533ZM244.983 109.752H247.615L246.327 106.196L244.983 109.752ZM254.897 113.14C252.475 113.14 250.963 111.334 250.963 108.996C250.963 106.518 252.503 104.698 255.023 104.698C256.787 104.698 258.229 105.608 258.537 107.344H257.305C257.039 106.294 256.115 105.776 255.009 105.776C253.161 105.776 252.195 107.162 252.195 108.954C252.195 110.76 253.287 112.076 255.051 112.076C256.563 112.076 257.557 111.194 257.557 109.878V109.724H255.177V108.66H258.621V113.042H257.711L257.599 111.838C256.773 112.762 255.961 113.14 254.897 113.14ZM260.583 113V104.838H262.333L264.671 111.768L266.953 104.838H268.703V113H267.527V106.294L265.301 113H264.027L261.773 106.294V113H260.583ZM270.777 113V104.838H276.769V105.902H272.009V108.282H276.559V109.346H272.009V111.936H276.979V113H270.777ZM278.676 113V104.838H279.992L284.248 111.18V104.838H285.438V113H284.094L279.866 106.672V113H278.676ZM289.514 113V105.902H286.742V104.838H293.504V105.902H290.746V113H289.514Z" fill="rgb(var(--colour-main))"></path><path d="M19.274 113V103.214H22.844C24.594 103.214 25.994 104.208 25.994 106.14C25.994 108.072 24.594 109.066 22.844 109.066H20.548V113H19.274ZM20.548 107.96H22.676C23.922 107.96 24.664 107.26 24.664 106.14C24.664 105.02 23.922 104.32 22.676 104.32H20.548V107.96ZM28.3903 113V105.664H29.4683V107.246C29.9583 106.196 30.8963 105.454 32.1003 105.454C33.7803 105.454 34.6483 106.378 34.7883 107.834H33.6263C33.4583 106.952 32.9823 106.476 31.9883 106.476C30.5183 106.476 29.5663 107.722 29.5663 109.444V113H28.3903ZM39.6346 105.44C41.8886 105.44 42.9526 107.12 42.9526 109.346C42.9526 111.572 41.8886 113.252 39.6346 113.252C37.3806 113.252 36.3166 111.572 36.3166 109.346C36.3166 107.12 37.3806 105.44 39.6346 105.44ZM39.6346 106.518C38.1506 106.518 37.5346 107.848 37.5346 109.346C37.5346 110.844 38.1506 112.174 39.6346 112.174C41.1186 112.174 41.7346 110.844 41.7346 109.346C41.7346 107.848 41.1186 106.518 39.6346 106.518ZM50.2349 102.794H51.3969V113H50.3609V111.964C49.7729 112.818 48.9889 113.252 48.0229 113.252C45.8529 113.252 44.8309 111.516 44.8309 109.262C44.8309 107.148 45.8949 105.44 47.9809 105.44C48.9749 105.44 49.7309 105.818 50.2349 106.574V102.794ZM48.1769 106.532C46.8049 106.532 46.0489 107.764 46.0489 109.346C46.0489 110.844 46.6929 112.16 48.1909 112.16C49.6609 112.16 50.2349 110.746 50.2349 109.388C50.2349 107.918 49.6469 106.532 48.1769 106.532ZM59.8692 105.664V113H58.8192V111.908C58.1472 112.874 57.4472 113.252 56.3692 113.252C55.7392 113.252 55.2072 113.112 54.7872 112.818C54.2832 112.454 54.0312 111.936 54.0312 111.25V105.664H55.1932V110.788C55.1932 111.278 55.3612 111.656 55.6832 111.908C55.9492 112.118 56.2992 112.23 56.7052 112.23C57.2512 112.23 57.7132 112.034 58.0912 111.628C58.4972 111.194 58.7072 110.564 58.7072 109.738V105.664H59.8692ZM68.7335 108.086H67.5575C67.4315 107.12 66.7875 106.518 65.7655 106.518C64.2535 106.518 63.6655 107.96 63.6655 109.416C63.6655 110.872 64.3235 112.174 65.7935 112.174C66.8155 112.174 67.4455 111.6 67.6415 110.438H68.8175C68.6635 112.202 67.5715 113.252 65.7655 113.252C63.6235 113.252 62.4475 111.572 62.4475 109.416C62.4475 107.218 63.5955 105.44 65.7795 105.44C67.5715 105.44 68.6915 106.532 68.7335 108.086ZM74.3078 105.664H77.1918V106.616H74.3078V110.704C74.3078 111.782 74.8818 112.146 75.9458 112.146C76.4218 112.146 76.8418 112.104 77.1918 112.006V113.028C76.7298 113.168 76.2678 113.196 75.8758 113.196C74.0978 113.196 73.1458 112.51 73.1458 110.914V106.616H71.0318V105.664H73.1458V103.648H74.3078V105.664Z" fill="rgb(var(--colour-main))"></path><circle cx="237" cy="134.5" r="3" fill="rgb(var(--colour-canvas))"></circle><circle cx="246" cy="134.5" r="3" fill="rgb(var(--colour-canvas))"></circle><circle cx="255" cy="134.5" r="3" fill="rgb(var(--colour-canvas))"></circle><line x1="171" y1="171" x2="194" y2="171" stroke="rgb(var(--colour-main-500))"></line><path d="M185 162L194 171L185 180" stroke="rgb(var(--colour-main-500))"></path><path d="M38.966 148.23V149.112C38.672 149.196 38.448 149.238 38.266 149.238C37.454 149.238 37.048 148.888 36.964 148.132C36.138 148.944 35.41 149.252 34.472 149.252C33.044 149.252 32.078 148.454 32.078 147.096C32.078 145.584 33.226 145.038 34.08 144.898C34.332 144.856 34.878 144.772 35.704 144.66C36.642 144.534 36.95 144.352 36.95 143.876V143.624C36.95 142.896 36.376 142.532 35.27 142.532C34.192 142.532 33.66 142.938 33.562 143.834H32.386C32.414 142.14 33.59 141.454 35.326 141.454C37.132 141.454 38.084 142.154 38.084 143.456V147.684C38.084 148.062 38.294 148.258 38.714 148.258C38.784 148.258 38.896 148.244 38.966 148.23ZM36.95 146.452V145.29C36.46 145.514 35.662 145.64 35.046 145.71C33.954 145.836 33.268 146.144 33.268 147.068C33.268 147.796 33.828 148.23 34.766 148.23C35.788 148.23 36.95 147.474 36.95 146.452ZM45.9263 138.794H47.0883V149H46.0523V147.964C45.4643 148.818 44.6803 149.252 43.7143 149.252C41.5443 149.252 40.5223 147.516 40.5223 145.262C40.5223 143.148 41.5863 141.44 43.6723 141.44C44.6663 141.44 45.4223 141.818 45.9263 142.574V138.794ZM43.8683 142.532C42.4963 142.532 41.7403 143.764 41.7403 145.346C41.7403 146.844 42.3843 148.16 43.8823 148.16C45.3523 148.16 45.9263 146.746 45.9263 145.388C45.9263 143.918 45.3383 142.532 43.8683 142.532ZM54.5806 138.794H55.7426V149H54.7066V147.964C54.1186 148.818 53.3346 149.252 52.3686 149.252C50.1986 149.252 49.1766 147.516 49.1766 145.262C49.1766 143.148 50.2406 141.44 52.3266 141.44C53.3206 141.44 54.0766 141.818 54.5806 142.574V138.794ZM52.5226 142.532C51.1506 142.532 50.3946 143.764 50.3946 145.346C50.3946 146.844 51.0386 148.16 52.5366 148.16C54.0066 148.16 54.5806 146.746 54.5806 145.388C54.5806 143.918 53.9926 142.532 52.5226 142.532ZM58.6989 139.214H60.0009V147.852H64.6629V149H58.6989V139.214ZM73.1352 146.732C72.8832 148.272 71.7212 149.252 69.9992 149.252C67.7872 149.252 66.6672 147.642 66.6672 145.402C66.6672 142.952 67.9972 141.44 70.0272 141.44C72.2952 141.44 73.2892 143.134 73.2892 145.682H67.8852C67.9272 147.124 68.6272 148.174 70.0412 148.174C70.9932 148.174 71.6372 147.712 71.9592 146.732H73.1352ZM70.0132 142.518C68.6972 142.518 68.0112 143.498 67.9132 144.73H72.0292C72.0292 143.512 71.2732 142.518 70.0132 142.518ZM80.5435 138.794H81.7055V149H80.6695V147.964C80.0815 148.818 79.2975 149.252 78.3315 149.252C76.1615 149.252 75.1395 147.516 75.1395 145.262C75.1395 143.148 76.2035 141.44 78.2895 141.44C79.2835 141.44 80.0395 141.818 80.5435 142.574V138.794ZM78.4855 142.532C77.1135 142.532 76.3575 143.764 76.3575 145.346C76.3575 146.844 77.0015 148.16 78.4995 148.16C79.9695 148.16 80.5435 146.746 80.5435 145.388C80.5435 143.918 79.9555 142.532 78.4855 142.532ZM87.0698 152.052C85.4738 152.052 84.2698 151.394 84.0738 149.84H85.2918C85.4598 150.666 86.0338 151.072 87.0978 151.072C88.5678 151.072 89.1698 150.344 89.1698 148.384V147.964C88.7358 148.818 87.9518 149.252 86.9858 149.252C84.8158 149.252 83.7938 147.558 83.7938 145.304C83.7938 143.148 84.8578 141.44 86.9438 141.44C87.9378 141.44 88.6938 141.818 89.1978 142.574V141.664H90.3598V147.81C90.3598 148.832 90.2758 149.602 90.1078 150.134C89.7018 151.408 88.6518 152.052 87.0698 152.052ZM87.1538 148.16C88.6238 148.16 89.1978 146.746 89.1978 145.388C89.1978 143.918 88.6098 142.532 87.1398 142.532C85.7678 142.532 85.0118 143.764 85.0118 145.346C85.0118 146.844 85.6558 148.16 87.1538 148.16ZM99.0981 146.732C98.8461 148.272 97.6841 149.252 95.9621 149.252C93.7501 149.252 92.6301 147.642 92.6301 145.402C92.6301 142.952 93.9601 141.44 95.9901 141.44C98.2581 141.44 99.2521 143.134 99.2521 145.682H93.8481C93.8901 147.124 94.5901 148.174 96.0041 148.174C96.9561 148.174 97.6001 147.712 97.9221 146.732H99.0981ZM95.9761 142.518C94.6601 142.518 93.9741 143.498 93.8761 144.73H97.9921C97.9921 143.512 97.2361 142.518 95.9761 142.518ZM101.97 149V141.664H103.048V143.246C103.538 142.196 104.476 141.454 105.68 141.454C107.36 141.454 108.228 142.378 108.368 143.834H107.206C107.038 142.952 106.562 142.476 105.568 142.476C104.098 142.476 103.146 143.722 103.146 145.444V149H101.97ZM115.973 144.562H111.773V147.852H116.435V149H110.471V139.214H116.183V140.362H111.773V143.414H115.973V144.562ZM118.957 149V141.664H120.035V142.882C120.609 141.986 121.309 141.454 122.471 141.454C123.745 141.454 124.795 142.098 124.795 143.456V149H123.633V143.918C123.633 142.938 122.933 142.476 122.121 142.476C120.805 142.476 120.119 143.61 120.119 144.87V149H118.957ZM130.579 141.664H133.463V142.616H130.579V146.704C130.579 147.782 131.153 148.146 132.217 148.146C132.693 148.146 133.113 148.104 133.463 148.006V149.028C133.001 149.168 132.539 149.196 132.147 149.196C130.369 149.196 129.417 148.51 129.417 146.914V142.616H127.303V141.664H129.417V139.648H130.579V141.664ZM136.588 149V141.664H137.666V143.246C138.156 142.196 139.094 141.454 140.298 141.454C141.978 141.454 142.846 142.378 142.986 143.834H141.824C141.656 142.952 141.18 142.476 140.186 142.476C138.716 142.476 137.764 143.722 137.764 145.444V149H136.588ZM147.888 150.54C147.51 151.548 146.796 152.052 145.886 152.052C145.536 152.052 145.228 152.01 144.934 151.912V150.82C145.242 150.89 145.494 150.904 145.732 150.904C146.264 150.904 146.558 150.708 146.768 150.19L147.216 149.112L144.5 141.664H145.732L147.874 147.614L149.988 141.664H151.192L147.888 150.54Z" fill="rgb(var(--colour-royal))"></path><path d="M157.438 138.08H158.698C157.158 139.844 156.36 141.888 156.36 144.1C156.36 146.312 157.158 148.356 158.698 150.12H157.438C156.094 148.608 155.226 146.41 155.226 144.1C155.226 141.79 156.094 139.592 157.438 138.08ZM34.374 204.134H33.114C34.654 202.37 35.452 200.326 35.452 198.114C35.452 195.902 34.654 193.858 33.114 192.094H34.374C35.718 193.606 36.586 195.804 36.586 198.114C36.586 200.424 35.718 202.622 34.374 204.134Z" fill="rgb(var(--colour-main-500))"></path><path d="M56.2746 166.23V167.112C55.9806 167.196 55.7566 167.238 55.5746 167.238C54.7626 167.238 54.3566 166.888 54.2726 166.132C53.4466 166.944 52.7186 167.252 51.7806 167.252C50.3526 167.252 49.3866 166.454 49.3866 165.096C49.3866 163.584 50.5346 163.038 51.3886 162.898C51.6406 162.856 52.1866 162.772 53.0126 162.66C53.9506 162.534 54.2586 162.352 54.2586 161.876V161.624C54.2586 160.896 53.6846 160.532 52.5786 160.532C51.5006 160.532 50.9686 160.938 50.8706 161.834H49.6946C49.7226 160.14 50.8986 159.454 52.6346 159.454C54.4406 159.454 55.3926 160.154 55.3926 161.456V165.684C55.3926 166.062 55.6026 166.258 56.0226 166.258C56.0926 166.258 56.2046 166.244 56.2746 166.23ZM54.2586 164.452V163.29C53.7686 163.514 52.9706 163.64 52.3546 163.71C51.2626 163.836 50.5766 164.144 50.5766 165.068C50.5766 165.796 51.1366 166.23 52.0746 166.23C53.0966 166.23 54.2586 165.474 54.2586 164.452ZM57.5089 167V159.664H58.6009V160.42C58.9089 159.958 59.4969 159.496 60.2809 159.496C60.9949 159.496 61.5689 159.874 61.7789 160.476C62.0729 159.986 62.6609 159.496 63.4869 159.496C64.3969 159.496 65.0689 160.098 65.0689 161.022V167H63.9209V161.26C63.9209 160.742 63.5849 160.476 63.1089 160.476C62.3249 160.476 61.8629 160.938 61.8629 161.708V167H60.7149V161.26C60.7149 160.742 60.3789 160.476 59.9029 160.476C59.1189 160.476 58.6569 160.938 58.6569 161.708V167H57.5089ZM69.9432 159.44C72.1972 159.44 73.2612 161.12 73.2612 163.346C73.2612 165.572 72.1972 167.252 69.9432 167.252C67.6892 167.252 66.6252 165.572 66.6252 163.346C66.6252 161.12 67.6892 159.44 69.9432 159.44ZM69.9432 160.518C68.4592 160.518 67.8432 161.848 67.8432 163.346C67.8432 164.844 68.4592 166.174 69.9432 166.174C71.4272 166.174 72.0432 164.844 72.0432 163.346C72.0432 161.848 71.4272 160.518 69.9432 160.518ZM81.5235 159.664V167H80.4735V165.908C79.8015 166.874 79.1015 167.252 78.0235 167.252C77.3935 167.252 76.8615 167.112 76.4415 166.818C75.9375 166.454 75.6855 165.936 75.6855 165.25V159.664H76.8475V164.788C76.8475 165.278 77.0155 165.656 77.3375 165.908C77.6035 166.118 77.9535 166.23 78.3595 166.23C78.9055 166.23 79.3675 166.034 79.7455 165.628C80.1515 165.194 80.3615 164.564 80.3615 163.738V159.664H81.5235ZM84.3398 167V159.664H85.4178V160.882C85.9918 159.986 86.6918 159.454 87.8538 159.454C89.1278 159.454 90.1778 160.098 90.1778 161.456V167H89.0158V161.918C89.0158 160.938 88.3158 160.476 87.5038 160.476C86.1878 160.476 85.5018 161.61 85.5018 162.87V167H84.3398ZM95.9621 159.664H98.8461V160.616H95.9621V164.704C95.9621 165.782 96.5361 166.146 97.6001 166.146C98.0761 166.146 98.4961 166.104 98.8461 166.006V167.028C98.3841 167.168 97.9221 167.196 97.5301 167.196C95.7521 167.196 94.8001 166.51 94.8001 164.914V160.616H92.6861V159.664H94.8001V157.648H95.9621V159.664ZM105.512 161.568H103.608V159.664H105.512V161.568ZM103.608 165.096H105.512V167H103.608V165.096ZM119.223 161.988H124.515V162.996H119.223V161.988ZM127.205 157.214H133.841V158.25C131.643 161.316 130.397 163.654 129.809 167H128.493C129.459 162.912 130.425 161.526 132.637 158.292H127.205V157.214ZM136.798 157.214H141.922V158.292H137.806L137.4 161.148C137.932 160.672 138.618 160.504 139.29 160.504C141.054 160.504 142.44 161.764 142.44 163.794C142.44 165.796 141.152 167.252 139.038 167.252C137.904 167.252 136.056 166.762 135.748 164.606H136.994C137.274 165.656 137.974 166.174 139.038 166.174C140.452 166.174 141.18 165.208 141.18 163.85C141.18 162.492 140.522 161.54 139.08 161.54C138.296 161.54 137.708 161.834 137.19 162.52H136.07L136.798 157.214ZM52.4526 188.052C50.8566 188.052 49.6526 187.394 49.4566 185.84H50.6746C50.8426 186.666 51.4166 187.072 52.4806 187.072C53.9506 187.072 54.5526 186.344 54.5526 184.384V183.964C54.1186 184.818 53.3346 185.252 52.3686 185.252C50.1986 185.252 49.1766 183.558 49.1766 181.304C49.1766 179.148 50.2406 177.44 52.3266 177.44C53.3206 177.44 54.0766 177.818 54.5806 178.574V177.664H55.7426V183.81C55.7426 184.832 55.6586 185.602 55.4906 186.134C55.0846 187.408 54.0346 188.052 52.4526 188.052ZM52.5366 184.16C54.0066 184.16 54.5806 182.746 54.5806 181.388C54.5806 179.918 53.9926 178.532 52.5226 178.532C51.1506 178.532 50.3946 179.764 50.3946 181.346C50.3946 182.844 51.0386 184.16 52.5366 184.16ZM61.3449 177.664H64.2289V178.616H61.3449V182.704C61.3449 183.782 61.9189 184.146 62.9829 184.146C63.4589 184.146 63.8789 184.104 64.2289 184.006V185.028C63.7669 185.168 63.3049 185.196 62.9129 185.196C61.1349 185.196 60.1829 184.51 60.1829 182.914V178.616H58.0689V177.664H60.1829V175.648H61.3449V177.664ZM73.1352 182.732C72.8832 184.272 71.7212 185.252 69.9992 185.252C67.7872 185.252 66.6672 183.642 66.6672 181.402C66.6672 178.952 67.9972 177.44 70.0272 177.44C72.2952 177.44 73.2892 179.134 73.2892 181.682H67.8852C67.9272 183.124 68.6272 184.174 70.0412 184.174C70.9932 184.174 71.6372 183.712 71.9592 182.732H73.1352ZM70.0132 178.518C68.6972 178.518 68.0112 179.498 67.9132 180.73H72.0292C72.0292 179.512 71.2732 178.518 70.0132 178.518ZM79.5495 179.568H77.6455V177.664H79.5495V179.568ZM77.6455 183.096H79.5495V185H77.6455V183.096ZM95.9061 174.99C98.4541 174.99 99.1541 177.51 99.1541 180.114C99.1541 182.718 98.4541 185.252 95.9061 185.252C93.3581 185.252 92.6581 182.718 92.6581 180.114C92.6581 177.51 93.3581 174.99 95.9061 174.99ZM95.9061 176.054C94.4641 176.054 93.8061 177.65 93.8061 180.114C93.8061 181.304 93.9601 182.298 94.2821 182.998L97.0401 176.516C96.7461 176.208 96.3681 176.054 95.9061 176.054ZM98.0061 180.114C98.0061 179.036 97.8801 178.126 97.6141 177.44L94.9121 183.852C95.1781 184.076 95.5141 184.188 95.9061 184.188C97.3481 184.188 98.0061 182.578 98.0061 180.114Z" fill="rgb(var(--colour-main))"></path><circle cx="252.498" cy="171" r="6" fill="#5AC93B"></circle><path d="M254.318 174.495H255.288L253.088 167.505H251.918L249.708 174.495H250.668L251.288 172.405H253.698L254.318 174.495ZM251.518 171.625L252.488 168.345L253.468 171.625H251.518Z" fill="rgb(var(--colour-negative))"></path><path d="M271.372 176L270.504 173.074H267.13L266.262 176H264.918L268.012 166.214H269.65L272.73 176H271.372ZM267.452 171.982H270.182L268.81 167.39L267.452 171.982ZM280.166 170.666H278.948C278.92 169.938 278.36 169.476 277.478 169.476C276.526 169.476 275.882 169.896 275.882 170.554C275.882 171.072 276.246 171.38 276.932 171.562L278.598 171.996C279.83 172.318 280.46 172.92 280.46 173.956C280.46 175.384 279.34 176.252 277.52 176.252C275.602 176.252 274.594 175.412 274.51 173.774H275.742C275.854 174.768 276.456 175.216 277.548 175.216C278.584 175.216 279.27 174.824 279.27 174.138C279.27 173.508 278.962 173.242 278.164 173.032L276.624 172.626C275.294 172.276 274.692 171.73 274.692 170.61C274.692 169.28 275.784 168.44 277.506 168.44C279.214 168.44 280.138 169.28 280.166 170.666ZM288.821 170.666H287.603C287.575 169.938 287.015 169.476 286.133 169.476C285.181 169.476 284.537 169.896 284.537 170.554C284.537 171.072 284.901 171.38 285.587 171.562L287.253 171.996C288.485 172.318 289.115 172.92 289.115 173.956C289.115 175.384 287.995 176.252 286.175 176.252C284.257 176.252 283.249 175.412 283.165 173.774H284.397C284.509 174.768 285.111 175.216 286.203 175.216C287.239 175.216 287.925 174.824 287.925 174.138C287.925 173.508 287.617 173.242 286.819 173.032L285.279 172.626C283.949 172.276 283.347 171.73 283.347 170.61C283.347 169.28 284.439 168.44 286.161 168.44C287.869 168.44 288.793 169.28 288.821 170.666ZM297.979 173.732C297.727 175.272 296.565 176.252 294.843 176.252C292.631 176.252 291.511 174.642 291.511 172.402C291.511 169.952 292.841 168.44 294.871 168.44C297.139 168.44 298.133 170.134 298.133 172.682H292.729C292.771 174.124 293.471 175.174 294.885 175.174C295.837 175.174 296.481 174.712 296.803 173.732H297.979ZM294.857 169.518C293.541 169.518 292.855 170.498 292.757 171.73H296.873C296.873 170.512 296.117 169.518 294.857 169.518ZM303.497 168.664H306.381V169.616H303.497V173.704C303.497 174.782 304.071 175.146 305.135 175.146C305.611 175.146 306.031 175.104 306.381 175.006V176.028C305.919 176.168 305.457 176.196 305.065 176.196C303.287 176.196 302.335 175.51 302.335 173.914V169.616H300.221V168.664H302.335V166.648H303.497V168.664Z" fill="rgb(var(--colour-main))"></path><path d="M324.135 166.214H329.259V167.292H325.143L324.737 170.148C325.269 169.672 325.955 169.504 326.627 169.504C328.391 169.504 329.777 170.764 329.777 172.794C329.777 174.796 328.489 176.252 326.375 176.252C325.241 176.252 323.393 175.762 323.085 173.606H324.331C324.611 174.656 325.311 175.174 326.375 175.174C327.789 175.174 328.517 174.208 328.517 172.85C328.517 171.492 327.859 170.54 326.417 170.54C325.633 170.54 325.045 170.834 324.527 171.52H323.407L324.135 166.214ZM335.17 165.99C337.718 165.99 338.418 168.51 338.418 171.114C338.418 173.718 337.718 176.252 335.17 176.252C332.622 176.252 331.922 173.718 331.922 171.114C331.922 168.51 332.622 165.99 335.17 165.99ZM335.17 167.054C333.728 167.054 333.07 168.65 333.07 171.114C333.07 172.304 333.224 173.298 333.546 173.998L336.304 167.516C336.01 167.208 335.632 167.054 335.17 167.054ZM337.27 171.114C337.27 170.036 337.144 169.126 336.878 168.44L334.176 174.852C334.442 175.076 334.778 175.188 335.17 175.188C336.612 175.188 337.27 173.578 337.27 171.114Z" fill="rgb(var(--colour-main-500))"></path><rect x="234.498" y="153" width="117" height="36" stroke="rgb(var(--colour-main-500))"></rect><path d="M198 162L207 171L198 180" stroke="rgb(var(--colour-orange))"></path><path d="M216 180L207 171L216 162" stroke="rgb(var(--colour-orange))"></path></svg></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can configure consistency within your Schema to make granular tradeoffs between throughput and consistency.</p><section id="configure-consistency-ledger-configuration" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">a. </span>Ledger Configuration</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#configure-consistency-ledger-configuration">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can configure the consistency of the Ledger Entries list query in your Ledger. To do this, set <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">consistencyConfig</code> at the top level of your Schema:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Use <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">entries: eventual</code> for Ledgers that require high throughput but can tolerate a stale entry list</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Use <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">entries: strong</code> for Ledgers that have lower throughput but require strong consistency, such as those powering reconcilation dashboards</li>
</ul><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Configuring consistency</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;consistencyConfig&quot;: {
    &quot;entries&quot;: &quot;strong&quot;
  },
  &quot;chartOfAccounts&quot;: [...]
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">By default, all Ledgers use <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">eventual</code> consistency.</p></div></div></section><section id="configure-consistency-ledger-account-configuration" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">b. </span>Ledger Account Configuration</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#configure-consistency-ledger-account-configuration">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can configure the consistency of balances, as well as the Ledger Lines list query, in your Ledger Account.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To configure an account&#x27;s balance consistency, set <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">consistencyConfig.ownBalanceUpdates</code> within a Ledger Account&#x27;s definition:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Use <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ownBalanceUpdates: eventual</code> for Ledger Accounts that require high throughput but can tolerate stale balances, such as those used for reporting</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Use <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ownBalanceUpdates: strong</code> for Ledger Accounts that have lower throughput but require strong consistency, such as those used to authorize transactions</li>
</ul><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Similarly, to configure the consistency of an account&#x27;s lines, set <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">consistencyConfig.lines</code>:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Use <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">lines: eventual</code> for Ledger Accounts that require high throughput but can tolerate a stale line list</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Use <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">lines: strong</code> for Ledger Accounts that have lower throughput but require strong consistency, such as those powering transaction histories displayed to end users</li>
</ul><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Configuring consistency</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;accounts&quot;: [
    {
      &quot;key&quot;: &quot;user-balance&quot;,
      &quot;template&quot;: true,
      &quot;type&quot;: &quot;asset&quot;,
      &quot;consistencyConfig&quot;: {
        &quot;ownBalanceUpdates&quot;: &quot;strong&quot;,
        &quot;lines&quot;: &quot;eventual&quot;
      }
    }
  ]
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">By default, all Ledger Accounts use <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">eventual</code> for both properties.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">For low-throughput applications, setting all Ledger Accounts as <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">strong</code> may make implementation easier. To do this, set <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">defaultConsistencyConfig</code> on <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">chartOfAccounts</code>:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Configuring default consistency</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;chartOfAccounts&quot;: {
    &quot;defaultConsistencyConfig&quot;: {
      &quot;ownBalanceUpdates&quot;: &quot;strong&quot;,
      &quot;lines&quot;: &quot;strong&quot;
    },
    &quot;accounts&quot;: [...]
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Strongly consistent Ledger Accounts generally won&#x27;t have children, but in all cases child Ledger Accounts inherit the parent&#x27;s <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">consistencyConfig</code> setting.</p></div></div></section><section id="configure-consistency-balance-queries" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">c. </span>Balance queries</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#configure-consistency-balance-queries">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To query a strongly consistent <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ownBalance</code>, set <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">consistencyMode</code> to <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">strong</code> when querying the Ledger Account:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Setting consistency on ownBalance reads</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetOwnBalances(
  $ledgerAccount: LedgerAccountMatchInput!
) {
  ledgerAccount(ledgerAccount: $ledgerAccount) {
    ownBalance(consistencyMode: strong)
    ownBalances(consistencyMode: strong) {
      nodes {
        amount
        currency {
          code
        }
      }
    }
  }
}
</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">By default, balance queries on all Ledger Accounts are eventually consistent.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Restrictions:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Only <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ownBalance</code> supports strongly consistent reads; <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">balance</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">childBalance</code> support only eventually consistent reads</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Querying a strongly consistent balance on an eventually consistent Ledger Account throws a GraphQL error</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">You cannot combine <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">at</code> with <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">consistencyMode</code> to query strongly consistent historical balances</li>
</ul></div></div></section><section id="configure-consistency-entry-conditions" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">d. </span>Entry conditions</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#configure-consistency-entry-conditions">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Entry conditions are rules defined in your Schema to manage concurrency and enforce correctness within your Ledger.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Conditions are evaluated when a Ledger Entry is posted. If a condition is not met, the Ledger Entry is not posted and the mutation returns a <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">BadRequestError</code> with code <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">conditional_request_failed</code>.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">precondition</code> when your application reads a balance and needs to guarantee that it hasn&#x27;t changed before posting the Ledger Entry.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Using precondition</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">
{
  &quot;type&quot;: &quot;pay-employee&quot;,
  &quot;lines&quot;: [...],
  &quot;conditions&quot;: [
    {
      &quot;account&quot;: {
        &quot;path&quot;: &quot;bank-account&quot;
      },
      &quot;precondition&quot;: {
        &quot;ownBalance&quot;: {
          &quot;eq&quot;: &quot;{{current_balance}}&quot;
        }
      }
    }
  ]
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">postcondition</code> to guarantee that a write never puts a Ledger Account&#x27;s balance in an undesirable state.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Using postcondition</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">
{
  &quot;type&quot;: &quot;pay-employee&quot;,
  &quot;lines&quot;: [...],
  &quot;conditions&quot;: [
    {
      &quot;account&quot;: {
        &quot;path&quot;: &quot;bank-account&quot;
      },
      &quot;postcondition&quot;: {
        &quot;ownBalance&quot;: {
          &quot;gte&quot;: &quot;0&quot;
        }
      }
    }
  ]
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Restrictions:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Entry conditions apply to <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ownBalance</code>, which changes only for Ledger Accounts directly posted to in the Ledger Entry.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Ledger Accounts referenced in Entry conditions must have <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">consistencyConfig.ownBalanceUpdates</code> set to <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">strong</code></li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Linked Ledger Accounts do not support Entry conditions</li>
</ul></div></div></section><section id="configure-consistency-consistent-groups" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">e. </span>Consistent Groups</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#configure-consistency-consistent-groups">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can configure an account to have a strongly-consistent ownBalance for specific group keys.
To do this, use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">consistencyConfig.groups</code> configuration in the Schema.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Ledger Entry Group balance consistency</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;accounts&quot;: [
    {
      &quot;key&quot;: &quot;user-balance&quot;,
      &quot;template&quot;: true,
      &quot;type&quot;: &quot;asset&quot;,
      &quot;consistencyConfig&quot;: {
        &quot;groups&quot;: [
          {
            &quot;key&quot;: &quot;invoice_id&quot;,
            &quot;ownBalanceUpdates&quot;: &quot;strong&quot;
          }
        ]
      }
    }
  ]
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">See <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#group-ledger-entries">Group Ledger Entries</a> for more information about how to use Ledger Entry Groups.</p></div></div></section><section id="configure-consistency-query-consistent-groups" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">f. </span>Query Consistent Groups</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#configure-consistency-query-consistent-groups">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To query a strongly consistent Ledger Entry Group balance, set <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">consistencyMode</code> to <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">strong</code> or <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">use_account</code> when querying the group&#x27;s balances.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Setting consistency on group ownBalance reads</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query ListLedgerEntryGroupBalances(
  $ledger: LedgerMatchInput!
  $groupKey: SafeString!
  $groupValue: SafeString!
  $consistencyMode: ReadBalanceConsistencyMode
) {
  ledgerEntryGroup(ledgerEntryGroup: {
    ledger: $ledger,
    key: $groupKey,
    value: $groupValue,
  }) {
    balances {
      nodes {
        account {
          path
        }
        ownBalance(consistencyMode: $consistencyMode)
      }
    }
  }
}
</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">By default, Ledger Entry Group balances are eventually consistent. Like other consistency options, enabling strong consistency will reduce the maximum throughput of an account.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Restrictions:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Ledger Entry Group balances cannot be used for Entry conditions.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Querying a strongly consistent Ledger Entry Group balance without configuring strong group consistency for that Ledger Account throws a GraphQL error.</li>
</ul></div></div></section></div></section>
<section id="handle-currencies" class="first:0 pt-f6 tablet:pt-f3 pb-[2em] scroll-mt-[90px]"><span class="TopicContainer-title group-one text-s20 tablet:text-fnormal laptop:text-s20 block mb-[1em] "><span class="text-main-500">L<!-- --> </span>Handle currencies<span class="pl-[0.5em] phone:invisible phone:group-one-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#handle-currencies">#</a></span></span><div class="TopicContainer-content py-[2em] first-of-type:pt-0 ml-0 phone:ml-[1.8em] tablet:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use multi-currency Ledgers to easily build products that track currencies, stocks and inventories.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A Ledger can contain Ledger Accounts of different currencies, like USD and GBP bank accounts. Ledger Accounts can also be multi-currency, like one representing a stock portfolio, with a balance for each symbol.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can post Ledger Entries with multiple currencies. It must follow the Accounting Equation per currency, so you&#x27;ll need at least four Ledger Lines.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2"><span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> includes a <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-currencycode">list</a> of common currencies. You can also add your own <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#handle-currencies-custom-currencies">custom currencies</a>.</p><section id="handle-currencies-track-exposure" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">a. </span>Track exposure</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#handle-currencies-track-exposure">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Multi-currency ledgers often reflect transitory states: a company accepts payment in one currency intending to convert it to another currency. Between accepting and converting the money, the exchange rate could change. Tracking the potential gain or loss from this change is called exposure.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To track exposure, use a Change Ledger Account that has multiple balances, one for each currency. Here&#x27;s an example that tracks exposure between USD and EUR:</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">In this example,</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">User 1 starts out with 100 USD, balanced by 100 USD in the platform&#x27;s bank.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">User 1 pays User 2, but they have different wallet currencies, so we record the exchange rate they were given in an Exposure account. The exposure account balance is 100 USD - 90 EUR.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">The platform now owes User 2 EUR, so it exchanges 100 USD for 95 EUR. In this case, due to exchange rate fluctuation, they got a different rate. The exposure account balance records the difference in exchange rates: 5 EUR.</li>
</ul></div></div></section><section id="handle-currencies-ledger-accounts" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">b. </span>Ledger Accounts</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#handle-currencies-ledger-accounts">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To create a multi-currency Ledger, set <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">defaultCurrencyMode</code> to <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">multi</code> and unset <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">defaultCurrency</code>:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Multi-currency Ledger</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;key&quot;: &quot;...&quot;,
  &quot;chartOfAccounts&quot;: {
    &quot;defaultCurrencyMode&quot;: &quot;multi&quot;,
    &quot;accounts&quot;: [
      {...},
      {...}
    ]
  },
  &quot;ledgerEntries&quot;: {...}
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">For Ledger Accounts in a single currency, such as <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/#reconcile-transactions">bank accounts</a>, set <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">currencyMode</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">currency</code> on the account directly:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Single-currency Ledger Account</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;key&quot;: &quot;...&quot;,
  &quot;chartOfAccounts&quot;: {
    &quot;defaultCurrencyMode&quot;: &quot;multi&quot;,
    &quot;accounts&quot;: [
      {
        &quot;key&quot;: &quot;bank-account&quot;,
        &quot;currencyMode&quot;: &quot;single&quot;,
        &quot;currency&quot;: {
          &quot;code&quot;: &quot;USD&quot;
        }
      },
      {...}
    ]
  },
  &quot;ledgerEntries&quot;: {...}
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Like other Ledger Account properties, <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">currencyMode</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">currency</code> are inherited by child Ledger Accounts unless they are overridden.</p></div></div></section><section id="handle-currencies-ledger-entries" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">c. </span>Ledger Entries</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#handle-currencies-ledger-entries">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can define multi-currency Ledger Entries types in your Schema in the same way as single-currency Ledger Entries.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Multi-currency Ledger Accounts accept Ledger Lines in any currency, so Ledger Entries that post to them must specify the currency of each Ledger Line:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Multi-currency Ledger Entry</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;key&quot;: &quot;...&quot;,
  &quot;chartOfAccounts&quot;: {
    &quot;defaultCurrencyMode&quot;: &quot;multi&quot;,
    &quot;accounts&quot;: [
      {
        &quot;type&quot;: &quot;asset&quot;,
        &quot;key&quot;: &quot;bank-account&quot;
      },
      {...}
    ]
  },
  &quot;ledgerEntries&quot;: {
    &quot;types&quot;: [
      {
        &quot;type&quot;: &quot;user_funds_account_usd&quot;,
        &quot;description&quot;: &quot;Fund {{funding_amount}} USD&quot;,
        &quot;lines&quot;: [
          {
            &quot;key&quot;: &quot;funds_arrive_in_bank&quot;,
            &quot;account&quot;: { 
              &quot;path&quot;: &quot;bank-account&quot;
            },
            &quot;amount&quot;: &quot;{{funding_amount}}&quot;,
            &quot;currency&quot;: {
              &quot;code&quot;: &quot;USD&quot;
            }
          },
          {...other line}
        ]
      }
    ]
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can parameterize <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">currency</code> to make your Ledger Entries more reusable:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Parameterized multi-currency Ledger Entry</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;key&quot;: &quot;...&quot;,
  &quot;chartOfAccounts&quot;: {
    &quot;defaultCurrencyMode&quot;: &quot;multi&quot;,
    &quot;accounts&quot;: [
      {
        &quot;type&quot;: &quot;asset&quot;,
        &quot;key&quot;: &quot;bank-account&quot;
      },
      {...}
    ]
  },
  &quot;ledgerEntries&quot;: {
    &quot;types&quot;: [
      {
        &quot;type&quot;: &quot;user_funds_account&quot;,
        &quot;description&quot;: &quot;Fund {{funding_amount}} {{currency}}&quot;,
        &quot;lines&quot;: [
          {
            &quot;key&quot;: &quot;funds_arrive_in_bank&quot;,
            &quot;account&quot;: { 
              &quot;path&quot;: &quot;bank-account&quot;
            },
            &quot;amount&quot;: &quot;{{funding_amount}}&quot;,
            &quot;currency&quot;: {
              &quot;code&quot;: &quot;{{currency}}&quot;
            }
          },
          {...other line}
        ]
      }
    ]
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can also post multi-currency Ledger Entries to Ledger Account templates which parameterize <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">currency</code>. This is useful for creating <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#reconcile-transactions">Linked Ledger Accounts</a> if you have multiple bank accounts in different currencies in a multi-currency Ledger.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Parameterized Ledger Account templates</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;key&quot;: &quot;...&quot;,
  &quot;chartOfAccounts&quot;: {
    &quot;defaultCurrencyMode&quot;: &quot;multi&quot;,
    &quot;accounts&quot;: [
      {
        &quot;key&quot;: &quot;bank-accounts&quot;,
        &quot;template&quot;: true,
        &quot;currencyMode&quot;: &quot;single&quot;,
        &quot;currency&quot;: {
          &quot;code&quot;: &quot;{{currency}}&quot;
        }
      },
      {...}
    ]
  },
  &quot;ledgerEntries&quot;: {
    &quot;types&quot;: [
      {
        &quot;type&quot;: &quot;user_funds_account&quot;,
        &quot;description&quot;: &quot;Fund {{funding_amount}} {{currency}}&quot;,
        &quot;lines&quot;: [
          {
            &quot;key&quot;: &quot;funds_arrive_in_bank&quot;,
            &quot;account&quot;: { 
              &quot;path&quot;: &quot;bank-accounts:{{currency}}&quot;
            },
            &quot;amount&quot;: &quot;{{funding_amount}}&quot;,
            &quot;currency&quot;: {
              &quot;code&quot;: &quot;{{currency}}&quot;
            }
          },
          {...other line}
        ]
      }
    ]
  }
}
</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#configure-consistency-entry-conditions">Ledger Entry Conditions</a> against multi-currency Ledger Accounts need to specify the currency the condition applies to:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Parameterized Ledger Account templates</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;key&quot;: &quot;...&quot;,
  &quot;chartOfAccounts&quot;: {
    &quot;defaultCurrencyMode&quot;: &quot;multi&quot;,
    &quot;accounts&quot;: [
      {...},
      {...}
    ]
  },
  &quot;ledgerEntries&quot;: {
    &quot;types&quot;: [
      {
        &quot;type&quot;: &quot;p2p_transfer&quot;,
        &quot;description&quot;: &quot;Move {{funding_amount}} {{currency}}&quot;,
        &quot;lines&quot;: [
          {...},
          {...}
        ],
        &quot;conditions&quot;: [
          {
            &quot;account&quot;: {
              &quot;path&quot;: &quot;liabilities/users:{{from_user_id}}&quot;
            },
            &quot;currency&quot;: {
              &quot;code&quot;: &quot;{{currency}}&quot;
            },
            &quot;postcondition&quot;: {
              &quot;ownBalance&quot;: {
                &quot;gte&quot;: &quot;0&quot;
              }
            }
          }
        ]
      }
    ]
  }
}</code></pre></div></div></div></div></div></section><section id="handle-currencies-read-balances" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">d. </span>Read balances</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#handle-currencies-read-balances">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Balances on multi-currency Ledger Accounts are lists of currency and amount, as opposed to just a single amount. To read all balances in all currencies, query the plural versions of the singular balance field.</p><section id="handle-currencies-read-balances-latest" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Latest</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#handle-currencies-read-balances-latest">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can read the latest balance in a specific currency or list the latest balance in all currencies.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Multi-currency Ledger Accounts have three balance lists:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ownBalances</code>, the sum of all Ledger Lines in the Ledger Account per currency, excluding Ledger Lines in child Ledger Accounts</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">childBalances</code>, the sum of all Ledger Lines in child Ledger Accounts per currency</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">balances</code>, the sum of all Ledger Lines, including child Ledger Accounts per currency</li>
</ul><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To read a specific currency&#x27;s balance, pass in the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">currency</code> argument:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Get USD balance read</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetUSDBalance(
  $ledgerAccount: LedgerAccountMatchInput!
) {
  ledgerAccount(ledgerAccount: $ledgerAccount) {
    ownBalance(currency: { code: USD })
  }
}</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetUSDBalance variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerAccount&quot;: {
    &quot;path&quot;: &quot;assets/bank/user-cash&quot;,
    &quot;ledger&quot;: {
      &quot;ik&quot;: &quot;multi-currency-ledger&quot;
    }
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To read all the balances for a multi-currency Ledger Account, use <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ownBalances</code>:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Get all balances read</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetAllBalances(
  $ledgerAccount: LedgerAccountMatchInput!
) {
  ledgerAccount(ledgerAccount: $ledgerAccount) {
    ownBalances {
      nodes {
        currency {
          code
        }
        amount
      }
    }
  }
}</code></pre></div></div></div></div></section><section id="handle-currencies-read-balances-aggregated" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Aggregated</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#handle-currencies-read-balances-aggregated">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To read <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#read-balances-aggregated">aggregated balances</a> for multi-currency Ledger Accounts, pass in the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">currency</code> argument, or query <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">childBalances</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">balances</code>:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Get aggregated balances read</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetBalances(
  $ledgerAccount: LedgerAccountMatchInput!
) {
  ledgerAccount(ledgerAccount: $ledgerAccount) {

    childBalance(currency: { code: USD })
    childBalances {
      nodes {
        currency {
          code
        }
        amount
      }
    }

    balance(currency: { code: USD })
    balances {
      nodes {
        currency {
          code
        }
        amount
      }
    }

  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">If any Ledger Account has a descendant that is a multi-currency Ledger Account or if it has descendants of different currencies, it has <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">childBalances</code> and <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">balances</code>.</p></div></section><section id="handle-currencies-read-balances-consistent" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Consistent</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#handle-currencies-read-balances-consistent">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To read <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#read-balances-consistent">consistent balances</a> for multi-currency Ledger Accounts, pass in the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">consistencyMode</code> argument:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Get strongly-consistent ownBalances read</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetOwnBalances(
  $ledgerAccount: LedgerAccountMatchInput!
) {
  ledgerAccount(ledgerAccount: $ledgerAccount) {
    ownBalance(
      consistencyMode: strong
      currency: { code: USD }
    )
    ownBalances(consistencyMode: strong) {
      nodes {
        currency {
          code
        }
        amount
      }
    }
  }
}</code></pre></div></div></div></div></section><section id="handle-currencies-read-balances-historical" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Historical</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#handle-currencies-read-balances-historical">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To read <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#read-balances-historical">historical balances</a> for multi-currency Ledger Accounts, pass in the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">at</code> argument:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Get historical balances read</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetOldBalances(
  $ledgerAccount: LedgerAccountMatchInput!
) {
  ledgerAccount(ledgerAccount: $ledgerAccount) {
    ownBalance(at: &quot;1969&quot;, currency: { code: USD })
    ownBalances(at: &quot;1969&quot;) {
      nodes {
        currency {
          code
        }
        amount
      }
    }
  }
}</code></pre></div></div></div></div></section><section id="handle-currencies-read-balances-balance-changes" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Balance changes</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#handle-currencies-read-balances-balance-changes">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Multi-currency Ledger Accounts support reading <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#read-balances-balance-changes">balance changes</a>:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ownBalanceChanges</code>, how much <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ownBalances</code> changed</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">childBalanceChanges</code>, how much <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">childBalances</code> changed</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">balanceChanges</code>, how much <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">balances</code> changed</li>
</ul><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Balance change queries</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetBalanceChanges(
  $ledgerAccount: LedgerAccountMatchInput!
) {
  ledgerAccount(ledgerAccount: $ledgerAccount) {
    
    ownBalanceChange(
      period: &quot;1969&quot;
      currency: { code: USD }
    )
    ownBalanceChanges(period: &quot;1969&quot;) {
      nodes {
        currency {
          code
        }
        amount
      }
    }

    childBalanceChange(
      period: &quot;1968-12&quot;
      currency: { code: USD }
    )
    childBalanceChanges(period: &quot;1968-12&quot;) {
      nodes {
        currency {
          code
        }
        amount
      }
    }

    balanceChange(
      period: &quot;1968-12-25&quot;
      currency: { code: USD }
    )
    balanceChanges(period: &quot;1968-12-25&quot;) {
      nodes {
        currency {
          code
        }
        amount
      }
    }
      
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Balance change queries require you to specify a <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/api-reference#types-scalars-and-enums-period"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">period</code></a>. This can be a year, quarter, month, day or hour.</p></div></section></div></div></section><section id="handle-currencies-custom-currencies" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">e. </span>Custom currencies</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#handle-currencies-custom-currencies">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can define your own currencies to track any type of value, like rewards points, stocks or physical items.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To create a custom currency, call the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">createCustomCurrency</code> mutation:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">createCustomCurrency mutation </span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation CreateCustomCurrency (
    $customCurrency: CreateCustomCurrencyInput!,
) {
  createCustomCurrency(
    customCurrency: $customCurrency
  ) {
    ... on CreateCustomCurrencyResult {
      customCurrency {
        code
        customCurrencyId
        precision
        name
        customCode
      }
    }
    ... on Error {
      code
      message
    }
  }
}</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">createCustomCurrency variables </span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;customCurrency&quot;: {
    &quot;customCurrencyId&quot;: &quot;blue-gems&quot;,
    &quot;precision&quot;: 0,
    &quot;name&quot;: &quot;Blue Gems&quot;,
    &quot;customCode&quot;: &quot;BLUE&quot;
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To use a custom currency, set the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">customCurrencyId</code> on the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">currency</code> field of a Ledger Account and Ledger Line:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Custom currency Ledger Account</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;key&quot;: &quot;...&quot;,
  &quot;chartOfAccounts&quot;: {
    &quot;defaultCurrencyMode&quot;: &quot;multi&quot;,
    &quot;accounts&quot;: [
      {
        &quot;key&quot;: &quot;gems-issued&quot;,
        &quot;currencyMode&quot;: &quot;single&quot;,
        &quot;currency&quot;: {
          &quot;code&quot;: &quot;CUSTOM&quot;,
          &quot;customCurrencyId&quot;: &quot;blue-gems&quot;
        }
      },
      {...}
    ]
  },
  &quot;ledgerEntries&quot;: {
    &quot;types&quot;: [
      {
        &quot;type&quot;: &quot;issue-blue-gems&quot;,
        &quot;description&quot;: &quot;Issue blue gems&quot;,
        &quot;lines&quot;: [
          {
            &quot;key&quot;: &quot;increase-pool&quot;,
            &quot;account&quot;: { 
              &quot;path&quot;: &quot;gems-issued&quot;
            },
            &quot;amount&quot;: &quot;{{amount}}&quot;,
            &quot;currency&quot;: {
              &quot;code&quot;: &quot;CUSTOM&quot;,
              &quot;customCurrencyId&quot;: &quot;blue-gems&quot;
            }
          },
          {...other line}
        ]
      }
    ]
  }
}</code></pre></div></div></div></div></div></section></div></section>
<section id="group-ledger-entries" class="first:0 pt-f6 tablet:pt-f3 pb-[2em] scroll-mt-[90px]"><span class="TopicContainer-title group-one text-s20 tablet:text-fnormal laptop:text-s20 block mb-[1em] "><span class="text-main-500">M<!-- --> </span>Group Ledger Entries<span class="pl-[0.5em] phone:invisible phone:group-one-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#group-ledger-entries">#</a></span></span><div class="TopicContainer-content py-[2em] first-of-type:pt-0 ml-0 phone:ml-[1.8em] tablet:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A Ledger Entry Group is a collection of related Ledger Entries that occur at different points in time. Each Group tracks the net change to each Ledger Account balance it affects.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use Ledger Entry Groups to tie together Ledger Entries that are part of the same funds flow, such as a deposit, settlement or invoice. To store metadata, use <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#store-metadata">tags</a> instead.</p><section id="group-ledger-entries-configuring-groups" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">a. </span>Configuring Groups</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#group-ledger-entries-configuring-groups">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Groups for a Ledger Entry Type are defined as a list of key/value pairs in the Schema:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">Ledger Entry Type with Groups</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;type&quot;: &quot;user_initiates_withdrawal&quot;,
  &quot;description&quot;: &quot;{{user_id}} initiates withdrawal&quot;,
  &quot;lines&quot;: [
    {
      &quot;account&quot;: {
        &quot;path&quot;: &quot;liabilities/users:{{user_id}}/available&quot;
      },
      &quot;key&quot;: &quot;decrease_user_balance&quot;,
      &quot;amount&quot;: &quot;-{{withdraw_amount}}&quot;
    },
    {...other line}
  ],
  &quot;groups&quot;: [
    {
      &quot;key&quot;: &quot;withdrawal&quot;,
      &quot;value&quot;: &quot;{{withdrawal_id}}&quot;
    }
  ]
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Ledger Entry Groups have the following limitations:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">You can specify up to 10 Groups for any Ledger Entry type.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Parameters can be used in the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">value</code> of a Group, but not the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">key</code>.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Group keys must be unique per Ledger Entry, and you can only provide one value for each key.</li>
</ul></div></div></section><section id="group-ledger-entries-querying-balances" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">b. </span>Querying balances</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#group-ledger-entries-querying-balances">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Use the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">ledgerEntryGroup.balances</code> expansion to get the net change per Ledger Account balance from all Ledger Entries in a Group. Group balances are eventually consistent.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerEntryGroupBalances</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query GetLedgerEntryGroupBalances(
  $ledger: LedgerMatchInput!
  $entryGroup: EntryGroupMatchInput!,
) {
  ledger(ledger: $ledger) {
    ledgerEntryGroup(ledgerEntryGroup: $entryGroup) {
      balances {
        nodes {
          account {
            path
          }
          ownBalance
        }
      }
    }
  }
}</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerEntryGroupBalances Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;entryGroup&quot;: {
    &quot;key&quot;: &quot;withdrawal&quot;,
    &quot;value&quot;: &quot;some-withdrawal-id&quot;
  },
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The response for a Ledger Entry Group with a settled withdrawal:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">GetLedgerEntryGroupBalances Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;ledger&quot;: {
      &quot;ledgerEntryGroup&quot;: {
        &quot;balances&quot;: {
          &quot;nodes&quot;: [
            {
              &quot;account&quot;: {
                &quot;path&quot;: &quot;asset-root/bank&quot;
              },
              &quot;ownBalance&quot;: &quot;-50000&quot;
            },
            {
              &quot;account&quot;: {
                &quot;path&quot;: &quot;liability-root/user:user-id/available&quot;
              },
              &quot;ownBalance&quot;: &quot;-50000&quot;
            },
            {
              &quot;account&quot;: {
                &quot;path&quot;: &quot;liability-root/user:user-id/pending&quot;
              },
              &quot;ownBalance&quot;: &quot;0&quot;
            }
          ]
        }
      }
    }
  }
}</code></pre></div></div></div><section id="group-ledger-entries-querying-balances-consistent-balances" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Consistent balances</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#group-ledger-entries-querying-balances-consistent-balances">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Ledger Entry Groups support strongly-consistent reads for the ownBalance field. See <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#configure-consistency-consistent-groups">Consistent Ledger Entry Group balances</a> for more information on how to configure this in your Schema. See <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/docs#configure-consistency-query-consistent-groups">Query Consistent Groups</a> for how to query strongly consistent Ledger Entry Group balances.</p></div></section><section id="group-ledger-entries-querying-balances-filtering-balances" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Filtering balances</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#group-ledger-entries-querying-balances-filtering-balances">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Balances in a Group may be filtered by account, currency, and ownBalance.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">QueryLedgerEntryGroupBalances</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query QueryLedgerEntryGroupBalances(
  $ledger: LedgerMatchInput!
  $entryGroup: EntryGroupMatchInput!,
  $filter: LedgerEntryGroupBalanceFilterSet,
) {
  ledger(ledger: $ledger) {
    ledgerEntryGroup(ledgerEntryGroup: $entryGroup) {
      balances(filter: $filter) {
        nodes {
          account {
            path
          }
          ownBalance
          currency {
            code
          }
        }
      }
    }
  }
}</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">QueryLedgerEntryGroupBalances Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;entryGroup&quot;: {
    &quot;key&quot;: &quot;withdrawal&quot;,
    &quot;value&quot;: &quot;12345&quot;
  },
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  },
  &quot;filter&quot;: {
    &quot;currency&quot;: {
      &quot;equalTo&quot;: { &quot;code&quot;: &quot;USD&quot; }
    },
    &quot;ownBalance&quot;: {
      &quot;gte&quot;: &quot;-1000&quot;,
      &quot;lte&quot;: &quot;1000&quot;
    },
    &quot;account&quot;: {
      &quot;path&quot;: {
        &quot;equalTo&quot;: &quot;liability-root/user:user-id/pending&quot;
      }
    }
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The response is:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">QueryLedgerEntryGroupBalances Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;ledger&quot;: {
      &quot;ledgerEntryGroup&quot;: {
        &quot;balances&quot;: {
          &quot;nodes&quot;: [
            {
              &quot;account&quot;: {
                &quot;path&quot;: &quot;liability-root/user:user-id/pending&quot;
              },
              &quot;ownBalance&quot;: &quot;0&quot;,
              &quot;currency&quot;: {
                &quot;code&quot;: &quot;USD&quot;
              }
            }
          ]
        }
      }
    }
  }
}</code></pre></div></div></div></div></section><section id="group-ledger-entries-querying-balances-filter-by-template" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Filter by template</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#group-ledger-entries-querying-balances-filter-by-template">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Group balances support filtering account paths using &#x27;*&#x27; in place of a template variable.</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">QueryLedgerEntryGroupBalances</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">query QueryLedgerEntryGroupBalances(
  $ledger: LedgerMatchInput!
  $entryGroup: EntryGroupMatchInput!,
  $filter: LedgerEntryGroupBalanceFilterSet,
) {
  ledger(ledger: $ledger) {
    ledgerEntryGroup(ledgerEntryGroup: $entryGroup) {
      balances(filter: $filter) {
        nodes {
          account {
            path
          }
          ownBalance
        }
      }
    }
  }
}</code></pre></div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">QueryLedgerEntryGroupBalances Variables</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;entryGroup&quot;: {
    &quot;key&quot;: &quot;withdrawal&quot;,
    &quot;value&quot;: &quot;12345&quot;
  },
  &quot;ledger&quot;: {
    &quot;ik&quot;: &quot;quickstart-ledger&quot;
  },
  &quot;filter&quot;: {
    &quot;account&quot;: {
      &quot;path&quot;: {
        &quot;matches&quot;: &quot;liability-root/user:*/pending&quot;
      }
    }
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The response is:</p><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">QueryLedgerEntryGroupBalances Response</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;data&quot;: {
    &quot;ledger&quot;: {
      &quot;ledgerEntryGroup&quot;: {
        &quot;balances&quot;: {
          &quot;nodes&quot;: [
            {
              &quot;account&quot;: {
                &quot;path&quot;: &quot;liability-root/user:user-id/pending&quot;
              },
              &quot;ownBalance&quot;: &quot;0&quot;
            },
            {
              &quot;account&quot;: {
                &quot;path&quot;: &quot;liability-root/user:another-user-id/pending&quot;
              },
              &quot;ownBalance&quot;: &quot;2500&quot;
            }
          ]
        }
      }
    }
  }
}</code></pre></div></div></div></div></section></div></div></section><section id="group-ledger-entries-updating-entry-groups" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">c. </span>Updating Entry Groups</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#group-ledger-entries-updating-entry-groups">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">In addition to Groups defined in your Schema, you can add a posted Ledger Entry to additional Groups.</p><div class="pt-f2"><div class="relative flex min-w-f0"><div class="flex group-one bg-negative flex-col min-w-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div data-test-role="title" class="px-[1.25em] py-f2 flex flex-row flex-auto truncate hover:cursor-pointer group-two" role="button" tabindex="0"><div class="flex-initial"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">updateLedgerEntry mutation </span></div><div class="pl-f2 group-two-hover:text-main group-one-hover:block transition-colors"><div class="hidden laptop:block"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-s20 no-underline leading-none text-inherit bg-inherit border-none">↓</span></div><div class="laptop:hidden"><span data-testid="text-engine" class="font-FragmentMono font-normal not-italic text-fnormal no-underline leading-none text-inherit bg-inherit border-none">↓</span></div></div></div><div class="py-f2 px-[1.25em] hover:cursor-pointer hidden group-one-hover:block"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 hover:text-main bg-inherit border-none">Show</span></div></div><div class="max-h-f20 flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-graphql" style="white-space:pre">mutation UpdateLedgerEntryGroups(
  $ledgerEntry: LedgerEntryMatchInput!
  $update: UpdateLedgerEntryInput!
) {
  updateLedgerEntry(
    ledgerEntry: $ledgerEntry,
    update: $update
  ) {
    __typename
    ... on UpdateLedgerEntryResult {
      entry {
        type
        ik
        groups {
          key
          value
        }
        lines {
          nodes {
            amount
            description
            account {
              path
            }
          }
        }
      }
    }
    ... on Error {
      code
      message
    }
  }
}</code></pre></div></div><div class="absolute w-full left-f0 bottom-f0 min-h-f20 bg-gradient-to-b from-transparent to-negative"> <!-- --> </div></div></div><div class="pt-f2"><div class="inline-flex flex-col group-one min-h-f0 w-full" data-test-name="codeblock"><div class="flex flex-row bg-negative justify-between w-full text-main-500"><div class="px-[1.25em] py-f2 flex flex-row flex-auto truncate" data-test-role="title"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-main-500 bg-inherit border-none">updateLedgerEntry variables to add and update groups</span></div><div class="px-[1.25em] invisible group-one-hover:visible min-w-fit pt-f2" aria-hidden="true"><button type="button" class="text-main-500 hover:text-main transition-colors hover:cursor-pointer">Copy</button></div></div><div class="flex min-h-f0 w-full"><pre class="codeblock-pre px-[1.25em] bg-negative whitespace-pre-wrap break-all overflow-auto scrollbar-hide w-full pb-[1.25em]"><code class="language-json" style="white-space:pre">{
  &quot;ledgerEntry&quot;: {
    &quot;ik&quot;: &quot;add-ledger-entry&quot;,
    &quot;ledger&quot;: {
      &quot;ik&quot;: &quot;ledger-ik&quot;
    }
  },
  &quot;update&quot;: {
    &quot;groups&quot;: [
      {
        &quot;key&quot;: &quot;withdrawal&quot;,
        &quot;value&quot;: &quot;12345&quot;
      }
    ]
  }
}</code></pre></div></div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">This is an additive operation:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">If you specify a new Group, this Ledger Entry will be added to that Group</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">If you don&#x27;t specify an existing Group, this Ledger Entry will remain in that Group</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">You may not modify an existing Group key or remove an Ledger Entry from a Group</li>
</ul><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can only update a Ledger Entry a maximum of 10 times.</p></div></div></section></div></section>
<section id="export-data" class="first:0 pt-f6 tablet:pt-f3 pb-[2em] scroll-mt-[90px]"><span class="TopicContainer-title group-one text-s20 tablet:text-fnormal laptop:text-s20 block mb-[1em] "><span class="text-main-500">N<!-- --> </span>Export Data<span class="pl-[0.5em] phone:invisible phone:group-one-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#export-data">#</a></span></span><div class="TopicContainer-content py-[2em] first-of-type:pt-0 ml-0 phone:ml-[1.8em] tablet:ml-[1.25em]"><section id="export-data-s3-export" class="Page my-f4 first:mt-0 scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static group-two"><h1 class="inline-block"><span class="text-main-500">a. </span>S3 Export</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#export-data-s3-export">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2"><span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> supports exporting your Ledger data to AWS S3. This makes your data available for analytics, regulatory compliance and ingestion into third-party systems.</p><section id="export-data-s3-export-export-format" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Export format</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#export-data-s3-export-export-format">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Data exports are delivered approximately every 5 minutes. Each data export contains the Ledger data created or updated since the previous export.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Exports are divided by data type into three files. Each file contains newline-separated JSON, where each line represents an individual instance of the respective data type: &#x27;LedgerEntry&#x27;, &#x27;LedgerLine&#x27; or &#x27;LedgerAccount&#x27;.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The files use a naming scheme of <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">{File Prefix}/{type}/day={day}/hour={hour}/{partition}.part</code>.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Example files:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none space-y-[1em] phone:space-y-f0 my-f2 mt-[1em] ml-[1em] list-disc list-outside"><li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/example-ledger-entry-export.part">Ledger Entry</a></li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/example-ledger-line-export.part">Ledger Line</a></li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none"><a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/example-ledger-account-export.part">Ledger Account</a></li></ul></div></section><section id="export-data-s3-export-onboarding" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Onboarding</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#export-data-s3-export-onboarding">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To enable data export, first create an <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-bucket-overview.html">S3 bucket</a>. No special settings are required, but take note of the bucket name and AWS region.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Once the bucket exists, navigate to the Settings -&gt; S3 Exports subsection of the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://dashboard.fragment.dev">dashboard</a>, and follow the instructions to create a new export. You need to provide:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">S3 Bucket Name, the name of the S3 bucket in AWS.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">S3 Bucket Region, the AWS region of the bucket created in the previous step (for example, <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">us-east-1</code>).</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Export Name, a name for this export. This is for display purposes only.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">File Prefix (optional), the path where exports are stored. If no file prefix is provided, exports are stored in the bucket root.</li>
</ul><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">The instructions in the dashboard include applying a <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://aws.amazon.com/blogs/security/writing-iam-policies-how-to-grant-access-to-an-amazon-s3-bucket/">S3 bucket policy</a> to your bucket. Depending on how you manage your infrastructure, this may take some time, so the onboarding flow in the dashboard can be restarted at any time.</p></div></section><section id="export-data-s3-export-testing" class="Subpage mb-[2em] group scroll-mt-f6 tablet:scroll-mt-[117px] laptop:scroll-mt-[130px]"><span><span class="inline-block mt-[1em]">Testing</span><span class="ml-[0.5em] phone:invisible phone:group-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#export-data-s3-export-testing">#</a></span></span><div class="ml-0 phone:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Once you&#x27;ve onboarded your data export, the dashboard lets you test the connection by writing a sample file to <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">test/testLedgerEntry.part</code> in your bucket. The test result can be:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">Policy Not Applied</code>, <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> received an authorization error. This typically means the provided resource policy has not yet been applied within your AWS account. This may also mean the provided bucket name or region differs from the one created in the initial setup.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">Invalid Bucket Name</code>, the provided bucket name does not exist in AWS.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">Incorrect AWS Region</code>, the provided bucket exists in a different region than provided.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]"><code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">Verified Permissions</code>, the file was successfully written.</li>
</ul><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2"><span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> does not remove the test file after verifying its existence.</p></div></section></div></div></section><section id="export-data-retool" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">b. </span>Retool</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#export-data-retool">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">You can add <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> as a GraphQL resource in <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://retool.com">Retool</a>.</p><ol data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2 ml-[1.875em] list-decimal list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Create an API client in the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://dashboard.fragment.dev/go/s/api-clients">dashboard</a>.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Add a new GraphQL Resource in Retool.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Set the Base URL to your API URL.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Add the <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">Authorization</code> Header with the value <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">Bearer OAUTH2_TOKEN</code>. Retool will replace OAUTH2_TOKEN with the actual token at runtime.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Set Authentication to <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">OAuth 2.0</code></li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Enable <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">Use Client Credentials Flow</code></li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Set the following values:<!-- -->
<ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none space-y-[1em] phone:space-y-f0 my-f2 mt-[1em] ml-[1em] list-disc list-outside"><li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">Set Access Token URL to OAuth URL</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">Set the Client ID and Secret</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">Set Scopes to OAuth Scope</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">Set Prompt to <code data-testid="inline-code" class="px-1 border-t border-t-negative border-b border-b-transparent inline text-main-500 bg-negative whitespace-pre-wrap break-normal -ml-1 -mr-1 selection:bg-main-500 selection:text-negative">consent</code></li></ul>
</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Save the resource.</li>
</ol><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Note: Testing the connection in Retool may fail even when the resource is configured correctly. To check, use the resource in an app by running the query.</p></div></div></section></div></section>
<section id="under-the-hood" class="first:0 pt-f6 tablet:pt-f3 pb-[2em] scroll-mt-[90px]"><span class="TopicContainer-title group-one text-s20 tablet:text-fnormal laptop:text-s20 block mb-[1em] "><span class="text-main-500">O<!-- --> </span>Under the hood<span class="pl-[0.5em] phone:invisible phone:group-one-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#under-the-hood">#</a></span></span><div class="TopicContainer-content py-[2em] first-of-type:pt-0 ml-0 phone:ml-[1.8em] tablet:ml-[1.25em]"><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2"><span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> is the database we wish we had at Stripe and Robinhood. It&#x27;s the abstraction we want at the performance we need.</p><section id="under-the-hood-performance" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">a. </span>Performance</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#under-the-hood-performance">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">On February 13, 2024, we ran a load test to simulate traffic using <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="_blank" href="https://k6.io">Grafana K6</a>. A total of 19,622,609 requests were made over a 15 minute period. <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/fragment-load-test-read.pdf">6,769,966 of them were reads</a> and <a class="text-main hover:cursor-pointer decoration-main-500 hover:decoration-main underline transition-all duration-150 ease-in-out" target="" href="/fragment-load-test-write.pdf">12,852,643 of them were writes</a>. We observed:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">14,578 ledger entries per second average write throughput</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">7,489 balance reads per second average read throughput</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">33ms p95 read latency</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">69ms p95 write latency</li>
</ul><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">By comparison, at Robinhood it took 18 months of dedicated engineering effort to get even remotely close to these numbers.</p></div></div></section><section id="under-the-hood-architecture" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">b. </span>Architecture</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#under-the-hood-architecture">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">To achieve this performance, <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> is built on top of two distributed databases:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Transactional storage on AWS DynamoDB</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Indexed storage on ElasticSearch</li>
</ul><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">A two-tier system, as opposed to one built on a single Postgres instance, is harder to build and maintain. But by having separate write-optimized and read-optimized systems, we can tune each system independently and use the best tool for each job.</p></div></div></section><section id="under-the-hood-write-path" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">c. </span>Write path</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#under-the-hood-write-path">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">When customers hit any of our GraphQL mutations, all data is synchronously written into DynamoDB then asynchronously indexed on ElasticSearch.</p><div class="pt-f2"><div class="hidden tablet:block"><svg width="100%" height="100%" viewBox="0 0 621 450" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="621" height="450" fill="rgb(var(--colour-negative))"></rect><line x1="225" y1="189" x2="270.749" y2="189" stroke="rgb(var(--colour-main-500))"></line><path d="M261.749 180L270.749 189L261.749 198" stroke="rgb(var(--colour-main-500))"></path><line x1="414" y1="279" x2="459.749" y2="279" stroke="rgb(var(--colour-main-500))"></line><path d="M450.749 270L459.749 279L450.749 288" stroke="rgb(var(--colour-main-500))"></path><line x1="279" y1="225" x2="233.251" y2="225" stroke="rgb(var(--colour-main-500))"></line><path d="M242.251 234L233.251 225L242.251 216" stroke="rgb(var(--colour-main-500))"></path><path d="M26.33 22.214L24.944 32H23.53L22.326 23.32H22.312L21.122 32H19.708L18.322 22.214H19.526L20.478 30.012H20.492L21.5 22.214H23.166L24.174 30.138H24.188L25.196 22.214H26.33ZM28.3903 32V24.664H29.4683V26.246C29.9583 25.196 30.8963 24.454 32.1003 24.454C33.7803 24.454 34.6483 25.378 34.7883 26.834H33.6263C33.4583 25.952 32.9823 25.476 31.9883 25.476C30.5183 25.476 29.5663 26.722 29.5663 28.444V32H28.3903ZM39.0606 23.614V22.214H40.4606V23.614H39.0606ZM40.3346 24.664V31.048H42.5886V32H36.6666V31.048H39.1866V25.616H36.6666V24.664H40.3346ZM48.3449 24.664H51.2289V25.616H48.3449V29.704C48.3449 30.782 48.9189 31.146 49.9829 31.146C50.4589 31.146 50.8789 31.104 51.2289 31.006V32.028C50.7669 32.168 50.3049 32.196 49.9129 32.196C48.1349 32.196 47.1829 31.51 47.1829 29.914V25.616H45.0689V24.664H47.1829V22.648H48.3449V24.664ZM60.1352 29.732C59.8832 31.272 58.7212 32.252 56.9992 32.252C54.7872 32.252 53.6672 30.642 53.6672 28.402C53.6672 25.952 54.9972 24.44 57.0272 24.44C59.2952 24.44 60.2892 26.134 60.2892 28.682H54.8852C54.9272 30.124 55.6272 31.174 57.0412 31.174C57.9932 31.174 58.6372 30.712 58.9592 29.732H60.1352ZM57.0132 25.518C55.6972 25.518 55.0112 26.498 54.9132 27.73H59.0292C59.0292 26.512 58.2732 25.518 57.0132 25.518ZM76.7998 32L75.9318 29.074H72.5578L71.6898 32H70.3458L73.4398 22.214H75.0778L78.1578 32H76.7998ZM72.8798 27.982H75.6098L74.2378 23.39L72.8798 27.982ZM79.8541 32V22.214H83.4241C85.1741 22.214 86.5741 23.208 86.5741 25.14C86.5741 27.072 85.1741 28.066 83.4241 28.066H81.1281V32H79.8541ZM81.1281 26.96H83.2561C84.5021 26.96 85.2441 26.26 85.2441 25.14C85.2441 24.02 84.5021 23.32 83.2561 23.32H81.1281V26.96ZM88.8304 32V30.908H90.9024V23.306H88.8304V22.214H94.3044V23.306H92.2184V30.908H94.3044V32H88.8304ZM109.247 27.982H107.133V32H105.859V22.214H109.289C111.165 22.214 112.411 23.082 112.411 24.888C112.411 26.022 111.949 26.764 110.787 27.338C111.823 27.758 112.075 28.192 112.159 29.62L112.201 30.348C112.229 30.824 112.285 31.384 112.705 31.678V32H111.263C111.053 31.566 110.899 31.006 110.899 30.362V29.746C110.899 28.598 110.409 27.982 109.247 27.982ZM107.133 23.32V26.876H109.037C110.311 26.876 111.081 26.386 111.081 25.028C111.081 23.838 110.325 23.32 109.037 23.32H107.133ZM120.715 29.732C120.463 31.272 119.301 32.252 117.579 32.252C115.367 32.252 114.247 30.642 114.247 28.402C114.247 25.952 115.577 24.44 117.607 24.44C119.875 24.44 120.869 26.134 120.869 28.682H115.465C115.507 30.124 116.207 31.174 117.621 31.174C118.573 31.174 119.217 30.712 119.539 29.732H120.715ZM117.593 25.518C116.277 25.518 115.591 26.498 115.493 27.73H119.609C119.609 26.512 118.853 25.518 117.593 25.518ZM129.286 24.664V35.052H128.124V31.076C127.578 31.916 126.864 32.252 125.856 32.252C123.882 32.252 122.72 30.74 122.72 28.43C122.72 26.204 123.798 24.44 125.912 24.44C126.878 24.44 127.704 24.86 128.25 25.63V24.664H129.286ZM126.08 25.532C124.694 25.532 123.938 26.764 123.938 28.346C123.938 29.844 124.61 31.16 126.08 31.16C127.55 31.16 128.124 29.746 128.124 28.388C128.124 26.932 127.536 25.532 126.08 25.532ZM137.758 24.664V32H136.708V30.908C136.036 31.874 135.336 32.252 134.258 32.252C133.628 32.252 133.096 32.112 132.676 31.818C132.172 31.454 131.92 30.936 131.92 30.25V24.664H133.082V29.788C133.082 30.278 133.25 30.656 133.572 30.908C133.838 31.118 134.188 31.23 134.594 31.23C135.14 31.23 135.602 31.034 135.98 30.628C136.386 30.194 136.596 29.564 136.596 28.738V24.664H137.758ZM146.678 29.732C146.426 31.272 145.264 32.252 143.542 32.252C141.33 32.252 140.21 30.642 140.21 28.402C140.21 25.952 141.54 24.44 143.57 24.44C145.838 24.44 146.832 26.134 146.832 28.682H141.428C141.47 30.124 142.17 31.174 143.584 31.174C144.536 31.174 145.18 30.712 145.502 29.732H146.678ZM143.556 25.518C142.24 25.518 141.554 26.498 141.456 27.73H145.572C145.572 26.512 144.816 25.518 143.556 25.518ZM154.828 26.666H153.61C153.582 25.938 153.022 25.476 152.14 25.476C151.188 25.476 150.544 25.896 150.544 26.554C150.544 27.072 150.908 27.38 151.594 27.562L153.26 27.996C154.492 28.318 155.122 28.92 155.122 29.956C155.122 31.384 154.002 32.252 152.182 32.252C150.264 32.252 149.256 31.412 149.172 29.774H150.404C150.516 30.768 151.118 31.216 152.21 31.216C153.246 31.216 153.932 30.824 153.932 30.138C153.932 29.508 153.624 29.242 152.826 29.032L151.286 28.626C149.956 28.276 149.354 27.73 149.354 26.61C149.354 25.28 150.446 24.44 152.168 24.44C153.876 24.44 154.8 25.28 154.828 26.666ZM160.851 24.664H163.735V25.616H160.851V29.704C160.851 30.782 161.425 31.146 162.489 31.146C162.965 31.146 163.385 31.104 163.735 31.006V32.028C163.273 32.168 162.811 32.196 162.419 32.196C160.641 32.196 159.689 31.51 159.689 29.914V25.616H157.575V24.664H159.689V22.648H160.851V24.664Z" fill="rgb(var(--colour-main))"></path><path d="M85.4128 230.045V221.883H91.3628V222.947H86.6448V225.327H90.8028V226.391H86.6448V230.045H85.4128ZM93.1431 230.045V221.883H96.9931C98.5891 221.883 99.5551 222.681 99.5551 224.067C99.5551 225.019 99.1491 225.607 98.1691 226.041C99.1211 226.419 99.2891 226.699 99.3311 228.127C99.3311 228.295 99.3871 228.967 99.4431 229.219C99.4851 229.429 99.5831 229.611 99.8351 229.779V230.045H98.3931C98.2111 229.681 98.1271 229.317 98.1271 228.687C98.1271 228.365 98.1411 228.239 98.1411 227.917C98.1411 227.035 97.7771 226.615 96.7971 226.615H94.3751V230.045H93.1431ZM94.3751 225.551H96.6851C97.7071 225.551 98.2811 225.201 98.2811 224.249C98.2811 223.297 97.7211 222.947 96.6851 222.947H94.3751V225.551ZM100.915 230.045L103.967 221.883H105.493L108.489 230.045H107.145L106.347 227.833H103.043L102.217 230.045H100.915ZM103.365 226.797H105.997L104.709 223.241L103.365 226.797ZM113.28 230.185C110.858 230.185 109.346 228.379 109.346 226.041C109.346 223.563 110.886 221.743 113.406 221.743C115.17 221.743 116.612 222.653 116.92 224.389H115.688C115.422 223.339 114.498 222.821 113.392 222.821C111.544 222.821 110.578 224.207 110.578 225.999C110.578 227.805 111.67 229.121 113.434 229.121C114.946 229.121 115.94 228.239 115.94 226.923V226.769H113.56V225.705H117.004V230.087H116.094L115.982 228.883C115.156 229.807 114.344 230.185 113.28 230.185ZM118.966 230.045V221.883H120.716L123.054 228.813L125.336 221.883H127.086V230.045H125.91V223.339L123.684 230.045H122.41L120.156 223.339V230.045H118.966ZM129.16 230.045V221.883H135.152V222.947H130.392V225.327H134.942V226.391H130.392V228.981H135.362V230.045H129.16ZM137.059 230.045V221.883H138.375L142.631 228.225V221.883H143.821V230.045H142.477L138.249 223.717V230.045H137.059ZM147.897 230.045V222.947H145.125V221.883H151.887V222.947H149.129V230.045H147.897ZM111.893 248.045L111.025 245.119H107.651L106.783 248.045H105.439L108.533 238.259H110.171L113.251 248.045H111.893ZM107.973 244.027H110.703L109.331 239.435L107.973 244.027ZM114.947 248.045V238.259H118.517C120.267 238.259 121.667 239.253 121.667 241.185C121.667 243.117 120.267 244.111 118.517 244.111H116.221V248.045H114.947ZM116.221 243.005H118.349C119.595 243.005 120.337 242.305 120.337 241.185C120.337 240.065 119.595 239.365 118.349 239.365H116.221V243.005ZM123.923 248.045V246.953H125.995V239.351H123.923V238.259H129.397V239.351H127.311V246.953H129.397V248.045H123.923Z" fill="rgb(var(--colour-main))"></path><path d="M315.111 246H311.947V236.214H315.111C317.589 236.214 318.835 238.258 318.835 241.1C318.835 243.956 317.589 246 315.111 246ZM313.249 237.362V244.852H314.887C316.721 244.852 317.477 243.438 317.477 241.114C317.477 238.776 316.721 237.362 314.887 237.362H313.249ZM323.919 247.54C323.541 248.548 322.827 249.052 321.917 249.052C321.567 249.052 321.259 249.01 320.965 248.912V247.82C321.273 247.89 321.525 247.904 321.763 247.904C322.295 247.904 322.589 247.708 322.799 247.19L323.247 246.112L320.531 238.664H321.763L323.905 244.614L326.019 238.664H327.223L323.919 247.54ZM329.605 246V238.664H330.683V239.882C331.257 238.986 331.957 238.454 333.119 238.454C334.393 238.454 335.443 239.098 335.443 240.456V246H334.281V240.918C334.281 239.938 333.581 239.476 332.769 239.476C331.453 239.476 330.767 240.61 330.767 241.87V246H329.605ZM344.812 245.23V246.112C344.518 246.196 344.294 246.238 344.112 246.238C343.3 246.238 342.894 245.888 342.81 245.132C341.984 245.944 341.256 246.252 340.318 246.252C338.89 246.252 337.924 245.454 337.924 244.096C337.924 242.584 339.072 242.038 339.926 241.898C340.178 241.856 340.724 241.772 341.55 241.66C342.488 241.534 342.796 241.352 342.796 240.876V240.624C342.796 239.896 342.222 239.532 341.116 239.532C340.038 239.532 339.506 239.938 339.408 240.834H338.232C338.26 239.14 339.436 238.454 341.172 238.454C342.978 238.454 343.93 239.154 343.93 240.456V244.684C343.93 245.062 344.14 245.258 344.56 245.258C344.63 245.258 344.742 245.244 344.812 245.23ZM342.796 243.452V242.29C342.306 242.514 341.508 242.64 340.892 242.71C339.8 242.836 339.114 243.144 339.114 244.068C339.114 244.796 339.674 245.23 340.612 245.23C341.634 245.23 342.796 244.474 342.796 243.452ZM346.046 246V238.664H347.138V239.42C347.446 238.958 348.034 238.496 348.818 238.496C349.532 238.496 350.106 238.874 350.316 239.476C350.61 238.986 351.198 238.496 352.024 238.496C352.934 238.496 353.606 239.098 353.606 240.022V246H352.458V240.26C352.458 239.742 352.122 239.476 351.646 239.476C350.862 239.476 350.4 239.938 350.4 240.708V246H349.252V240.26C349.252 239.742 348.916 239.476 348.44 239.476C347.656 239.476 347.194 239.938 347.194 240.708V246H346.046ZM358.48 238.44C360.734 238.44 361.798 240.12 361.798 242.346C361.798 244.572 360.734 246.252 358.48 246.252C356.226 246.252 355.162 244.572 355.162 242.346C355.162 240.12 356.226 238.44 358.48 238.44ZM358.48 239.518C356.996 239.518 356.38 240.848 356.38 242.346C356.38 243.844 356.996 245.174 358.48 245.174C359.964 245.174 360.58 243.844 360.58 242.346C360.58 240.848 359.964 239.518 358.48 239.518ZM367.037 246H363.873V236.214H367.037C369.515 236.214 370.761 238.258 370.761 241.1C370.761 243.956 369.515 246 367.037 246ZM365.175 237.362V244.852H366.813C368.647 244.852 369.403 243.438 369.403 241.114C369.403 238.776 368.647 237.362 366.813 237.362H365.175ZM376.559 246H372.751V236.214H376.237C377.987 236.214 379.191 237.166 379.191 238.706C379.191 239.644 378.743 240.582 377.889 240.89C378.911 241.226 379.513 242.038 379.513 243.214C379.513 244.684 378.491 246 376.559 246ZM374.025 237.32V240.414H376.041C377.091 240.414 377.861 240.078 377.861 238.888C377.861 237.684 377.091 237.32 376.041 237.32H374.025ZM374.025 241.52V244.894H376.405C377.637 244.894 378.183 244.194 378.183 243.2C378.183 242.22 377.637 241.52 376.405 241.52H374.025Z" fill="rgb(var(--colour-main))"></path><path d="M511.084 232.562H506.884V235.852H511.546V237H505.582V227.214H511.294V228.362H506.884V231.414H511.084V232.562ZM517.96 226.794V236.048H520.214V237H514.292V236.048H516.826V227.746H514.292V226.794H517.96ZM529.275 236.23V237.112C528.981 237.196 528.757 237.238 528.575 237.238C527.763 237.238 527.357 236.888 527.273 236.132C526.447 236.944 525.719 237.252 524.781 237.252C523.353 237.252 522.387 236.454 522.387 235.096C522.387 233.584 523.535 233.038 524.389 232.898C524.641 232.856 525.187 232.772 526.013 232.66C526.951 232.534 527.259 232.352 527.259 231.876V231.624C527.259 230.896 526.685 230.532 525.579 230.532C524.501 230.532 523.969 230.938 523.871 231.834H522.695C522.723 230.14 523.899 229.454 525.635 229.454C527.441 229.454 528.393 230.154 528.393 231.456V235.684C528.393 236.062 528.603 236.258 529.023 236.258C529.093 236.258 529.205 236.244 529.275 236.23ZM527.259 234.452V233.29C526.769 233.514 525.971 233.64 525.355 233.71C524.263 233.836 523.577 234.144 523.577 235.068C523.577 235.796 524.137 236.23 525.075 236.23C526.097 236.23 527.259 235.474 527.259 234.452ZM536.977 231.666H535.759C535.731 230.938 535.171 230.476 534.289 230.476C533.337 230.476 532.693 230.896 532.693 231.554C532.693 232.072 533.057 232.38 533.743 232.562L535.409 232.996C536.641 233.318 537.271 233.92 537.271 234.956C537.271 236.384 536.151 237.252 534.331 237.252C532.413 237.252 531.405 236.412 531.321 234.774H532.553C532.665 235.768 533.267 236.216 534.359 236.216C535.395 236.216 536.081 235.824 536.081 235.138C536.081 234.508 535.773 234.242 534.975 234.032L533.435 233.626C532.105 233.276 531.503 232.73 531.503 231.61C531.503 230.28 532.595 229.44 534.317 229.44C536.025 229.44 536.949 230.28 536.977 231.666ZM542.999 229.664H545.883V230.616H542.999V234.704C542.999 235.782 543.573 236.146 544.637 236.146C545.113 236.146 545.533 236.104 545.883 236.006V237.028C545.421 237.168 544.959 237.196 544.567 237.196C542.789 237.196 541.837 236.51 541.837 234.914V230.616H539.723V229.664H541.837V227.648H542.999V229.664ZM551.023 228.614V227.214H552.423V228.614H551.023ZM552.297 229.664V236.048H554.551V237H548.629V236.048H551.149V230.616H548.629V229.664H552.297ZM563.388 232.086H562.212C562.086 231.12 561.442 230.518 560.42 230.518C558.908 230.518 558.32 231.96 558.32 233.416C558.32 234.872 558.978 236.174 560.448 236.174C561.47 236.174 562.1 235.6 562.296 234.438H563.472C563.318 236.202 562.226 237.252 560.42 237.252C558.278 237.252 557.102 235.572 557.102 233.416C557.102 231.218 558.25 229.44 560.434 229.44C562.226 229.44 563.346 230.532 563.388 232.086ZM516.055 248.042H514.795C514.753 246.922 514.095 246.096 512.737 246.096C511.393 246.096 510.679 246.768 510.679 247.65C510.679 248.462 511.099 248.924 512.009 249.134L514.011 249.596C515.537 249.946 516.335 250.954 516.335 252.214C516.335 254.16 514.921 255.252 512.863 255.252C510.427 255.252 509.125 253.964 509.097 251.878H510.357C510.371 253.18 511.239 254.09 512.891 254.09C514.361 254.09 515.019 253.39 515.019 252.396C515.019 251.528 514.543 251.038 513.577 250.814L511.547 250.338C510.133 250.002 509.363 249.12 509.363 247.776C509.363 246.138 510.679 244.99 512.779 244.99C514.823 244.99 516.055 246.236 516.055 247.86V248.042ZM524.499 252.732C524.247 254.272 523.085 255.252 521.363 255.252C519.151 255.252 518.031 253.642 518.031 251.402C518.031 248.952 519.361 247.44 521.391 247.44C523.659 247.44 524.653 249.134 524.653 251.682H519.249C519.291 253.124 519.991 254.174 521.405 254.174C522.357 254.174 523.001 253.712 523.323 252.732H524.499ZM521.377 248.518C520.061 248.518 519.375 249.498 519.277 250.73H523.393C523.393 249.512 522.637 248.518 521.377 248.518ZM533.602 254.23V255.112C533.308 255.196 533.084 255.238 532.902 255.238C532.09 255.238 531.684 254.888 531.6 254.132C530.774 254.944 530.046 255.252 529.108 255.252C527.68 255.252 526.714 254.454 526.714 253.096C526.714 251.584 527.862 251.038 528.716 250.898C528.968 250.856 529.514 250.772 530.34 250.66C531.278 250.534 531.586 250.352 531.586 249.876V249.624C531.586 248.896 531.012 248.532 529.906 248.532C528.828 248.532 528.296 248.938 528.198 249.834H527.022C527.05 248.14 528.226 247.454 529.962 247.454C531.768 247.454 532.72 248.154 532.72 249.456V253.684C532.72 254.062 532.93 254.258 533.35 254.258C533.42 254.258 533.532 254.244 533.602 254.23ZM531.586 252.452V251.29C531.096 251.514 530.298 251.64 529.682 251.71C528.59 251.836 527.904 252.144 527.904 253.068C527.904 253.796 528.464 254.23 529.402 254.23C530.424 254.23 531.586 253.474 531.586 252.452ZM536.026 255V247.664H537.104V249.246C537.594 248.196 538.532 247.454 539.736 247.454C541.416 247.454 542.284 248.378 542.424 249.834H541.262C541.094 248.952 540.618 248.476 539.624 248.476C538.154 248.476 537.202 249.722 537.202 251.444V255H536.026ZM550.406 250.086H549.23C549.104 249.12 548.46 248.518 547.438 248.518C545.926 248.518 545.338 249.96 545.338 251.416C545.338 252.872 545.996 254.174 547.466 254.174C548.488 254.174 549.118 253.6 549.314 252.438H550.49C550.336 254.202 549.244 255.252 547.438 255.252C545.296 255.252 544.12 253.572 544.12 251.416C544.12 249.218 545.268 247.44 547.452 247.44C549.244 247.44 550.364 248.532 550.406 250.086ZM553.013 255V244.794H554.175V248.756C554.693 247.986 555.365 247.454 556.527 247.454C557.801 247.454 558.851 248.098 558.851 249.456V255H557.689V249.918C557.689 248.938 556.989 248.476 556.177 248.476C554.861 248.476 554.175 249.61 554.175 250.87V255H553.013Z" fill="rgb(var(--colour-main))"></path><rect x="18" y="126" width="207" height="216" stroke="rgb(var(--colour-main-500))"></rect><path d="M414 328.768V139.322H280V328.768" stroke="rgb(var(--colour-main-500))"></path><path d="M413.5 139.5C413.5 140.252 413.124 141.041 412.288 141.864C411.451 142.689 410.189 143.508 408.52 144.303C405.183 145.893 400.323 147.338 394.277 148.556C382.194 150.99 365.479 152.5 347 152.5C328.521 152.5 311.806 150.99 299.723 148.556C293.677 147.338 288.817 145.893 285.48 144.303C283.811 143.508 282.549 142.689 281.712 141.864C280.876 141.041 280.5 140.252 280.5 139.5C280.5 138.748 280.876 137.959 281.712 137.136C282.549 136.311 283.811 135.492 285.48 134.697C288.817 133.107 293.677 131.662 299.723 130.444C311.806 128.01 328.521 126.5 347 126.5C365.479 126.5 382.194 128.01 394.277 130.444C400.323 131.662 405.183 133.107 408.52 134.697C410.189 135.492 411.451 136.311 412.288 137.136C413.124 137.959 413.5 138.748 413.5 139.5Z" fill="rgb(var(--colour-negative))" stroke="rgb(var(--colour-main-500))"></path><path d="M414 328.5C414 335.956 384.003 342 347 342C309.997 342 280 335.956 280 328.5" stroke="rgb(var(--colour-main-500))"></path><path d="M603 328.768V139.322H469V328.768" stroke="rgb(var(--colour-main-500))"></path><path d="M602.5 139.5C602.5 140.252 602.124 141.041 601.288 141.864C600.451 142.689 599.189 143.508 597.52 144.303C594.183 145.893 589.323 147.338 583.277 148.556C571.194 150.99 554.479 152.5 536 152.5C517.521 152.5 500.806 150.99 488.723 148.556C482.677 147.338 477.817 145.893 474.48 144.303C472.811 143.508 471.549 142.689 470.712 141.864C469.876 141.041 469.5 140.252 469.5 139.5C469.5 138.748 469.876 137.959 470.712 137.136C471.549 136.311 472.811 135.492 474.48 134.697C477.817 133.107 482.677 131.662 488.723 130.444C500.806 128.01 517.521 126.5 536 126.5C554.479 126.5 571.194 128.01 583.277 130.444C589.323 131.662 594.183 133.107 597.52 134.697C599.189 135.492 600.451 136.311 601.288 137.136C602.124 137.959 602.5 138.748 602.5 139.5Z" fill="rgb(var(--colour-negative))" stroke="rgb(var(--colour-main-500))"></path><path d="M603 328.5C603 335.956 573.003 342 536 342C498.997 342 469 335.956 469 328.5" stroke="rgb(var(--colour-main-500))"></path></svg></div><div class="block tablet:hidden"><svg width="100%" height="100%" viewBox="0 0 378 405" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="378" height="405" fill="rgb(var(--colour-negative))"></rect><path d="M26.33 22.214L24.944 32H23.53L22.326 23.32H22.312L21.122 32H19.708L18.322 22.214H19.526L20.478 30.012H20.492L21.5 22.214H23.166L24.174 30.138H24.188L25.196 22.214H26.33ZM28.3903 32V24.664H29.4683V26.246C29.9583 25.196 30.8963 24.454 32.1003 24.454C33.7803 24.454 34.6483 25.378 34.7883 26.834H33.6263C33.4583 25.952 32.9823 25.476 31.9883 25.476C30.5183 25.476 29.5663 26.722 29.5663 28.444V32H28.3903ZM39.0606 23.614V22.214H40.4606V23.614H39.0606ZM40.3346 24.664V31.048H42.5886V32H36.6666V31.048H39.1866V25.616H36.6666V24.664H40.3346ZM48.3449 24.664H51.2289V25.616H48.3449V29.704C48.3449 30.782 48.9189 31.146 49.9829 31.146C50.4589 31.146 50.8789 31.104 51.2289 31.006V32.028C50.7669 32.168 50.3049 32.196 49.9129 32.196C48.1349 32.196 47.1829 31.51 47.1829 29.914V25.616H45.0689V24.664H47.1829V22.648H48.3449V24.664ZM60.1352 29.732C59.8832 31.272 58.7212 32.252 56.9992 32.252C54.7872 32.252 53.6672 30.642 53.6672 28.402C53.6672 25.952 54.9972 24.44 57.0272 24.44C59.2952 24.44 60.2892 26.134 60.2892 28.682H54.8852C54.9272 30.124 55.6272 31.174 57.0412 31.174C57.9932 31.174 58.6372 30.712 58.9592 29.732H60.1352ZM57.0132 25.518C55.6972 25.518 55.0112 26.498 54.9132 27.73H59.0292C59.0292 26.512 58.2732 25.518 57.0132 25.518ZM76.7998 32L75.9318 29.074H72.5578L71.6898 32H70.3458L73.4398 22.214H75.0778L78.1578 32H76.7998ZM72.8798 27.982H75.6098L74.2378 23.39L72.8798 27.982ZM79.8541 32V22.214H83.4241C85.1741 22.214 86.5741 23.208 86.5741 25.14C86.5741 27.072 85.1741 28.066 83.4241 28.066H81.1281V32H79.8541ZM81.1281 26.96H83.2561C84.5021 26.96 85.2441 26.26 85.2441 25.14C85.2441 24.02 84.5021 23.32 83.2561 23.32H81.1281V26.96ZM88.8304 32V30.908H90.9024V23.306H88.8304V22.214H94.3044V23.306H92.2184V30.908H94.3044V32H88.8304ZM109.247 27.982H107.133V32H105.859V22.214H109.289C111.165 22.214 112.411 23.082 112.411 24.888C112.411 26.022 111.949 26.764 110.787 27.338C111.823 27.758 112.075 28.192 112.159 29.62L112.201 30.348C112.229 30.824 112.285 31.384 112.705 31.678V32H111.263C111.053 31.566 110.899 31.006 110.899 30.362V29.746C110.899 28.598 110.409 27.982 109.247 27.982ZM107.133 23.32V26.876H109.037C110.311 26.876 111.081 26.386 111.081 25.028C111.081 23.838 110.325 23.32 109.037 23.32H107.133ZM120.715 29.732C120.463 31.272 119.301 32.252 117.579 32.252C115.367 32.252 114.247 30.642 114.247 28.402C114.247 25.952 115.577 24.44 117.607 24.44C119.875 24.44 120.869 26.134 120.869 28.682H115.465C115.507 30.124 116.207 31.174 117.621 31.174C118.573 31.174 119.217 30.712 119.539 29.732H120.715ZM117.593 25.518C116.277 25.518 115.591 26.498 115.493 27.73H119.609C119.609 26.512 118.853 25.518 117.593 25.518ZM129.286 24.664V35.052H128.124V31.076C127.578 31.916 126.864 32.252 125.856 32.252C123.882 32.252 122.72 30.74 122.72 28.43C122.72 26.204 123.798 24.44 125.912 24.44C126.878 24.44 127.704 24.86 128.25 25.63V24.664H129.286ZM126.08 25.532C124.694 25.532 123.938 26.764 123.938 28.346C123.938 29.844 124.61 31.16 126.08 31.16C127.55 31.16 128.124 29.746 128.124 28.388C128.124 26.932 127.536 25.532 126.08 25.532ZM137.758 24.664V32H136.708V30.908C136.036 31.874 135.336 32.252 134.258 32.252C133.628 32.252 133.096 32.112 132.676 31.818C132.172 31.454 131.92 30.936 131.92 30.25V24.664H133.082V29.788C133.082 30.278 133.25 30.656 133.572 30.908C133.838 31.118 134.188 31.23 134.594 31.23C135.14 31.23 135.602 31.034 135.98 30.628C136.386 30.194 136.596 29.564 136.596 28.738V24.664H137.758ZM146.678 29.732C146.426 31.272 145.264 32.252 143.542 32.252C141.33 32.252 140.21 30.642 140.21 28.402C140.21 25.952 141.54 24.44 143.57 24.44C145.838 24.44 146.832 26.134 146.832 28.682H141.428C141.47 30.124 142.17 31.174 143.584 31.174C144.536 31.174 145.18 30.712 145.502 29.732H146.678ZM143.556 25.518C142.24 25.518 141.554 26.498 141.456 27.73H145.572C145.572 26.512 144.816 25.518 143.556 25.518ZM154.828 26.666H153.61C153.582 25.938 153.022 25.476 152.14 25.476C151.188 25.476 150.544 25.896 150.544 26.554C150.544 27.072 150.908 27.38 151.594 27.562L153.26 27.996C154.492 28.318 155.122 28.92 155.122 29.956C155.122 31.384 154.002 32.252 152.182 32.252C150.264 32.252 149.256 31.412 149.172 29.774H150.404C150.516 30.768 151.118 31.216 152.21 31.216C153.246 31.216 153.932 30.824 153.932 30.138C153.932 29.508 153.624 29.242 152.826 29.032L151.286 28.626C149.956 28.276 149.354 27.73 149.354 26.61C149.354 25.28 150.446 24.44 152.168 24.44C153.876 24.44 154.8 25.28 154.828 26.666ZM160.851 24.664H163.735V25.616H160.851V29.704C160.851 30.782 161.425 31.146 162.489 31.146C162.965 31.146 163.385 31.104 163.735 31.006V32.028C163.273 32.168 162.811 32.196 162.419 32.196C160.641 32.196 159.689 31.51 159.689 29.914V25.616H157.575V24.664H159.689V22.648H160.851V24.664Z" fill="rgb(var(--colour-main))"></path><line x1="108" y1="156.052" x2="135" y2="156.052" stroke="rgb(var(--colour-main-500))"></line><path d="M126 147.052L135 156.052L126 165.052" stroke="rgb(var(--colour-main-500))"></path><line x1="234" y1="252" x2="261" y2="252" stroke="rgb(var(--colour-main-500))"></line><path d="M252 243L261 252L252 261" stroke="rgb(var(--colour-main-500))"></path><line x1="142.92" y1="192.052" x2="115.92" y2="192.052" stroke="rgb(var(--colour-main-500))"></line><path d="M124.92 201.052L115.92 192.052L124.92 183.052" stroke="rgb(var(--colour-main-500))"></path><path d="M30.4128 203.649V195.487H36.3628V196.551H31.6448V198.931H35.8028V199.995H31.6448V203.649H30.4128ZM38.1431 203.649V195.487H41.9931C43.5891 195.487 44.5551 196.285 44.5551 197.671C44.5551 198.623 44.1491 199.211 43.1691 199.645C44.1211 200.023 44.2891 200.303 44.3311 201.731C44.3311 201.899 44.3871 202.571 44.4431 202.823C44.4851 203.033 44.5831 203.215 44.8351 203.383V203.649H43.3931C43.2111 203.285 43.1271 202.921 43.1271 202.291C43.1271 201.969 43.1411 201.843 43.1411 201.521C43.1411 200.639 42.7771 200.219 41.7971 200.219H39.3751V203.649H38.1431ZM39.3751 199.155H41.6851C42.7071 199.155 43.2811 198.805 43.2811 197.853C43.2811 196.901 42.7211 196.551 41.6851 196.551H39.3751V199.155ZM45.9154 203.649L48.9674 195.487H50.4934L53.4894 203.649H52.1454L51.3474 201.437H48.0434L47.2174 203.649H45.9154ZM48.3654 200.401H50.9974L49.7094 196.845L48.3654 200.401ZM58.2797 203.789C55.8577 203.789 54.3457 201.983 54.3457 199.645C54.3457 197.167 55.8857 195.347 58.4057 195.347C60.1697 195.347 61.6117 196.257 61.9197 197.993H60.6877C60.4217 196.943 59.4977 196.425 58.3917 196.425C56.5437 196.425 55.5777 197.811 55.5777 199.603C55.5777 201.409 56.6697 202.725 58.4337 202.725C59.9457 202.725 60.9397 201.843 60.9397 200.527V200.373H58.5597V199.309H62.0037V203.691H61.0937L60.9817 202.487C60.1557 203.411 59.3437 203.789 58.2797 203.789ZM63.966 203.649V195.487H65.716L68.054 202.417L70.336 195.487H72.086V203.649H70.91V196.943L68.684 203.649H67.41L65.156 196.943V203.649H63.966ZM74.1603 203.649V195.487H80.1523V196.551H75.3923V198.931H79.9423V199.995H75.3923V202.585H80.3623V203.649H74.1603ZM82.0586 203.649V195.487H83.3746L87.6306 201.829V195.487H88.8206V203.649H87.4766L83.2486 197.321V203.649H82.0586ZM92.8969 203.649V196.551H90.1249V195.487H96.8869V196.551H94.1289V203.649H92.8969ZM56.8926 221.649L56.0246 218.723H52.6506L51.7826 221.649H50.4386L53.5326 211.863H55.1706L58.2506 221.649H56.8926ZM52.9726 217.631H55.7026L54.3306 213.039L52.9726 217.631ZM59.9469 221.649V211.863H63.5169C65.2669 211.863 66.6669 212.857 66.6669 214.789C66.6669 216.721 65.2669 217.715 63.5169 217.715H61.2209V221.649H59.9469ZM61.2209 216.609H63.3489C64.5949 216.609 65.3369 215.909 65.3369 214.789C65.3369 213.669 64.5949 212.969 63.3489 212.969H61.2209V216.609ZM68.9231 221.649V220.557H70.9951V212.955H68.9231V211.863H74.3971V212.955H72.3111V220.557H74.3971V221.649H68.9231Z" fill="rgb(var(--colour-main))"></path><rect x="18" y="117" width="90" height="180" stroke="rgb(var(--colour-main-500))"></rect><path d="M143.42 287.203V130.709H233.5L233.5 287.203L233.5 287.205V287.207L233.499 287.218C233.498 287.234 233.496 287.263 233.492 287.302C233.483 287.381 233.464 287.506 233.425 287.669C233.346 287.995 233.185 288.479 232.853 289.069C232.19 290.247 230.834 291.874 228.053 293.522C222.475 296.827 211.197 300.197 188.46 300.197C165.723 300.197 154.445 296.827 148.867 293.522C146.086 291.874 144.73 290.247 144.067 289.069C143.735 288.479 143.574 287.995 143.495 287.669C143.456 287.506 143.437 287.381 143.428 287.302C143.423 287.263 143.421 287.234 143.421 287.218L143.42 287.207L143.42 287.205L143.42 287.203Z" fill="rgb(var(--colour-negative))" stroke="rgb(var(--colour-main-500))"></path><path d="M233.5 130.552C233.5 132.171 232.391 133.816 230.134 135.398C227.892 136.97 224.614 138.405 220.52 139.619C212.336 142.045 201.001 143.552 188.46 143.552C175.919 143.552 164.584 142.045 156.4 139.619C152.305 138.405 149.028 136.97 146.786 135.398C144.529 133.816 143.42 132.171 143.42 130.552C143.42 128.934 144.529 127.289 146.786 125.707C149.028 124.135 152.305 122.7 156.4 121.486C164.584 119.06 175.919 117.552 188.46 117.552C201.001 117.552 212.336 119.06 220.52 121.486C224.614 122.7 227.892 124.135 230.134 125.707C232.391 127.289 233.5 128.934 233.5 130.552Z" fill="rgb(var(--colour-negative))" stroke="rgb(var(--colour-main-500))"></path><path d="M269.42 287.203V130.709H359.5L359.5 287.203L359.5 287.205V287.207L359.499 287.218C359.499 287.234 359.497 287.263 359.492 287.302C359.483 287.381 359.464 287.506 359.425 287.669C359.346 287.995 359.185 288.479 358.853 289.069C358.19 290.247 356.834 291.874 354.053 293.522C348.475 296.827 337.197 300.197 314.46 300.197C291.723 300.197 280.445 296.827 274.867 293.522C272.086 291.874 270.73 290.247 270.067 289.069C269.735 288.479 269.574 287.995 269.495 287.669C269.456 287.506 269.437 287.381 269.428 287.302C269.424 287.263 269.422 287.234 269.421 287.218L269.42 287.207L269.42 287.205L269.42 287.203Z" fill="rgb(var(--colour-negative))" stroke="rgb(var(--colour-main-500))"></path><path d="M359.5 130.552C359.5 132.171 358.391 133.816 356.134 135.398C353.892 136.97 350.614 138.405 346.52 139.619C338.336 142.045 327.001 143.552 314.46 143.552C301.919 143.552 290.584 142.045 282.4 139.619C278.306 138.405 275.028 136.97 272.786 135.398C270.529 133.816 269.42 132.171 269.42 130.552C269.42 128.934 270.529 127.289 272.786 125.707C275.028 124.135 278.306 122.7 282.4 121.486C290.584 119.06 301.919 117.552 314.46 117.552C327.001 117.552 338.336 119.06 346.52 121.486C350.614 122.7 353.892 124.135 356.134 125.707C358.391 127.289 359.5 128.934 359.5 130.552Z" fill="rgb(var(--colour-negative))" stroke="rgb(var(--colour-main-500))"></path><path d="M158.071 212.649H154.907V202.863H158.071C160.549 202.863 161.795 204.907 161.795 207.749C161.795 210.605 160.549 212.649 158.071 212.649ZM156.209 204.011V211.501H157.847C159.681 211.501 160.437 210.087 160.437 207.763C160.437 205.425 159.681 204.011 157.847 204.011H156.209ZM166.879 214.189C166.501 215.197 165.787 215.701 164.877 215.701C164.527 215.701 164.219 215.659 163.925 215.561V214.469C164.233 214.539 164.485 214.553 164.723 214.553C165.255 214.553 165.549 214.357 165.759 213.839L166.207 212.761L163.491 205.313H164.723L166.865 211.263L168.979 205.313H170.183L166.879 214.189ZM172.565 212.649V205.313H173.643V206.531C174.217 205.635 174.917 205.103 176.079 205.103C177.353 205.103 178.403 205.747 178.403 207.105V212.649H177.241V207.567C177.241 206.587 176.541 206.125 175.729 206.125C174.413 206.125 173.727 207.259 173.727 208.519V212.649H172.565ZM187.772 211.879V212.761C187.478 212.845 187.254 212.887 187.072 212.887C186.26 212.887 185.854 212.537 185.77 211.781C184.944 212.593 184.216 212.901 183.278 212.901C181.85 212.901 180.884 212.103 180.884 210.745C180.884 209.233 182.032 208.687 182.886 208.547C183.138 208.505 183.684 208.421 184.51 208.309C185.448 208.183 185.756 208.001 185.756 207.525V207.273C185.756 206.545 185.182 206.181 184.076 206.181C182.998 206.181 182.466 206.587 182.368 207.483H181.192C181.22 205.789 182.396 205.103 184.132 205.103C185.938 205.103 186.89 205.803 186.89 207.105V211.333C186.89 211.711 187.1 211.907 187.52 211.907C187.59 211.907 187.702 211.893 187.772 211.879ZM185.756 210.101V208.939C185.266 209.163 184.468 209.289 183.852 209.359C182.76 209.485 182.074 209.793 182.074 210.717C182.074 211.445 182.634 211.879 183.572 211.879C184.594 211.879 185.756 211.123 185.756 210.101ZM189.006 212.649V205.313H190.098V206.069C190.406 205.607 190.994 205.145 191.778 205.145C192.492 205.145 193.066 205.523 193.276 206.125C193.57 205.635 194.158 205.145 194.984 205.145C195.894 205.145 196.566 205.747 196.566 206.671V212.649H195.418V206.909C195.418 206.391 195.082 206.125 194.606 206.125C193.822 206.125 193.36 206.587 193.36 207.357V212.649H192.212V206.909C192.212 206.391 191.876 206.125 191.4 206.125C190.616 206.125 190.154 206.587 190.154 207.357V212.649H189.006ZM201.44 205.089C203.694 205.089 204.758 206.769 204.758 208.995C204.758 211.221 203.694 212.901 201.44 212.901C199.186 212.901 198.122 211.221 198.122 208.995C198.122 206.769 199.186 205.089 201.44 205.089ZM201.44 206.167C199.956 206.167 199.34 207.497 199.34 208.995C199.34 210.493 199.956 211.823 201.44 211.823C202.924 211.823 203.54 210.493 203.54 208.995C203.54 207.497 202.924 206.167 201.44 206.167ZM209.997 212.649H206.833V202.863H209.997C212.475 202.863 213.721 204.907 213.721 207.749C213.721 210.605 212.475 212.649 209.997 212.649ZM208.135 204.011V211.501H209.773C211.607 211.501 212.363 210.087 212.363 207.763C212.363 205.425 211.607 204.011 209.773 204.011H208.135ZM219.519 212.649H215.711V202.863H219.197C220.947 202.863 222.151 203.815 222.151 205.355C222.151 206.293 221.703 207.231 220.849 207.539C221.871 207.875 222.473 208.687 222.473 209.863C222.473 211.333 221.451 212.649 219.519 212.649ZM216.985 203.969V207.063H219.001C220.051 207.063 220.821 206.727 220.821 205.537C220.821 204.333 220.051 203.969 219.001 203.969H216.985ZM216.985 208.169V211.543H219.365C220.597 211.543 221.143 210.843 221.143 209.849C221.143 208.869 220.597 208.169 219.365 208.169H216.985Z" fill="rgb(var(--colour-main))"></path><path d="M291.754 208.211H287.554V211.501H292.216V212.649H286.252V202.863H291.964V204.011H287.554V207.063H291.754V208.211ZM298.63 202.443V211.697H300.884V212.649H294.962V211.697H297.496V203.395H294.962V202.443H298.63ZM309.945 211.879V212.761C309.651 212.845 309.427 212.887 309.245 212.887C308.433 212.887 308.027 212.537 307.943 211.781C307.117 212.593 306.389 212.901 305.451 212.901C304.023 212.901 303.057 212.103 303.057 210.745C303.057 209.233 304.205 208.687 305.059 208.547C305.311 208.505 305.857 208.421 306.683 208.309C307.621 208.183 307.929 208.001 307.929 207.525V207.273C307.929 206.545 307.355 206.181 306.249 206.181C305.171 206.181 304.639 206.587 304.541 207.483H303.365C303.393 205.789 304.569 205.103 306.305 205.103C308.111 205.103 309.063 205.803 309.063 207.105V211.333C309.063 211.711 309.273 211.907 309.693 211.907C309.763 211.907 309.875 211.893 309.945 211.879ZM307.929 210.101V208.939C307.439 209.163 306.641 209.289 306.025 209.359C304.933 209.485 304.247 209.793 304.247 210.717C304.247 211.445 304.807 211.879 305.745 211.879C306.767 211.879 307.929 211.123 307.929 210.101ZM317.647 207.315H316.429C316.401 206.587 315.841 206.125 314.959 206.125C314.007 206.125 313.363 206.545 313.363 207.203C313.363 207.721 313.727 208.029 314.413 208.211L316.079 208.645C317.311 208.967 317.941 209.569 317.941 210.605C317.941 212.033 316.821 212.901 315.001 212.901C313.083 212.901 312.075 212.061 311.991 210.423H313.223C313.335 211.417 313.937 211.865 315.029 211.865C316.065 211.865 316.751 211.473 316.751 210.787C316.751 210.157 316.443 209.891 315.645 209.681L314.105 209.275C312.775 208.925 312.173 208.379 312.173 207.259C312.173 205.929 313.265 205.089 314.987 205.089C316.695 205.089 317.619 205.929 317.647 207.315ZM323.669 205.313H326.553V206.265H323.669V210.353C323.669 211.431 324.243 211.795 325.307 211.795C325.783 211.795 326.203 211.753 326.553 211.655V212.677C326.091 212.817 325.629 212.845 325.237 212.845C323.459 212.845 322.507 212.159 322.507 210.563V206.265H320.393V205.313H322.507V203.297H323.669V205.313ZM331.693 204.263V202.863H333.093V204.263H331.693ZM332.967 205.313V211.697H335.221V212.649H329.299V211.697H331.819V206.265H329.299V205.313H332.967ZM344.058 207.735H342.882C342.756 206.769 342.112 206.167 341.09 206.167C339.578 206.167 338.99 207.609 338.99 209.065C338.99 210.521 339.648 211.823 341.118 211.823C342.14 211.823 342.77 211.249 342.966 210.087H344.142C343.988 211.851 342.896 212.901 341.09 212.901C338.948 212.901 337.772 211.221 337.772 209.065C337.772 206.867 338.92 205.089 341.104 205.089C342.896 205.089 344.016 206.181 344.058 207.735ZM296.725 223.691H295.465C295.423 222.571 294.765 221.745 293.407 221.745C292.063 221.745 291.349 222.417 291.349 223.299C291.349 224.111 291.769 224.573 292.679 224.783L294.681 225.245C296.207 225.595 297.005 226.603 297.005 227.863C297.005 229.809 295.591 230.901 293.533 230.901C291.097 230.901 289.795 229.613 289.767 227.527H291.027C291.041 228.829 291.909 229.739 293.561 229.739C295.031 229.739 295.689 229.039 295.689 228.045C295.689 227.177 295.213 226.687 294.247 226.463L292.217 225.987C290.803 225.651 290.033 224.769 290.033 223.425C290.033 221.787 291.349 220.639 293.449 220.639C295.493 220.639 296.725 221.885 296.725 223.509V223.691ZM305.169 228.381C304.917 229.921 303.755 230.901 302.033 230.901C299.821 230.901 298.701 229.291 298.701 227.051C298.701 224.601 300.031 223.089 302.061 223.089C304.329 223.089 305.323 224.783 305.323 227.331H299.919C299.961 228.773 300.661 229.823 302.075 229.823C303.027 229.823 303.671 229.361 303.993 228.381H305.169ZM302.047 224.167C300.731 224.167 300.045 225.147 299.947 226.379H304.063C304.063 225.161 303.307 224.167 302.047 224.167ZM314.272 229.879V230.761C313.978 230.845 313.754 230.887 313.572 230.887C312.76 230.887 312.354 230.537 312.27 229.781C311.444 230.593 310.716 230.901 309.778 230.901C308.35 230.901 307.384 230.103 307.384 228.745C307.384 227.233 308.532 226.687 309.386 226.547C309.638 226.505 310.184 226.421 311.01 226.309C311.948 226.183 312.256 226.001 312.256 225.525V225.273C312.256 224.545 311.682 224.181 310.576 224.181C309.498 224.181 308.966 224.587 308.868 225.483H307.692C307.72 223.789 308.896 223.103 310.632 223.103C312.438 223.103 313.39 223.803 313.39 225.105V229.333C313.39 229.711 313.6 229.907 314.02 229.907C314.09 229.907 314.202 229.893 314.272 229.879ZM312.256 228.101V226.939C311.766 227.163 310.968 227.289 310.352 227.359C309.26 227.485 308.574 227.793 308.574 228.717C308.574 229.445 309.134 229.879 310.072 229.879C311.094 229.879 312.256 229.123 312.256 228.101ZM316.696 230.649V223.313H317.774V224.895C318.264 223.845 319.202 223.103 320.406 223.103C322.086 223.103 322.954 224.027 323.094 225.483H321.932C321.764 224.601 321.288 224.125 320.294 224.125C318.824 224.125 317.872 225.371 317.872 227.093V230.649H316.696ZM331.076 225.735H329.9C329.774 224.769 329.13 224.167 328.108 224.167C326.596 224.167 326.008 225.609 326.008 227.065C326.008 228.521 326.666 229.823 328.136 229.823C329.158 229.823 329.788 229.249 329.984 228.087H331.16C331.006 229.851 329.914 230.901 328.108 230.901C325.966 230.901 324.79 229.221 324.79 227.065C324.79 224.867 325.938 223.089 328.122 223.089C329.914 223.089 331.034 224.181 331.076 225.735ZM333.683 230.649V220.443H334.845V224.405C335.363 223.635 336.035 223.103 337.197 223.103C338.471 223.103 339.521 223.747 339.521 225.105V230.649H338.359V225.567C338.359 224.587 337.659 224.125 336.847 224.125C335.531 224.125 334.845 225.259 334.845 226.519V230.649H333.683Z" fill="rgb(var(--colour-main))"></path></svg></div></div></div></div></section><section id="under-the-hood-scaling-writes" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">d. </span>Scaling writes</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#under-the-hood-scaling-writes">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">We optimize DynamoDB by:</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Storing data in many small partitions. Each ledger entry is its own Dynamo partition. This scales horizontally since each partition can be served from a different DynamoDB server.</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">Using a single-table design with a dataloader. The dataloader batches several reads in a single application tick into one request to DynamoDB, minimizing the number of requests made to DynamoDB.</li>
</ul></div></div></section><section id="under-the-hood-read-path" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">e. </span>Read path</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#under-the-hood-read-path">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Depending on the query, GraphQL queries API requests are served from either DynamoDB or ElasticSearch.</p><ul data-testid="list-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none my-f2 mt-[2em] ml-[1.125em] list-disc list-outside">
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">DynamoDB serves ledger account balances, single item lookups, and low-volume list queries</li>
<li data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none pl-[2px]">ElasticSearch serves list queries that may use filtering and pagination</li>
</ul></div></div></section><section id="under-the-hood-scaling-reads" class="Page my-f4 first:mt-0 group-two scroll-mt-[117px] laptop:scroll-mt-[130px]"><div><div class="bg-sticky-header-background block top-0 sticky mt-[3em] phone:mt-[1em] phone:static"><h1 class="inline-block"><span class="text-main-500">f. </span>Scaling reads</h1><span class=" ml-[0.5em] phone:invisible phone:group-two-hover:visible"><a class="text-main-500 transition-colors hover:cursor-pointer hover:text-main inline-block" href="/docs#under-the-hood-scaling-reads">#</a></span></div><div class="ml-0 phone:ml-[2ch]"><div></div><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">Our ElasticSearch strategy is based on the idea that each query should only hit a single server.  When a list query comes in, it gets routed to a single server, which uses sorting to cut down the search space, applies additional filters on indexed attributes, then returns the results. The results are fully hydrated so the <span style="font-feature-settings:&#x27;ss01&#x27; on;font-variant-ligatures:no-contextual"><span data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none">FRAGMENT</span></span> API can return data directly from ElasticSearch without hitting DynamoDB again.</p><p data-testid="text-engine" class="font-FragmentMono text-[inherit] text-inherit bg-inherit border-none mt-f2">This strategy is opposite to Elasticsearch&#x27;s default where docs are thrown onto random servers and queries map out to every server in the cluster. Our strategy works well for a highly structured search with a high hit rate: filtering data in a Ledger. The default strategy is better for a fuzzy search with a low hit rate, like searching for a string across millions of documents.</p></div></div></section></div></section></div></div></div></div></div></div></div><script id="__NEXT_DATA__" type="application/json" crossorigin="">{"props":{"pageProps":{"navTree":{"Documentation":{"_type":"MultiPageSectionMDXNav","href":"/docs","contentTree":{"Introduction":[{"title":"Introduction","anchor":"introduction","label":"","id":"introduction","hideNavSubItems":true}],"Design your Ledger":[{"title":"Ledger Accounts","anchor":"design-your-ledger-ledger-accounts","label":"a","id":"design-your-ledger","hideNavSubItems":false},{"title":"Ledger Entries","anchor":"design-your-ledger-ledger-entries","label":"b","id":"design-your-ledger","hideNavSubItems":false}],"Deploy your Ledger":[{"title":"Dashboard","anchor":"deploy-your-ledger-dashboard","label":"a","id":"deploy-your-ledger","hideNavSubItems":false},{"title":"API","anchor":"deploy-your-ledger-api","label":"b","id":"deploy-your-ledger","hideNavSubItems":false},{"title":"CLI","anchor":"deploy-your-ledger-cli","label":"c","id":"deploy-your-ledger","hideNavSubItems":false}],"Install the SDK":[{"title":"Setup the CLI","anchor":"install-the-sdk-setup-the-cli","label":"a","id":"install-the-sdk","hideNavSubItems":false},{"title":"TypeScript","anchor":"install-the-sdk-typescript","label":"b","id":"install-the-sdk","hideNavSubItems":false,"children":[{"label":"haha","title":"Generate Queries","anchor":"install-the-sdk-typescript-generate-queries"},{"label":"haha","title":"Generate Client","anchor":"install-the-sdk-typescript-generate-client"}]},{"title":"Go","anchor":"install-the-sdk-go","label":"c","id":"install-the-sdk","hideNavSubItems":false,"children":[{"label":"haha","title":"Generate Queries","anchor":"install-the-sdk-go-generate-queries"},{"label":"haha","title":"Generate Code","anchor":"install-the-sdk-go-generate-code"}]},{"title":"Ruby","anchor":"install-the-sdk-ruby","label":"d","id":"install-the-sdk","hideNavSubItems":false,"children":[{"label":"haha","title":"Generate Queries","anchor":"install-the-sdk-ruby-generate-queries"},{"label":"haha","title":"Use custom queries","anchor":"install-the-sdk-ruby-use-custom-queries"}]},{"title":"Other Languages","anchor":"install-the-sdk-other-languages","label":"e","id":"install-the-sdk","hideNavSubItems":false,"children":[{"label":"haha","title":"Generate Queries","anchor":"install-the-sdk-other-languages-generate-queries"},{"label":"haha","title":"Generate SDK","anchor":"install-the-sdk-other-languages-generate-sdk"},{"label":"haha","title":"Implement logic","anchor":"install-the-sdk-other-languages-implement-logic"}]}],"Post Ledger Entries":[{"title":"Schema","anchor":"post-ledger-entries-schema","label":"a","id":"post-ledger-entries","hideNavSubItems":false},{"title":"Post to the API","anchor":"post-ledger-entries-post-to-the-api","label":"b","id":"post-ledger-entries","hideNavSubItems":false,"children":[{"label":"haha","title":"Minor Units","anchor":"post-ledger-entries-post-to-the-api-minor-units"},{"label":"haha","title":"Tags","anchor":"post-ledger-entries-post-to-the-api-tags"},{"label":"haha","title":"Idempotency","anchor":"post-ledger-entries-post-to-the-api-idempotency"},{"label":"haha","title":"Timestamps","anchor":"post-ledger-entries-post-to-the-api-timestamps"}]},{"title":"Linked Accounts","anchor":"post-ledger-entries-linked-accounts","label":"c","id":"post-ledger-entries","hideNavSubItems":false},{"title":"Currencies","anchor":"post-ledger-entries-currencies","label":"d","id":"post-ledger-entries","hideNavSubItems":false},{"title":"Using conditions","anchor":"post-ledger-entries-using-conditions","label":"e","id":"post-ledger-entries","hideNavSubItems":false},{"title":"Using Groups","anchor":"post-ledger-entries-using-groups","label":"f","id":"post-ledger-entries","hideNavSubItems":false},{"title":"Runtime Entries","anchor":"post-ledger-entries-runtime-entries","label":"g","id":"post-ledger-entries","hideNavSubItems":false}],"Reconcile transactions":[{"title":"Links","anchor":"reconcile-transactions-links","label":"a","id":"reconcile-transactions","hideNavSubItems":false},{"title":"Native Links","anchor":"reconcile-transactions-native-links","label":"b","id":"reconcile-transactions","hideNavSubItems":false,"children":[{"label":"haha","title":"Increase","anchor":"reconcile-transactions-native-links-increase"},{"label":"haha","title":"Stripe","anchor":"reconcile-transactions-native-links-stripe"},{"label":"haha","title":"Stripe Connect","anchor":"reconcile-transactions-native-links-stripe-connect"},{"label":"haha","title":"Unit","anchor":"reconcile-transactions-native-links-unit"}]},{"title":"Link any system","anchor":"reconcile-transactions-link-any-system","label":"c","id":"reconcile-transactions","hideNavSubItems":false,"children":[{"label":"haha","title":"Onboarding","anchor":"reconcile-transactions-link-any-system-onboarding"},{"label":"haha","title":"Sync accounts","anchor":"reconcile-transactions-link-any-system-sync-accounts"}]},{"title":"Linked Accounts","anchor":"reconcile-transactions-linked-accounts","label":"d","id":"reconcile-transactions","hideNavSubItems":false},{"title":"Transact externally","anchor":"reconcile-transactions-transact-externally","label":"e","id":"reconcile-transactions","hideNavSubItems":false},{"title":"Sync transactions","anchor":"reconcile-transactions-sync-transactions","label":"f","id":"reconcile-transactions","hideNavSubItems":false},{"title":"Reconcile a Tx","anchor":"reconcile-transactions-reconcile-a-tx","label":"g","id":"reconcile-transactions","hideNavSubItems":false,"children":[{"label":"haha","title":"Reconciling multiple Txs","anchor":"reconcile-transactions-reconcile-a-tx-reconciling-multiple-txs"}]},{"title":"Unreconciled Txs","anchor":"reconcile-transactions-unreconciled-txs","label":"h","id":"reconcile-transactions","hideNavSubItems":false},{"title":"Stripe Txs","anchor":"reconcile-transactions-stripe-txs","label":"i","id":"reconcile-transactions","hideNavSubItems":false}],"Store metadata":[{"title":"Schema Entry tags","anchor":"store-metadata-schema-entry-tags","label":"a","id":"store-metadata","hideNavSubItems":false},{"title":"Runtime Entry tags","anchor":"store-metadata-runtime-entry-tags","label":"b","id":"store-metadata","hideNavSubItems":false},{"title":"Updating Entry tags","anchor":"store-metadata-updating-entry-tags","label":"c","id":"store-metadata","hideNavSubItems":false}],"Read balances":[{"title":"Latest","anchor":"read-balances-latest","label":"a","id":"read-balances","hideNavSubItems":false},{"title":"Aggregated","anchor":"read-balances-aggregated","label":"b","id":"read-balances","hideNavSubItems":false},{"title":"Consistent","anchor":"read-balances-consistent","label":"c","id":"read-balances","hideNavSubItems":false},{"title":"Historical","anchor":"read-balances-historical","label":"d","id":"read-balances","hideNavSubItems":false},{"title":"Balance changes","anchor":"read-balances-balance-changes","label":"e","id":"read-balances","hideNavSubItems":false},{"title":"Multi-currency mode","anchor":"read-balances-multi-currency-mode","label":"f","id":"read-balances","hideNavSubItems":false},{"title":"Timezone offsets","anchor":"read-balances-timezone-offsets","label":"g","id":"read-balances","hideNavSubItems":false}],"Query data":[{"title":"Basics","anchor":"query-data-basics","label":"a","id":"query-data","hideNavSubItems":false,"children":[{"label":"haha","title":"GraphQL","anchor":"query-data-basics-graphql"},{"label":"haha","title":"Connection types","anchor":"query-data-basics-connection-types"},{"label":"haha","title":"Filtering","anchor":"query-data-basics-filtering"},{"label":"haha","title":"Pagination","anchor":"query-data-basics-pagination"}]},{"title":"Ledgers","anchor":"query-data-ledgers","label":"b","id":"query-data","hideNavSubItems":false,"children":[{"label":"haha","title":"Lookup","anchor":"query-data-ledgers-lookup"},{"label":"haha","title":"List","anchor":"query-data-ledgers-list"}]},{"title":"Ledger Accounts","anchor":"query-data-ledger-accounts","label":"c","id":"query-data","hideNavSubItems":false,"children":[{"label":"haha","title":"Lookup","anchor":"query-data-ledger-accounts-lookup"},{"label":"haha","title":"Lookup multiple","anchor":"query-data-ledger-accounts-lookup-multiple"},{"label":"haha","title":"List","anchor":"query-data-ledger-accounts-list"},{"label":"haha","title":"List balances","anchor":"query-data-ledger-accounts-list-balances"},{"label":"haha","title":"Filter by type","anchor":"query-data-ledger-accounts-filter-by-type"},{"label":"haha","title":"Filter by path","anchor":"query-data-ledger-accounts-filter-by-path"},{"label":"haha","title":"Filter by Link","anchor":"query-data-ledger-accounts-filter-by-link"},{"label":"haha","title":"Filter by parent","anchor":"query-data-ledger-accounts-filter-by-parent"}]},{"title":"Ledger Lines","anchor":"query-data-ledger-lines","label":"d","id":"query-data","hideNavSubItems":false,"children":[{"label":"haha","title":"Lookup","anchor":"query-data-ledger-lines-lookup"},{"label":"haha","title":"List","anchor":"query-data-ledger-lines-list"},{"label":"haha","title":"Filter by posted","anchor":"query-data-ledger-lines-filter-by-posted"},{"label":"haha","title":"Filter by key","anchor":"query-data-ledger-lines-filter-by-key"}]},{"title":"Ledger Entries","anchor":"query-data-ledger-entries","label":"e","id":"query-data","hideNavSubItems":false,"children":[{"label":"haha","title":"Lookup","anchor":"query-data-ledger-entries-lookup"},{"label":"haha","title":"Lookup multiple","anchor":"query-data-ledger-entries-lookup-multiple"},{"label":"haha","title":"List by group","anchor":"query-data-ledger-entries-list-by-group"},{"label":"haha","title":"Expand lines","anchor":"query-data-ledger-entries-expand-lines"},{"label":"haha","title":"Filter by posted","anchor":"query-data-ledger-entries-filter-by-posted"},{"label":"haha","title":"Filter by type","anchor":"query-data-ledger-entries-filter-by-type"},{"label":"haha","title":"Filter by tag","anchor":"query-data-ledger-entries-filter-by-tag"}]},{"title":"Ledger Entry Groups","anchor":"query-data-ledger-entry-groups","label":"f","id":"query-data","hideNavSubItems":false,"children":[{"label":"haha","title":"Lookup","anchor":"query-data-ledger-entry-groups-lookup"},{"label":"haha","title":"List","anchor":"query-data-ledger-entry-groups-list"},{"label":"haha","title":"Filter","anchor":"query-data-ledger-entry-groups-filter"}]},{"title":"Links","anchor":"query-data-links","label":"g","id":"query-data","hideNavSubItems":false,"children":[{"label":"haha","title":"Lookup","anchor":"query-data-links-lookup"},{"label":"haha","title":"External Accounts","anchor":"query-data-links-external-accounts"}]},{"title":"External Accounts","anchor":"query-data-external-accounts","label":"h","id":"query-data","hideNavSubItems":false,"children":[{"label":"haha","title":"Lookup","anchor":"query-data-external-accounts-lookup"},{"label":"haha","title":"Txs","anchor":"query-data-external-accounts-txs"},{"label":"haha","title":"Linked Accounts","anchor":"query-data-external-accounts-linked-accounts"}]},{"title":"Txs","anchor":"query-data-txs","label":"i","id":"query-data","hideNavSubItems":false,"children":[{"label":"haha","title":"Lookup","anchor":"query-data-txs-lookup"},{"label":"haha","title":"Unreconciled","anchor":"query-data-txs-unreconciled"}]},{"title":"Schemas","anchor":"query-data-schemas","label":"j","id":"query-data","hideNavSubItems":false,"children":[{"label":"haha","title":"Lookup","anchor":"query-data-schemas-lookup"},{"label":"haha","title":"List versions","anchor":"query-data-schemas-list-versions"},{"label":"haha","title":"List Ledgers","anchor":"query-data-schemas-list-ledgers"},{"label":"haha","title":"Migration status","anchor":"query-data-schemas-migration-status"}]}],"Generate reports":[{"title":"Balance sheet","anchor":"generate-reports-balance-sheet","label":"a","id":"generate-reports","hideNavSubItems":false},{"title":"Income statement","anchor":"generate-reports-income-statement","label":"b","id":"generate-reports","hideNavSubItems":false},{"title":"Account statement","anchor":"generate-reports-account-statement","label":"c","id":"generate-reports","hideNavSubItems":false},{"title":"Journal export","anchor":"generate-reports-journal-export","label":"d","id":"generate-reports","hideNavSubItems":false}],"Configure consistency":[{"title":"Ledger Configuration","anchor":"configure-consistency-ledger-configuration","label":"a","id":"configure-consistency","hideNavSubItems":false},{"title":"Ledger Account Configuration","anchor":"configure-consistency-ledger-account-configuration","label":"b","id":"configure-consistency","hideNavSubItems":false},{"title":"Balance queries","anchor":"configure-consistency-balance-queries","label":"c","id":"configure-consistency","hideNavSubItems":false},{"title":"Entry conditions","anchor":"configure-consistency-entry-conditions","label":"d","id":"configure-consistency","hideNavSubItems":false},{"title":"Consistent Groups","anchor":"configure-consistency-consistent-groups","label":"e","id":"configure-consistency","hideNavSubItems":false},{"title":"Query Consistent Groups","anchor":"configure-consistency-query-consistent-groups","label":"f","id":"configure-consistency","hideNavSubItems":false}],"Handle currencies":[{"title":"Track exposure","anchor":"handle-currencies-track-exposure","label":"a","id":"handle-currencies","hideNavSubItems":false},{"title":"Ledger Accounts","anchor":"handle-currencies-ledger-accounts","label":"b","id":"handle-currencies","hideNavSubItems":false},{"title":"Ledger Entries","anchor":"handle-currencies-ledger-entries","label":"c","id":"handle-currencies","hideNavSubItems":false},{"title":"Read balances","anchor":"handle-currencies-read-balances","label":"d","id":"handle-currencies","hideNavSubItems":false,"children":[{"label":"haha","title":"Latest","anchor":"handle-currencies-read-balances-latest"},{"label":"haha","title":"Aggregated","anchor":"handle-currencies-read-balances-aggregated"},{"label":"haha","title":"Consistent","anchor":"handle-currencies-read-balances-consistent"},{"label":"haha","title":"Historical","anchor":"handle-currencies-read-balances-historical"},{"label":"haha","title":"Balance changes","anchor":"handle-currencies-read-balances-balance-changes"}]},{"title":"Custom currencies","anchor":"handle-currencies-custom-currencies","label":"e","id":"handle-currencies","hideNavSubItems":false}],"Group Ledger Entries":[{"title":"Configuring Groups","anchor":"group-ledger-entries-configuring-groups","label":"a","id":"group-ledger-entries","hideNavSubItems":false},{"title":"Querying balances","anchor":"group-ledger-entries-querying-balances","label":"b","id":"group-ledger-entries","hideNavSubItems":false,"children":[{"label":"haha","title":"Consistent balances","anchor":"group-ledger-entries-querying-balances-consistent-balances"},{"label":"haha","title":"Filtering balances","anchor":"group-ledger-entries-querying-balances-filtering-balances"},{"label":"haha","title":"Filter by template","anchor":"group-ledger-entries-querying-balances-filter-by-template"}]},{"title":"Updating Entry Groups","anchor":"group-ledger-entries-updating-entry-groups","label":"c","id":"group-ledger-entries","hideNavSubItems":false}],"Export data":[{"title":"S3 Export","anchor":"export-data-s3-export","label":"a","id":"export-data","hideNavSubItems":false,"children":[{"label":"haha","title":"Export format","anchor":"export-data-s3-export-export-format"},{"label":"haha","title":"Onboarding","anchor":"export-data-s3-export-onboarding"},{"label":"haha","title":"Testing","anchor":"export-data-s3-export-testing"}]},{"title":"Retool","anchor":"export-data-retool","label":"b","id":"export-data","hideNavSubItems":false}],"Under the hood":[{"title":"Performance","anchor":"under-the-hood-performance","label":"a","id":"under-the-hood","hideNavSubItems":false},{"title":"Architecture","anchor":"under-the-hood-architecture","label":"b","id":"under-the-hood","hideNavSubItems":false},{"title":"Write path","anchor":"under-the-hood-write-path","label":"c","id":"under-the-hood","hideNavSubItems":false},{"title":"Scaling writes","anchor":"under-the-hood-scaling-writes","label":"d","id":"under-the-hood","hideNavSubItems":false},{"title":"Read path","anchor":"under-the-hood-read-path","label":"e","id":"under-the-hood","hideNavSubItems":false},{"title":"Scaling reads","anchor":"under-the-hood-scaling-reads","label":"f","id":"under-the-hood","hideNavSubItems":false}]},"topicConfig":{"Introduction":{"id":"introduction","label":"A"},"Design your Ledger":{"id":"design-your-ledger","label":"B"},"Deploy your Ledger":{"id":"deploy-your-ledger","label":"C"},"Install the SDK":{"id":"install-the-sdk","label":"D"},"Post Ledger Entries":{"id":"post-ledger-entries","label":"E"},"Reconcile transactions":{"id":"reconcile-transactions","label":"F"},"Store metadata":{"id":"store-metadata","label":"G"},"Read balances":{"id":"read-balances","label":"H"},"Query data":{"id":"query-data","label":"I"},"Generate reports":{"id":"generate-reports","label":"J"},"Configure consistency":{"id":"configure-consistency","label":"K"},"Handle currencies":{"id":"handle-currencies","label":"L"},"Group Ledger Entries":{"id":"group-ledger-entries","label":"M"},"Export data":{"id":"export-data","label":"N"},"Under the hood":{"id":"under-the-hood","label":"O"}}},"Reference":{"_type":"MultiPageSectionMDXNav","href":"/api-reference","contentTree":{"API Overview":[{"title":"Regions","anchor":"api-overview-regions","label":"a","id":"api-overview","hideNavSubItems":false},{"title":"Authentication","anchor":"api-overview-authentication","label":"b","id":"api-overview","hideNavSubItems":false},{"title":"Idempotency","anchor":"api-overview-idempotency","label":"c","id":"api-overview","hideNavSubItems":false},{"title":"Errors","anchor":"api-overview-errors","label":"d","id":"api-overview","hideNavSubItems":false}],"API Queries":[{"title":"customCurrencies","anchor":"queries-customcurrencies","label":"","id":"queries","hideNavSubItems":false},{"title":"externalAccount","anchor":"queries-externalaccount","label":"","id":"queries","hideNavSubItems":false},{"title":"ledger","anchor":"queries-ledger","label":"","id":"queries","hideNavSubItems":false},{"title":"ledgerAccount","anchor":"queries-ledgeraccount","label":"","id":"queries","hideNavSubItems":false},{"title":"ledgerEntry","anchor":"queries-ledgerentry","label":"","id":"queries","hideNavSubItems":false},{"title":"ledgerEntryGroup","anchor":"queries-ledgerentrygroup","label":"","id":"queries","hideNavSubItems":false},{"title":"ledgerLine","anchor":"queries-ledgerline","label":"","id":"queries","hideNavSubItems":false},{"title":"ledgers","anchor":"queries-ledgers","label":"","id":"queries","hideNavSubItems":false},{"title":"link","anchor":"queries-link","label":"","id":"queries","hideNavSubItems":false},{"title":"links","anchor":"queries-links","label":"","id":"queries","hideNavSubItems":false},{"title":"schema","anchor":"queries-schema","label":"","id":"queries","hideNavSubItems":false},{"title":"schemas","anchor":"queries-schemas","label":"","id":"queries","hideNavSubItems":false},{"title":"tx","anchor":"queries-tx","label":"","id":"queries","hideNavSubItems":false},{"title":"workspace","anchor":"queries-workspace","label":"","id":"queries","hideNavSubItems":false}],"API Mutations":[{"title":"addLedgerEntry","anchor":"mutations-addledgerentry","label":"","id":"mutations","hideNavSubItems":false},{"title":"createCustomCurrency","anchor":"mutations-createcustomcurrency","label":"","id":"mutations","hideNavSubItems":false},{"title":"createCustomLink","anchor":"mutations-createcustomlink","label":"","id":"mutations","hideNavSubItems":false},{"title":"createLedger","anchor":"mutations-createledger","label":"","id":"mutations","hideNavSubItems":false},{"title":"reconcileTx","anchor":"mutations-reconciletx","label":"","id":"mutations","hideNavSubItems":false},{"title":"storeSchema","anchor":"mutations-storeschema","label":"","id":"mutations","hideNavSubItems":false},{"title":"syncCustomAccounts","anchor":"mutations-synccustomaccounts","label":"","id":"mutations","hideNavSubItems":false},{"title":"syncCustomTxs","anchor":"mutations-synccustomtxs","label":"","id":"mutations","hideNavSubItems":false},{"title":"updateLedger","anchor":"mutations-updateledger","label":"","id":"mutations","hideNavSubItems":false},{"title":"updateLedgerEntry","anchor":"mutations-updateledgerentry","label":"","id":"mutations","hideNavSubItems":false}],"API Types":[{"title":"Core Types","anchor":"types-core-types","label":"","id":"types","hideNavSubItems":false,"children":[{"label":"haha","title":"ExternalAccount","anchor":"types-core-types-externalaccount"},{"label":"haha","title":"Ledger","anchor":"types-core-types-ledger"},{"label":"haha","title":"LedgerAccount","anchor":"types-core-types-ledgeraccount"},{"label":"haha","title":"LedgerEntry","anchor":"types-core-types-ledgerentry"},{"label":"haha","title":"LedgerLine","anchor":"types-core-types-ledgerline"},{"label":"haha","title":"LedgerMigration","anchor":"types-core-types-ledgermigration"},{"label":"haha","title":"Link","anchor":"types-core-types-link"},{"label":"haha","title":"Schema","anchor":"types-core-types-schema"},{"label":"haha","title":"Tx","anchor":"types-core-types-tx"},{"label":"haha","title":"Workspace","anchor":"types-core-types-workspace"}]},{"title":"Scalars and Enums","anchor":"types-scalars-and-enums","label":"","id":"types","hideNavSubItems":false,"children":[{"label":"haha","title":"BalanceUpdateConsistencyMode","anchor":"types-scalars-and-enums-balanceupdateconsistencymode"},{"label":"haha","title":"Boolean","anchor":"types-scalars-and-enums-boolean"},{"label":"haha","title":"Currency","anchor":"types-scalars-and-enums-currency"},{"label":"haha","title":"CurrencyCode","anchor":"types-scalars-and-enums-currencycode"},{"label":"haha","title":"CurrencyMode","anchor":"types-scalars-and-enums-currencymode"},{"label":"haha","title":"Date","anchor":"types-scalars-and-enums-date"},{"label":"haha","title":"DateTime","anchor":"types-scalars-and-enums-datetime"},{"label":"haha","title":"ExternalTransferType","anchor":"types-scalars-and-enums-externaltransfertype"},{"label":"haha","title":"ID","anchor":"types-scalars-and-enums-id"},{"label":"haha","title":"IkReplay","anchor":"types-scalars-and-enums-ikreplay"},{"label":"haha","title":"Int","anchor":"types-scalars-and-enums-int"},{"label":"haha","title":"Int96","anchor":"types-scalars-and-enums-int96"},{"label":"haha","title":"JSON","anchor":"types-scalars-and-enums-json"},{"label":"haha","title":"LastMoment","anchor":"types-scalars-and-enums-lastmoment"},{"label":"haha","title":"LedgerLinesConsistencyMode","anchor":"types-scalars-and-enums-ledgerlinesconsistencymode"},{"label":"haha","title":"LedgerMigrationStatus","anchor":"types-scalars-and-enums-ledgermigrationstatus"},{"label":"haha","title":"LedgerTypes","anchor":"types-scalars-and-enums-ledgertypes"},{"label":"haha","title":"ParameterizedString","anchor":"types-scalars-and-enums-parameterizedstring"},{"label":"haha","title":"Period","anchor":"types-scalars-and-enums-period"},{"label":"haha","title":"ReadBalanceConsistencyMode","anchor":"types-scalars-and-enums-readbalanceconsistencymode"},{"label":"haha","title":"SafeString","anchor":"types-scalars-and-enums-safestring"},{"label":"haha","title":"SceneEventType","anchor":"types-scalars-and-enums-sceneeventtype"},{"label":"haha","title":"SchemaConsistencyMode","anchor":"types-scalars-and-enums-schemaconsistencymode"},{"label":"haha","title":"String","anchor":"types-scalars-and-enums-string"},{"label":"haha","title":"TxType","anchor":"types-scalars-and-enums-txtype"},{"label":"haha","title":"UTCOffset","anchor":"types-scalars-and-enums-utcoffset"}]},{"title":"Input Types","anchor":"types-input-types","label":"","id":"types","hideNavSubItems":false,"children":[{"label":"haha","title":"ChartOfAccountsInput","anchor":"types-input-types-chartofaccountsinput"},{"label":"haha","title":"CreateCustomCurrencyInput","anchor":"types-input-types-createcustomcurrencyinput"},{"label":"haha","title":"CreateLedgerAccountInput","anchor":"types-input-types-createledgeraccountinput"},{"label":"haha","title":"CreateLedgerAccountsInput","anchor":"types-input-types-createledgeraccountsinput"},{"label":"haha","title":"CreateLedgerInput","anchor":"types-input-types-createledgerinput"},{"label":"haha","title":"CustomAccountInput","anchor":"types-input-types-customaccountinput"},{"label":"haha","title":"CustomTxInput","anchor":"types-input-types-customtxinput"},{"label":"haha","title":"Int96ConditionInput","anchor":"types-input-types-int96conditioninput"},{"label":"haha","title":"LedgerAccountConditionInput","anchor":"types-input-types-ledgeraccountconditioninput"},{"label":"haha","title":"LedgerAccountConsistencyConfigInput","anchor":"types-input-types-ledgeraccountconsistencyconfiginput"},{"label":"haha","title":"LedgerAccountGroupConsistencyConfigInput","anchor":"types-input-types-ledgeraccountgroupconsistencyconfiginput"},{"label":"haha","title":"LedgerEntryConditionInput","anchor":"types-input-types-ledgerentryconditioninput"},{"label":"haha","title":"LedgerEntryGroupInput","anchor":"types-input-types-ledgerentrygroupinput"},{"label":"haha","title":"LedgerEntryInput","anchor":"types-input-types-ledgerentryinput"},{"label":"haha","title":"LedgerEntryTagInput","anchor":"types-input-types-ledgerentrytaginput"},{"label":"haha","title":"LedgerLineInput","anchor":"types-input-types-ledgerlineinput"},{"label":"haha","title":"SceneEntryInput","anchor":"types-input-types-sceneentryinput"},{"label":"haha","title":"SceneEventInput","anchor":"types-input-types-sceneeventinput"},{"label":"haha","title":"SceneInput","anchor":"types-input-types-sceneinput"},{"label":"haha","title":"SchemaConditionInput","anchor":"types-input-types-schemaconditioninput"},{"label":"haha","title":"SchemaConsistencyConfigInput","anchor":"types-input-types-schemaconsistencyconfiginput"},{"label":"haha","title":"SchemaInput","anchor":"types-input-types-schemainput"},{"label":"haha","title":"SchemaInt96ConditionInput","anchor":"types-input-types-schemaint96conditioninput"},{"label":"haha","title":"SchemaLedgerAccountInput","anchor":"types-input-types-schemaledgeraccountinput"},{"label":"haha","title":"SchemaLedgerEntriesInput","anchor":"types-input-types-schemaledgerentriesinput"},{"label":"haha","title":"SchemaLedgerEntryConditionInput","anchor":"types-input-types-schemaledgerentryconditioninput"},{"label":"haha","title":"SchemaLedgerEntryGroupInput","anchor":"types-input-types-schemaledgerentrygroupinput"},{"label":"haha","title":"SchemaLedgerEntryInput","anchor":"types-input-types-schemaledgerentryinput"},{"label":"haha","title":"SchemaLedgerEntryTagInput","anchor":"types-input-types-schemaledgerentrytaginput"},{"label":"haha","title":"SchemaLedgerLineInput","anchor":"types-input-types-schemaledgerlineinput"},{"label":"haha","title":"UpdateLedgerAccountInput","anchor":"types-input-types-updateledgeraccountinput"},{"label":"haha","title":"UpdateLedgerEntryInput","anchor":"types-input-types-updateledgerentryinput"},{"label":"haha","title":"UpdateLedgerInput","anchor":"types-input-types-updateledgerinput"}]},{"title":"MatchInput Types","anchor":"types-matchinput-types","label":"","id":"types","hideNavSubItems":false,"children":[{"label":"haha","title":"CurrencyMatchInput","anchor":"types-matchinput-types-currencymatchinput"},{"label":"haha","title":"EntryGroupMatchInput","anchor":"types-matchinput-types-entrygroupmatchinput"},{"label":"haha","title":"ExternalAccountMatchInput","anchor":"types-matchinput-types-externalaccountmatchinput"},{"label":"haha","title":"LedgerAccountMatchInput","anchor":"types-matchinput-types-ledgeraccountmatchinput"},{"label":"haha","title":"LedgerEntryGroupMatchInput","anchor":"types-matchinput-types-ledgerentrygroupmatchinput"},{"label":"haha","title":"LedgerEntryMatchInput","anchor":"types-matchinput-types-ledgerentrymatchinput"},{"label":"haha","title":"LedgerLineMatchInput","anchor":"types-matchinput-types-ledgerlinematchinput"},{"label":"haha","title":"LedgerMatchInput","anchor":"types-matchinput-types-ledgermatchinput"},{"label":"haha","title":"LinkMatchInput","anchor":"types-matchinput-types-linkmatchinput"},{"label":"haha","title":"SchemaCurrencyMatchInput","anchor":"types-matchinput-types-schemacurrencymatchinput"},{"label":"haha","title":"SchemaExternalAccountMatchInput","anchor":"types-matchinput-types-schemaexternalaccountmatchinput"},{"label":"haha","title":"SchemaLedgerAccountMatchInput","anchor":"types-matchinput-types-schemaledgeraccountmatchinput"},{"label":"haha","title":"SchemaMatchInput","anchor":"types-matchinput-types-schemamatchinput"},{"label":"haha","title":"SchemaTxMatchInput","anchor":"types-matchinput-types-schematxmatchinput"},{"label":"haha","title":"TagMatchInput","anchor":"types-matchinput-types-tagmatchinput"},{"label":"haha","title":"TxMatchInput","anchor":"types-matchinput-types-txmatchinput"}]},{"title":"Response Types","anchor":"types-response-types","label":"","id":"types","hideNavSubItems":false,"children":[{"label":"haha","title":"AddLedgerEntryResponse","anchor":"types-response-types-addledgerentryresponse"},{"label":"haha","title":"CreateCustomCurrencyResponse","anchor":"types-response-types-createcustomcurrencyresponse"},{"label":"haha","title":"CreateCustomLinkResponse","anchor":"types-response-types-createcustomlinkresponse"},{"label":"haha","title":"CreateLedgerAccountResponse","anchor":"types-response-types-createledgeraccountresponse"},{"label":"haha","title":"CreateLedgerAccountsResponse","anchor":"types-response-types-createledgeraccountsresponse"},{"label":"haha","title":"CreateLedgerResponse","anchor":"types-response-types-createledgerresponse"},{"label":"haha","title":"ReconcileTxResponse","anchor":"types-response-types-reconciletxresponse"},{"label":"haha","title":"StoreSchemaResponse","anchor":"types-response-types-storeschemaresponse"},{"label":"haha","title":"SyncCustomAccountsResponse","anchor":"types-response-types-synccustomaccountsresponse"},{"label":"haha","title":"SyncCustomTxsResponse","anchor":"types-response-types-synccustomtxsresponse"},{"label":"haha","title":"UpdateLedgerAccountResponse","anchor":"types-response-types-updateledgeraccountresponse"},{"label":"haha","title":"UpdateLedgerEntryResponse","anchor":"types-response-types-updateledgerentryresponse"},{"label":"haha","title":"UpdateLedgerResponse","anchor":"types-response-types-updateledgerresponse"}]},{"title":"Result Types","anchor":"types-result-types","label":"","id":"types","hideNavSubItems":false,"children":[{"label":"haha","title":"AddLedgerEntryResult","anchor":"types-result-types-addledgerentryresult"},{"label":"haha","title":"CreateCustomCurrencyResult","anchor":"types-result-types-createcustomcurrencyresult"},{"label":"haha","title":"CreateCustomLinkResult","anchor":"types-result-types-createcustomlinkresult"},{"label":"haha","title":"CreateLedgerAccountResult","anchor":"types-result-types-createledgeraccountresult"},{"label":"haha","title":"CreateLedgerAccountsResult","anchor":"types-result-types-createledgeraccountsresult"},{"label":"haha","title":"CreateLedgerResult","anchor":"types-result-types-createledgerresult"},{"label":"haha","title":"ReconcileTxResult","anchor":"types-result-types-reconciletxresult"},{"label":"haha","title":"StoreSchemaResult","anchor":"types-result-types-storeschemaresult"},{"label":"haha","title":"SyncCustomAccountsResult","anchor":"types-result-types-synccustomaccountsresult"},{"label":"haha","title":"SyncCustomTxsResult","anchor":"types-result-types-synccustomtxsresult"},{"label":"haha","title":"UpdateLedgerAccountResult","anchor":"types-result-types-updateledgeraccountresult"},{"label":"haha","title":"UpdateLedgerEntryResult","anchor":"types-result-types-updateledgerentryresult"},{"label":"haha","title":"UpdateLedgerResult","anchor":"types-result-types-updateledgerresult"}]},{"title":"Error Types","anchor":"types-error-types","label":"","id":"types","hideNavSubItems":false,"children":[{"label":"haha","title":"BadRequestError","anchor":"types-error-types-badrequesterror"},{"label":"haha","title":"Error","anchor":"types-error-types-error"},{"label":"haha","title":"InternalError","anchor":"types-error-types-internalerror"}]},{"title":"Connection Types","anchor":"types-connection-types","label":"","id":"types","hideNavSubItems":false,"children":[{"label":"haha","title":"CurrencyAmountConnection","anchor":"types-connection-types-currencyamountconnection"},{"label":"haha","title":"CustomCurrenciesConnection","anchor":"types-connection-types-customcurrenciesconnection"},{"label":"haha","title":"ExternalAccountsConnection","anchor":"types-connection-types-externalaccountsconnection"},{"label":"haha","title":"LedgerAccountsConnection","anchor":"types-connection-types-ledgeraccountsconnection"},{"label":"haha","title":"LedgerEntriesConnection","anchor":"types-connection-types-ledgerentriesconnection"},{"label":"haha","title":"LedgerEntryGroupBalanceConnection","anchor":"types-connection-types-ledgerentrygroupbalanceconnection"},{"label":"haha","title":"LedgerEntryGroupsConnection","anchor":"types-connection-types-ledgerentrygroupsconnection"},{"label":"haha","title":"LedgerLinesConnection","anchor":"types-connection-types-ledgerlinesconnection"},{"label":"haha","title":"LedgerMigrationConnection","anchor":"types-connection-types-ledgermigrationconnection"},{"label":"haha","title":"LedgersConnection","anchor":"types-connection-types-ledgersconnection"},{"label":"haha","title":"LinksConnection","anchor":"types-connection-types-linksconnection"},{"label":"haha","title":"PageInfo","anchor":"types-connection-types-pageinfo"},{"label":"haha","title":"SchemaConnection","anchor":"types-connection-types-schemaconnection"},{"label":"haha","title":"SchemaVersionConnection","anchor":"types-connection-types-schemaversionconnection"},{"label":"haha","title":"TxsConnection","anchor":"types-connection-types-txsconnection"}]},{"title":"Filter Types","anchor":"types-filter-types","label":"","id":"types","hideNavSubItems":false,"children":[{"label":"haha","title":"CurrencyFilter","anchor":"types-filter-types-currencyfilter"},{"label":"haha","title":"DateFilter","anchor":"types-filter-types-datefilter"},{"label":"haha","title":"DateTimeFilter","anchor":"types-filter-types-datetimefilter"},{"label":"haha","title":"ExternalAccountFilter","anchor":"types-filter-types-externalaccountfilter"},{"label":"haha","title":"GroupBalanceAccountFilter","anchor":"types-filter-types-groupbalanceaccountfilter"},{"label":"haha","title":"Int96Filter","anchor":"types-filter-types-int96filter"},{"label":"haha","title":"LedgerAccountFilter","anchor":"types-filter-types-ledgeraccountfilter"},{"label":"haha","title":"LedgerAccountTypeFilter","anchor":"types-filter-types-ledgeraccounttypefilter"},{"label":"haha","title":"LedgerAccountsFilterSet","anchor":"types-filter-types-ledgeraccountsfilterset"},{"label":"haha","title":"LedgerEntriesFilterSet","anchor":"types-filter-types-ledgerentriesfilterset"},{"label":"haha","title":"LedgerEntryFilter","anchor":"types-filter-types-ledgerentryfilter"},{"label":"haha","title":"LedgerEntryGroupBalanceFilterSet","anchor":"types-filter-types-ledgerentrygroupbalancefilterset"},{"label":"haha","title":"LedgerEntryGroupsFilterSet","anchor":"types-filter-types-ledgerentrygroupsfilterset"},{"label":"haha","title":"LedgerLinesFilterSet","anchor":"types-filter-types-ledgerlinesfilterset"},{"label":"haha","title":"LedgerTypeFilter","anchor":"types-filter-types-ledgertypefilter"},{"label":"haha","title":"LedgersFilterSet","anchor":"types-filter-types-ledgersfilterset"},{"label":"haha","title":"StringFilter","anchor":"types-filter-types-stringfilter"},{"label":"haha","title":"StringMatchFilter","anchor":"types-filter-types-stringmatchfilter"},{"label":"haha","title":"TagFilter","anchor":"types-filter-types-tagfilter"},{"label":"haha","title":"TxTypeFilter","anchor":"types-filter-types-txtypefilter"}]},{"title":"Utility Types","anchor":"types-utility-types","label":"","id":"types","hideNavSubItems":false,"children":[{"label":"haha","title":"CurrencyAmount","anchor":"types-utility-types-currencyamount"},{"label":"haha","title":"CustomLink","anchor":"types-utility-types-customlink"},{"label":"haha","title":"IncreaseEnv","anchor":"types-utility-types-increaseenv"},{"label":"haha","title":"IncreaseLink","anchor":"types-utility-types-increaselink"},{"label":"haha","title":"Int96Condition","anchor":"types-utility-types-int96condition"},{"label":"haha","title":"LedgerAccountCondition","anchor":"types-utility-types-ledgeraccountcondition"},{"label":"haha","title":"LedgerAccountConsistencyConfig","anchor":"types-utility-types-ledgeraccountconsistencyconfig"},{"label":"haha","title":"LedgerAccountTypes","anchor":"types-utility-types-ledgeraccounttypes"},{"label":"haha","title":"LedgerEntryCondition","anchor":"types-utility-types-ledgerentrycondition"},{"label":"haha","title":"LedgerEntryGroup","anchor":"types-utility-types-ledgerentrygroup"},{"label":"haha","title":"LedgerEntryGroupBalance","anchor":"types-utility-types-ledgerentrygroupbalance"},{"label":"haha","title":"LedgerEntryTag","anchor":"types-utility-types-ledgerentrytag"},{"label":"haha","title":"SchemaVersion","anchor":"types-utility-types-schemaversion"},{"label":"haha","title":"StripeEnv","anchor":"types-utility-types-stripeenv"},{"label":"haha","title":"StripeLink","anchor":"types-utility-types-stripelink"},{"label":"haha","title":"UnitEnv","anchor":"types-utility-types-unitenv"},{"label":"haha","title":"UnitLink","anchor":"types-utility-types-unitlink"}]}],"CLI Commands":[{"title":"login","anchor":"cli-commands-login","label":"","id":"cli-commands","hideNavSubItems":false},{"title":"store-schema","anchor":"cli-commands-store-schema","label":"","id":"cli-commands","hideNavSubItems":false},{"title":"create-ledger","anchor":"cli-commands-create-ledger","label":"","id":"cli-commands","hideNavSubItems":false},{"title":"get-schema","anchor":"cli-commands-get-schema","label":"","id":"cli-commands","hideNavSubItems":false},{"title":"add-ledger-entry","anchor":"cli-commands-add-ledger-entry","label":"","id":"cli-commands","hideNavSubItems":false},{"title":"create-custom-link","anchor":"cli-commands-create-custom-link","label":"","id":"cli-commands","hideNavSubItems":false},{"title":"gen-graphql","anchor":"cli-commands-gen-graphql","label":"","id":"cli-commands","hideNavSubItems":false},{"title":"update","anchor":"cli-commands-update","label":"","id":"cli-commands","hideNavSubItems":false},{"title":"token","anchor":"cli-commands-token","label":"","id":"cli-commands","hideNavSubItems":false},{"title":"help","anchor":"cli-commands-help","label":"","id":"cli-commands","hideNavSubItems":false},{"title":"workspace","anchor":"cli-commands-workspace","label":"","id":"cli-commands","hideNavSubItems":false}]},"topicConfig":{"API Overview":{"id":"api-overview","label":"A"},"API Queries":{"id":"queries","label":"B"},"API Mutations":{"id":"mutations","label":"C"},"API Types":{"id":"types","label":"D"},"CLI Commands":{"id":"cli-commands","label":"E"}}},"Changelog":{"_type":"MultiPageSectionMDXNav","href":"/changelog","contentTree":{"2024-06":[{"title":"Projects","anchor":"2024-06-projects","label":"a","id":"2024-06","hideNavSubItems":false},{"title":"Small improvements","anchor":"2024-06-small-improvements","label":"b","id":"2024-06","hideNavSubItems":false}],"2024-05":[{"title":"SDKs","anchor":"2024-05-sdks","label":"a","id":"2024-05","hideNavSubItems":false},{"title":"Small improvements","anchor":"2024-05-small-improvements","label":"b","id":"2024-05","hideNavSubItems":false}],"2024-04":[{"title":"Scenes","anchor":"2024-04-scenes","label":"a","id":"2024-04","hideNavSubItems":false},{"title":"Small improvements","anchor":"2024-04-small-improvements","label":"b","id":"2024-04","hideNavSubItems":false}],"2024-03":[{"title":"AI Ledger Design","anchor":"2024-03-ai-ledger-design","label":"a","id":"2024-03","hideNavSubItems":false},{"title":"Small improvements","anchor":"2024-03-small-improvements","label":"b","id":"2024-03","hideNavSubItems":false}],"2024-02":[{"title":"Stripe Link","anchor":"2024-02-stripe-link","label":"a","id":"2024-02","hideNavSubItems":false},{"title":"Schema Flexibility","anchor":"2024-02-schema-flexibility","label":"b","id":"2024-02","hideNavSubItems":false},{"title":"Small improvements","anchor":"2024-02-small-improvements","label":"c","id":"2024-02","hideNavSubItems":false}],"2024-01":[{"title":"Entry Groups","anchor":"2024-01-entry-groups","label":"a","id":"2024-01","hideNavSubItems":false},{"title":"Ledger designer","anchor":"2024-01-ledger-designer","label":"b","id":"2024-01","hideNavSubItems":false},{"title":"Small improvements","anchor":"2024-01-small-improvements","label":"c","id":"2024-01","hideNavSubItems":false}],"2023-12-19":[{"title":"Entry Conditions on any Ledger Account","anchor":"2023-12-19-entry-conditions-on-any-ledger-account","label":"a","id":"2023-12-19","hideNavSubItems":false}],"2023-11-30":[{"title":"Ledger Entry Tags","anchor":"2023-11-30-ledger-entry-tags","label":"a","id":"2023-11-30","hideNavSubItems":false}],"2023-10-17":[{"title":"Reconciliation Queries","anchor":"2023-10-17-reconciliation-queries","label":"a","id":"2023-10-17","hideNavSubItems":false}],"2023-10-03":[{"title":"List Query Consistency","anchor":"2023-10-03-list-query-consistency","label":"a","id":"2023-10-03","hideNavSubItems":false}],"2023-09-29":[{"title":"New Docs Site","anchor":"2023-09-29-new-docs-site","label":"a","id":"2023-09-29","hideNavSubItems":false}],"2023-08-11":[{"title":"Entry Conditions","anchor":"2023-08-11-entry-conditions","label":"a","id":"2023-08-11","hideNavSubItems":false}],"2023-07-19":[{"title":"New Dashboard","anchor":"2023-07-19-new-dashboard","label":"a","id":"2023-07-19","hideNavSubItems":false}],"2023-06-28":[{"title":"Status Page","anchor":"2023-06-28-status-page","label":"a","id":"2023-06-28","hideNavSubItems":false}],"2023-03-29":[{"title":"Unit Native Links","anchor":"2023-03-29-unit-native-links","label":"a","id":"2023-03-29","hideNavSubItems":false}],"2023-03-20":[{"title":"Ledger Schemas","anchor":"2023-03-20-ledger-schemas","label":"a","id":"2023-03-20","hideNavSubItems":false}],"2022-12-20":[{"title":"multi Currency Mode","anchor":"2022-12-20-multi-currency-mode","label":"a","id":"2022-12-20","hideNavSubItems":false}],"2022-11-14":[{"title":"S3 Data Export","anchor":"2022-11-14-s3-data-export","label":"a","id":"2022-11-14","hideNavSubItems":false}]},"topicConfig":{"2024-06":{"id":"2024-06","label":"A"},"2024-05":{"id":"2024-05","label":"B"},"2024-04":{"id":"2024-04","label":"C"},"2024-03":{"id":"2024-03","label":"D"},"2024-02":{"id":"2024-02","label":"E"},"2024-01":{"id":"2024-01","label":"F"},"2023-12-19":{"id":"2023-12-19","label":"G"},"2023-11-30":{"id":"2023-11-30","label":"H"},"2023-10-17":{"id":"2023-10-17","label":"I"},"2023-10-03":{"id":"2023-10-03","label":"J"},"2023-09-29":{"id":"2023-09-29","label":"K"},"2023-08-11":{"id":"2023-08-11","label":"L"},"2023-07-19":{"id":"2023-07-19","label":"M"},"2023-06-28":{"id":"2023-06-28","label":"N"},"2023-03-29":{"id":"2023-03-29","label":"O"},"2023-03-20":{"id":"2023-03-20","label":"P"},"2022-12-20":{"id":"2022-12-20","label":"Q"},"2022-11-14":{"id":"2022-11-14","label":"R"}}}},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      a: \"a\",\n      div: \"div\",\n      code: \"code\",\n      ul: \"ul\",\n      li: \"li\",\n      ol: \"ol\"\n    }, _provideComponents(), props.components), {TopicContainer, InlineLogo, AnimatedDiagram, UnorderedListNoSpacing, ListItem, Page, Diagram, AccountTypes, AccountingEquationInline, CodeBlock, Subpage} = _components;\n    if (!AccountTypes) _missingMdxReference(\"AccountTypes\", true);\n    if (!AccountingEquationInline) _missingMdxReference(\"AccountingEquationInline\", true);\n    if (!AnimatedDiagram) _missingMdxReference(\"AnimatedDiagram\", true);\n    if (!CodeBlock) _missingMdxReference(\"CodeBlock\", true);\n    if (!Diagram) _missingMdxReference(\"Diagram\", true);\n    if (!InlineLogo) _missingMdxReference(\"InlineLogo\", true);\n    if (!ListItem) _missingMdxReference(\"ListItem\", true);\n    if (!Page) _missingMdxReference(\"Page\", true);\n    if (!Subpage) _missingMdxReference(\"Subpage\", true);\n    if (!TopicContainer) _missingMdxReference(\"TopicContainer\", true);\n    if (!UnorderedListNoSpacing) _missingMdxReference(\"UnorderedListNoSpacing\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(TopicContainer, {\n        label: \"A\",\n        title: \"Introduction\",\n        id: \"introduction\",\n        children: [_jsxs(_components.p, {\n          children: [_jsx(InlineLogo, {}), \" is a toolkit for building products that move and track money. It includes an API and Dashboard for designing, implementing, and operating your Ledger.\"]\n        }), _jsx(AnimatedDiagram, {\n          type: \"intro\"\n        }), _jsxs(_components.p, {\n          children: [\"Don't have a \", _jsx(InlineLogo, {}), \" workspace? \", _jsx(_components.a, {\n            href: \"/get-access\",\n            children: \"Get access\"\n          }), \".\"]\n        })]\n      }), \"\\n\", _jsxs(TopicContainer, {\n        label: \"B\",\n        title: \"Design your Ledger\",\n        id: \"design-your-ledger\",\n        children: [_jsx(_components.p, {\n          children: \"A Ledger uses a Schema to define functionality for a specific product and use case. A Schema may be shared across multiple Ledgers. Updating a Schema will trigger migrations to update each Ledger.\\nUse the Ledger designer in the Dashboard to model and store your Schema.\"\n        }), _jsx(AnimatedDiagram, {\n          type: \"api-overview\"\n        }), _jsx(_components.p, {\n          children: \"Ledgers track money using:\"\n        }), _jsxs(UnorderedListNoSpacing, {\n          children: [_jsx(ListItem, {\n            children: \"Ledger Accounts, balances that represent the financial state of a business\"\n          }), \"\\n\", _jsx(ListItem, {\n            children: \"Ledger Entries, financial events that update Ledger Accounts\"\n          })]\n        }), _jsxs(Page, {\n          id: \"design-your-ledger-ledger-accounts\",\n          title: \"Ledger Accounts\",\n          label: \"a\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"A Ledger Account has a balance. Changes to a Ledger Account's balance are called Ledger Lines.\"\n          }), _jsx(Diagram, {\n            type: \"linesAndBalances\"\n          }), _jsx(_components.p, {\n            children: \"There are four types of Ledger Accounts, split into two layers:\"\n          }), _jsx(AccountTypes, {}), _jsxs(_components.p, {\n            children: [\"State Ledger Accounts track your product's financial relationships with your bank, payment systems and users. \", _jsx(_components.a, {\n              href: \"#generate-reports-balance-sheet\",\n              children: \"Balance Sheets\"\n            }), \" are a report of State Ledger Account balances.\"]\n          }), _jsxs(_components.p, {\n            children: [\"Change Ledger Accounts track when and how your product makes a profit or loss. They produce \", _jsx(_components.a, {\n              href: \"#generate-reports-income-statement\",\n              children: \"Income Statements\"\n            }), \".\"]\n          }), _jsxs(_components.p, {\n            children: [\"Within a Schema, the \", _jsx(_components.code, {\n              children: \"chartOfAccounts\"\n            }), \" key contains a nested tree of Ledger Accounts, up to a maximum depth of 10:\"]\n          }), _jsx(Diagram, {\n            type: \"chartOfAccounts\"\n          }), _jsxs(_components.p, {\n            children: [\"Ledger Accounts that share a parent require a unique \", _jsx(_components.code, {\n              children: \"key\"\n            }), \", but the same \", _jsx(_components.code, {\n              children: \"key\"\n            }), \" can be used in different parts of the tree.\"]\n          }), _jsx(_components.p, {\n            children: \"For some Ledger Accounts, you must set additional properties:\"\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"linkedAccount\"\n              }), \" enables \", _jsx(_components.a, {\n                href: \"#reconcile-transactions\",\n                children: \"reconciliation\"\n              }), \" with an external system\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"template\"\n              }), \" allows multiple instances to be created on demand\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"currencyMode\"\n              }), \" configures the account's \", _jsx(_components.a, {\n                href: \"#handle-currencies\",\n                children: \"currency mode\"\n              }), \", \", _jsx(_components.code, {\n                children: \"single\"\n              }), \" or \", _jsx(_components.code, {\n                children: \"multi\"\n              })]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"consistencyConfig\"\n              }), \" configures the whether the Ledger Account's balances and Ledger Lines are strongly or eventually \", _jsx(_components.a, {\n                href: \"#configure-consistency\",\n                children: \"consistent\"\n              })]\n            }), \"\\n\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"design-your-ledger-ledger-entries\",\n          title: \"Ledger Entries\",\n          label: \"b\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"A Ledger Entry is a single update to a Ledger. Define a Ledger Entry type in your Schema for every financial event in your product and bank.\"\n          }), _jsx(Diagram, {\n            type: \"entry\"\n          }), _jsx(_components.p, {\n            children: \"A Ledger Entry must be balanced, which means it follows the Accounting Equation:\"\n          }), _jsx(\"br\", {}), _jsx(AccountingEquationInline, {}), _jsx(\"br\", {}), _jsx(Diagram, {\n            type: \"accountingEquation\"\n          }), _jsx(_components.p, {\n            children: \"How you balance a Ledger Entry depends upon its net effect to the Ledger's balances.\"\n          }), _jsx(_components.p, {\n            children: \"When the net change to the State Ledger Accounts is zero, the financial event being recorded did not change the net worth of the business. In this example, an increase to an asset account is balanced by an increase in a liability account:\"\n          }), _jsx(Diagram, {\n            type: \"entryBalancingStateLayer\"\n          }), _jsx(_components.p, {\n            children: \"When the net change to the State Ledger Accounts is non-zero, the financial event being recorded made a profit or loss. In this example, a difference in asset and liability accounts is balanced by an increase in an income account.\"\n          }), _jsx(Diagram, {\n            type: \"entryBalancingStateAndWealthLayer\"\n          })]\n        })]\n      }), \"\\n\", _jsxs(TopicContainer, {\n        label: \"C\",\n        title: \"Deploy your Ledger\",\n        id: \"deploy-your-ledger\",\n        children: [_jsx(_components.p, {\n          children: \"Once you've designed your Ledger, you can deploy it using the dashboard, the API, or by embedding our CLI in your CI.\"\n        }), _jsx(AnimatedDiagram, {\n          type: \"deploy-your-ledger\"\n        }), _jsxs(Page, {\n          id: \"deploy-your-ledger-dashboard\",\n          title: \"Dashboard\",\n          label: \"a\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"You can edit and store your Schema and create Ledgers directly from the \", _jsx(InlineLogo, {}), \" Dashboard. This is useful during development, but is not recommended for production workflows.\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"deploy-your-ledger-api\",\n          title: \"API\",\n          label: \"b\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"You can call the API to store your Schema and create Ledgers. This is useful if you want to automate your Ledger deployment or have multiple environments which you want to keep in-sync. If you are creating many Schemas and Ledgers, you can also call the \", _jsx(_components.code, {\n              children: \"storeSchema\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"createLedger\"\n            }), \" APIs directly from your product.\"]\n          }), _jsxs(_components.p, {\n            children: [\"Call \", _jsx(_components.code, {\n              children: \"storeSchema\"\n            }), \" to store a Schema. Depending on your use case, you may share one Schema for all your users, or create a Schema per user.\"]\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            title: \"storeSchema query\",\n            children: `mutation QuickstartStoreSchema($schema: SchemaInput!) {\n  storeSchema(schema: $schema) {\n    ... on StoreSchemaResult {\n      schema {\n        key\n        name\n        version {\n          version\n          created\n          json\n        }\n      }\n    }\n    ... on Error {\n      code\n      message\n    }\n  }\n}`\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            expandable: true,\n            title: \"storeSchema variables\",\n            children: `{\n  \"schema\": {\n    \"key\": \"quickstart-schema\",\n    \"name\": \"Quickstart Schema\",\n    \"chartOfAccounts\": {\n      \"defaultCurrency\": {\n        \"code\": \"USD\"\n      },\n      \"defaultCurrencyMode\": \"single\",\n      \"accounts\": [\n        {\n          \"key\": \"assets\",\n          \"type\": \"asset\",\n          \"children\": [\n            {\n              \"key\": \"banks\",\n              \"children\": [\n                {\n                  \"key\": \"user-cash\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"key\": \"liabilities\",\n          \"type\": \"liability\",\n          \"children\": [\n            {\n              \"key\": \"users\",\n              \"template\": true,\n              \"consistencyConfig\": {\n                \"ownBalanceUpdates\": \"strong\"\n              },\n              \"children\": [\n                {\n                  \"key\": \"available\"\n                },\n                {\n                  \"key\": \"pending\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"key\": \"income\",\n          \"type\": \"income\"\n        },\n        {\n          \"key\": \"expense\",\n          \"type\": \"expense\",\n          \"children\": []\n        }\n      ]\n    },\n    \"ledgerEntries\": {\n      \"types\": [\n        {\n          \"type\": \"user_funds_account\",\n          \"description\": \"Funding {{user_id}} for {{funding_amount}}.\",\n          \"lines\": [\n            {\n              \"account\": { \"path\": \"assets/banks/user-cash\" },\n              \"key\": \"funds_arrive_in_bank\",\n              \"amount\": \"{{funding_amount}}\"\n            },\n            {\n              \"account\": { \"path\": \"liabilities/users:{{user_id}}/available\" },\n              \"key\": \"increase_user_balance\",\n              \"amount\": \"{{funding_amount}}\"\n            }\n          ]\n        },\n        {\n          \"type\": \"p2p_transfer\",\n          \"description\": \"P2P of {{transfer_amount}} from {{from_user_id}} to {{to_user_id}}.\",\n          \"lines\": [\n            {\n              \"account\": {\n                \"path\": \"liabilities/users:{{from_user_id}}/available\"\n              },\n              \"key\": \"decrease_from_user\",\n              \"amount\": \"-{{transfer_amount}}\"\n            },\n            {\n              \"account\": { \"path\": \"liabilities/users:{{to_user_id}}/available\" },\n              \"key\": \"increase_to_user\",\n              \"amount\": \"{{transfer_amount}}\"\n            }\n          ],\n          \"conditions\": [\n            {\n              \"account\": {\n                \"path\": \"liabilities/users:{{from_user_id}}/available\"\n              },\n              \"postcondition\": {\n                \"ownBalance\": {\n                  \"gte\": \"0\"\n                }\n              }\n            }\n          ]\n        }\n      ]\n    }\n  }\n}`\n          }), _jsxs(_components.p, {\n            children: [\"Create a Ledger using the \", _jsx(_components.code, {\n              children: \"createLedger\"\n            }), \" mutation.\"]\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            title: \"createLedger\",\n            children: `mutation QuickstartCreateLedger(\n  $ik: SafeString!\n  $ledger: CreateLedgerInput!\n  $schema: SchemaMatchInput\n) {\n  createLedger(\n    ik: $ik,\n    ledger: $ledger,\n    schema:$schema\n  ) {\n    ... on CreateLedgerResult {\n      ledger {\n        ik\n        name\n        created\n        schema {\n          key\n        }\n      }\n    }\n    ... on Error {\n      code\n      message\n    }\n  }\n}`\n          }), _jsxs(_components.p, {\n            children: [\"The \", _jsx(_components.code, {\n              children: \"schema.key\"\n            }), \" field is set to the \", _jsx(_components.code, {\n              children: \"key\"\n            }), \" from the \", _jsx(_components.code, {\n              children: \"storeSchema\"\n            }), \" API call.\"]\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"createLedger variables\",\n            children: `{\n  \"ik\": \"quickstart-ledger\",\n  \"ledger\": {\n    \"name\": \"Quickstart Ledger\"\n  },\n  \"schema\": {\n    \"key\": \"quickstart-schema\"\n  }\n}`\n          })]\n        }), _jsxs(Page, {\n          id: \"deploy-your-ledger-cli\",\n          title: \"CLI\",\n          label: \"c\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"The \", _jsx(InlineLogo, {}), \" CLI can be installed in your CI and used to store your Schema.\"]\n          }), _jsx(_components.p, {\n            children: \"Here's an example of how you can use the CLI in a Github Action workflow:\"\n          }), _jsx(CodeBlock, {\n            language: \"plaintext\",\n            expandable: true,\n            title: \"Fragment CLI in Github Actions\",\n            children: `- name: Set up Homebrew\n  id: set-up-homebrew\n  uses: Homebrew/actions/setup-homebrew@master\n- name: Install Fragment CLI\n  run: |\n    brew tap fragment-dev/tap\n    brew install fragment-dev/tap/fragment-cli\n    echo \"Fragment CLI installed\"\n- name: Authenticate with Fragment\n  run: |\n    fragment login \\\\\n      --client-id \\${{ vars.FRAGMENT_CLIENT_ID }} \\\\\n      --client-secret \\${{ vars.FRAGMENT_CLIENT_SECRET }} \\\\\n      --api-url \\${{ vars.FRAGMENT_API_URL }} \\\\\n      --oauth-url \\${{ vars.FRAGMENT_OAUTH_URL }} \\\\\n      --oauth-scope \\${{ vars.FRAGMENT_OAUTH_SCOPE }}\n- name: Store Schema\n  run: |\n    fragment store-schema --path my-schema.jsonc\n`\n          }), _jsxs(_components.p, {\n            children: [\"Read the \", _jsx(_components.a, {\n              href: \"/api-reference#cli-commands\",\n              children: \"CLI Command Reference\"\n            }), \" to learn more about the \", _jsx(InlineLogo, {}), \" CLI.\"]\n          })]\n        })]\n      }), \"\\n\", _jsxs(TopicContainer, {\n        label: \"D\",\n        title: \"Install the SDK\",\n        id: \"install-the-sdk\",\n        children: [_jsxs(_components.p, {\n          children: [_jsx(InlineLogo, {}), \" publishes SDKs in TypeScript, Go, and Ruby. The SDKs are open-source, implement authentication, and come with predefined GraphQL queries to help you get started.\"]\n        }), _jsxs(Page, {\n          id: \"install-the-sdk-setup-the-cli\",\n          title: \"Setup the CLI\",\n          label: \"a\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"The \", _jsx(InlineLogo, {}), \" CLI is used to generate GraphQL queries specific to your Schema. The SDKs use the generated queries to give you a strongly-typed interface for posting Ledger Entries defined in your Ledger.\"]\n          }), _jsxs(_components.p, {\n            children: [\"Install the CLI using \", _jsx(_components.a, {\n              href: \"https://brew.sh/\",\n              children: \"Homebrew\"\n            }), \":\"]\n          }), _jsx(CodeBlock, {\n            language: \"plaintext\",\n            children: `brew tap fragment-dev/tap \u0026\u0026\\\\\n  brew install fragment-dev/tap/fragment-cli`\n          }), _jsxs(_components.p, {\n            children: [\"Authenticate the CLI to your \", _jsx(InlineLogo, {}), \" workspace, run the \", _jsx(_components.code, {\n              children: \"login\"\n            }), \" command:\"]\n          }), _jsx(CodeBlock, {\n            language: \"plaintext\",\n            children: `fragment login`\n          })]\n        }), _jsxs(Page, {\n          id: \"install-the-sdk-typescript\",\n          title: \"TypeScript\",\n          label: \"b\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"The TypeScript Node SDK is available at \", _jsx(_components.code, {\n              children: \"@fragment-dev/node-client\"\n            }), \".\"]\n          }), _jsx(CodeBlock, {\n            language: \"plaintext\",\n            title: \"Using npm\",\n            children: `npm install --save @fragment-dev/node-client`\n          }), _jsx(CodeBlock, {\n            language: \"plaintext\",\n            title: \"Using yarn\",\n            children: `yarn add @fragment-dev/node-client`\n          }), _jsxs(_components.p, {\n            children: [\"Create an API client in the \", _jsx(InlineLogo, {}), \" \", _jsx(_components.a, {\n              href: \"https://dashboard.fragment.dev/go/s/api-clients\",\n              children: \"dashboard\"\n            }), \". Initialize the SDK using the credentials:\"]\n          }), _jsx(CodeBlock, {\n            language: \"typescript\",\n            children: `import {\n  createFragmentClient\n} from '@fragment-dev/node-client';\n\nconst fragment = createFragmentClient({\n  params: {\n    clientId: \"\\\u003cClient ID\\\u003e\",\n    clientSecret: \"\\\u003cClient Secret\\\u003e\",\n    apiUrl: \"\\\u003cAPI URL\\\u003e\",\n    authUrl: \"\\\u003cOAuth URL\\\u003e\",\n    scope: \"\\\u003cOAuth Scope\\\u003e\",\n  },\n});\n\n// Verify the SDK is authenticated by retrieving\n// the workspace\nconst { workspace } = await fragment.getWorkspace();\nconsole.log('Workspace Name:', workspace.name);\n`\n          }), _jsxs(_components.p, {\n            children: [\"Read the SDK's \", _jsx(_components.a, {\n              href: \"https://github.com/fragment-dev/node-client/blob/dev/README.md\",\n              children: \"README\"\n            }), \" for additional code examples.\"]\n          }), _jsxs(Subpage, {\n            title: \"Generate Queries\",\n            id: \"install-the-sdk-typescript-generate-queries\",\n            children: [_jsx(_components.p, {\n              children: \"This workflow is a two-step process:\"\n            }), _jsxs(_components.ol, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Use the CLI to generate GraphQL queries.\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Use the SDK to translate these queries to a TypeScript GraphQL client you can embed within your application.\"\n              }), \"\\n\"]\n            }), _jsxs(_components.p, {\n              children: [\"Run the \", _jsx(_components.code, {\n                children: \"get-schema\"\n              }), \" CLI command to download your Schema locally to \", _jsx(_components.code, {\n                children: \"fragment/schema.jsonc\"\n              }), \":\"]\n            }), _jsx(CodeBlock, {\n              language: \"plaintext\",\n              children: `fragment get-schema --output=fragment/schema.jsonc`\n            }), _jsxs(_components.p, {\n              children: [\"Run the \", _jsx(_components.code, {\n                children: \"gen-graphql\"\n              }), \" CLI command to generate the GraphQL queries:\"]\n            }), _jsx(CodeBlock, {\n              language: \"plaintext\",\n              children: `fragment gen-graphql \\\\\n  --path=fragment/schema.jsonc \\\\\n  --output=fragment/queries.graphql`\n            }), _jsxs(_components.p, {\n              children: [\"This will create a \", _jsx(_components.code, {\n                children: \"queries.graphql\"\n              }), \" file which you will use to generate the GraphQL client.\"]\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Generate Client\",\n            id: \"install-the-sdk-typescript-generate-client\",\n            children: [_jsx(_components.p, {\n              children: \"Run the TypeScript codegen to generate the GraphQL client code:\"\n            }), _jsx(CodeBlock, {\n              language: \"plaintext\",\n              title: \"Using npx\",\n              children: `npx fragment-node-client-codegen \\\\\n  --input=fragment/queries.graphql \\\\\n  --outputFilename=fragment/fragment-client.ts`\n            }), _jsx(CodeBlock, {\n              language: \"plaintext\",\n              title: \"Using yarn\",\n              children: `yarn fragment-node-client-codegen \\\\\n  --input=fragment/queries.graphql \\\\\n  --outputFilename=fragment/fragment-client.ts`\n            }), _jsxs(_components.p, {\n              children: [\"Pass the \", _jsx(_components.code, {\n                children: \"getSdk\"\n              }), \" function from the generated file to \", _jsx(_components.code, {\n                children: \"createFragmentClient\"\n              }), \" to use the queries:\"]\n            }), _jsx(CodeBlock, {\n              language: \"typescript\",\n              children: `import {\n  createFragmentClient\n} from \"@fragment-dev/node-client\";\n\nimport {\n  getSdk\n} from './fragment/fragment-client';\n\nconst fragment = createFragmentClient({\n  params: {\n    clientId: \"\\\u003cClient ID\\\u003e\",\n    clientSecret: \"\\\u003cClient Secret\\\u003e\",\n    apiUrl: \"\\\u003cAPI URL\\\u003e\",\n    authUrl: \"\\\u003cOAuth URL\\\u003e\",\n    scope: \"\\\u003cOAuth Scope\\\u003e\",\n  },\n  getSdk,\n});\n\n// The returned client includes the\n// pre-defined queries as well as\n// the queries generated by the CLI.\nawait fragment.Post_YourLedgerEntry({});`\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"install-the-sdk-go\",\n          title: \"Go\",\n          label: \"c\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"The Go SDK is available at \", _jsx(_components.code, {\n              children: \"github.com/fragment-dev/fragment-go\"\n            }), \".\"]\n          }), _jsx(_components.p, {\n            children: \"To install, run:\"\n          }), _jsx(CodeBlock, {\n            language: \"plaintext\",\n            children: `go get 'github.com/fragment-dev/fragment-go'`\n          }), _jsxs(_components.p, {\n            children: [\"Create an API client in the \", _jsx(InlineLogo, {}), \" \", _jsx(_components.a, {\n              href: \"https://dashboard.fragment.dev/go/s/api-clients\",\n              children: \"dashboard\"\n            }), \". Initialize the SDK using the credentials:\"]\n          }), _jsx(CodeBlock, {\n            language: \"go\",\n            children: `package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/fragment-dev/fragment-go/auth\"\n  \"github.com/fragment-dev/fragment-go/queries\"\n)\n\nfunc main() {\n  ctx, err := auth.GetAuthenticatedContext(\n    context.Background(),\n    \u0026auth.GetTokenParams{\n      ClientID: \"\\\u003cClient ID\\\u003e\",\n      ClientSecret: \"\\\u003cClient Secret\\\u003e\",\n      ApiUrl: \"\\\u003cAPI URL\\\u003e\",\n      AuthUrl: \"\\\u003cOAuth URL\\\u003e\",\n      Scope: \"\\\u003cOAuth Scope\\\u003e\",\n    }\n  )\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n\n  // Verify the SDK is authenticated by retrieving\n  // the workspace\n  response, _ := queries.GetWorkspace(ctx)\n}`\n          }), _jsxs(_components.p, {\n            children: [\"Read the SDK's \", _jsx(_components.a, {\n              href: \"https://github.com/fragment-dev/fragment-go/blob/dev/README.md\",\n              children: \"README\"\n            }), \" for additional code examples.\"]\n          }), _jsxs(Subpage, {\n            title: \"Generate Queries\",\n            id: \"install-the-sdk-go-generate-queries\",\n            children: [_jsx(_components.p, {\n              children: \"This workflow is a two-step process:\"\n            }), _jsxs(_components.ol, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Use the CLI to generate GraphQL queries.\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Use the SDK to translate these queries to methods you can embed within your application.\"\n              }), \"\\n\"]\n            }), _jsxs(_components.p, {\n              children: [\"Run the \", _jsx(_components.code, {\n                children: \"get-schema\"\n              }), \" CLI command to download your Schema locally to \", _jsx(_components.code, {\n                children: \"fragment/schema.jsonc\"\n              }), \":\"]\n            }), _jsx(CodeBlock, {\n              language: \"plaintext\",\n              children: `fragment get-schema --output=fragment/schema.jsonc`\n            }), _jsxs(_components.p, {\n              children: [\"Run the \", _jsx(_components.code, {\n                children: \"gen-graphql\"\n              }), \" CLI command to generate the GraphQL queries:\"]\n            }), _jsx(CodeBlock, {\n              language: \"plaintext\",\n              children: `fragment gen-graphql \\\\\n  --path=fragment/schema.jsonc \\\\\n  --output=fragment/queries.graphql`\n            }), _jsxs(_components.p, {\n              children: [\"This will create a \", _jsx(_components.code, {\n                children: \"queries.graphql\"\n              }), \" file which you will use to generate the corresponding Go methods.\"]\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Generate Code\",\n            id: \"install-the-sdk-go-generate-code\",\n            children: [_jsx(_components.p, {\n              children: \"Run the Go SDK codegen to generate methods for each GraphQL query:\"\n            }), _jsx(CodeBlock, {\n              language: \"plaintext\",\n              children: `go run github.com/fragment-dev/fragment-go \\\\\n  --input=fragment/queries.graphql \\\\\n  --output=fragment/generated.go \\\\\n  --package=main`\n            }), _jsxs(_components.p, {\n              children: [\"You can then issue the GraphQL request from your \", _jsx(_components.code, {\n                children: \"main\"\n              }), \" package:\"]\n            }), _jsx(CodeBlock, {\n              language: \"go\",\n              children: `package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/fragment-dev/fragment-go/auth\"\n)\n\nfunc main() {\n  ctx, err := auth.GetAuthenticatedContext(\n    context.Background(),\n    \u0026auth.GetTokenParams{\n      ClientID: \"\\\u003cClient ID\\\u003e\",\n      ClientSecret: \"\\\u003cClient Secret\\\u003e\",\n      ApiUrl: \"\\\u003cAPI URL\\\u003e\",\n      AuthUrl: \"\\\u003cOAuth URL\\\u003e\",\n      Scope: \"\\\u003cOAuth Scope\\\u003e\",\n    }\n  )\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n\n  response, _ := Post_YourLedgerEntryType(\n    ctx,\n    ...\n  )\n}`\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"install-the-sdk-ruby\",\n          title: \"Ruby\",\n          label: \"d\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"The Ruby SDK is available at \", _jsx(_components.code, {\n              children: \"fragment-dev\"\n            }), \".\"]\n          }), _jsx(_components.p, {\n            children: \"To install, run:\"\n          }), _jsx(CodeBlock, {\n            language: \"plaintext\",\n            children: `gem install fragment-dev`\n          }), _jsxs(_components.p, {\n            children: [\"Create an API client in the \", _jsx(InlineLogo, {}), \" \", _jsx(_components.a, {\n              href: \"https://dashboard.fragment.dev/go/s/api-clients\",\n              children: \"dashboard\"\n            }), \". Initialize the SDK using the credentials:\"]\n          }), _jsx(CodeBlock, {\n            language: \"ruby\",\n            children: `require 'fragment_client'\n\nfragment = FragmentClient.new(\n  \"\\\u003cClient ID\\\u003e\",\n  \"\\\u003cClient Secret\\\u003e\",\n  api_url: \"\\\u003cAPI URL\\\u003e\",\n  oauth_url: \"\\\u003cOAuth URL\\\u003e\",\n  oauth_scope: \"\\\u003cOAuth Scope\\\u003e\"\n)\n\n// Verify the SDK is authenticated by retrieving\n// the workspace\nworkspace = fragment.get_workspace()\n`\n          }), _jsxs(_components.p, {\n            children: [\"Read the SDK's \", _jsx(_components.a, {\n              href: \"https://github.com/fragment-dev/fragment-ruby/blob/dev/README.md\",\n              children: \"README\"\n            }), \" for additional code examples.\"]\n          }), _jsxs(Subpage, {\n            title: \"Generate Queries\",\n            id: \"install-the-sdk-ruby-generate-queries\",\n            children: [_jsx(_components.p, {\n              children: \"This workflow is a two-step process:\"\n            }), _jsxs(_components.ol, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Use the CLI to generate GraphQL queries.\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Use the SDK to translate these queries to methods you can embed within your application.\"\n              }), \"\\n\"]\n            }), _jsxs(_components.p, {\n              children: [\"Run the \", _jsx(_components.code, {\n                children: \"get-schema\"\n              }), \" CLI command to download your Schema locally to \", _jsx(_components.code, {\n                children: \"fragment/schema.jsonc\"\n              }), \":\"]\n            }), _jsx(CodeBlock, {\n              language: \"plaintext\",\n              children: `fragment get-schema --output=fragment/schema.jsonc`\n            }), _jsxs(_components.p, {\n              children: [\"Run the \", _jsx(_components.code, {\n                children: \"gen-graphql\"\n              }), \" CLI command to generate the GraphQL queries:\"]\n            }), _jsx(CodeBlock, {\n              language: \"plaintext\",\n              children: `fragment gen-graphql \\\\\n  --path=fragment/schema.jsonc \\\\\n  --output=fragment/queries.graphql`\n            }), _jsxs(_components.p, {\n              children: [\"This will create a \", _jsx(_components.code, {\n                children: \"queries.graphql\"\n              }), \" file which you will provide as input to \", _jsx(_components.code, {\n                children: \"FragmentClient\"\n              }), \".\"]\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Use custom queries\",\n            id: \"install-the-sdk-ruby-use-custom-queries\",\n            children: [_jsxs(_components.p, {\n              children: [\"Initialize \", _jsx(_components.code, {\n                children: \"FragmentClient\"\n              }), \" with the \", _jsx(_components.code, {\n                children: \"extra_queries_filenames\"\n              }), \" keyword argument set to the path of the generated \", _jsx(_components.code, {\n                children: \"queries.graphql\"\n              }), \" file:\"]\n            }), _jsx(CodeBlock, {\n              language: \"ruby\",\n              children: `require 'fragment_client'\n\nfragment = FragmentClient.new(\n  \"\\\u003cClient ID\\\u003e\",\n  \"\\\u003cClient Secret\\\u003e\",\n  api_url: \"\\\u003cAPI URL\\\u003e\",\n  oauth_url: \"\\\u003cOAuth URL\\\u003e\",\n  oauth_scope: \"\\\u003cOAuth Scope\\\u003e\",\n  extra_queries_filenames:\n    [\"path/to/queries.graphql\"]\n)\n\nfragment.post_your_ledger_entry_type()`\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"install-the-sdk-other-languages\",\n          title: \"Other Languages\",\n          label: \"e\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [_jsx(InlineLogo, {}), \" exposes a GraphQL API to write and read your data. The latest GraphQL schema is hosted at:\"]\n          }), _jsx(CodeBlock, {\n            language: \"bash\",\n            children: `https://api.fragment.dev/schema.graphql`\n          }), _jsx(_components.p, {\n            children: \"To create an SDK in a language not listed above:\"\n          }), _jsxs(_components.ol, {\n            children: [\"\\n\", _jsxs(_components.li, {\n              children: [\"Use the \", _jsx(InlineLogo, {}), \" CLI to generate GraphQL queries from your Schema\"]\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Generate an SDK using a GraphQL codegen tool for your langauge\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Implement authentication, retry and error handling logic\"\n            }), \"\\n\"]\n          }), _jsxs(Subpage, {\n            title: \"Generate Queries\",\n            id: \"install-the-sdk-other-languages-generate-queries\",\n            children: [_jsxs(_components.p, {\n              children: [\"Run the \", _jsx(_components.code, {\n                children: \"get-schema\"\n              }), \" CLI command to download your Schema locally to \", _jsx(_components.code, {\n                children: \"fragment/schema.jsonc\"\n              }), \":\"]\n            }), _jsx(CodeBlock, {\n              language: \"plaintext\",\n              children: `fragment get-schema --output=fragment/schema.jsonc`\n            }), _jsxs(_components.p, {\n              children: [\"Run the \", _jsx(_components.code, {\n                children: \"gen-graphql\"\n              }), \" CLI command to generate the GraphQL queries:\"]\n            }), _jsx(CodeBlock, {\n              language: \"plaintext\",\n              children: `fragment gen-graphql \\\\\n  --path=fragment/schema.jsonc \\\\\n  --output=fragment/queries.graphql`\n            }), _jsxs(_components.p, {\n              children: [\"Provide the optional \", _jsx(_components.code, {\n                children: \"--include-standard-queries\"\n              }), \" flag to include the set of standard GraphQL queries in the output.\"]\n            }), _jsxs(_components.p, {\n              children: [\"This will create a \", _jsx(_components.code, {\n                children: \"queries.graphql\"\n              }), \" file which you will provide as input to your codegen tool.\"]\n            }), _jsxs(_components.p, {\n              children: [\"Some codegen tools require each GraphQL query to be in a separate file. You can use the \", _jsx(_components.code, {\n                children: \"--output-file-per-query\"\n              }), \" flag:\"]\n            }), _jsx(CodeBlock, {\n              language: \"bash\",\n              children: `fragment gen-graphql \\\\\n  --path=fragment/schema.jsonc \\\\\n  --output=fragment/queries \\\\\n  --output-file-per-query`\n            })]\n          }), _jsx(Subpage, {\n            title: \"Generate SDK\",\n            id: \"install-the-sdk-other-languages-generate-sdk\",\n            children: _jsxs(_components.p, {\n              children: [\"Use a GraphQL codegen tool to generate the SDK. A list of clients is available on the \", _jsx(_components.a, {\n                href: \"https://graphql.org/community/tools-and-libraries/?tags=client\",\n                children: \"GraphQL website\"\n              }), \".\"]\n            })\n          }), _jsxs(Subpage, {\n            title: \"Implement logic\",\n            id: \"install-the-sdk-other-languages-implement-logic\",\n            children: [_jsxs(_components.p, {\n              children: [\"You will need to implement authentication by customizing the generated SDK. \", _jsx(InlineLogo, {}), \" uses OAuth2's \", _jsx(_components.a, {\n                href: \"https://www.oauth.com/oauth2-servers/access-tokens/client-credentials/\",\n                children: \"client credentials flow\"\n              }), \" to authenticate API clients. Read the \", _jsx(_components.a, {\n                href: \"/api-reference#api-overview-authentication\",\n                children: \"API Authentication\"\n              }), \" section to learn more.\"]\n            }), _jsxs(_components.p, {\n              children: [\"You should also add support for handling errors and retries. See the \", _jsx(_components.a, {\n                href: \"/api-reference#api-overview-errors\",\n                children: \"API Errors\"\n              }), \" section.\"]\n            })]\n          })]\n        })]\n      }), \"\\n\", _jsxs(TopicContainer, {\n        label: \"E\",\n        title: \"Post Ledger Entries\",\n        id: \"post-ledger-entries\",\n        children: [_jsx(_components.p, {\n          children: \"Posting a Ledger Entry to your Ledger is a two-step process:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Define the structure of the Ledger Entry in your Schema.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Post the Ledger Entry using the API.\"\n          }), \"\\n\"]\n        }), _jsx(Diagram, {\n          type: \"postLedgerEntries\"\n        }), _jsxs(Page, {\n          id: \"post-ledger-entries-schema\",\n          title: \"Schema\",\n          label: \"a\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"Ledger Entries are defined in your Schema under the \", _jsx(_components.code, {\n              children: \"ledgerEntries.types\"\n            }), \" key. Every Ledger Entry has a \", _jsx(_components.code, {\n              children: \"type\"\n            }), \" that must be unique within the Schema.\"]\n          }), _jsx(CodeBlock, {\n            title: \"Ledger Entry definition\",\n            language: \"json\",\n            children: `{\n  \"key\": \"schema-key\",\n  \"chartOfAccounts\": {...},\n  \"ledgerEntries\": {\n    \"types\": [\n      {\n        \"type\": \"user_funds_account\",\n        \"description\": \"Fund {{user_id}} for {{funding_amount}}\",\n        \"lines\": [\n          {\n            \"account\": { \n              \"path\": \"assets/banks/user-cash\"\n            },\n            \"key\": \"funds_arrive_in_bank\",\n            \"amount\": \"{{funding_amount}}\"\n          },\n          {\n            \"account\": { \n              \"path\": \"liabilities/users:{{user_id}}/available\"\n            },\n            \"key\": \"increase_user_balance\",\n            \"amount\": \"{{funding_amount}}\"\n          }\n        ]\n      }\n    ]\n  }\n}`\n          }), _jsxs(_components.p, {\n            children: [\"The amounts of a Ledger Line can be parameterized using \", _jsx(_components.code, {\n              children: \"{{handlebar}}\"\n            }), \" syntax and can contain basic arithmetic (+ or -):\"]\n          }), _jsx(CodeBlock, {\n            title: \"Ledger Entry definition\",\n            language: \"json\",\n            children: `{\n  \"key\": \"schema-key\",\n  \"chartOfAccounts\": {...},\n  \"ledgerEntries\": {\n    \"types\": [\n      {\n        \"type\": \"user_funds_account_with_fee\",\n        \"description\": \"Fund {{user_id}} for {{funding_amount}} with {{fee_amount}} fee\",\n        \"lines\": [\n          {\n            \"account\": { \n              \"path\": \"assets/banks/user-cash\"\n            },\n            \"key\": \"funds_arrive_in_bank\",\n            \"amount\": \"{{funding_amount}}\"\n          },\n          {\n            \"account\": { \n              \"path\": \"liabilities/users:{{user_id}}/available\"\n            },\n            \"key\": \"increase_user_balance\",\n            \"amount\": \"{{funding_amount}} - {{fee_amount}}\"\n          },\n          {\n            \"account\": { \"path\": \"income/funding-fees\" },\n            \"key\": \"take_fee\",\n            \"amount\": \"{{fee_amount}}\"\n          }\n        ]\n      }\n    ]\n  }\n}`\n          }), _jsx(_components.p, {\n            children: \"Ledger Entries must be balanced by the Accounting Equation. If they are not, the Ledger designer throws an error.\"\n          }), _jsx(Diagram, {\n            type: \"accountingEquation\"\n          })]\n        }), _jsxs(Page, {\n          id: \"post-ledger-entries-post-to-the-api\",\n          title: \"Post to the API\",\n          label: \"b\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"Call the \", _jsx(_components.code, {\n              children: \"addLedgerEntry\"\n            }), \" mutation to post a Ledger Entry:\"]\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            expandable: true,\n            title: \"addLedgerEntry mutation\",\n            children: `mutation AddLedgerEntry(\n  $ik: SafeString!\n  $entry: LedgerEntryInput!\n) {\n  addLedgerEntry(\n    ik: $ik,\n    entry: $entry\n  ) {\n    __typename\n    ... on AddLedgerEntryResult {\n      entry {\n        type\n        created\n        posted\n      }\n      lines {\n        amount\n        key\n        description\n        account {\n          path\n        }\n      }\n    }\n    ... on Error {\n      code\n      message\n    }\n  }\n}`\n          }), _jsxs(_components.p, {\n            children: [\"Set the Ledger Entry's \", _jsx(_components.code, {\n              children: \"type\"\n            }), \" and the required \", _jsx(_components.code, {\n              children: \"parameters\"\n            }), \".\"]\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"addLedgerEntry variables\",\n            children: `{\n  \"ik\": \"add-ledger-entry\",\n  \"entry\": {\n    \"ledger\": {\n      \"ik\": \"ledger-ik\"\n    },\n    \"type\": \"user_funds_account\",\n    \"posted\": \"1234-01-01T01:01:01\",\n    \"parameters\": {\n      \"user_id\": \"testing-user\",\n      \"funding_amount\": \"200\"\n    }\n  }\n}`\n          }), _jsx(Subpage, {\n            title: \"Minor Units\",\n            id: \"post-ledger-entries-post-to-the-api-minor-units\",\n            children: _jsxs(_components.p, {\n              children: [\"All numbers in \", _jsx(InlineLogo, {}), \" are integers representing the smallest unit, encoded as strings. For example, USD $2.50 is provided as \\\"250\\\".\"]\n            })\n          }), _jsx(Subpage, {\n            title: \"Tags\",\n            id: \"post-ledger-entries-post-to-the-api-tags\",\n            children: _jsxs(_components.p, {\n              children: [\"You can specify tags on a Ledger Entry to store arbitrary key-value pairs. See \", _jsx(_components.a, {\n                href: \"#store-metadata\",\n                children: \"Store metadata\"\n              }), \".\"]\n            })\n          }), _jsx(Subpage, {\n            title: \"Idempotency\",\n            id: \"post-ledger-entries-post-to-the-api-idempotency\",\n            children: _jsxs(_components.p, {\n              children: [\"To ensure a Ledger Entry is only posted once, provide an Idempotency Key \", _jsx(_components.code, {\n                children: \"ik\"\n              }), \" to the \", _jsx(_components.code, {\n                children: \"addLedgerEntry\"\n              }), \" mutation. This identifies the Ledger Entry and lets you safely retry the API call. See \", _jsx(_components.a, {\n                href: \"/api-reference#api-overview-idempotency\",\n                children: \"Integrate the API\"\n              }), \".\"]\n            })\n          }), _jsxs(Subpage, {\n            title: \"Timestamps\",\n            id: \"post-ledger-entries-post-to-the-api-timestamps\",\n            children: [_jsx(_components.p, {\n              children: \"Ledger Entries have two timestamps:\"\n            }), _jsxs(_components.ul, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [_jsx(_components.code, {\n                  children: \"posted\"\n                }), \", the time the money movement event happened. You provide this to the \", _jsx(_components.code, {\n                  children: \"addLedgerEntry\"\n                }), \" API call.\"]\n              }), \"\\n\", _jsxs(_components.li, {\n                children: [_jsx(_components.code, {\n                  children: \"created\"\n                }), \", the time at which the Ledger Entry was posted to the API. \", _jsx(InlineLogo, {}), \" auto-generates this value.\"]\n              }), \"\\n\"]\n            }), _jsxs(_components.p, {\n              children: [\"You can post entries with a \", _jsx(_components.code, {\n                children: \"posted\"\n              }), \" timestamp in the past or future. Posting a Ledger Entry updates all balances from the \", _jsx(_components.code, {\n                children: \"posted\"\n              }), \" time into the future.\"]\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"post-ledger-entries-linked-accounts\",\n          title: \"Linked Accounts\",\n          label: \"c\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"Linked Ledger Accounts are used for \", _jsx(_components.a, {\n              href: \"#reconcile-transactions\",\n              children: \"reconciling your Ledger\"\n            }), \" with your external financial systems.\"]\n          }), _jsxs(_components.p, {\n            children: [\"To define a Ledger Entry to a Linked Ledger Account, you must specify the \", _jsx(_components.code, {\n              children: \"tx\"\n            }), \" of the Ledger Line. This is the ID of the transaction at the external system.\"]\n          }), _jsx(CodeBlock, {\n            title: \"Linked Ledger Account Entry\",\n            language: \"json\",\n            children: `{\n  \"key\": \"linked-ledger-account-schema\",\n  \"chartOfAccounts\": {...},\n  \"ledgerEntries\": {\n    \"types\": [\n      {\n        \"type\": \"reconciliation-type\",\n        \"lines\": [\n          {\n            \"key\": \"reconciliation-line-key\",\n            \"account\": { \"path\": \"bank\" },\n            \"amount\": \"{{some_amount}}\",\n            \"tx\": {\n              \"externalId\": \"{{bank_transaction_id}}\"\n            }\n          },\n          {...other line}\n        ]\n      }\n    ]\n  }\n}`\n          }), _jsxs(_components.p, {\n            children: [\"To post Ledger Entries to a Linked Ledger Account, call \", _jsx(_components.code, {\n              children: \"reconcileTx\"\n            }), \" instead of \", _jsx(_components.code, {\n              children: \"addLedgerEntry\"\n            }), \":\"]\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            expandable: true,\n            title: \"reconcileTx query\",\n            children: `mutation ReconcileTx(\n    $entry: LedgerEntryInput!\n  ) {\n    reconcileTx(entry: $entry) {\n      __typename\n      ... on ReconcileTxResult {\n        entry {\n          ik\n          posted\n          created\n        }\n        isIkReplay\n        lines {\n          amount\n          currency {\n            code\n          }\n        }\n      }\n      ... on Error {\n        code\n        message\n      }\n    }\n  }`\n          }), _jsxs(_components.p, {\n            children: [\"The query variables are the same as \", _jsx(_components.code, {\n              children: \"addLedgerEntry\"\n            }), \", except \", _jsx(_components.code, {\n              children: \"posted\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"ik\"\n            }), \" are omitted. They are inferred from the external Tx.\"]\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"reconcileTx variables\",\n            children: `{\n  \"entry\": {\n    \"type\": \"reconciliation-type\",\n    \"ledger\": {\n      \"ik\": \"ledger-ik\"\n    },\n    \"parameters\": {\n      \"bank_transaction_id\": \"tx_1234\"\n    }\n  }\n}`\n          }), _jsxs(_components.p, {\n            children: [\"Read more about creating and using Linked Ledger Accounts in \", _jsx(_components.a, {\n              href: \"#reconcile-transactions\",\n              children: \"Reconcile transactions\"\n            }), \".\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"post-ledger-entries-currencies\",\n          title: \"Currencies\",\n          label: \"d\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"If a Ledger Account is in \", _jsx(_components.code, {\n              children: \"currencyMode: multi\"\n            }), \", you must specify the \", _jsx(_components.code, {\n              children: \"currency\"\n            }), \" of the Ledger Lines posted to it.\"]\n          }), _jsx(CodeBlock, {\n            title: \"Ledger Entry definition\",\n            language: \"json\",\n            children: `{\n  \"key\": \"schema-key\",\n  \"chartOfAccounts\": {...},\n  \"ledgerEntries\": {\n    \"types\": [\n      {\n        \"type\": \"user_funds_account\",\n        \"description\": \"Funding {{user_id}} for {{funding_amount}}\",\n        \"lines\": [\n          {\n            \"account\": { \"path\": \"assets/banks/user-cash\" },\n            \"key\": \"funds_arrive_in_bank\",\n            \"amount\": \"{{funding_amount}}\",\n            \"currency\": {\n              \"code\": \"USD\"\n            }\n          },\n          {\n            \"account\": { \"path\": \"liabilities/users:{{user_id}}/available\" },\n            \"key\": \"increase_user_balance\",\n            \"amount\": \"{{funding_amount}}\",\n            \"currency\": {\n              \"code\": \"USD\"\n            }\n          }\n        ]\n      }\n    ]\n  }\n}`\n          }), _jsxs(_components.p, {\n            children: [\"Read more about how to implement a product that handles multiple currencies in \", _jsx(_components.a, {\n              href: \"#handle-currencies\",\n              children: \"Handle currencies\"\n            }), \".\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"post-ledger-entries-using-conditions\",\n          title: \"Using conditions\",\n          label: \"e\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"Ledger Entry conditions are rules defined in your Schema used to manage concurrency and enforce correctness within your Ledger. If a condition is not met, the Ledger Entry is not posted and the mutation throws a \", _jsx(_components.code, {\n              children: \"BadRequestError\"\n            }), \".\"]\n          }), _jsx(_components.p, {\n            children: \"Conditions are defined in the Schema:\"\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"Ledger Entry Template with conditions\",\n            children: `{\n  \"type\": \"user_withdraws_funds\",\n  \"description\": \"{{user_id}} withdraws for {{withdraw_amount}}\",\n  \"lines\": [\n    {\n      \"account\": { \"path\": \"assets/banks/user-cash\" },\n      \"key\": \"funds_leave_bank\",\n      \"amount\": \"-{{withdraw_amount}}\"\n    },\n    {\n      \"account\": { \"path\": \"liabilities/users:{{user_id}}/available\" },\n      \"key\": \"decrease_user_balance\",\n      \"amount\": \"-{{withdraw_amount}}\"\n    }\n  ],\n  \"conditions\": [\n    {\n      \"account\": {\n        \"path\": \"liabilities/users:{{user_id}}/available\"\n      },\n      \"postcondition\": {\n        \"ownBalance\": {\n          \"gte\": \"0\"\n        }\n      }\n    }\n  ]\n}`\n          }), _jsxs(_components.p, {\n            children: [\"Read more about using Ledger Entry Conditions in \", _jsx(_components.a, {\n              href: \"#configure-consistency\",\n              children: \"Configure consistency\"\n            }), \".\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"post-ledger-entries-using-groups\",\n          title: \"Using Groups\",\n          label: \"f\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Ledger Entry Groups provide a way to tie together related Ledger Entries. You can configure them on a Ledger Entry Type in the Schema.\"\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"Ledger Entry Type with Groups\",\n            children: `{\n  \"type\": \"user_initiates_withdrawal\",\n  \"description\": \"{{user_id}} initiates withdrawal\",\n  \"lines\": [\n    {\n      \"account\": {\n        \"path\": \"liabilities/users:{{user_id}}/available\"\n      },\n      \"key\": \"decrease_user_balance\",\n      \"amount\": \"-{{withdraw_amount}}\"\n    },\n    {...other line}\n  ],\n  \"groups\": [\n    {\n      \"key\": \"withdrawal\",\n      \"value\": \"{{withdrawal_id}}\"\n    }\n  ]\n}`\n          }), _jsxs(_components.p, {\n            children: [\"Read more about using Ledger Entry Groups in \", _jsx(_components.a, {\n              href: \"#group-ledger-entries\",\n              children: \"Group Ledger Entries\"\n            }), \".\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"post-ledger-entries-runtime-entries\",\n          title: \"Runtime Entries\",\n          label: \"g\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"You can define a Ledger Entry whose Ledger Lines are defined at runtime.\"\n          }), _jsxs(_components.p, {\n            children: [\"This can be useful if you're building a product where your end user, not you, defines the Ledger Entry structure. This is common for \", _jsx(InlineLogo, {}), \" users offering accounting services to their users.\"]\n          }), _jsxs(_components.p, {\n            children: [\"To support runtime-defined Ledger Entries, omit the \", _jsx(_components.code, {\n              children: \"lines\"\n            }), \" field in the Schema.\"]\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"Runtime-defined Ledger Entry\",\n            children: `\n{\n  \"type\": \"runtime_entry\",\n  \"description\": \"Runtime-defined ledger entry\"\n}`\n          }), _jsxs(_components.p, {\n            children: [\"Then, set the \", _jsx(_components.code, {\n              children: \"lines\"\n            }), \" field when posting the Ledger Entry using \", _jsx(_components.code, {\n              children: \"addLedgerEntry\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"reconcileTx\"\n            }), \":\"]\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            expandable: true,\n            title: \"AddRuntimeLedgerEntry query\",\n            children: `mutation AddRuntimeLedgerEntry(\n  $ik: SafeString!\n  $entry: LedgerEntryInput!\n) {\n  addLedgerEntry(\n    ik: $ik,\n    entry: $entry\n  ) {\n    ... on AddLedgerEntryResult {\n      entry {\n        type\n        created\n        posted\n      }\n      lines {\n        amount\n        key\n        description\n        account {\n          path\n        }\n      }\n    }\n    ... on Error {\n      code\n      message\n    }\n  }\n}`\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"AddRuntimeLedgerEntry variables\",\n            children: `{\n  \"ik\": \"add-arbitrary-ledger-entry\",\n  \"entry\": {\n    \"type\": \"runtime_entry\",\n    \"lines\": [\n        {\n          \"account\": { \"path\": \"assets/banks/user-cash\" },\n          \"key\": \"funds_arrive_in_bank\",\n          \"amount\": \"100\"\n        },\n        {\n          \"account\": { \"path\": \"liabilities/users:test-user/available\" },\n          \"key\": \"increase_user_balance\",\n          \"amount\": \"100\"\n        }\n\n    ]\n  }\n}`\n          })]\n        })]\n      }), \"\\n\", _jsxs(TopicContainer, {\n        label: \"F\",\n        title: \"Reconcile Transactions\",\n        id: \"reconcile-transactions\",\n        children: [_jsx(_components.p, {\n          children: \"Your Ledger should accurately track the real-world movement of money within your product. This is done by reconciling transactions from your external financial systems with your Ledger.\"\n        }), _jsx(AnimatedDiagram, {\n          type: \"reconciliation\"\n        }), _jsx(_components.p, {\n          children: \"The overall workflow is a three-step process:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Transact at your external financial system.\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Sync the real-world money movement to \", _jsx(InlineLogo, {}), \".\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Reconcile the transaction to a Ledger Entry using the API.\"\n          }), \"\\n\"]\n        }), _jsxs(_components.p, {\n          children: [\"This whole process happens through a \", _jsx(InlineLogo, {}), \" Link.\"]\n        }), _jsxs(Page, {\n          id: \"reconcile-transactions-links\",\n          title: \"Links\",\n          label: \"a\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Links are a mirror of external financial systems used to keep your Ledger up to date. Create a Link for each external financial system you have, such as banks, payment processors and card issuers.\"\n          }), _jsx(Diagram, {\n            type: \"links\"\n          }), _jsx(_components.p, {\n            children: \"For each account in your external financial system, there's a corresponding External Account. External Accounts have a Tx for each transaction in that account.\"\n          }), _jsx(Diagram, {\n            type: \"externalAccounts\"\n          }), _jsx(_components.p, {\n            children: \"After you set up the Link, create a Linked Ledger Account, an account in your Ledger that maps 1:1 with an External Account.\"\n          }), _jsx(Diagram, {\n            type: \"linkedLedgerAccount\"\n          }), _jsx(_components.p, {\n            children: \"Any Ledger Line that posts to a Linked Ledger Account must match a transaction in its corresponding External Account.\"\n          }), _jsx(Diagram, {\n            type: \"reconcilingTransactions\"\n          })]\n        }), _jsxs(Page, {\n          id: \"reconcile-transactions-native-links\",\n          title: \"Native Links\",\n          label: \"b\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Native Links are built-in integrations that automatically sync External Accounts and Txs.\"\n          }), _jsx(_components.p, {\n            children: \"Once you onboard a Native Link, Txs automatically sync periodically and via webhook. Txs also sync when you call the API for reconciliation.\"\n          }), _jsxs(Subpage, {\n            title: \"Increase\",\n            id: \"reconcile-transactions-native-links-increase\",\n            children: [_jsxs(_components.p, {\n              children: [\"To create a Native Link with \", _jsx(_components.a, {\n                href: \"https://increase.com/\",\n                children: \"Increase\"\n              }), \":\"]\n            }), _jsxs(_components.ol, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [\"Create a Link in the \", _jsx(_components.a, {\n                  href: \"https://dashboard.fragment.dev/go/links/add/increase\",\n                  children: \"dashboard\"\n                }), \" and select Increase.\"]\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Select either your Increase sandbox or production environment.\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"When redirected to Increase, approve the connection.\"\n              }), \"\\n\"]\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Stripe\",\n            id: \"reconcile-transactions-native-links-stripe\",\n            children: [_jsxs(_components.p, {\n              children: [\"To create a Native Link with \", _jsx(_components.a, {\n                href: \"https://stripe.com/\",\n                children: \"Stripe\"\n              }), \":\"]\n            }), _jsxs(_components.ol, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [\"Create a Link in the \", _jsx(_components.a, {\n                  href: \"https://dashboard.fragment.dev/go/links/add/stripe\",\n                  children: \"dashboard\"\n                }), \" and select Stripe.\"]\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Select either your Stripe test or live environment.\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"When redirected to Stripe, approve the connection.\"\n              }), \"\\n\"]\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Stripe Connect\",\n            id: \"reconcile-transactions-native-links-stripe-connect\",\n            children: [_jsx(_components.p, {\n              children: \"To onboard Stripe Connect, in addition to creating a Stripe link, you'll need to create a Restricted Access Key (RAK) with the following permissions:\"\n            }), _jsxs(_components.ol, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [\"Balance - \", _jsx(_components.code, {\n                  children: \"Read\"\n                }), \" for both Permissions and Connect Permissions\"]\n              }), \"\\n\", _jsxs(_components.li, {\n                children: [\"Balance Transaction Sources - \", _jsx(_components.code, {\n                  children: \"Read\"\n                }), \" for both Permissions and Connect Permissions\"]\n              }), \"\\n\", _jsxs(_components.li, {\n                children: [\"Balance Transfers - \", _jsx(_components.code, {\n                  children: \"Read\"\n                }), \" for both Permissions and Connect Permissions\"]\n              }), \"\\n\", _jsxs(_components.li, {\n                children: [\"All Connect Resources - \", _jsx(_components.code, {\n                  children: \"Read\"\n                })]\n              }), \"\\n\", _jsxs(_components.li, {\n                children: [\"All Webhook Resources - \", _jsx(_components.code, {\n                  children: \"Write\"\n                }), \". This is used to setup webhooks to \", _jsx(InlineLogo, {}), \".\"]\n              }), \"\\n\"]\n            }), _jsx(_components.p, {\n              children: \"Once you have the RAK:\"\n            }), _jsxs(_components.ol, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [\"Navigate to the \", _jsx(_components.a, {\n                  href: \"https://dashboard.fragment.dev/go/links\",\n                  children: \"Links\"\n                }), \" page in the Dashboard\"]\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Select the Stripe Link\"\n              }), \"\\n\", _jsxs(_components.li, {\n                children: [\"Navigate to the \", _jsx(_components.code, {\n                  children: \"Details\"\n                }), \" page\"]\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Submit the RAK you've just generated. You're all setup!\"\n              }), \"\\n\"]\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Unit\",\n            id: \"reconcile-transactions-native-links-unit\",\n            children: [_jsxs(_components.p, {\n              children: [\"To create a Native Link with \", _jsx(_components.a, {\n                href: \"https://unit.co/\",\n                children: \"Unit\"\n              }), \":\"]\n            }), _jsxs(_components.ol, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [\"Create a API Key at Unit with \", _jsx(_components.code, {\n                  children: \"accounts\"\n                }), \" and \", _jsx(_components.code, {\n                  children: \"transactions\"\n                }), \" scopes.\"]\n              }), \"\\n\", _jsxs(_components.li, {\n                children: [\"Create a Link in the \", _jsx(_components.a, {\n                  href: \"https://dashboard.fragment.dev/go/links/add/unit\",\n                  children: \"dashboard\"\n                }), \" and select Unit.\"]\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Enter your Unit Org ID and API Key.\"\n              }), \"\\n\"]\n            }), _jsx(_components.p, {\n              children: \"Note: You must be pre-approved by Unit to enable the Native Link.\"\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"reconcile-transactions-link-any-system\",\n          title: \"Link any system\",\n          label: \"c\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"Custom Links allow you to build your own integration between \", _jsx(InlineLogo, {}), \" and any external financial system. Instead of syncing automatically like a Native Link, you sync External Accounts and Txs by calling the API.\"]\n          }), _jsxs(Subpage, {\n            title: \"Onboarding\",\n            id: \"reconcile-transactions-link-any-system-onboarding\",\n            children: [_jsxs(_components.p, {\n              children: [\"You can either create a Link in the \", _jsx(_components.a, {\n                href: \"https://dashboard.fragment.dev/go/links/add/custom\",\n                children: \"dashboard\"\n              }), \" or using \", _jsx(_components.code, {\n                children: \"createCustomLink\"\n              }), \":\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"createCustomLink mutation\",\n              children: `mutation NewCustomLink($name: String!, $ik: SafeString!) {\n  createCustomLink(name: $name, ik: $ik) {\n    __typename\n    ... on CreateCustomLinkResult {\n      link {\n        id\n        name\n      }\n      isIkReplay\n    }\n    ... on Error {\n      code\n      message\n    }\n  }\n}`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"createCustomLink variables\",\n              children: `{\n\t\"name\": \"Stripe\",\n\t\"ik\": \"dev-stripe\"\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Sync accounts\",\n            id: \"reconcile-transactions-link-any-system-sync-accounts\",\n            children: [_jsx(_components.p, {\n              children: \"If you only have a few accounts, sync them manually as part of bootstrapping your Ledger.\"\n            }), _jsx(_components.p, {\n              children: \"Otherwise, sync accounts as you create them at the external system. The sync process can run either periodically or by webhook, or both.\"\n            }), _jsxs(_components.p, {\n              children: [\"Once you have a set of accounts to sync, call \", _jsx(_components.code, {\n                children: \"syncCustomAccounts\"\n              }), \":\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"syncCustomAccounts mutation\",\n              children: `mutation CreateBankAccounts(\n  $link: LinkMatchInput!\n  $accounts: [CustomAccountInput!]!\n  ) {\n  syncCustomAccounts(link: $link, accounts: $accounts) {\n    __typename\n    ... on SyncCustomAccountsResult {\n      accounts {\n        id\n        externalId\n        name\n      }\n    }\n    ... on Error {\n      code\n      message\n    }\n  }\n}`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"syncCustomAccounts variables\",\n              children: `{\n  \"link\": {\n    \"id\": \"some-link-id\"\n  },\n  \"accounts\": [\n    {\n      \"externalId\": \"bank-account-1\",\n      \"name\": \"Operational Account\"\n    },\n    {\n      \"externalId\": \"bank-account-2\",\n      \"name\": \"Reserve Account\"\n    }\n  ]\n}`\n            }), _jsxs(_components.p, {\n              children: [\"You should ensure that \", _jsx(_components.code, {\n                children: \"externalId\"\n              }), \" is a stable and unique identifier for each account, within the scope of its Link. This ensures that syncing is idempotent. \", _jsx(_components.code, {\n                children: \"externalId\"\n              }), \" is typically set to the ID of the account at the external system.\"]\n            }), _jsxs(_components.p, {\n              children: [\"Calling \", _jsx(_components.code, {\n                children: \"syncCustomAccounts\"\n              }), \" with a different \", _jsx(_components.code, {\n                children: \"name\"\n              }), \" for an existing \", _jsx(_components.code, {\n                children: \"externalId\"\n              }), \" updates the name of the External Account.\"]\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"reconcile-transactions-linked-accounts\",\n          title: \"Linked Accounts\",\n          label: \"d\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"After you set up the Link, create Linked Ledger Accounts, accounts in your Ledger that map 1:1 with accounts at your external financial system.\"\n          }), _jsxs(_components.p, {\n            children: [\"To define a Linked Ledger Account, set \", _jsx(_components.code, {\n              children: \"linkedAccount\"\n            }), \" on a Ledger Account in your Schema:\"]\n          }), _jsx(CodeBlock, {\n            title: \"Linked Ledger Account with hardcoded IDs\",\n            language: \"json\",\n            children: `{\n  \"chartOfAccounts\": {\n    \"accounts\": [\n      {\n        \"key\": \"assets-root\",\n        \"name\": \"Assets\",\n        \"type\": \"asset\",\n        \"children\": [{\n          \"key\": \"operating\",\n          \"name\": \"Operating Bank\",\n          \"linkedAccount\": {\n            \"linkId\": \"some-link-id\",\n            \"externalId\": \"bank-account-1\"\n          }\n        }]\n      }\n    ]\n  }\n}`\n          }), _jsxs(_components.p, {\n            children: [\"The \", _jsx(_components.code, {\n              children: \"linkId\"\n            }), \" comes from the Link you create in the dashboard. The \", _jsx(_components.code, {\n              children: \"externalId\"\n            }), \" is the ID of the account at your external financial system.\"]\n          }), _jsxs(_components.p, {\n            children: [\"The CLI automatically replaces variables with \", _jsx(_components.code, {\n              children: \"${ENV_VAR}\"\n            }), \" syntax when running \", _jsx(_components.code, {\n              children: \"fragment store-schema\"\n            }), \". This lets you use different External Accounts per environment:\"]\n          }), _jsx(CodeBlock, {\n            title: \"Linked Ledger Account with env var IDs\",\n            language: \"json\",\n            children: `{\n  \"chartOfAccounts\": {\n    \"accounts\": [\n      {\n        \"key\": \"assets-root\",\n        \"name\": \"Assets\",\n        \"type\": \"asset\",\n        \"children\": [{\n          \"key\": \"operating\",\n          \"name\": \"Operating Bank\",\n          \"linkedAccount\": {\n            \"linkId\": \"\\${BANK_LINK_ID}\",\n            \"externalId\": \"\\${BANK_ACCOUNT_ID}\"\n          }\n        }]\n      }\n    ]\n  }\n}`\n          }), _jsxs(_components.p, {\n            children: [\"To create a Linked Ledger Account that is part of a Ledger Account template, parameterize the \", _jsx(_components.code, {\n              children: \"linkedAccount\"\n            }), \" field:\"]\n          }), _jsx(CodeBlock, {\n            title: \"Linked Ledger Account with parameter IDs\",\n            language: \"json\",\n            children: `{\n  \"chartOfAccounts\": {\n    \"accounts\": [\n      {\n        \"key\": \"assets-root\",\n        \"name\": \"Assets\",\n        \"type\": \"asset\",\n        \"children\": [{\n          \"key\": \"operating\",\n          \"name\": \"Operating Bank\",\n          \"template\": true,\n          \"linkedAccount\": {\n            \"linkId\": \"{{BANK_LINK_ID}}\",\n            \"externalId\": \"{{BANK_ACCOUNT_ID}}\"\n          }\n        }]\n      }\n    ]\n  }\n}`\n          }), _jsx(_components.p, {\n            children: \"These parameters are then required when posting a Ledger Entry to a Linked Ledger Account. This can be useful if you're creating bank accounts per customer, for example.\"\n          })]\n        }), _jsxs(Page, {\n          id: \"reconcile-transactions-transact-externally\",\n          title: \"Transact externally\",\n          label: \"e\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Transactions at your external financial system are initiated in one of two ways:\"\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsx(_components.li, {\n              children: \"You initiate a payment by calling their API.\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"You are notified by the external system that a transaction has occurred. This can happen via webhook, by polling their API, or receiving a periodic transaction report.\"\n            }), \"\\n\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"reconcile-transactions-sync-transactions\",\n          title: \"Sync transactions\",\n          label: \"f\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"Once a transaction occurs, you need to sync it with your \", _jsx(InlineLogo, {}), \" Ledger.\"]\n          }), _jsxs(_components.p, {\n            children: [\"If you're using a Native Link, \", _jsx(InlineLogo, {}), \" automatically syncs transactions. You can skip ahead to \", _jsx(_components.a, {\n              href: \"/docs#reconcile-transactions-reconcile-a-tx\",\n              children: \"Reconcile transactions\"\n            }), \".\"]\n          }), _jsxs(_components.p, {\n            children: [\"If you're using a Custom Link, your sync process should call \", _jsx(_components.code, {\n              children: \"syncCustomTxs\"\n            }), \". Your sync process can periodically enumerate transactions in your external system or be triggered by webhook.\"]\n          }), _jsx(_components.p, {\n            children: \"You may also want to sync and reconcile when your product makes a payment. You should only sync transactions that are settled, not pending or declined.\"\n          }), _jsxs(_components.p, {\n            children: [\"Once you have a set of transactions to sync, call \", _jsx(_components.code, {\n              children: \"syncCustomTxs\"\n            }), \":\"]\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            title: \"syncCustomTxs mutation\",\n            children: `mutation SyncTransactions(\n  $link: LinkMatchInput!\n  $txs: [CustomTxInput!]!\n) {\n  syncCustomTxs(link: $link, txs: $txs) {\n    __typename\n    ... on SyncCustomTxsResult {\n      txs {\n        id\n        externalId\n        amount\n        date\n        description\n      }\n    }\n    ... on Error {\n      code\n      message\n    }\n  }\n}`\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"syncCustomTxs variables\",\n            children: `{\n  \"link\": { \"id\": \"some-link-id\" },\n  \"txs\": [\n    {\n      \"account\": {\n        \"externalId\": \"bank-account-1\"\n      },\n      \"externalId\": \"tx-1\",\n      \"description\": \"Processed ACH batch\",\n      \"amount\": \"-100\",\n      \"posted\": \"1968-01-01\"\n    },\n    {\n      \"account\": {\n        \"externalId\": \"bank-account-2\"\n      },\n      \"externalId\": \"tx-2\",\n      \"description\": \"Received RTP payment\",\n      \"amount\": \"100\",\n      \"posted\": \"1968-01-01T16:45:00Z\"\n    }\n  ]\n}`\n          }), _jsxs(_components.p, {\n            children: [\"You should ensure that \", _jsx(_components.code, {\n              children: \"externalId\"\n            }), \" is a stable and unique identifier for each transaction, within the scope of its account. This identifier enforces idempotentency. This identifier is typically the ID of the transaction at the external system. Make sure you use the lowest level transaction ID available, not the ID of a higher level construct that may be linked to multiple transactions, like a payment.\"]\n          }), _jsxs(_components.p, {\n            children: [\"Calling \", _jsx(_components.code, {\n              children: \"syncCustomTxs\"\n            }), \" with a different \", _jsx(_components.code, {\n              children: \"description\"\n            }), \" for an existing \", _jsx(_components.code, {\n              children: \"externalId\"\n            }), \" updates the name of the External Account. \", _jsx(_components.code, {\n              children: \"amount\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"posted\"\n            }), \" timestamp are immutable.\"]\n          }), _jsx(_components.p, {\n            children: \"You can sync transactions from different accounts in the same API call, but they must all belong to the same Custom Link.\"\n          })]\n        }), _jsxs(Page, {\n          id: \"reconcile-transactions-reconcile-a-tx\",\n          title: \"Reconcile a Tx\",\n          label: \"g\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"To reconcile a transaction from an external system, follow the same two-step process as when posting Ledger Entries:\"\n          }), _jsxs(_components.ol, {\n            children: [\"\\n\", _jsx(_components.li, {\n              children: \"Define the structure of the Ledger Entry in your Schema.\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Post the Ledger Entry using the API.\"\n            }), \"\\n\"]\n          }), _jsxs(_components.p, {\n            children: [\"Ledger Entries posting to a Linked Ledger Account must specify the Tx from the External Account tied to the Ledger Account. This lets \", _jsx(InlineLogo, {}), \" know which transaction to reconcile:\"]\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"LedgerEntrySchema with Linked Ledger Account\",\n            children: `{\n  \"key\": \"schema-key\",\n  \"chartOfAccounts\": {...},\n  \"ledgerEntries\": {\n    \"types\": [\n      {\n        \"type\": \"user_funds_account_via_link\",\n        \"description\": \"Funding {{user_id}} for {{funding_amount}}\",\n        \"lines\": [\n          {\n            \"account\": { \"path\": \"assets/operating\" },\n            \"key\": \"funds_arrive_in_bank\",\n            \"tx\": {\n              \"externalId\": \"{{bank_transaction_id}}\"\n            }\n          },\n          {\n            \"account\": { \"path\": \"liabilities/users:{{user_id}}/available\" },\n            \"key\": \"increase_user_balance\"\n          }\n        ]\n      }\n    ]\n  }\n}`\n          }), _jsx(_components.p, {\n            children: \"Notes:\"\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsx(_components.li, {\n              children: \"Ledger Lines posting to a Linked Ledger Account must match 1:1 with the Tx that's being reconciled.\"\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"bank_transaction_id\"\n              }), \" represents the ID of the transaction at the external system.\"]\n            }), \"\\n\"]\n          }), _jsxs(_components.p, {\n            children: [\"Instead of calling \", _jsx(_components.code, {\n              children: \"addLedgerEntry\"\n            }), \", Linked Ledger Accounts use the \", _jsx(_components.code, {\n              children: \"reconcileTx\"\n            }), \" mutation:\"]\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            expandable: true,\n            title: \"reconcileTx mutation\",\n            children: `mutation ReconcileTx(\n  $entry: LedgerEntryInput!\n) {\n  reconcileTx(\n    entry: $entry\n  ) {\n    ... on ReconcileTxResult {\n      entry {\n        type\n        created\n        posted\n      }\n      lines {\n        amount\n        key\n        description\n        account {\n          path\n        }\n      }\n    }\n    ... on Error {\n      code\n      message\n    }\n  }\n}`\n          }), _jsxs(_components.p, {\n            children: [\"The parameters look similar to \", _jsx(_components.code, {\n              children: \"addLedgerEntry\"\n            }), \". Specify the Ledger Entry \", _jsx(_components.code, {\n              children: \"type\"\n            }), \" that you are using and provide the \", _jsx(_components.code, {\n              children: \"parameters\"\n            }), \" defined in the Schema:\"]\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"reconcileTx variables\",\n            children: `{\n  \"entry\": {\n    \"type\": \"user_funding\",\n    \"ledger\": {\n      \"ik\": \"ledger-ik\"\n    },\n    \"parameters\": {\n      \"txId\": \"tx_12345\",\n      \"customerId\": \"customer-1\"\n    }\n  }\n}`\n          }), _jsxs(_components.p, {\n            children: [_jsx(_components.code, {\n              children: \"ik\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"posted\"\n            }), \" are optional when posting Ledger Entries with \", _jsx(_components.code, {\n              children: \"reconcileTx\"\n            }), \":\"]\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"ik\"\n              }), \": the \", _jsx(_components.code, {\n                children: \"Tx.externalId\"\n              }), \" is used to ensure that reconciling a transaction is idempotent\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"posted\"\n              }), \": the timestamp of the Ledger Entry is taken from the Tx to ensure the Ledger mirrors the external system\"]\n            }), \"\\n\"]\n          }), _jsxs(Subpage, {\n            title: \"Reconciling multiple Txs\",\n            id: \"reconcile-transactions-reconcile-a-tx-reconciling-multiple-txs\",\n            children: [_jsx(_components.p, {\n              children: \"Book transfers are a common type of money movement which produce two Txs at your bank as part of one payment.\"\n            }), _jsxs(_components.p, {\n              children: [\"To reconcile multiple Txs using \", _jsx(_components.code, {\n                children: \"reconcileTx\"\n              }), \":\"]\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"LedgerEntrySchema with multiple Txs\",\n              children: `{\n  \"key\": \"schema-key\",\n  \"chartOfAccounts\": {...},\n  \"ledgerEntries\": {\n    \"types\": [\n      {\n        \"type\": \"user_funds_account_via_link\",\n        \"description\": \"Funding {{user_id}} for {{funding_amount}}\",\n        \"lines\": [\n          {\n            \"key\": \"funds_arrive_in_operating_bank\",\n            \"account\": { \"path\": \"assets/operating-bank-account\" },\n            \"tx\": {\n              \"externalId\": \"{{bank_transaction_id}}\"\n            }\n          },\n          {\n            \"key\": \"funds_leave_holding_bank\",\n            \"account\": { \"path\": \"assets/holding-bank-account\" },\n            \"tx\": {\n              \"externalId\": \"{{bank_transaction_id}}\"\n            }\n          }\n        ]\n      }\n    ]\n  }\n}`\n            }), _jsx(_components.p, {\n              children: \"Notes:\"\n            }), _jsxs(_components.ul, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [\"Reconciling multiple Txs is only permitted if they have the same \", _jsx(_components.code, {\n                  children: \"posted\"\n                }), \" timestamp.\"]\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"You can only reconcile multiple Txs within the same Link.\"\n              }), \"\\n\"]\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"reconcile-transactions-unreconciled-txs\",\n          title: \"Unreconciled Txs\",\n          label: \"h\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"Transactions synced to \", _jsx(InlineLogo, {}), \" but not reconciled to a Ledger are considered unreconciled.\"]\n          }), _jsx(Diagram, {\n            type: \"unreconciledTxs\"\n          }), _jsxs(_components.p, {\n            children: [\"You can query unreconciled transactions in a Linked Ledger Account using the \", _jsx(_components.code, {\n              children: \"unreconciledTxs\"\n            }), \" field on the\", _jsx(_components.code, {\n              children: \"LedgerAccount\"\n            }), \".  It is recommended to periodically call this query to ensure your Ledger stays up to date. It can also be used to build reconciliation UIs:\"]\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            title: \"unreconciledTxs query\",\n            children: `query GetUnreconciledTxs (\n  $ledgerAccount: LedgerAccountMatchInput!\n) {\n  ledgerAccount(ledgerAccount: $ledgerAccount) {\n    id\n    unreconciledTxs {\n      nodes {\n        id\n        description\n        amount\n        externalId\n        externalAccountId\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}`\n          }), _jsxs(_components.p, {\n            children: [\"The variables specify the \", _jsx(_components.code, {\n              children: \"path\"\n            }), \" of the Linked Ledger Account you are querying and the Ledger it belongs to.\"]\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"unreconciledTxs variables\",\n            children: `{\n  \"ledgerAccount\": {\n    \"path\": \"assets/operating\",\n    \"ledger\": {...}\n  }\n}`\n          }), _jsxs(_components.p, {\n            children: [_jsx(_components.code, {\n              children: \"unreconciledTxs\"\n            }), \" is eventually consistent, so if you've recently transacted at a Native Link or just synced manually for a Custom Link, you may not see the transaction in the query results immediately.\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"reconcile-transactions-stripe-txs\",\n          title: \"Stripe Txs\",\n          label: \"i\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"Transactions synced to \", _jsx(InlineLogo, {}), \" within a Stripe Link have special handling. Every \", _jsx(_components.a, {\n              href: \"https://docs.stripe.com/api/balance_transactions\",\n              children: \"Balance Transaction\"\n            }), \" at Stripe has two amount fields:\"]\n          }), _jsxs(_components.ol, {\n            children: [\"\\n\", _jsx(_components.li, {\n              children: \"The gross amount of the transaction\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"The fee paid for the transaction, to Stripe\"\n            }), \"\\n\"]\n          }), _jsxs(_components.p, {\n            children: [\"This doesn't neatly map 1:1 with Fragment's recon model, so \", _jsx(InlineLogo, {}), \" creates two Txs for each Balance Transaction at Stripe: one for the gross amount and the other for the fee. This allows you to account for these amounts independently in your Ledger. The external IDs for these Txs are:\"]\n          }), _jsxs(_components.ol, {\n            children: [\"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"{{stripe_tx_id}}_gross\"\n              }), \" for the gross amount Tx\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"{{stripe_tx_id}}_fee\"\n              }), \" for the fee amount Tx\"]\n            }), \"\\n\"]\n          }), _jsxs(_components.p, {\n            children: [\"For example, a Stripe Balance Transaction with ID \", _jsx(_components.code, {\n              children: \"txn_123\"\n            }), \" will result in two Txs in \", _jsx(InlineLogo, {}), \" with external IDs \", _jsx(_components.code, {\n              children: \"txn_123_gross\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"txn_123_fee\"\n            }), \". You can \", _jsx(_components.a, {\n              href: \"#reconcile-transactions-reconcile-a-tx-reconciling-multiple-txs\",\n              children: \"reconcile both\"\n            }), \" of these in a single \", _jsx(_components.code, {\n              children: \"reconcileTx\"\n            }), \" call.\"]\n          })]\n        })]\n      }), \"\\n\", _jsxs(TopicContainer, {\n        label: \"G\",\n        title: \"Store metadata\",\n        id: \"store-metadata\",\n        children: [_jsx(_components.p, {\n          children: \"You can provide up to 10 tags on Ledger Entries to store arbitrary key-value pairs, like IDs from your product.\"\n        }), _jsxs(Page, {\n          id: \"store-metadata-schema-entry-tags\",\n          title: \"Schema Entry tags\",\n          label: \"a\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"You can define tags on Ledger Entry types in your Schema:\"\n          }), _jsx(CodeBlock, {\n            title: \"Schema-defined tags\",\n            language: \"json\",\n            children: `{\n  \"key\": \"...\",\n  \"chartOfAccounts\": {...},\n  \"ledgerEntries\": {\n    \"types\": [\n      {\n        \"type\": \"user_funds_account\",\n        \"description\": \"Fund {{user_id}}\",\n        \"lines\": [\n          {\n            \"key\": \"increase_user_balance\",\n            \"account\": { \n              \"path\": \"liabilities/users:{{user_id}}/available\"\n            },\n            \"amount\": \"{{funding_amount}}\"\n          },\n          {...other line}\n        ],\n        \"tags\": [\n          {\n            \"key\": \"user\",\n            \"value\": \"{{user_id}}\"\n          },\n          {\n            \"key\": \"deposit_flow\",\n            \"value\": \"{{deposit_flow_id}}\"\n          },\n          {\n            \"key\": \"deposit_flow_type\",\n            \"value\": \"ach\"\n          }\n        ]\n      }\n    ]\n  }\n}`\n          }), _jsx(_components.p, {\n            children: \"You can use the same parameter for both tag values and account paths.\"\n          }), _jsx(_components.p, {\n            children: \"When posting a Ledger Entry, include tag values as parameters:\"\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            expandable: true,\n            title: \"addLedgerEntry mutation\",\n            children: `mutation AddLedgerEntry(\n  $ik: SafeString!\n  $entry: LedgerEntryInput!\n) {\n  addLedgerEntry(\n    ik: $ik,\n    entry: $entry\n  ) {\n    __typename\n    ... on AddLedgerEntryResult {\n      entry {\n        type\n        ik\n        tags {\n          key\n          value\n        }\n      }\n      lines {\n        amount\n        description\n        account {\n          path\n        }\n      }\n    }\n    ... on Error {\n      code\n      message\n    }\n  }\n}`\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"addLedgerEntry variables with Schema-defined tags\",\n            children: `{\n  \"ik\": \"fund-abc\",\n  \"entry\": {\n    \"ledger\": {\n      \"ik\": \"ledger-ik\"\n    },\n    \"type\": \"user_funds_account\",\n    \"parameters\": {\n      \"user_id\": \"user-1\",\n      \"funding_amount\": \"200\",\n      \"deposit_flow_id\": \"deposit-123\"\n    }\n  }\n}`\n          }), _jsx(_components.p, {\n            children: \"The Ledger Entry will have the tags you defined in the Schema:\"\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"addLedgerEntry response with tags\",\n            children: `{\n  \"data\": {\n    \"addLedgerEntry\": {\n      \"entry\": {\n        \"type\": \"user_funds_account\",\n        \"ik\": \"fund-abc\",\n        \"tags\": [\n          {\n            \"key\": \"user\",\n            \"value\": \"user-1\"\n          },\n          {\n            \"key\": \"deposit_flow\",\n            \"value\": \"deposit-123\"\n          },\n          {\n            \"key\": \"deposit_flow_type\",\n            \"value\": \"ach\"\n          }\n        ]\n      },\n      \"lines\": [...]\n    }\n  }\n}`\n          })]\n        }), _jsxs(Page, {\n          id: \"store-metadata-runtime-entry-tags\",\n          title: \"Runtime Entry tags\",\n          label: \"b\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"You can define tags at runtime when posting a Ledger Entry:\"\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"addLedgerEntry variables with runtime-defined tags\",\n            children: `{\n  \"ik\": \"add-ledger-entry\",\n  \"entry\": {\n    \"ledger\": {\n      \"ik\": \"ledger-ik\"\n    },\n    \"type\": \"user_funds_account\",\n    \"parameters\": {\n      \"user_id\": \"testing-user\",\n      \"funding_amount\": \"200\",\n      \"deposit_flow_id\": \"abc\"\n    },\n    \"tags\": [\n      {\n        \"key\": \"deposit_flow_type\",\n        \"value\": \"ach\"\n      },\n      {\n        \"key\": \"operator\",\n        \"value\": \"alice\"\n      }\n    ]\n  }\n}`\n          }), _jsx(_components.p, {\n            children: \"If you define tags both at runtime and in the Schema, the Ledger Entry will get the combined set of tags:\"\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"addLedgerEntry response with tags\",\n            children: `{\n  \"data\": {\n    \"addLedgerEntry\": {\n      \"entry\": {\n        \"type\": \"user_funds_account\",\n        \"ik\": \"fund-abc\",\n        \"tags\": [\n          {\n            \"key\": \"user\",\n            \"value\": \"user-1\"\n          },\n          {\n            \"key\": \"deposit_flow\",\n            \"value\": \"deposit-123\"\n          },\n          {\n            \"key\": \"deposit_flow_type\",\n            \"value\": \"ach\"\n          },\n          {\n            \"key\": \"operator\",\n            \"value\": \"alice\"\n          }\n        ]\n      },\n      \"lines\": [...]\n    }\n  }\n}`\n          }), _jsxs(_components.p, {\n            children: [\"You can specify the same tag \", _jsx(_components.code, {\n              children: \"key\"\n            }), \" in both places only if they have the same \", _jsx(_components.code, {\n              children: \"value\"\n            }), \".\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"store-metadata-updating-entry-tags\",\n          title: \"Updating Entry tags\",\n          label: \"c\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"In addition to tags defined in your Schema, you can add and update tags on a posted Ledger Entry.\"\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            expandable: true,\n            title: \"updateLedgerEntry mutation\",\n            children: `mutation UpdateLedgerEntryTags(\n  $ledgerEntry: LedgerEntryMatchInput!\n  $update: UpdateLedgerEntryInput!\n) {\n  updateLedgerEntry(\n    ledgerEntry: $ledgerEntry,\n    update: $update\n  ) {\n    __typename\n    ... on UpdateLedgerEntryResult {\n      entry {\n        type\n        ik\n        tags {\n          key\n          value\n        }\n        lines {\n          nodes {\n            amount\n            description\n            account {\n              path\n            }\n          }\n        }\n      }\n    }\n    ... on Error {\n      code\n      message\n    }\n  }\n}`\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"updateLedgerEntry variables to add and update tags\",\n            children: `{\n  \"ledgerEntry\": {\n    \"ik\": \"add-ledger-entry\",\n    \"ledger\": {\n      \"ik\": \"ledger-ik\"\n    }\n  },\n  \"update\": {\n    \"tags\": [\n      {\n        \"key\": \"operator\",\n        \"value\": \"bob\"\n      },\n      {\n        \"key\": \"supervisor\",\n        \"value\": \"eve\"\n      }\n    ]\n  }\n}`\n          }), _jsx(_components.p, {\n            children: \"This is an additive operation:\"\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsx(_components.li, {\n              children: \"If you specify a tag that already exists, it will be updated\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"If you specify a new tag, it will be added\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"If you don't specify an existing tag, it will remain unchanged\"\n            }), \"\\n\"]\n          }), _jsx(_components.p, {\n            children: \"You can only update a Ledger Entry a maximum of 10 times.\"\n          })]\n        })]\n      }), \"\\n\", _jsxs(TopicContainer, {\n        label: \"H\",\n        title: \"Read balances\",\n        id: \"read-balances\",\n        children: [_jsxs(_components.p, {\n          children: [_jsx(InlineLogo, {}), \" supports querying a Ledger Account for its latest balances, historical balances and balance changes.\"]\n        }), _jsx(Diagram, {\n          type: \"readBalances\"\n        }), _jsxs(Page, {\n          id: \"read-balances-latest\",\n          title: \"Latest\",\n          label: \"a\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"Use the \", _jsx(_components.code, {\n              children: \"ledgerAccount\"\n            }), \" query to look up a Ledger Account's balance.\"]\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            title: \"GetBalances query\",\n            children: `query GetBalance(\n  $ledgerAccount: LedgerAccountMatchInput!\n) {\n  ledgerAccount(ledgerAccount: $ledgerAccount) {\n    balance\n  }\n}`\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"GetBalances variables\",\n            children: `{\n  \"ledgerAccount\": {\n    \"path\": \"assets/bank/user-cash\",\n    \"ledger\": {\n      \"ik\": \"quickstart-ledger\"\n    }\n  }\n}`\n          })]\n        }), _jsxs(Page, {\n          id: \"read-balances-aggregated\",\n          title: \"Aggregated\",\n          label: \"b\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Ledger Accounts have three balances:\"\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"ownBalance\"\n              }), \" is the sum of all Ledger Lines posted to the Ledger Account, excluding Ledger Lines in child Ledger Accounts\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"childBalance\"\n              }), \" is the sum of all Ledger Lines posted to the children of this Ledger Account\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"balance\"\n              }), \" is the sum of all Ledger Lines posted to this Ledger Account and its children\"]\n            }), \"\\n\"]\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            title: \"GetAggregatedBalances query\",\n            children: `query GetAggregatedBalances(\n  $ledgerAccount: LedgerAccountMatchInput!\n) {\n  ledgerAccount(ledgerAccount: $ledgerAccount) {\n    childBalance\n    balance\n  }\n}\n`\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"GetAggregatedBalances variables\",\n            children: `{\n  \"ledgerAccount\": {\n    \"path\": \"liabilities/users\"\n  }\n}`\n          })]\n        }), _jsxs(Page, {\n          id: \"read-balances-consistent\",\n          title: \"Consistent\",\n          label: \"c\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Balance reads are eventually consistent by default. This means that the balance may not reflect all the Ledger Lines in the account.\"\n          }), _jsxs(_components.p, {\n            children: [\"To read a strongly consistent balance, a Ledger Account must have its balances updated in a strongly consistent manner. This is set in the Schema on a Ledger Account's \", _jsx(_components.code, {\n              children: \"consistencyConfig\"\n            }), \":\"]\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            expandable: true,\n            title: \"Strongly consistent Ledger Accounts\",\n            children: `{\n  \"key\": \"strongly-consistent-ledger-accounts\",\n  \"name\": \"Strongly consistent Ledger Accounts\",\n  \"chartOfAccounts\": {\n    \"defaultCurrency\": { \"code\": \"USD\" },\n    \"accounts\": [\n      {\n        \"key\": \"liabilities\",\n        \"type\": \"liability\",\n        \"children\": [\n          {\n            \"key\": \"users\",\n            \"template\": true,\n            \"consistencyConfig\": {\n              \"ownBalanceUpdates\": \"strong\"\n            },\n            \"children\": [\n              {\n                \"key\": \"available\",\n                \"consistencyConfig\": {\n                  \"ownBalanceUpdates\": \"strong\"\n                }\n              },\n              {\n                \"key\": \"pending\"\n              },\n              {\n                \"key\": \"blocked\"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}`\n          }), _jsxs(_components.p, {\n            children: [\"Once a Ledger Account's balance is updated consistently, set the \", _jsx(_components.code, {\n              children: \"consistencyMode\"\n            }), \" on balance queries to determine the consistency of the read you issue.\"]\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            title: \"Strongly consistent ownBalance read\",\n            children: `query GetStronglyConsistentBalance(\n    $ledgerAccount: LedgerAccountMatchInput!\n) {\n  ledgerAccount(ledgerAccount: $ledgerAccount) {\n    ownBalance(consistencyMode: strong)\n  }\n}`\n          }), _jsxs(_components.p, {\n            children: [_jsx(_components.code, {\n              children: \"consistencyMode\"\n            }), \" can be set to:\"]\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"strong\"\n              }), \" to perform a strongly consistent balance read\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"eventual\"\n              }), \" to perform an eventually consistent balance read\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"use_account\"\n              }), \" to use the value of \", _jsx(_components.code, {\n                children: \"consistencyConfig.ownBalanceUpdates\"\n              }), \" when performing a balance read\"]\n            }), \"\\n\"]\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"Strongly consistent ownBalance read variables\",\n            children: `{\n  \"ledgerAccount\": {\n    \"path\": \"liabilities/users:user-1/available\",\n    \"ledger\": {\n      \"ik\": \"quickstart-ledger\"\n    }\n  }\n}`\n          }), _jsxs(_components.p, {\n            children: [\"Only \", _jsx(_components.code, {\n              children: \"ownBalance\"\n            }), \" can be queried with \", _jsx(_components.code, {\n              children: \"consistencyMode: strong\"\n            }), \".\"]\n          }), _jsxs(_components.p, {\n            children: [\"Read the \", _jsx(_components.a, {\n              href: \"#configure-consistency\",\n              children: \"Configure consistency\"\n            }), \" section to learn more about \", _jsx(InlineLogo, {}), \"'s consistency semantics and Ledger Account consistency modes.\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"read-balances-historical\",\n          title: \"Historical\",\n          label: \"d\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"To query the balance of a Ledger Account at a particular point in time use the \", _jsx(_components.code, {\n              children: \"at\"\n            }), \" argument:\"]\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            title: \"Balance queries\",\n            children: `query GetHistoricalBalances(\n  $ledgerAccount: LedgerAccountMatchInput!\n) {\n  ledgerAccount(ledgerAccount: $ledgerAccount) {\n    end_of_year: balance(at: \"1969\")\n    end_of_month: balance(at: \"1969-07\")\n    end_of_day: balance(at: \"1969-07-21\")\n    end_of_hour: balance(at: \"1969-07-21T02\")\n  }\n}\n`\n          }), _jsxs(_components.p, {\n            children: [\"If you don't specify \", _jsx(_components.code, {\n              children: \"at\"\n            }), \", you'll get the \", _jsx(_components.a, {\n              href: \"#read-balances-latest\",\n              children: \"latest balance\"\n            }), \". \", _jsx(_components.code, {\n              children: \"at\"\n            }), \" is supported for all balances and works granularly to the hour.\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"read-balances-balance-changes\",\n          title: \"Balance changes\",\n          label: \"e\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"You can also query the net change on a Ledger Account over a specific reporting period. This can be useful for \", _jsx(_components.a, {\n              href: \"#generate-reports\",\n              children: \"generating financial statements\"\n            }), \".\"]\n          }), _jsx(_components.p, {\n            children: \"Similar to balances, there are three types of balance changes:\"\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"ownBalanceChange\"\n              }), \", how much \", _jsx(_components.code, {\n                children: \"ownBalance\"\n              }), \" changed\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"childBalanceChange\"\n              }), \", how much \", _jsx(_components.code, {\n                children: \"childBalance\"\n              }), \" changed\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"balanceChange\"\n              }), \", how much \", _jsx(_components.code, {\n                children: \"balance\"\n              }), \" changed\"]\n            }), \"\\n\"]\n          }), _jsxs(_components.p, {\n            children: [\"Balance change queries require you to specify a \", _jsx(_components.a, {\n              href: \"/api-reference#types-scalars-and-enums-period\",\n              children: _jsx(_components.code, {\n                children: \"period\"\n              })\n            }), \". This can be a year, quarter, month, day or hour.\"]\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            title: \"Balance change queries\",\n            children: `query GetBalanceChanges(\n  $ledgerAccount: LedgerAccountMatchInput!\n) {\n  ledgerAccount(ledgerAccount: $ledgerAccount) {\n    ownBalanceChange(period: \"1969\")\n    childBalanceChange(period: \"1969\")\n    balanceChange(period: \"1969\")\n    currentYear: balanceChange(period: \"1969\")\n    lastYear: balanceChange(period: \"1968\")\n    lastYearQ4: balanceChange(period: \"1968-Q4\")\n    lastYearDecember: balanceChange(period: \"1968-12\")\n    lastYearChristmas: balanceChange(period: \"1968-12-25\")\n    lastYearLastHour: balanceChange(period: \"1968-12-31T23\")\n  }\n}\n`\n          }), _jsx(_components.p, {\n            children: \"You can also perform multiple balance queries using aliases.\"\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"Balance change query variables\",\n            children: `{\n  \"ledgerAccount\": {\n    \"path\": \"liabilities/users:user-1/available\",\n    \"ledger\": {\n      \"ik\": \"quickstart-ledger\"\n    }\n  }\n}`\n          })]\n        }), _jsxs(Page, {\n          id: \"read-balances-multi-currency-mode\",\n          title: \"Multi-currency mode\",\n          label: \"f\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"For Ledger Accounts in \", _jsx(_components.code, {\n              children: \"currencyMode: multi\"\n            }), \", use the \", _jsx(_components.code, {\n              children: \"currency\"\n            }), \" argument to query the balance in a specific currency.\"]\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            title: \"Multi-currency balance queries\",\n            children: `query GetMultiCurrencyBalances(\n  $ledgerAccount: LedgerAccountMatchInput!\n) {\n  ledgerAccount(ledgerAccount: $ledgerAccount) {\n    latestUSDBalance: balance(currency: { code: USD })\n    latestGBPBalance: balance(currency: { code: GBP })\n\n    USDBalanceChange:\n      balanceChange(period: \"1969\", currency: { code: USD })\n    GBPBalanceChange:\n      balanceChange(period: \"1969\", currency: { code: GBP })\n  }\n}\n`\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"Multi-currency balance query variables\",\n            children: `{\n  \"ledgerAccount\": {\n    \"path\": \"liabilities/users:user-1/available\",\n    \"ledger\": {\n      \"ik\": \"quickstart-ledger\"\n    }\n  }\n}`\n          }), _jsxs(_components.p, {\n            children: [\"You can also query balances in all of a multi-currency Ledger Account's currencies, see \", _jsx(_components.a, {\n              href: \"#handle-currencies\",\n              children: \"Handle currencies\"\n            }), \".\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"read-balances-timezone-offsets\",\n          title: \"Timezone offsets\",\n          label: \"g\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"Balance queries respect the Ledger's \", _jsx(_components.code, {\n              children: \"balanceUTCOffset\"\n            }), \" when specifying periods and times. This field is specified when creating the Ledger.\"]\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsxs(_components.li, {\n              children: [\"If a Ledger has an offset of \", _jsx(_components.code, {\n                children: \"-08:00\"\n              }), \", then querying \", _jsx(_components.code, {\n                children: \"balance(at: \\\"1969-01-31\\\")\"\n              }), \" returns the balance at midnight PT on that date, or 8am on 1969-02-01 UTC.\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [\"Querying \", _jsx(_components.code, {\n                children: \"balanceChange(period: \\\"1969\\\")\"\n              }), \" returns the net change between 8am on 1969-01-01 UTC and 8am on 1969-01-01 UTC. This gives you the net change between midnights local time.\"]\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Daylight savings is ignored, so every day throughout the year has exactly 24 hours.\"\n            }), \"\\n\"]\n          })]\n        })]\n      }), \"\\n\", _jsxs(TopicContainer, {\n        label: \"I\",\n        title: \"Query data\",\n        id: \"query-data\",\n        children: [_jsxs(_components.p, {\n          children: [\"You can flexibly query your data to generate financial reports, embed \", _jsx(InlineLogo, {}), \" in your product and build internal dashboards.\"]\n        }), _jsx(Diagram, {\n          type: \"queryData\"\n        }), _jsxs(Page, {\n          id: \"query-data-basics\",\n          title: \"Basics\",\n          label: \"a\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsxs(Subpage, {\n            title: \"GraphQL\",\n            id: \"query-data-basics-graphql\",\n            children: [_jsxs(_components.p, {\n              children: [_jsx(InlineLogo, {}), \" is a GraphQL API, so data in the system is modeled as a graph. Entities in the API are nodes, and their relationships with other entities are edges. Ledgers have Ledger Accounts; Ledger Accounts and Ledger Entries have Ledger Lines; and so on.\"]\n            }), _jsxs(_components.p, {\n              children: [_jsx(InlineLogo, {}), \" exposes several \", _jsx(_components.a, {\n                href: \"/api-reference#queries\",\n                children: \"queries\"\n              }), \" as entry points to the data graph. They return data about a single entity, or a list of entities.\"]\n            }), _jsxs(_components.p, {\n              children: [\"When making a query, you can fetch related entities using expansions. As opposed to a REST interface, where you may require several round-trips to query nested data, expansions are nested queries that you let you retrieve related data in a single request.  For example, you can \", _jsx(_components.a, {\n                href: \"/#query-data-ledger-entries-expand-lines\",\n                children: \"expand from a Ledger Entry to all the Ledger Lines\"\n              }), \" in it in one API call.\"]\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Connection types\",\n            id: \"query-data-basics-connection-types\",\n            children: [_jsxs(_components.p, {\n              children: [_jsx(InlineLogo, {}), \" uses \", _jsx(_components.a, {\n                href: \"https://relay.dev/graphql/connections.htm\",\n                children: \"connection types\"\n              }), \" to return lists of entities. A connection type is a list of nodes, and a \", _jsx(_components.code, {\n                children: \"pageInfo\"\n              }), \" object that contains cursors to the next and previous pages of results.\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"ListLedgerAccounts\",\n              children: `query ListLedgerAccounts($ledger: LedgerMatchInput!) {\n  ledger(ledger: $ledger) {\n    ledgerAccounts {\n      nodes {\n        name\n        type\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n        hasPreviousPage\n        startCursor\n      }\n    }\n  }\n}\n`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Filtering\",\n            id: \"query-data-basics-filtering\",\n            children: [_jsxs(_components.p, {\n              children: [\"You can filter connection types with a \", _jsx(_components.code, {\n                children: \"filter\"\n              }), \" argument.\"]\n            }), _jsx(_components.p, {\n              children: \"For example, you can filter a list of Ledger Accounts by their type:\"\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"FilterLedgerAccounts query\",\n              children: `query FilterLedgerAccounts(\n    $ledger: LedgerMatchInput!,\n    $filter: LedgerAccountsFilterSet!\n) {\n  ledger(ledger: $ledger) {\n    ledgerAccounts {\n      nodes {\n        name\n        type\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n        hasPreviousPage\n        startCursor\n      }\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"FilterLedgerAccounts variables - by type\",\n              children: `{\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  },\n  \"filter\": {\n    \"type\": {\n      \"equalTo\": \"asset\"\n    }\n  }\n}`\n            }), _jsx(_components.p, {\n              children: \"You can combine filters by adding multiple components to the filter block. Results are AND'd:\"\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"FilterLedgerAccounts variables - by type\",\n              children: `{\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  },\n  \"filter\": {\n    \"type\": {\n      \"equalTo\": \"asset\",\n      \"hasParentLedgerAccount\": true\n    }\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Pagination\",\n            id: \"query-data-basics-pagination\",\n            children: [_jsx(_components.p, {\n              children: \"Fields that return lists support cursor-based pagination:\"\n            }), _jsxs(_components.ul, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [\"Results are returned under a \", _jsx(_components.code, {\n                  children: \"nodes\"\n                }), \" property as an array. The \", _jsx(_components.code, {\n                  children: \"pageInfo\"\n                }), \" property contains cursors pointing to the next page and previous pages.\"]\n              }), \"\\n\", _jsxs(_components.li, {\n                children: [\"You can send a cursor to the \", _jsx(_components.code, {\n                  children: \"after\"\n                }), \" (or \", _jsx(_components.code, {\n                  children: \"before\"\n                }), \") arguments on list fields to retrieve a specific page.\"]\n              }), \"\\n\", _jsxs(_components.li, {\n                children: [\"The \", _jsx(_components.code, {\n                  children: \"first\"\n                }), \" (or \", _jsx(_components.code, {\n                  children: \"last\"\n                }), \") argument sets the page size. The default is 20 and the maximum is 200.\"]\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Once a page size has been set in the initial request, all subsequent pagination requests have to use the same page size.\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Results are returned in a deterministic order. This is generally reverse chronological, newest first. This sort is by posted date for Ledger Lines and Ledger Entries, or creation date for other entities.\"\n              }), \"\\n\"]\n            }), _jsx(_components.p, {\n              children: \"This query uses pagination to retrieve two Ledger Accounts at a time:\"\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"GetLedgerAccounts query with pagination\",\n              children: `query GetLedgerAccounts(\n    $ledgerIk: SafeString!\n    $after: String\n    $first: Int\n    $before: String\n  ) {\n    ledger(ledger: { ik: $ledgerIk }) {\n      ledgerAccounts(\n        after: $after\n        first: $first\n        before: $before\n      ) {\n        nodes {\n          path\n          name\n          type\n        }\n        pageInfo {\n          hasNextPage\n          endCursor\n          hasPreviousPage\n          startCursor\n        }\n      }\n    }\n  }`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetLedgerAccounts variables\",\n              children: `{\n  \"ledgerIk\": \"ik-used-to-create-ledger\",\n  \"first\": 2\n}`\n            }), _jsx(_components.p, {\n              children: \"The response is:\"\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetLedgerAccounts first page response\",\n              children: `{\n  \"data\": {\n    \"ledger\": {\n      \"ledgerAccounts\": {\n        \"nodes\": [\n          {\n            \"path\": \"assets/test-assets/test:1\",\n            \"name\": \"Test 1\",\n            \"type\": \"asset\"\n          },\n          {\n            \"path\": \"assets/test-assets/test:2\",\n            \"name\": \"Test 2\",\n            \"type\": \"asset\"\n          }\n        ],\n        \"pageInfo\": {\n          \"hasNextPage\": true,\n          \"endCursor\": \"\u003csome-end-cursor\u003e\",\n          \"hasPreviousPage\": false,\n          \"startCursor\": null\n        }\n      }\n    }\n  }\n}`\n            }), _jsxs(_components.p, {\n              children: [\"To retrieve the next page, send the same query but with the \", _jsx(_components.code, {\n                children: \"after\"\n              }), \" parameter set on \", _jsx(_components.code, {\n                children: \"ledgerAccounts\"\n              }), \":\"]\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetLedgerAccounts next page variables\",\n              children: `{\n  \"ledgerIk\": \"ik-used-to-create-ledger\",\n  \"after\": \"\u003csome-end-cursor\u003e\"\n}`\n            }), _jsx(_components.p, {\n              children: \"The response is:\"\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetLedgerAccounts second page response\",\n              children: `{\n  \"data\": {\n    \"ledger\": {\n      \"ledgerAccounts\": {\n        \"nodes\": [\n          {\n            \"path\": \"assets/test-assets/test:3\",\n            \"name\": \"Test 3\",\n            \"type\": \"asset\"\n          },\n          {\n            \"path\": \"assets/test-assets/test:4\",\n            \"name\": \"Test 4\",\n            \"type\": \"asset\"\n          }\n        ],\n        \"pageInfo\": {\n          \"hasNextPage\": false,\n          \"endCursor\": null,\n          \"hasPreviousPage\": true,\n          \"startCursor\": \"\u003csome-start-cursor\u003e\"\n        }\n      }\n    }\n  }\n}`\n            }), _jsxs(_components.p, {\n              children: [\"To retrieve the previous page of results, send the same query but with the \", _jsx(_components.code, {\n                children: \"before\"\n              }), \" parameter set on \", _jsx(_components.code, {\n                children: \"ledgerAccounts\"\n              }), \". The response is the first page of results.\"]\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetLedgerAccounts previous page variables\",\n              children: `{\n  \"ledgerIk\": \"ik-used-to-create-ledger\",\n  \"before\": \"\u003csome-start-cursor\u003e\"\n}`\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"query-data-ledgers\",\n          title: \"Ledgers\",\n          label: \"b\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsxs(Subpage, {\n            title: \"Lookup\",\n            id: \"query-data-ledgers-lookup\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use the \", _jsx(_components.code, {\n                children: \"ledger\"\n              }), \" query to retrieve a Ledger by the IK used to create it:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"GetLedger\",\n              children: `query GetLedger($ledger: LedgerMatchInput!) {\n  ledger(ledger: $ledger) {\n    name\n    created\n    balanceUTCOffset\n    ledgerAccounts {\n      nodes {\n        name\n        type\n      }\n    }\n    schema {\n      key\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetLedger variables\",\n              children: `{\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"List\",\n            id: \"query-data-ledgers-list\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use the \", _jsx(_components.code, {\n                children: \"ledgers\"\n              }), \" query to list all the Ledgers in your workspace:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"ListLedgers\",\n              children: `query ListLedgers {\n  ledgers {\n    nodes {\n      name\n      created\n      balanceUTCOffset\n      ledgerAccounts {\n        nodes {\n          name\n          type\n        }\n      }\n      schema {\n        key\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n      hasPreviousPage\n      startCursor\n    }\n  }\n}\n`\n            }), _jsxs(_components.p, {\n              children: [\"The response is a \", _jsx(_components.a, {\n                href: \"#query-data-basics-pagination\",\n                children: \"paginated\"\n              }), \" list of Ledgers.\"]\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"query-data-ledger-accounts\",\n          title: \"Ledger Accounts\",\n          label: \"c\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsxs(Subpage, {\n            title: \"Lookup\",\n            id: \"query-data-ledger-accounts-lookup\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use the \", _jsx(_components.code, {\n                children: \"ledgerAccount\"\n              }), \" query to retrieve a Ledger Account by its path in the Schema:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"GetLedgerAccount\",\n              children: `query GetLedgerAccount(\n  $ledgerAccount: LedgerAccountMatchInput!\n) {\n  ledgerAccount(ledgerAccount: $ledgerAccount) {\n    path\n    name\n    balance\n    type\n    lines {\n      nodes {\n        amount\n        posted\n      }\n    }\n  }\n}\n`\n            }), _jsx(_components.p, {\n              children: \"The IK of the Ledger needs to be provided along with the Ledger Account's path:\"\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetLedgerAccount Variables\",\n              children: `{\n  \"ledgerAccount\": {\n    \"path\": \"assets/bank/user-cash\",\n    \"ledger\": {\n      \"ik\": \"quickstart-ledger\"\n    }\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Lookup multiple\",\n            id: \"query-data-ledger-accounts-lookup-multiple\",\n            children: [_jsxs(_components.p, {\n              children: [\"You can also retrieve multiple Ledger Accounts using the \", _jsx(_components.code, {\n                children: \"ledgerAccounts\"\n              }), \" query and the \", _jsx(_components.code, {\n                children: \"in\"\n              }), \" filter:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"ListLedgerAccounts\",\n              children: `query ListLedgerAccounts($ledger: LedgerMatchInput!) {\n  ledger(ledger: $ledger) {\n    ledgerAccounts {\n      nodes {\n        name\n        type\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n        hasPreviousPage\n        startCursor\n      }\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetLedgerAccount Variables with In\",\n              children: `{\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  },\n  \"filter\": {\n    \"ledgerAccount\": {\n      \"in\": [\n        {\n          \"path\": \"assets/banks/user-cash\"\n        },\n        {\n          \"path\": \"income-root/income-revenue-root\"\n        }\n      ]\n    }\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"List\",\n            id: \"query-data-ledger-accounts-list\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use the \", _jsx(_components.code, {\n                children: \"ledger.ledgerAccounts\"\n              }), \" query to list all Ledger Accounts within a Ledger:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"ListLedgerAccounts\",\n              children: `query ListLedgerAccounts($ledger: LedgerMatchInput!) {\n  ledger(ledger: $ledger) {\n    ledgerAccounts {\n      nodes {\n        name\n        type\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n        hasPreviousPage\n        startCursor\n      }\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"ListLedgerAccounts variables\",\n              children: `{\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  }\n}`\n            }), _jsxs(_components.p, {\n              children: [\"The response is a \", _jsx(_components.a, {\n                href: \"#query-data-basics-pagination\",\n                children: \"paginated\"\n              }), \" list of Ledger Accounts.\"]\n            })]\n          }), _jsxs(Subpage, {\n            title: \"List balances\",\n            id: \"query-data-ledger-accounts-list-balances\",\n            children: [_jsx(_components.p, {\n              children: \"Since a Ledger Account can have balances in multiple currencies, you can list its balance and balance changes across all currencies:\"\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"GetLedgerAccountBalances\",\n              children: `query GetLedgerAccountBalances(\n  $ledgerAccount: LedgerAccountMatchInput!\n) {\n  ledgerAccount(ledgerAccount: $ledgerAccount) {\n    path\n    name\n    balances {\n      nodes {\n        amount\n        currency {\n          code\n          customCurrencyId\n        }\n      }\n    }\n    end_of_year_balances: balances(at: \"1969\") {\n      nodes {\n        amount\n        currency {\n          code\n          customCurrencyId\n        }\n      }\n    }\n    last_year: balanceChanges(period: \"1968\") {\n      nodes {\n        amount\n        currency {\n          code\n          customCurrencyId\n        }\n      }\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetLedgerAccountBalances Variables\",\n              children: `{\n  \"ledgerAccount\": {\n    \"path\": \"assets/bank/user-cash\",\n    \"ledger\": {\n      \"ik\": \"quickstart-ledger\"\n    }\n  }\n}`\n            }), _jsxs(_components.p, {\n              children: [\"Read more about handling multi-currency balances in \", _jsx(_components.a, {\n                href: \"#handle-currencies\",\n                children: \"Handle currencies\"\n              }), \".\"]\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Filter by type\",\n            id: \"query-data-ledger-accounts-filter-by-type\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use the \", _jsx(_components.code, {\n                children: \"type\"\n              }), \" parameter to filter Ledger Account lists:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"FilterLedgerAccounts query\",\n              children: `query FilterLedgerAccounts(\n    $ledger: LedgerMatchInput!,\n    $filter: LedgerAccountsFilterSet!\n) {\n  ledger(ledger: $ledger) {\n    ledgerAccounts(filter: $filter) {\n      nodes {\n        name\n        type\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n        hasPreviousPage\n        startCursor\n      }\n    }\n  }\n}\n`\n            }), _jsxs(_components.p, {\n              children: [\"Use \", _jsx(_components.code, {\n                children: \"type\"\n              }), \" to filter Ledger Accounts by their type:\"]\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"FilterLedgerAccounts variables - by type\",\n              children: `{\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  },\n  \"filter\": {\n    \"type\": {\n      \"equalTo\": \"asset\"\n    }\n  }\n}`\n            }), _jsxs(_components.p, {\n              children: [\"You can also filter for multiple types in one query, using \", _jsx(_components.code, {\n                children: \"in\"\n              }), \". This can be useful to \", _jsx(_components.a, {\n                href: \"#generate-reports\",\n                children: \"Generate reports\"\n              }), \":\"]\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"FilterLedgerAccounts variables - type in\",\n              children: `{\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  },\n  \"filter\": {\n    \"type\": {\n      \"in\": [\"asset\", \"liability\"]\n    }\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Filter by path\",\n            id: \"query-data-ledger-accounts-filter-by-path\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use \", _jsx(_components.code, {\n                children: \"path\"\n              }), \" and wildcard matching (\", _jsx(_components.code, {\n                children: \"*\"\n              }), \") in place of template variables to query all instances of Ledger Accounts with \", _jsx(_components.code, {\n                children: \"template: true\"\n              }), \".\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"FilterLedgerAccounts query\",\n              children: `query FilterLedgerAccounts(\n    $ledger: LedgerMatchInput!,\n    $filter: LedgerAccountsFilterSet!\n) {\n  ledger(ledger: $ledger) {\n    ledgerAccounts(filter: $filter) {\n      nodes {\n        name\n        type\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n        hasPreviousPage\n        startCursor\n      }\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"FilterLedgerAccounts variables - by external account\",\n              children: `{\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  },\n  \"filter\": {\n    \"path\": {\n      \"matches\": \"liability-root/user:*/pending\"\n    }\n  }\n}`\n            }), _jsxs(_components.p, {\n              children: [\"Read more about filtering Ledger Accounts in \", _jsx(_components.a, {\n                href: \"#query-data-basics-filtering\",\n                children: \"filtering\"\n              }), \".\"]\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Filter by Link\",\n            id: \"query-data-ledger-accounts-filter-by-link\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use \", _jsx(_components.code, {\n                children: \"linkedAccount\"\n              }), \" to filter Ledger Accounts by the External Account they're linked to:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"FilterLedgerAccounts query\",\n              children: `query FilterLedgerAccounts(\n    $ledger: LedgerMatchInput!,\n    $filter: LedgerAccountsFilterSet!\n) {\n  ledger(ledger: $ledger) {\n    ledgerAccounts(filter: $filter) {\n      nodes {\n        name\n        type\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n        hasPreviousPage\n        startCursor\n      }\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"FilterLedgerAccounts variables - by external account\",\n              children: `{\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  },\n  \"filter\": {\n    \"linkedAccount\": {\n      \"in\": [\n        {\n          \"linkId\": \"\u003clink id\u003e\",\n          \"externalId\": \"account-id-at-bank\"\n        },\n        {\n          \"linkId\": \"\u003clink id\u003e\",\n          \"externalId\": \"account2-id-at-bank\"\n        }\n      ]\n    }\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Filter by parent\",\n            id: \"query-data-ledger-accounts-filter-by-parent\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use \", _jsx(_components.code, {\n                children: \"hasParentLedgerAccount\"\n              }), \" to filter Ledger Accounts by their parent status:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"FilterLedgerAccounts query\",\n              children: `query FilterLedgerAccounts(\n    $ledger: LedgerMatchInput!,\n    $filter: LedgerAccountsFilterSet!\n) {\n  ledger(ledger: $ledger) {\n    ledgerAccounts(filter: $filter) {\n      nodes {\n        name\n        type\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n        hasPreviousPage\n        startCursor\n      }\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"FilterLedgerAccounts variables - by external account\",\n              children: `{\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  },\n  \"filter\": {\n    \"hasParentLedgerAccount\": false\n  }\n}`\n            }), _jsxs(_components.p, {\n              children: [\"Read more about filtering Ledger Accounts in \", _jsx(_components.a, {\n                href: \"#query-data-basics-filtering\",\n                children: \"filtering\"\n              }), \".\"]\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"query-data-ledger-lines\",\n          title: \"Ledger Lines\",\n          label: \"d\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsxs(Subpage, {\n            title: \"Lookup\",\n            id: \"query-data-ledger-lines-lookup\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use the \", _jsx(_components.code, {\n                children: \"ledgerLine\"\n              }), \" query to retrieve a Ledger Line by its ID:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"GetLedgerLine\",\n              children: `query GetLedgerLine(\n  $ledgerLine: LedgerLineMatchInput!\n) {\n  ledgerLine(ledgerLine: $ledgerLine) {\n    amount\n    currency {\n      code\n      customCurrencyId\n    }\n    account {\n      name\n      type\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"FilterLedgerAccountLines Variables\",\n              children: `{\n  \"ledgerLine\": {\n    \"id\": \"\u003cledger line ID\u003e\"\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"List\",\n            id: \"query-data-ledger-lines-list\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use the \", _jsx(_components.code, {\n                children: \"ledgerAccount.lines\"\n              }), \" query to list the lines in a Ledger Account:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"GetLedgerAccountLines\",\n              children: `query GetLedgerAccountLines(\n  $ledgerAccount: LedgerAccountMatchInput!\n) {\n  ledgerAccount(ledgerAccount: $ledgerAccount) {\n    path\n    name\n    lines {\n      nodes {\n        amount\n        currency {\n          code\n          customCurrencyId\n        }\n      }\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetLedgerAccountLines Variables\",\n              children: `{\n  \"ledgerAccount\": {\n    \"path\": \"assets/bank/user-cash\",\n    \"ledger\": {\n      \"ik\": \"quickstart-ledger\"\n    }\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Filter by posted\",\n            id: \"query-data-ledger-lines-filter-by-posted\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use \", _jsx(_components.code, {\n                children: \"posted\"\n              }), \" to filter Ledger Lines by their posted timestamp between any two points in time:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"FilterLedgerAccountLines\",\n              children: `query GetLedgerAccountLines(\n  $ledgerAccount: LedgerAccountMatchInput!,\n  $filter: LedgerLinesFilterSet!\n) {\n  ledgerAccount(ledgerAccount: $ledgerAccount) {\n    path\n    name\n    lines(filter: $filter) {\n      nodes {\n        id\n        amount\n        currency {\n          code\n          customCurrencyId\n        }\n      }\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"FilterLedgerAccountLines Variables\",\n              children: `{\n  \"ledgerAccount\": {\n    \"path\": \"assets/banks/user-cash\",\n    \"ledger\": {\n      \"ik\": \"quickstart-ledger\"\n    }\n  },\n  \"filter\": {\n    \"posted\": {\n      \"after\": \"1969-07-01T00:00:00.000Z\",\n      \"before\": \"1969-07-30T23:59:59.999Z\"\n    }\n  }\n}`\n            }), _jsxs(_components.p, {\n              children: [\"The \", _jsx(_components.code, {\n                children: \"after\"\n              }), \" and \", _jsx(_components.code, {\n                children: \"before\"\n              }), \" filters are inclusive, so use timestamps for the first and last moments of the period you're querying for.\"]\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Filter by key\",\n            id: \"query-data-ledger-lines-filter-by-key\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use \", _jsx(_components.code, {\n                children: \"key\"\n              }), \" to filter Ledger Lines by their keys in your Schema:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"FilterLedgerAccountLines\",\n              children: `query GetLedgerAccountLines(\n  $ledgerAccount: LedgerAccountMatchInput!,\n  $filter: LedgerLinesFilterSet!\n) {\n  ledgerAccount(ledgerAccount: $ledgerAccount) {\n    path\n    name\n    lines(filter: $filter) {\n      nodes {\n        id\n        amount\n        currency {\n          code\n          customCurrencyId\n        }\n      }\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"FilterLedgerAccountLines Variables\",\n              children: `{\n  \"ledgerAccount\": {\n    \"path\": \"assets/banks/user-cash\",\n    \"ledger\": {\n      \"ik\": \"quickstart-ledger\"\n    }\n  },\n  \"linesFilter\": {\n    \"key\": {\n      \"equalTo\": \"increase_user_balance\"\n    }\n  }\n}`\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"query-data-ledger-entries\",\n          title: \"Ledger Entries\",\n          label: \"e\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsxs(Subpage, {\n            title: \"Lookup\",\n            id: \"query-data-ledger-entries-lookup\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use the \", _jsx(_components.code, {\n                children: \"ledgerEntry\"\n              }), \" query to retrieve a Ledger Entry by its IK. You provide the IK when posting entries via \", _jsx(_components.code, {\n                children: \"addLedgerEntry\"\n              }), \":\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"GetLedgerEntry\",\n              children: `query GetLedgerEntry(\n  $ledgerEntry: LedgerEntryMatchInput!\n) {\n  ledgerEntry(ledgerEntry: $ledgerEntry) {\n    id\n    ik\n    ledger {\n      id\n      name\n    }\n    lines {\n      nodes {\n        amount\n        currency {\n          code\n          customCurrencyId\n        }\n      }\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetLedgerEntry Variables - by IK\",\n              children: `{\n  \"ledgerEntry\": {\n    \"ik\": \"\u003cledger entry IK\u003e\"\n  }\n}`\n            }), _jsxs(_components.p, {\n              children: [\"When you \", _jsx(_components.a, {\n                href: \"#reconcile-transactions-reconcile-a-tx\",\n                children: \"Reconcile transactions\"\n              }), \" using \", _jsx(_components.code, {\n                children: \"reconcileTx\"\n              }), \", the IK is the Transaction's \", _jsx(_components.code, {\n                children: \"externalId\"\n              }), \". Query \", _jsx(_components.code, {\n                children: \"entry.ik\"\n              }), \" in \", _jsx(_components.code, {\n                children: \"ReconcileTxResult\"\n              }), \" to retrieve it:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"Querying IK in reconcileTx\",\n              children: `mutation ReconcileTx(\n  $entry: LedgerEntryInput!\n) {\n  reconcileTx(entry: $entry) {\n    ... on ReconcileTxResult {\n      entry {\n        ik\n        type\n        created\n        posted\n      }\n      lines {\n        amount\n        account {\n          path\n        }\n      }\n    }\n    ... on Error {\n      code\n      message\n    }\n  }\n}\n`\n            }), _jsx(_components.p, {\n              children: \"A Ledger Entry can also be retrieved using its ID:\"\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetLedgerEntry Variables - by ID\",\n              children: `{\n  \"ledgerEntry\": {\n    \"id\": \"\u003cledger entry ID\u003e\"\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Lookup multiple\",\n            id: \"query-data-ledger-entries-lookup-multiple\",\n            children: [_jsxs(_components.p, {\n              children: [\"You can also retrieve multiple Ledger Entries using the \", _jsx(_components.code, {\n                children: \"ledgerEntries\"\n              }), \" query and the \", _jsx(_components.code, {\n                children: \"in\"\n              }), \" filter:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"ListLedgerEntries\",\n              children: `query ListLedgerEntries(\n  $ledger: LedgerMatchInput!\n  $filter: LedgerEntriesFilterSet!\n) {\n  ledger(ledger: $ledger) {\n    ledgerEntries(filter: $filter) {\n      nodes {\n        ik\n        type\n        posted\n        lines {\n          nodes {\n            amount\n            account {\n              path\n            }\n          }\n        }\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n        hasPreviousPage\n        startCursor\n      }\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"ListLedgerEntries Variables with In\",\n              children: `{\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  },\n  \"filter\": {\n    \"ledgerEntry\": {\n      \"in\": [\n        {\n          \"ik\": \"fund-user-1-account\"\n        },\n        {\n          \"ik\": \"fund-user-2-account\"\n        }\n      ]\n    }\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"List by group\",\n            id: \"query-data-ledger-entries-list-by-group\",\n            children: [_jsxs(_components.p, {\n              children: [\"You can get a \", _jsx(_components.a, {\n                href: \"#query-data-basics-pagination\",\n                children: \"paginated\"\n              }), \" list of Ledger Entries in a given group using the \", _jsx(_components.code, {\n                children: \"ledgerEntryGroup.ledgerEntries\"\n              }), \" expansion:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"GetGroupedLedgerEntries\",\n              children: `query GetGroupedLedgerEntries(\n  $ledger: LedgerMatchInput!,\n  $entryGroup: EntryGroupMatchInput!,\n) {\n  ledger(ledger: $ledger) {\n    ledgerEntryGroup(ledgerEntryGroup: $entryGroup) {\n      ledgerEntries {\n        nodes {\n          ik\n          description\n          posted\n        }\n        pageInfo {\n          endCursor\n          hasNextPage\n          hasPreviousPage\n          startCursor\n        }\n      }\n    }\n  }\n}`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetGroupedLedgerEntries Variables\",\n              children: `{\n  \"ledgerEntryGroup\": {\n    \"key\": \"withdrawal\",\n    \"value\": \"12345\"\n  },\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  }\n}`\n            }), _jsx(_components.p, {\n              children: \"The response is:\"\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetGroupedLedgerEntries Response\",\n              children: `{\n  \"data\": {\n    \"ledger\": {\n      \"ledgerEntryGroup\": {\n        \"ledgerEntries\": {\n          \"nodes\": [\n            {\n              \"ik\": \"ledger-entry-2\",\n              \"description\":\"User user-id withdrawal settled\",\n              \"posted\": \"1969-06-21T02:56:05.000Z\"\n            },\n            {\n              \"ik\": \"ledger-entry-1\",\n              \"description\": \"User user-id initiated withdrawal for 50000.\",\n              \"posted\": \"1969-06-16T13:32:00.000Z\"\n            }\n          ],\n          \"pageInfo\": {\n            \"hasNextPage\": false,\n            \"endCursor\": null,\n            \"hasPreviousPage\": false,\n            \"startCursor\": null\n          }\n        }\n      }\n    }\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Expand lines\",\n            id: \"query-data-ledger-entries-expand-lines\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use the \", _jsx(_components.code, {\n                children: \"ledgerEntry.lines\"\n              }), \" expansion to list the Ledger Lines in a Ledger Entry:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"GetLedgerEntryLines\",\n              children: `query GetLedgerEntryLines(\n  $ledgerEntry: LedgerEntryMatchInput!\n) {\n  ledgerEntry(ledgerEntry: $ledgerEntry) {\n    id\n    ik\n    lines {\n      nodes {\n        account {\n          path\n        }\n        amount\n        currency {\n          code\n          customCurrencyId\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n        hasPreviousPage\n        startCursor\n      }\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetLedgerEntryLines Variables\",\n              children: `{\n  \"ledgerEntry\": {\n    \"ik\": \"\u003cledger entry IK\u003e\"\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Filter by posted\",\n            id: \"query-data-ledger-entries-filter-by-posted\",\n            children: [_jsxs(_components.p, {\n              children: [\"Similar to Ledger Lines, Ledger Entries can be filtered by their posted timestamp between any two points in time using \", _jsx(_components.code, {\n                children: \"posted\"\n              }), \":\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"FilterLedgerEntries\",\n              children: `query FilterLedgerEntries(\n  $ledger: LedgerMatchInput!,\n  $entriesFilter: LedgerEntriesFilterSet!\n) {\n  ledger(ledger: $ledger) {\n    ledgerEntries(filter: $entriesFilter) {\n      nodes {\n        ik\n        type\n        posted\n        lines {\n          nodes {\n            amount\n            account {\n              path\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`\n            }), _jsxs(_components.p, {\n              children: [\"Use \", _jsx(_components.code, {\n                children: \"after\"\n              }), \" and \", _jsx(_components.code, {\n                children: \"before\"\n              }), \" to filter Ledger Entries by their posted timestamp between any two points in time:\"]\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"FilterLedgerEntries Variables\",\n              children: `{\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  },\n  \"entriesFilter\": {\n    \"posted\": {\n      \"after\": \"01-01-1968\",\n      \"before\": \"01-01-1969\"\n    }\n  }\n}`\n            }), _jsxs(_components.p, {\n              children: [\"Use \", _jsx(_components.code, {\n                children: \"date\"\n              }), \" to filter Ledger Entries by the date they were posted on:\"]\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"FilterLedgerEntries Variables\",\n              children: `{\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  },\n  \"entriesFilter\": {\n    \"date\": {\n      \"equalTo\": \"12-31-1968\"\n    }\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Filter by type\",\n            id: \"query-data-ledger-entries-filter-by-type\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use \", _jsx(_components.code, {\n                children: \"type\"\n              }), \" to filter Ledger Entries by their type defined in your Schema:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"FilterLedgerEntries\",\n              children: `query FilterLedgerEntries(\n  $ledger: LedgerMatchInput!,\n  $entriesFilter: LedgerEntriesFilterSet!\n) {\n  ledger(ledger: $ledger) {\n    ledgerEntries(filter: $entriesFilter) {\n      nodes {\n        ik\n        type\n        posted\n        lines {\n          nodes {\n            amount\n            account {\n              path\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"FilterLedgerEntries Variables\",\n              children: `{\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  },\n  \"entriesFilter\": {\n    \"type\": {\n      \"in\": [\"withdrawal\", \"p2p_transfer\"]\n    }\n  }\n}`\n            }), _jsxs(_components.p, {\n              children: [\"To retrieve Ledger Entries of multiple types, use the \", _jsx(_components.code, {\n                children: \"in\"\n              }), \" operator:\"]\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"FilterLedgerEntries Variables\",\n              children: `{\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  },\n  \"entriesFilter\": {\n    \"type\": {\n      \"in\": [\"withdrawal\", \"p2p_transfer\"]\n    }\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Filter by tag\",\n            id: \"query-data-ledger-entries-filter-by-tag\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use \", _jsx(_components.code, {\n                children: \"tag\"\n              }), \" to filter Ledger Entries by \", _jsx(_components.a, {\n                href: \"#store-metadata\",\n                children: \"tags\"\n              }), \":\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"FilterLedgerEntries\",\n              children: `query FilterLedgerEntries(\n  $ledger: LedgerMatchInput!,\n  $entriesFilter: LedgerEntriesFilterSet!\n) {\n  ledger(ledger: $ledger) {\n    ledgerEntries(filter: $entriesFilter) {\n      nodes {\n        ik\n        type\n        posted\n        tags {\n          key\n          value\n        }\n      }\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"FilterLedgerEntries Variables\",\n              children: `{\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  },\n  \"entriesFilter\": {\n    \"tag\": {\n      \"equalTo\": {\n        \"key\": \"user_id\",\n        \"value\": \"user-1\"\n      }\n    }\n  }\n}`\n            }), _jsxs(_components.p, {\n              children: [\"Use the \", _jsx(_components.code, {\n                children: \"in\"\n              }), \" operator to return Ledger Entries that have any of the specified tags:\"]\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"FilterLedgerEntries Variables\",\n              children: `{\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  },\n  \"entriesFilter\": {\n    \"tag\": {\n      \"in\": [{\n        \"key\": \"user_id\",\n        \"value\": \"user-1\"\n      },{\n        \"key\": \"user_id\",\n        \"value\": \"user-2\"\n      }]\n    }\n  }\n}`\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"query-data-ledger-entry-groups\",\n          title: \"Ledger Entry Groups\",\n          label: \"f\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"See \", _jsx(_components.a, {\n              href: \"#group-ledger-entries\",\n              children: \"Group Ledger Entries\"\n            }), \" for more information about how to use Ledger Entry Groups.\"]\n          }), _jsxs(Subpage, {\n            title: \"Lookup\",\n            id: \"query-data-ledger-entry-groups-lookup\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use the \", _jsx(_components.code, {\n                children: \"ledger.ledgerEntryGroup\"\n              }), \" expansion to lookup a group by key and value.\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"GetLedgerEntryGroup\",\n              children: `query GetLedgerEntryGroup(\n  $ledger: LedgerMatchInput!\n  $entryGroup: EntryGroupMatchInput!\n) {\n  ledger(ledger: $ledger) {\n    ledgerEntryGroup(ledgerEntryGroup: $entryGroup) {\n      key\n      value\n      created\n    }\n  }\n}`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetLedgerEntryGroup Variables\",\n              children: `{\n  \"entryGroup\": {\n    \"key\": \"withdrawal\",\n    \"value\": \"12345\"\n  },\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  }\n}`\n            }), _jsx(_components.p, {\n              children: \"The response is:\"\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetLedgerEntryGroup Response\",\n              children: `{\n  \"data\": {\n    \"ledger\": {\n      \"ledgerEntryGroup\": {\n        \"key\": \"withdrawal\",\n        \"value\": \"12345\",\n        \"created\": \"1969-06-16T13:32:00.000Z\"\n      }\n    }\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"List\",\n            id: \"query-data-ledger-entry-groups-list\",\n            children: [_jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"ListLedgerEntryGroups\",\n              children: `query ListLedgerEntryGroups(\n  $ledger: LedgerMatchInput!\n) {\n  ledger(ledger: $ledger) {\n    ledgerEntryGroups {\n      nodes {\n        key\n        value\n        created\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n        hasPreviousPage\n        startCursor\n      }\n    }\n  }\n}`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"ListLedgerEntryGroups Variables\",\n              children: `{\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  }\n}`\n            }), _jsx(_components.p, {\n              children: \"The response is:\"\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"ListLedgerEntryGroups Response\",\n              children: `{\n  \"data\": {\n    \"ledger\": {\n      \"ledgerEntryGroups\": {\n        \"nodes\": [\n          {\n            \"key\": \"withdrawal\",\n            \"value\": \"12345\",\n            \"created\": \"1969-06-16T13:32:00.000Z\"\n          },\n          {\n            \"key\": \"withdrawal\",\n            \"value\": \"54321\",\n            \"created\": \"1969-06-21T02:56:05.000Z\"\n          }\n        ],\n        \"pageInfo\": {\n          \"endCursor\": null,\n          \"hasNextPage\": false,\n          \"hasPreviousPage\": false,\n          \"startCursor\": null\n        }\n      }\n    }\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Filter\",\n            id: \"query-data-ledger-entry-groups-filter\",\n            children: [_jsxs(_components.p, {\n              children: [\"You can filter groups by \", _jsx(_components.code, {\n                children: \"key\"\n              }), \" and/or \", _jsx(_components.code, {\n                children: \"created\"\n              })]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"ListLedgerEntryGroups\",\n              children: `query ListLedgerEntryGroups(\n  $ledger: LedgerMatchInput!\n  $filter: LedgerEntryGroupsFilterSet,\n) {\n  ledger(ledger: $ledger) {\n    ledgerEntryGroups(filter: $filter) {\n      nodes {\n        key\n        value\n        created\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n        hasPreviousPage\n        startCursor\n      }\n    }\n  }\n}`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"ListLedgerEntryGroups Variables\",\n              children: `{\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  },\n  \"filter\": {\n    \"key\": {\n      \"equalTo\": \"withdrawal\"\n    },\n    \"created\": {\n      \"before\": \"1969-06-20T00:00:00.000Z\"\n    }\n  }\n}`\n            }), _jsx(_components.p, {\n              children: \"The response is:\"\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"ListLedgerEntryGroups Response\",\n              children: `{\n  \"data\": {\n    \"ledger\": {\n      \"ledgerEntryGroups\": {\n        \"nodes\": [\n          {\n            \"key\": \"withdrawal\",\n            \"value\": \"12345\",\n            \"created\": \"1969-06-16T13:32:00.000Z\"\n          }\n        ],\n        \"pageInfo\": {\n          \"endCursor\": null,\n          \"hasNextPage\": false,\n          \"hasPreviousPage\": false,\n          \"startCursor\": null\n        }\n      }\n    }\n  }\n}`\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"query-data-links\",\n          title: \"Links\",\n          label: \"g\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsxs(Subpage, {\n            title: \"Lookup\",\n            id: \"query-data-links-lookup\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use the \", _jsx(_components.code, {\n                children: \"link\"\n              }), \" query to retrieve a Link by ID:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"GetLink\",\n              children: `query GetLink($link: LinkMatchInput!) {\n  link(link: $link) {\n    __typename\n    name\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetLink Variables\",\n              children: `{\n  \"link\": {\n    \"id\": \"\u003cLink ID\u003e\"\n  }\n}`\n            }), _jsxs(_components.p, {\n              children: [\"The \", _jsx(_components.code, {\n                children: \"__typename\"\n              }), \" field will indicate whether it is a \", _jsx(_components.a, {\n                href: \"#reconcile-transactions-native-links\",\n                children: \"Native Link\"\n              }), \" or a \", _jsx(_components.a, {\n                href: \"#reconcile-transactions-link-any-system\",\n                children: \"Custom Link\"\n              }), \".\"]\n            })]\n          }), _jsxs(Subpage, {\n            title: \"External Accounts\",\n            id: \"query-data-links-external-accounts\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use the \", _jsx(_components.code, {\n                children: \"link.externalAccounts\"\n              }), \" to list External Accounts represented by the Link.\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"GetLinkExternalAccounts\",\n              children: `query GetLinkExternalAccounts($link: LinkMatchInput!) {\n  link(link: $link) {\n    id\n    externalAccounts {\n      nodes {\n        name\n        id\n        externalId\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n        hasPreviousPage\n        startCursor\n      }\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetLinkExternalAccounts Variables\",\n              children: `{\n  \"link\": {\n    \"id\": \"\u003cLink ID\u003e\"\n  }\n}`\n            }), _jsxs(_components.p, {\n              children: [\"The response is a \", _jsx(_components.a, {\n                href: \"#query-data-basics-pagination\",\n                children: \"paginated\"\n              }), \" list of External Accounts.\"]\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"query-data-external-accounts\",\n          title: \"External Accounts\",\n          label: \"h\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsxs(Subpage, {\n            title: \"Lookup\",\n            id: \"query-data-external-accounts-lookup\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use the \", _jsx(_components.code, {\n                children: \"externalAccount\"\n              }), \" query to retrieve an ExternalAccount by its ID at your external system:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"GetExternalAccountByExternalIdAndLinkId\",\n              children: `query GetExternalAccount(\n  $externalId: ID!\n  $linkId: ID!\n) {\n  externalAccount(\n    externalAccount: {\n      externalId: $externalId\n      linkId: $linkId\n    }\n  ) {\n    name\n    link {\n      __typename\n      id\n      name\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetExternalAccountByExternalIdAndLinkId Variables\",\n              children: `{\n  \"externalId\": \"\u003cExternal ID\u003e\",\n  \"linkId\": \"\u003cLink ID\u003e\"\n}`\n            }), _jsxs(_components.p, {\n              children: [\"Or by its \", _jsx(InlineLogo, {}), \" ID:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"GetExternalAccountByFragmentID\",\n              children: `query GetExternalAccount($id: ID!) {\n  externalAccount(externalAccount: { id: $id }) {\n    name\n    externalId\n    linkId\n    link {\n      __typename\n      id\n      name\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetExternalAccountByFragmentID Variables\",\n              children: `{\n  \"id\": \"\u003cFragment External Account ID\u003e\"\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Txs\",\n            id: \"query-data-external-accounts-txs\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use the \", _jsx(_components.code, {\n                children: \"externalAccount.txs\"\n              }), \" query to list Txs synced to an External Account:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"ListExternalAccountTxs\",\n              children: `query ListExternalAccountTxs(\n  $externalAccount: ExternalAccountMatchInput!\n  $after: String\n  $first: Int\n  $before: String\n) {\n  externalAccount(\n    externalAccount: $externalAccount\n  ) {\n    externalId\n    link {\n      __typename\n      id\n      name\n    }\n    txs(\n      after: $after\n      first: $first\n      before: $before\n    ) {\n      nodes {\n        externalId\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n        hasPreviousPage\n        startCursor\n      }\n    }\n  }\n}\n`\n            }), _jsxs(_components.p, {\n              children: [\"You may optionally specify \", _jsx(_components.code, {\n                children: \"before\"\n              }), \" and \", _jsx(_components.code, {\n                children: \"after\"\n              }), \" to paginate the results and \", _jsx(_components.code, {\n                children: \"first\"\n              }), \" to specify the page size.\"]\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"ListExternalAccountTxs Variables\",\n              children: `{\n  \"externalAccount\": {\n    \"externalId\": \"\u003cExternal ID\u003e\",\n    \"linkId\": \"\u003cLink ID\u003e\"\n  },\n  \"after\": \"2023-07-01T00:00:00.000Z\",\n  \"before\": \"2023-07-30T23:59:59.999Z\",\n  \"first\": 20\n}`\n            }), _jsxs(_components.p, {\n              children: [\"The response is a \", _jsx(_components.a, {\n                href: \"#query-data-basics-pagination\",\n                children: \"paginated\"\n              }), \" list of Txs.\"]\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Linked Accounts\",\n            id: \"query-data-external-accounts-linked-accounts\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use the \", _jsx(_components.code, {\n                children: \"externalAccount.ledgerAccounts\"\n              }), \" query to list Ledger Accounts linked to this External Account:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"GetExternalAccountLinkedAccounts\",\n              children: `query GetExternalAccountLinkedAccounts(\n  $externalAccount: ExternalAccountMatchInput!\n) {\n  externalAccount(\n    externalAccount: $externalAccount\n  ) {\n    externalId\n    name\n    link {\n      __typename\n      id\n      name\n    }\n    ledgerAccounts {\n      nodes {\n        path\n        name\n        type\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n        hasPreviousPage\n        startCursor\n      }\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetExternalAccountLinkedAccounts Variables\",\n              children: `{\n  \"externalAccount\": {\n    \"externalId\": \"\u003cExternal ID\u003e\",\n    \"linkId\": \"\u003cLink ID\u003e\"\n  }\n}`\n            }), _jsxs(_components.p, {\n              children: [\"The response is a \", _jsx(_components.a, {\n                href: \"#query-data-basics-pagination\",\n                children: \"paginated\"\n              }), \" list of Ledger Accounts.\"]\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"query-data-txs\",\n          title: \"Txs\",\n          label: \"i\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsxs(Subpage, {\n            title: \"Lookup\",\n            id: \"query-data-txs-lookup\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use the \", _jsx(_components.code, {\n                children: \"tx\"\n              }), \" query to retrieve a Tx by its ID and Account ID at your external system:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"GetTxByExternalIds\",\n              children: `query GetTx(\n  $externalId: ID!\n  $externalAccountId: ID!\n  $linkId: ID!\n) {\n  tx(\n    tx: {\n      externalId: $externalId\n      externalAccountId: $externalAccountId\n      linkId: $linkId\n    }\n  ) {\n    id\n    description\n    amount\n    currency {\n      code\n    }\n    externalId\n    link {\n      id\n    }\n    externalAccount {\n      id\n      externalId\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetTxByExternalIds Variables\",\n              children: `{\n  \"externalAccountId\": \"\u003cExternal Account ID\u003e\",\n  \"external\": \"\u003cExternal Tx ID\u003e\",\n  \"linkId\": \"\u003cLink ID\u003e\"\n}`\n            }), _jsxs(_components.p, {\n              children: [\"Or by its \", _jsx(InlineLogo, {}), \" ID:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"GetTxByFragmentID\",\n              children: `query GetTx(\n  $id: ID!\n) {\n  tx(\n    tx: {\n      id: $id\n    }\n  ) {\n    id\n    description\n    amount\n    currency {\n      code\n    }\n    externalId\n    link {\n      id\n    }\n    externalAccount {\n      id\n      externalId\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetTxByFragmentID Variables\",\n              children: `{\n  \"id\": \"\u003cFragment ID\u003e\"\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Unreconciled\",\n            id: \"query-data-txs-unreconciled\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use the \", _jsx(_components.code, {\n                children: \"ledgerAccount.unreconciledTx\"\n              }), \" query to list a Ledger Account's unreconciled Txs:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"GetUnreconciledTxs\",\n              children: `query GetUnreconciledTxs(\n  $ledgerAccount: LedgerAccountMatchInput!\n  $after: String\n  $first: Int\n  $before: String\n) {\n  ledgerAccount(ledgerAccount: $ledgerAccount) {\n    path\n    unreconciledTxs(\n      after: $after\n      first: $first\n      before: $before\n    ) {\n      nodes {\n        id\n        description\n        amount\n        currency {\n          code\n        }\n        externalId\n        link {\n          id\n        }\n        externalAccount {\n          id\n          externalId\n        }\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n        hasPreviousPage\n        startCursor\n      }\n    }\n  }\n}\n`\n            }), _jsxs(_components.p, {\n              children: [\"You may optionally specify \", _jsx(_components.code, {\n                children: \"before\"\n              }), \" and \", _jsx(_components.code, {\n                children: \"after\"\n              }), \" to paginate the results and \", _jsx(_components.code, {\n                children: \"first\"\n              }), \" to specify the page size.\"]\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetUnreconciledTxs Variables\",\n              children: `{\n  \"ledgerAccount\": {\n    \"path\": \"assets/bank/user-cash\",\n    \"ledger\": {\n      \"ik\": \"quickstart-ledger\"\n    }\n  },\n  \"after\": \"2023-07-01T00:00:00.000Z\",\n  \"before\": \"2023-07-30T23:59:59.999Z\",\n  \"first\": 20\n}`\n            }), _jsxs(_components.p, {\n              children: [\"The response is a \", _jsx(_components.a, {\n                href: \"#query-data-basics-pagination\",\n                children: \"paginated\"\n              }), \" list of Txs.\"]\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"query-data-schemas\",\n          title: \"Schemas\",\n          label: \"j\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsxs(Subpage, {\n            title: \"Lookup\",\n            id: \"query-data-schemas-lookup\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use the \", _jsx(_components.code, {\n                children: \"schema\"\n              }), \" query to retrieve a Schema by its key:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"GetSchema\",\n              children: `query GetSchema($schema: SchemaMatchInput!) {\n  schema(schema: $schema) {\n    key\n    name\n    latestVersion: version {\n      created\n      version\n    }\n    firstVersion: version(version: 1) {\n      created\n      version\n    }\n  }\n}\n`\n            }), _jsxs(_components.p, {\n              children: [\"When retrieving a Schema, use the \", _jsx(_components.code, {\n                children: \"version\"\n              }), \" argument to query a specific version of the Schema. By default, the latest version is returned:\"]\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetSchema Variables\",\n              children: `{\n  \"schema\": {\n    \"key\": \"quickstart-schema\"\n  }\n}`\n            }), _jsxs(_components.p, {\n              children: [\"The JSON of a Schema version can be retrieved by querying the \", _jsx(_components.code, {\n                children: \"json\"\n              }), \" field:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"GetLatestSchemaJSON\",\n              children: `query GetLatestSchemaJSON(\n  $schema: SchemaMatchInput!\n) {\n  schema(schema: $schema) {\n    key\n    name\n    version {\n      created\n      version\n      json\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetLatestSchemaJSON Variables\",\n              children: `{\n  \"schema\": {\n    \"key\": \"quickstart-schema\"\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"List versions\",\n            id: \"query-data-schemas-list-versions\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use the \", _jsx(_components.code, {\n                children: \"schema.versions\"\n              }), \" query to query all the versions of your Schema:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"ListSchemaVersions\",\n              children: `query ListSchemaVersions(\n  $schema: SchemaMatchInput!\n) {\n  schema(schema: $schema) {\n    key\n    name\n    versions {\n      nodes {\n        created\n        version\n        json\n      }\n    }\n  }\n}\n`\n            }), _jsxs(_components.p, {\n              children: [\"The response is a \", _jsx(_components.a, {\n                href: \"#query-data-basics-pagination\",\n                children: \"paginated\"\n              }), \" list of your Schema's versions:\"]\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"ListSchemaVersions Variables\",\n              children: `{\n  \"schema\": {\n    \"key\": \"quickstart-schema\"\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"List Ledgers\",\n            id: \"query-data-schemas-list-ledgers\",\n            children: [_jsxs(_components.p, {\n              children: [\"Use the \", _jsx(_components.code, {\n                children: \"schema.ledgers\"\n              }), \" query to list the Ledgers created off a Schema:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"ListSchemaLedgers\",\n              children: `query ListSchemaLedgers(\n  $schema: SchemaMatchInput!\n) {\n  schema(schema: $schema) {\n    key\n    name\n    ledgers {\n      nodes {\n        ik\n        name\n        created\n        balanceUTCOffset\n      }\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"ListSchemaLedgers Variables\",\n              children: `{\n  \"schema\": {\n    \"key\": \"quickstart-schema\"\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Migration status\",\n            id: \"query-data-schemas-migration-status\",\n            children: [_jsxs(_components.p, {\n              children: [_jsx(InlineLogo, {}), \" asynchronously migrates Ledgers when their Schema is updated. The current status of a Ledger's migration can be queried using the API, via \", _jsx(_components.code, {\n                children: \"version.migrations\"\n              }), \":\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"GetLedgerMigrationStatus\",\n              children: `query GetLedgerMigrationStatus(\n  $schema: SchemaMatchInput!\n) {\n  schema(schema: $schema) {\n    key\n    name\n    latestVersion: version {\n      migrations {\n        nodes {\n          ledger {\n            ik\n            name\n          }\n          status\n        }\n      }\n    }\n  }\n}\n`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"ListSchemaLedgers Variables\",\n              children: `{\n  \"schema\": {\n    \"key\": \"quickstart-schema\"\n  }\n}`\n            })]\n          })]\n        })]\n      }), \"\\n\", _jsxs(TopicContainer, {\n        label: \"J\",\n        title: \"Generate reports\",\n        id: \"generate-reports\",\n        children: [_jsxs(_components.p, {\n          children: [_jsx(InlineLogo, {}), \" supports queries for generating common financial reports.\"]\n        }), _jsx(Diagram, {\n          type: \"generateReports\"\n        }), _jsxs(Page, {\n          id: \"generate-reports-balance-sheet\",\n          title: \"Balance sheet\",\n          label: \"a\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"A balance sheet reports the net worth of a business at the end of a reporting period.\"\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            title: \"Balance sheet query\",\n            children: `query GetBalanceSheet(\n  $ledgerIk: SafeString!\n  $balanceAtEndOf: LastMoment!\n  $accountsFilter: LedgerAccountsFilterSet!\n) {\n  ledger(ledger: { ik: $ledgerIk }) {\n    ledgerAccounts(filter: $accountsFilter) {\n      nodes {\n        id\n        name\n        type\n        balance(at: $balanceAtEndOf)\n      }\n    }\n  }\n}\n`\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"Balance sheet parameters\",\n            children: `{\n  \"ledgerIk\": \"ik-used-to-create-ledger\",\n  \"accountsFilter\": {\n    \"type\": {\n      \"in\": [\"asset\", \"liability\"]\n    }\n  },\n  \"balanceAtEndOf\": \"1969\"\n}\n`\n          }), _jsxs(_components.p, {\n            children: [\"Generate a balance sheet by querying \", _jsx(_components.code, {\n              children: \"balance\"\n            }), \" on all \", _jsx(_components.code, {\n              children: \"asset\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"liability\"\n            }), \" Ledger Accounts.\"]\n          }), _jsxs(_components.p, {\n            children: [\"Providing a \", _jsx(_components.a, {\n              href: \"/api-reference#types-scalars-and-enums-lastmoment\",\n              children: _jsx(_components.code, {\n                children: \"LastMoment\"\n              })\n            }), \" to the \", _jsx(_components.code, {\n              children: \"at\"\n            }), \" parameter on \", _jsx(_components.code, {\n              children: \"balance\"\n            }), \" returns the balance at the end of that period. Values provided to \", _jsx(_components.code, {\n              children: \"in\"\n            }), \" operators are OR'd, so both \", _jsx(_components.code, {\n              children: \"asset\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"liability\"\n            }), \" accounts are returned.\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"generate-reports-income-statement\",\n          title: \"Income statement\",\n          label: \"b\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"An income statement reports how a business's net worth changed over the course of a reporting period.\"\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            title: \"Income statement query\",\n            children: `query GetIncomeStatement(\n  $ledgerIk: SafeString!\n  $balanceChangeDuring: Period!\n  $accountsFilter: LedgerAccountsFilterSet!\n) {\n  ledger(ledger: { ik: $ledgerIk }) {\n    ledgerAccounts(filter: $accountsFilter) {\n      nodes {\n        path\n        name\n        type\n        balanceChange(period: $balanceChangeDuring)\n      }\n    }\n  }\n}\n`\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"Income statement parameters\",\n            children: `{\n  \"ledgerIk\": \"ik-used-to-create-ledger\",\n  \"accountsFilter\": {\n    \"type\": {\n      \"in\": [\"income\", \"expense\"]\n    }\n  },\n  \"balanceChangeDuring\": \"1969\"\n}\n`\n          }), _jsxs(_components.p, {\n            children: [\"Generate an income statement by querying \", _jsx(_components.code, {\n              children: \"balanceChange\"\n            }), \" on all \", _jsx(_components.code, {\n              children: \"income\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"expense\"\n            }), \" Ledger Accounts.\"]\n          }), _jsxs(_components.p, {\n            children: [\"Providing a \", _jsx(_components.a, {\n              href: \"/api-reference#types-scalars-and-enums-period\",\n              children: _jsx(_components.code, {\n                children: \"Period\"\n              })\n            }), \" to the \", _jsx(_components.code, {\n              children: \"period\"\n            }), \" parameter on \", _jsx(_components.code, {\n              children: \"balanceChange\"\n            }), \" retrieves the difference in the Ledger Account's balance between the start and end of that period.\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"generate-reports-account-statement\",\n          title: \"Account statement\",\n          label: \"c\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"An account statement reports how a Ledger Account changed over the course of a reporting period. It contains a Ledger Account's starting balance, ending balance and all Ledger Lines posted to it.\"\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            title: \"Monthly account statement query\",\n            children: `query GetAccountStatement(\n  $accountMatch: LedgerAccountMatchInput!\n  $startingBalanceAtEndOf: LastMoment!\n  $endingBalanceAtEndOf: LastMoment!\n  $linesFilter: LedgerLinesFilterSet!\n) {\n  ledgerAccount(ledgerAccount: $accountMatch) {\n    path\n    name\n    type\n    startingBalance: balance(at: $startingBalanceAtEndOf)\n    endingBalance: balance(at: $endingBalanceAtEndOf)\n    lines(filter: $linesFilter) {\n      nodes {\n        id\n        key\n        posted\n        description\n        amount\n        ledgerEntryId\n      }\n    }\n  }\n}\n`\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"Monthly account statement variables\",\n            children: `{\n  \"accountMatch\": {\n    \"ledger\": {\n      \"ik\": \"ik-used-to-create-ledger\"\n    },\n    \"path\": \"liabilities/customer-deposits/customer:123\"\n  },\n  \"linesFilter\": {\n    \"posted\": {\n      \"after\": \"1969-07-01T00:00:00.000Z\",\n      \"before\": \"1969-07-30T23:59:59.999Z\"\n    }\n  },\n  \"startingBalanceAtEndOf\": \"1969-06\",\n  \"endingBalanceAtEndOf\": \"1969-07\"\n}\n`\n          }), _jsxs(_components.p, {\n            children: [\"Generate an account statement by querying for \", _jsx(_components.code, {\n              children: \"balance\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"lines\"\n            }), \" on a Ledger Account.\"]\n          }), _jsxs(_components.p, {\n            children: [\"Get the starting balance by passing a \", _jsx(_components.a, {\n              href: \"/api-reference#types-scalars-and-enums-datetime\",\n              children: _jsx(_components.code, {\n                children: \"DateTime\"\n              })\n            }), \" to the \", _jsx(_components.code, {\n              children: \"at\"\n            }), \" parameter on \", _jsx(_components.code, {\n              children: \"balance\"\n            }), \". Use a GraphQL alias to make multiple \", _jsx(_components.code, {\n              children: \"balance\"\n            }), \" queries within one request.\"]\n          }), _jsxs(_components.p, {\n            children: [\"To get all Ledger Lines that were posted during the reporting period, use the \", _jsx(_components.code, {\n              children: \"filter\"\n            }), \" parameter on \", _jsx(_components.code, {\n              children: \"lines\"\n            }), \". The \", _jsx(_components.code, {\n              children: \"after\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"before\"\n            }), \" filters are inclusive, so use timestamps for the first and last moments of the reporting period.\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"generate-reports-journal-export\",\n          title: \"Journal export\",\n          label: \"d\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"A journal export lists all Ledger Entries posted to a Ledger during a reporting period.\"\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            title: \"Journal export query\",\n            children: `query GetJournalExport(\n  $ledgerIk: SafeString!\n  $entriesFilter: LedgerEntriesFilterSet!\n  $entriesCursor: String\n) {\n  ledger(ledger: { ik: $ledgerIk }) {\n    ledgerEntries(filter: $entriesFilter, after: $entriesCursor) {\n      nodes {\n        id\n        type\n        posted\n        description\n        lines {\n          nodes {\n            id\n            description\n            account {\n              name\n              path\n              type\n            }\n            amount\n          }\n        }\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n    }\n  }\n}\n`\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"Journal export variables\",\n            children: `{\n  \"ledgerIk\": \"ik-used-to-create-ledger\",\n  \"entriesFilter\": {\n    \"posted\": {\n      \"after\": \"1969-01-01T00:00:00.000Z\",\n      \"before\": \"1969-03-31T23:59:59.999Z\"\n    }\n  },\n  \"entriesCursor\": \"{{data.ledger.ledgerEntries.pageInfo.endCursor}}\"\n}\n`\n          }), _jsx(_components.p, {\n            children: \"Generate a journal export by listing Ledger Entries. For each Ledger Entry, include its Ledger Lines and their Ledger Accounts.\"\n          }), _jsxs(_components.p, {\n            children: [\"This can be a long list, so query \", _jsx(_components.code, {\n              children: \"pageInfo\"\n            }), \" to get a \", _jsx(_components.a, {\n              href: \"#query-data-basics-pagination\",\n              children: \"pagination cursor\"\n            }), \". It can be passed to the \", _jsx(_components.code, {\n              children: \"after\"\n            }), \" parameter on \", _jsx(_components.code, {\n              children: \"ledgerEntries\"\n            }), \" to page through the results.\"]\n          })]\n        })]\n      }), \"\\n\", _jsxs(TopicContainer, {\n        label: \"K\",\n        title: \"Configure Consistency\",\n        id: \"configure-consistency\",\n        children: [_jsxs(_components.p, {\n          children: [\"To ensure correctness at scale, \", _jsx(InlineLogo, {}), \"'s consistency mode lets you build guardrails without sacrificing performance.\"]\n        }), _jsx(Diagram, {\n          type: \"configureConsistency\"\n        }), _jsx(_components.p, {\n          children: \"You can configure consistency within your Schema to make granular tradeoffs between throughput and consistency.\"\n        }), _jsxs(Page, {\n          id: \"configure-consistency-ledger-configuration\",\n          title: \"Ledger Configuration\",\n          label: \"a\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"You can configure the consistency of the Ledger Entries list query in your Ledger. To do this, set \", _jsx(_components.code, {\n              children: \"consistencyConfig\"\n            }), \" at the top level of your Schema:\"]\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsxs(_components.li, {\n              children: [\"Use \", _jsx(_components.code, {\n                children: \"entries: eventual\"\n              }), \" for Ledgers that require high throughput but can tolerate a stale entry list\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [\"Use \", _jsx(_components.code, {\n                children: \"entries: strong\"\n              }), \" for Ledgers that have lower throughput but require strong consistency, such as those powering reconcilation dashboards\"]\n            }), \"\\n\"]\n          }), _jsx(CodeBlock, {\n            title: \"Configuring consistency\",\n            language: \"json\",\n            children: `{\n  \"consistencyConfig\": {\n    \"entries\": \"strong\"\n  },\n  \"chartOfAccounts\": [...]\n}`\n          }), _jsxs(_components.p, {\n            children: [\"By default, all Ledgers use \", _jsx(_components.code, {\n              children: \"eventual\"\n            }), \" consistency.\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"configure-consistency-ledger-account-configuration\",\n          title: \"Ledger Account Configuration\",\n          label: \"b\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"You can configure the consistency of balances, as well as the Ledger Lines list query, in your Ledger Account.\"\n          }), _jsxs(_components.p, {\n            children: [\"To configure an account's balance consistency, set \", _jsx(_components.code, {\n              children: \"consistencyConfig.ownBalanceUpdates\"\n            }), \" within a Ledger Account's definition:\"]\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsxs(_components.li, {\n              children: [\"Use \", _jsx(_components.code, {\n                children: \"ownBalanceUpdates: eventual\"\n              }), \" for Ledger Accounts that require high throughput but can tolerate stale balances, such as those used for reporting\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [\"Use \", _jsx(_components.code, {\n                children: \"ownBalanceUpdates: strong\"\n              }), \" for Ledger Accounts that have lower throughput but require strong consistency, such as those used to authorize transactions\"]\n            }), \"\\n\"]\n          }), _jsxs(_components.p, {\n            children: [\"Similarly, to configure the consistency of an account's lines, set \", _jsx(_components.code, {\n              children: \"consistencyConfig.lines\"\n            }), \":\"]\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsxs(_components.li, {\n              children: [\"Use \", _jsx(_components.code, {\n                children: \"lines: eventual\"\n              }), \" for Ledger Accounts that require high throughput but can tolerate a stale line list\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [\"Use \", _jsx(_components.code, {\n                children: \"lines: strong\"\n              }), \" for Ledger Accounts that have lower throughput but require strong consistency, such as those powering transaction histories displayed to end users\"]\n            }), \"\\n\"]\n          }), _jsx(CodeBlock, {\n            title: \"Configuring consistency\",\n            language: \"json\",\n            children: `{\n  \"accounts\": [\n    {\n      \"key\": \"user-balance\",\n      \"template\": true,\n      \"type\": \"asset\",\n      \"consistencyConfig\": {\n        \"ownBalanceUpdates\": \"strong\",\n        \"lines\": \"eventual\"\n      }\n    }\n  ]\n}`\n          }), _jsxs(_components.p, {\n            children: [\"By default, all Ledger Accounts use \", _jsx(_components.code, {\n              children: \"eventual\"\n            }), \" for both properties.\"]\n          }), _jsxs(_components.p, {\n            children: [\"For low-throughput applications, setting all Ledger Accounts as \", _jsx(_components.code, {\n              children: \"strong\"\n            }), \" may make implementation easier. To do this, set \", _jsx(_components.code, {\n              children: \"defaultConsistencyConfig\"\n            }), \" on \", _jsx(_components.code, {\n              children: \"chartOfAccounts\"\n            }), \":\"]\n          }), _jsx(CodeBlock, {\n            title: \"Configuring default consistency\",\n            language: \"json\",\n            children: `{\n  \"chartOfAccounts\": {\n    \"defaultConsistencyConfig\": {\n      \"ownBalanceUpdates\": \"strong\",\n      \"lines\": \"strong\"\n    },\n    \"accounts\": [...]\n  }\n}`\n          }), _jsxs(_components.p, {\n            children: [\"Strongly consistent Ledger Accounts generally won't have children, but in all cases child Ledger Accounts inherit the parent's \", _jsx(_components.code, {\n              children: \"consistencyConfig\"\n            }), \" setting.\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"configure-consistency-balance-queries\",\n          title: \"Balance queries\",\n          label: \"c\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"To query a strongly consistent \", _jsx(_components.code, {\n              children: \"ownBalance\"\n            }), \", set \", _jsx(_components.code, {\n              children: \"consistencyMode\"\n            }), \" to \", _jsx(_components.code, {\n              children: \"strong\"\n            }), \" when querying the Ledger Account:\"]\n          }), _jsx(CodeBlock, {\n            title: \"Setting consistency on ownBalance reads\",\n            language: \"graphql\",\n            children: `query GetOwnBalances(\n  $ledgerAccount: LedgerAccountMatchInput!\n) {\n  ledgerAccount(ledgerAccount: $ledgerAccount) {\n    ownBalance(consistencyMode: strong)\n    ownBalances(consistencyMode: strong) {\n      nodes {\n        amount\n        currency {\n          code\n        }\n      }\n    }\n  }\n}\n`\n          }), _jsx(_components.p, {\n            children: \"By default, balance queries on all Ledger Accounts are eventually consistent.\"\n          }), _jsx(_components.p, {\n            children: \"Restrictions:\"\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsxs(_components.li, {\n              children: [\"Only \", _jsx(_components.code, {\n                children: \"ownBalance\"\n              }), \" supports strongly consistent reads; \", _jsx(_components.code, {\n                children: \"balance\"\n              }), \" and \", _jsx(_components.code, {\n                children: \"childBalance\"\n              }), \" support only eventually consistent reads\"]\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Querying a strongly consistent balance on an eventually consistent Ledger Account throws a GraphQL error\"\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [\"You cannot combine \", _jsx(_components.code, {\n                children: \"at\"\n              }), \" with \", _jsx(_components.code, {\n                children: \"consistencyMode\"\n              }), \" to query strongly consistent historical balances\"]\n            }), \"\\n\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"configure-consistency-entry-conditions\",\n          title: \"Entry conditions\",\n          label: \"d\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Entry conditions are rules defined in your Schema to manage concurrency and enforce correctness within your Ledger.\"\n          }), _jsxs(_components.p, {\n            children: [\"Conditions are evaluated when a Ledger Entry is posted. If a condition is not met, the Ledger Entry is not posted and the mutation returns a \", _jsx(_components.code, {\n              children: \"BadRequestError\"\n            }), \" with code \", _jsx(_components.code, {\n              children: \"conditional_request_failed\"\n            }), \".\"]\n          }), _jsxs(_components.p, {\n            children: [\"Use \", _jsx(_components.code, {\n              children: \"precondition\"\n            }), \" when your application reads a balance and needs to guarantee that it hasn't changed before posting the Ledger Entry.\"]\n          }), _jsx(CodeBlock, {\n            title: \"Using precondition\",\n            language: \"json\",\n            children: `\n{\n  \"type\": \"pay-employee\",\n  \"lines\": [...],\n  \"conditions\": [\n    {\n      \"account\": {\n        \"path\": \"bank-account\"\n      },\n      \"precondition\": {\n        \"ownBalance\": {\n          \"eq\": \"{{current_balance}}\"\n        }\n      }\n    }\n  ]\n}`\n          }), _jsxs(_components.p, {\n            children: [\"Use \", _jsx(_components.code, {\n              children: \"postcondition\"\n            }), \" to guarantee that a write never puts a Ledger Account's balance in an undesirable state.\"]\n          }), _jsx(CodeBlock, {\n            title: \"Using postcondition\",\n            language: \"json\",\n            children: `\n{\n  \"type\": \"pay-employee\",\n  \"lines\": [...],\n  \"conditions\": [\n    {\n      \"account\": {\n        \"path\": \"bank-account\"\n      },\n      \"postcondition\": {\n        \"ownBalance\": {\n          \"gte\": \"0\"\n        }\n      }\n    }\n  ]\n}`\n          }), _jsx(_components.p, {\n            children: \"Restrictions:\"\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsxs(_components.li, {\n              children: [\"Entry conditions apply to \", _jsx(_components.code, {\n                children: \"ownBalance\"\n              }), \", which changes only for Ledger Accounts directly posted to in the Ledger Entry.\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [\"Ledger Accounts referenced in Entry conditions must have \", _jsx(_components.code, {\n                children: \"consistencyConfig.ownBalanceUpdates\"\n              }), \" set to \", _jsx(_components.code, {\n                children: \"strong\"\n              })]\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Linked Ledger Accounts do not support Entry conditions\"\n            }), \"\\n\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"configure-consistency-consistent-groups\",\n          title: \"Consistent Groups\",\n          label: \"e\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"You can configure an account to have a strongly-consistent ownBalance for specific group keys.\\nTo do this, use the \", _jsx(_components.code, {\n              children: \"consistencyConfig.groups\"\n            }), \" configuration in the Schema.\"]\n          }), _jsx(CodeBlock, {\n            title: \"Ledger Entry Group balance consistency\",\n            language: \"json\",\n            children: `{\n  \"accounts\": [\n    {\n      \"key\": \"user-balance\",\n      \"template\": true,\n      \"type\": \"asset\",\n      \"consistencyConfig\": {\n        \"groups\": [\n          {\n            \"key\": \"invoice_id\",\n            \"ownBalanceUpdates\": \"strong\"\n          }\n        ]\n      }\n    }\n  ]\n}`\n          }), _jsxs(_components.p, {\n            children: [\"See \", _jsx(_components.a, {\n              href: \"#group-ledger-entries\",\n              children: \"Group Ledger Entries\"\n            }), \" for more information about how to use Ledger Entry Groups.\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"configure-consistency-query-consistent-groups\",\n          title: \"Query Consistent Groups\",\n          label: \"f\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"To query a strongly consistent Ledger Entry Group balance, set \", _jsx(_components.code, {\n              children: \"consistencyMode\"\n            }), \" to \", _jsx(_components.code, {\n              children: \"strong\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"use_account\"\n            }), \" when querying the group's balances.\"]\n          }), _jsx(CodeBlock, {\n            title: \"Setting consistency on group ownBalance reads\",\n            language: \"graphql\",\n            children: `query ListLedgerEntryGroupBalances(\n  $ledger: LedgerMatchInput!\n  $groupKey: SafeString!\n  $groupValue: SafeString!\n  $consistencyMode: ReadBalanceConsistencyMode\n) {\n  ledgerEntryGroup(ledgerEntryGroup: {\n    ledger: $ledger,\n    key: $groupKey,\n    value: $groupValue,\n  }) {\n    balances {\n      nodes {\n        account {\n          path\n        }\n        ownBalance(consistencyMode: $consistencyMode)\n      }\n    }\n  }\n}\n`\n          }), _jsx(_components.p, {\n            children: \"By default, Ledger Entry Group balances are eventually consistent. Like other consistency options, enabling strong consistency will reduce the maximum throughput of an account.\"\n          }), _jsx(_components.p, {\n            children: \"Restrictions:\"\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsx(_components.li, {\n              children: \"Ledger Entry Group balances cannot be used for Entry conditions.\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Querying a strongly consistent Ledger Entry Group balance without configuring strong group consistency for that Ledger Account throws a GraphQL error.\"\n            }), \"\\n\"]\n          })]\n        })]\n      }), \"\\n\", _jsxs(TopicContainer, {\n        label: \"L\",\n        title: \"Handle currencies\",\n        id: \"handle-currencies\",\n        children: [_jsx(_components.p, {\n          children: \"Use multi-currency Ledgers to easily build products that track currencies, stocks and inventories.\"\n        }), _jsx(AnimatedDiagram, {\n          type: \"handle-currencies\"\n        }), _jsx(_components.p, {\n          children: \"A Ledger can contain Ledger Accounts of different currencies, like USD and GBP bank accounts. Ledger Accounts can also be multi-currency, like one representing a stock portfolio, with a balance for each symbol.\"\n        }), _jsx(_components.p, {\n          children: \"You can post Ledger Entries with multiple currencies. It must follow the Accounting Equation per currency, so you'll need at least four Ledger Lines.\"\n        }), _jsxs(_components.p, {\n          children: [_jsx(InlineLogo, {}), \" includes a \", _jsx(_components.a, {\n            href: \"/api-reference#types-scalars-and-enums-currencycode\",\n            children: \"list\"\n          }), \" of common currencies. You can also add your own \", _jsx(_components.a, {\n            href: \"#handle-currencies-custom-currencies\",\n            children: \"custom currencies\"\n          }), \".\"]\n        }), _jsxs(Page, {\n          id: \"handle-currencies-track-exposure\",\n          title: \"Track exposure\",\n          label: \"a\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Multi-currency ledgers often reflect transitory states: a company accepts payment in one currency intending to convert it to another currency. Between accepting and converting the money, the exchange rate could change. Tracking the potential gain or loss from this change is called exposure.\"\n          }), _jsx(_components.p, {\n            children: \"To track exposure, use a Change Ledger Account that has multiple balances, one for each currency. Here's an example that tracks exposure between USD and EUR:\"\n          }), _jsx(AnimatedDiagram, {\n            type: \"multi-currency-example\"\n          }), _jsx(_components.p, {\n            children: \"In this example,\"\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsx(_components.li, {\n              children: \"User 1 starts out with 100 USD, balanced by 100 USD in the platform's bank.\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"User 1 pays User 2, but they have different wallet currencies, so we record the exchange rate they were given in an Exposure account. The exposure account balance is 100 USD - 90 EUR.\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"The platform now owes User 2 EUR, so it exchanges 100 USD for 95 EUR. In this case, due to exchange rate fluctuation, they got a different rate. The exposure account balance records the difference in exchange rates: 5 EUR.\"\n            }), \"\\n\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"handle-currencies-ledger-accounts\",\n          title: \"Ledger Accounts\",\n          label: \"b\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"To create a multi-currency Ledger, set \", _jsx(_components.code, {\n              children: \"defaultCurrencyMode\"\n            }), \" to \", _jsx(_components.code, {\n              children: \"multi\"\n            }), \" and unset \", _jsx(_components.code, {\n              children: \"defaultCurrency\"\n            }), \":\"]\n          }), _jsx(CodeBlock, {\n            title: \"Multi-currency Ledger\",\n            language: \"json\",\n            children: `{\n  \"key\": \"...\",\n  \"chartOfAccounts\": {\n    \"defaultCurrencyMode\": \"multi\",\n    \"accounts\": [\n      {...},\n      {...}\n    ]\n  },\n  \"ledgerEntries\": {...}\n}`\n          }), _jsxs(_components.p, {\n            children: [\"For Ledger Accounts in a single currency, such as \", _jsx(_components.a, {\n              href: \"/#reconcile-transactions\",\n              children: \"bank accounts\"\n            }), \", set \", _jsx(_components.code, {\n              children: \"currencyMode\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"currency\"\n            }), \" on the account directly:\"]\n          }), _jsx(CodeBlock, {\n            title: \"Single-currency Ledger Account\",\n            language: \"json\",\n            children: `{\n  \"key\": \"...\",\n  \"chartOfAccounts\": {\n    \"defaultCurrencyMode\": \"multi\",\n    \"accounts\": [\n      {\n        \"key\": \"bank-account\",\n        \"currencyMode\": \"single\",\n        \"currency\": {\n          \"code\": \"USD\"\n        }\n      },\n      {...}\n    ]\n  },\n  \"ledgerEntries\": {...}\n}`\n          }), _jsxs(_components.p, {\n            children: [\"Like other Ledger Account properties, \", _jsx(_components.code, {\n              children: \"currencyMode\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"currency\"\n            }), \" are inherited by child Ledger Accounts unless they are overridden.\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"handle-currencies-ledger-entries\",\n          title: \"Ledger Entries\",\n          label: \"c\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"You can define multi-currency Ledger Entries types in your Schema in the same way as single-currency Ledger Entries.\"\n          }), _jsx(_components.p, {\n            children: \"Multi-currency Ledger Accounts accept Ledger Lines in any currency, so Ledger Entries that post to them must specify the currency of each Ledger Line:\"\n          }), _jsx(CodeBlock, {\n            title: \"Multi-currency Ledger Entry\",\n            language: \"json\",\n            children: `{\n  \"key\": \"...\",\n  \"chartOfAccounts\": {\n    \"defaultCurrencyMode\": \"multi\",\n    \"accounts\": [\n      {\n        \"type\": \"asset\",\n        \"key\": \"bank-account\"\n      },\n      {...}\n    ]\n  },\n  \"ledgerEntries\": {\n    \"types\": [\n      {\n        \"type\": \"user_funds_account_usd\",\n        \"description\": \"Fund {{funding_amount}} USD\",\n        \"lines\": [\n          {\n            \"key\": \"funds_arrive_in_bank\",\n            \"account\": { \n              \"path\": \"bank-account\"\n            },\n            \"amount\": \"{{funding_amount}}\",\n            \"currency\": {\n              \"code\": \"USD\"\n            }\n          },\n          {...other line}\n        ]\n      }\n    ]\n  }\n}`\n          }), _jsxs(_components.p, {\n            children: [\"You can parameterize \", _jsx(_components.code, {\n              children: \"currency\"\n            }), \" to make your Ledger Entries more reusable:\"]\n          }), _jsx(CodeBlock, {\n            title: \"Parameterized multi-currency Ledger Entry\",\n            language: \"json\",\n            children: `{\n  \"key\": \"...\",\n  \"chartOfAccounts\": {\n    \"defaultCurrencyMode\": \"multi\",\n    \"accounts\": [\n      {\n        \"type\": \"asset\",\n        \"key\": \"bank-account\"\n      },\n      {...}\n    ]\n  },\n  \"ledgerEntries\": {\n    \"types\": [\n      {\n        \"type\": \"user_funds_account\",\n        \"description\": \"Fund {{funding_amount}} {{currency}}\",\n        \"lines\": [\n          {\n            \"key\": \"funds_arrive_in_bank\",\n            \"account\": { \n              \"path\": \"bank-account\"\n            },\n            \"amount\": \"{{funding_amount}}\",\n            \"currency\": {\n              \"code\": \"{{currency}}\"\n            }\n          },\n          {...other line}\n        ]\n      }\n    ]\n  }\n}`\n          }), _jsxs(_components.p, {\n            children: [\"You can also post multi-currency Ledger Entries to Ledger Account templates which parameterize \", _jsx(_components.code, {\n              children: \"currency\"\n            }), \". This is useful for creating \", _jsx(_components.a, {\n              href: \"#reconcile-transactions\",\n              children: \"Linked Ledger Accounts\"\n            }), \" if you have multiple bank accounts in different currencies in a multi-currency Ledger.\"]\n          }), _jsx(CodeBlock, {\n            title: \"Parameterized Ledger Account templates\",\n            language: \"json\",\n            children: `{\n  \"key\": \"...\",\n  \"chartOfAccounts\": {\n    \"defaultCurrencyMode\": \"multi\",\n    \"accounts\": [\n      {\n        \"key\": \"bank-accounts\",\n        \"template\": true,\n        \"currencyMode\": \"single\",\n        \"currency\": {\n          \"code\": \"{{currency}}\"\n        }\n      },\n      {...}\n    ]\n  },\n  \"ledgerEntries\": {\n    \"types\": [\n      {\n        \"type\": \"user_funds_account\",\n        \"description\": \"Fund {{funding_amount}} {{currency}}\",\n        \"lines\": [\n          {\n            \"key\": \"funds_arrive_in_bank\",\n            \"account\": { \n              \"path\": \"bank-accounts:{{currency}}\"\n            },\n            \"amount\": \"{{funding_amount}}\",\n            \"currency\": {\n              \"code\": \"{{currency}}\"\n            }\n          },\n          {...other line}\n        ]\n      }\n    ]\n  }\n}\n`\n          }), _jsxs(_components.p, {\n            children: [_jsx(_components.a, {\n              href: \"#configure-consistency-entry-conditions\",\n              children: \"Ledger Entry Conditions\"\n            }), \" against multi-currency Ledger Accounts need to specify the currency the condition applies to:\"]\n          }), _jsx(CodeBlock, {\n            title: \"Parameterized Ledger Account templates\",\n            language: \"json\",\n            children: `{\n  \"key\": \"...\",\n  \"chartOfAccounts\": {\n    \"defaultCurrencyMode\": \"multi\",\n    \"accounts\": [\n      {...},\n      {...}\n    ]\n  },\n  \"ledgerEntries\": {\n    \"types\": [\n      {\n        \"type\": \"p2p_transfer\",\n        \"description\": \"Move {{funding_amount}} {{currency}}\",\n        \"lines\": [\n          {...},\n          {...}\n        ],\n        \"conditions\": [\n          {\n            \"account\": {\n              \"path\": \"liabilities/users:{{from_user_id}}\"\n            },\n            \"currency\": {\n              \"code\": \"{{currency}}\"\n            },\n            \"postcondition\": {\n              \"ownBalance\": {\n                \"gte\": \"0\"\n              }\n            }\n          }\n        ]\n      }\n    ]\n  }\n}`\n          })]\n        }), _jsxs(Page, {\n          id: \"handle-currencies-read-balances\",\n          title: \"Read balances\",\n          label: \"d\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Balances on multi-currency Ledger Accounts are lists of currency and amount, as opposed to just a single amount. To read all balances in all currencies, query the plural versions of the singular balance field.\"\n          }), _jsxs(Subpage, {\n            title: \"Latest\",\n            id: \"handle-currencies-read-balances-latest\",\n            children: [_jsx(_components.p, {\n              children: \"You can read the latest balance in a specific currency or list the latest balance in all currencies.\"\n            }), _jsx(_components.p, {\n              children: \"Multi-currency Ledger Accounts have three balance lists:\"\n            }), _jsxs(_components.ul, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [_jsx(_components.code, {\n                  children: \"ownBalances\"\n                }), \", the sum of all Ledger Lines in the Ledger Account per currency, excluding Ledger Lines in child Ledger Accounts\"]\n              }), \"\\n\", _jsxs(_components.li, {\n                children: [_jsx(_components.code, {\n                  children: \"childBalances\"\n                }), \", the sum of all Ledger Lines in child Ledger Accounts per currency\"]\n              }), \"\\n\", _jsxs(_components.li, {\n                children: [_jsx(_components.code, {\n                  children: \"balances\"\n                }), \", the sum of all Ledger Lines, including child Ledger Accounts per currency\"]\n              }), \"\\n\"]\n            }), _jsxs(_components.p, {\n              children: [\"To read a specific currency's balance, pass in the \", _jsx(_components.code, {\n                children: \"currency\"\n              }), \" argument:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"Get USD balance read\",\n              children: `query GetUSDBalance(\n  $ledgerAccount: LedgerAccountMatchInput!\n) {\n  ledgerAccount(ledgerAccount: $ledgerAccount) {\n    ownBalance(currency: { code: USD })\n  }\n}`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"GetUSDBalance variables\",\n              children: `{\n  \"ledgerAccount\": {\n    \"path\": \"assets/bank/user-cash\",\n    \"ledger\": {\n      \"ik\": \"multi-currency-ledger\"\n    }\n  }\n}`\n            }), _jsxs(_components.p, {\n              children: [\"To read all the balances for a multi-currency Ledger Account, use \", _jsx(_components.code, {\n                children: \"ownBalances\"\n              }), \":\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"Get all balances read\",\n              children: `query GetAllBalances(\n  $ledgerAccount: LedgerAccountMatchInput!\n) {\n  ledgerAccount(ledgerAccount: $ledgerAccount) {\n    ownBalances {\n      nodes {\n        currency {\n          code\n        }\n        amount\n      }\n    }\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Aggregated\",\n            id: \"handle-currencies-read-balances-aggregated\",\n            children: [_jsxs(_components.p, {\n              children: [\"To read \", _jsx(_components.a, {\n                href: \"#read-balances-aggregated\",\n                children: \"aggregated balances\"\n              }), \" for multi-currency Ledger Accounts, pass in the \", _jsx(_components.code, {\n                children: \"currency\"\n              }), \" argument, or query \", _jsx(_components.code, {\n                children: \"childBalances\"\n              }), \" and \", _jsx(_components.code, {\n                children: \"balances\"\n              }), \":\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"Get aggregated balances read\",\n              children: `query GetBalances(\n  $ledgerAccount: LedgerAccountMatchInput!\n) {\n  ledgerAccount(ledgerAccount: $ledgerAccount) {\n\n    childBalance(currency: { code: USD })\n    childBalances {\n      nodes {\n        currency {\n          code\n        }\n        amount\n      }\n    }\n\n    balance(currency: { code: USD })\n    balances {\n      nodes {\n        currency {\n          code\n        }\n        amount\n      }\n    }\n\n  }\n}`\n            }), _jsxs(_components.p, {\n              children: [\"If any Ledger Account has a descendant that is a multi-currency Ledger Account or if it has descendants of different currencies, it has \", _jsx(_components.code, {\n                children: \"childBalances\"\n              }), \" and \", _jsx(_components.code, {\n                children: \"balances\"\n              }), \".\"]\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Consistent\",\n            id: \"handle-currencies-read-balances-consistent\",\n            children: [_jsxs(_components.p, {\n              children: [\"To read \", _jsx(_components.a, {\n                href: \"#read-balances-consistent\",\n                children: \"consistent balances\"\n              }), \" for multi-currency Ledger Accounts, pass in the \", _jsx(_components.code, {\n                children: \"consistencyMode\"\n              }), \" argument:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"Get strongly-consistent ownBalances read\",\n              children: `query GetOwnBalances(\n  $ledgerAccount: LedgerAccountMatchInput!\n) {\n  ledgerAccount(ledgerAccount: $ledgerAccount) {\n    ownBalance(\n      consistencyMode: strong\n      currency: { code: USD }\n    )\n    ownBalances(consistencyMode: strong) {\n      nodes {\n        currency {\n          code\n        }\n        amount\n      }\n    }\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Historical\",\n            id: \"handle-currencies-read-balances-historical\",\n            children: [_jsxs(_components.p, {\n              children: [\"To read \", _jsx(_components.a, {\n                href: \"#read-balances-historical\",\n                children: \"historical balances\"\n              }), \" for multi-currency Ledger Accounts, pass in the \", _jsx(_components.code, {\n                children: \"at\"\n              }), \" argument:\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"Get historical balances read\",\n              children: `query GetOldBalances(\n  $ledgerAccount: LedgerAccountMatchInput!\n) {\n  ledgerAccount(ledgerAccount: $ledgerAccount) {\n    ownBalance(at: \"1969\", currency: { code: USD })\n    ownBalances(at: \"1969\") {\n      nodes {\n        currency {\n          code\n        }\n        amount\n      }\n    }\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Balance changes\",\n            id: \"handle-currencies-read-balances-balance-changes\",\n            children: [_jsxs(_components.p, {\n              children: [\"Multi-currency Ledger Accounts support reading \", _jsx(_components.a, {\n                href: \"#read-balances-balance-changes\",\n                children: \"balance changes\"\n              }), \":\"]\n            }), _jsxs(_components.ul, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [_jsx(_components.code, {\n                  children: \"ownBalanceChanges\"\n                }), \", how much \", _jsx(_components.code, {\n                  children: \"ownBalances\"\n                }), \" changed\"]\n              }), \"\\n\", _jsxs(_components.li, {\n                children: [_jsx(_components.code, {\n                  children: \"childBalanceChanges\"\n                }), \", how much \", _jsx(_components.code, {\n                  children: \"childBalances\"\n                }), \" changed\"]\n              }), \"\\n\", _jsxs(_components.li, {\n                children: [_jsx(_components.code, {\n                  children: \"balanceChanges\"\n                }), \", how much \", _jsx(_components.code, {\n                  children: \"balances\"\n                }), \" changed\"]\n              }), \"\\n\"]\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"Balance change queries\",\n              children: `query GetBalanceChanges(\n  $ledgerAccount: LedgerAccountMatchInput!\n) {\n  ledgerAccount(ledgerAccount: $ledgerAccount) {\n    \n    ownBalanceChange(\n      period: \"1969\"\n      currency: { code: USD }\n    )\n    ownBalanceChanges(period: \"1969\") {\n      nodes {\n        currency {\n          code\n        }\n        amount\n      }\n    }\n\n    childBalanceChange(\n      period: \"1968-12\"\n      currency: { code: USD }\n    )\n    childBalanceChanges(period: \"1968-12\") {\n      nodes {\n        currency {\n          code\n        }\n        amount\n      }\n    }\n\n    balanceChange(\n      period: \"1968-12-25\"\n      currency: { code: USD }\n    )\n    balanceChanges(period: \"1968-12-25\") {\n      nodes {\n        currency {\n          code\n        }\n        amount\n      }\n    }\n      \n  }\n}`\n            }), _jsxs(_components.p, {\n              children: [\"Balance change queries require you to specify a \", _jsx(_components.a, {\n                href: \"/api-reference#types-scalars-and-enums-period\",\n                children: _jsx(_components.code, {\n                  children: \"period\"\n                })\n              }), \". This can be a year, quarter, month, day or hour.\"]\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"handle-currencies-custom-currencies\",\n          title: \"Custom currencies\",\n          label: \"e\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"You can define your own currencies to track any type of value, like rewards points, stocks or physical items.\"\n          }), _jsxs(_components.p, {\n            children: [\"To create a custom currency, call the \", _jsx(_components.code, {\n              children: \"createCustomCurrency\"\n            }), \" mutation:\"]\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            title: \"createCustomCurrency mutation \",\n            children: `mutation CreateCustomCurrency (\n    $customCurrency: CreateCustomCurrencyInput!,\n) {\n  createCustomCurrency(\n    customCurrency: $customCurrency\n  ) {\n    ... on CreateCustomCurrencyResult {\n      customCurrency {\n        code\n        customCurrencyId\n        precision\n        name\n        customCode\n      }\n    }\n    ... on Error {\n      code\n      message\n    }\n  }\n}`\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"createCustomCurrency variables \",\n            children: `{\n  \"customCurrency\": {\n    \"customCurrencyId\": \"blue-gems\",\n    \"precision\": 0,\n    \"name\": \"Blue Gems\",\n    \"customCode\": \"BLUE\"\n  }\n}`\n          }), _jsxs(_components.p, {\n            children: [\"To use a custom currency, set the \", _jsx(_components.code, {\n              children: \"customCurrencyId\"\n            }), \" on the \", _jsx(_components.code, {\n              children: \"currency\"\n            }), \" field of a Ledger Account and Ledger Line:\"]\n          }), _jsx(CodeBlock, {\n            title: \"Custom currency Ledger Account\",\n            language: \"json\",\n            children: `{\n  \"key\": \"...\",\n  \"chartOfAccounts\": {\n    \"defaultCurrencyMode\": \"multi\",\n    \"accounts\": [\n      {\n        \"key\": \"gems-issued\",\n        \"currencyMode\": \"single\",\n        \"currency\": {\n          \"code\": \"CUSTOM\",\n          \"customCurrencyId\": \"blue-gems\"\n        }\n      },\n      {...}\n    ]\n  },\n  \"ledgerEntries\": {\n    \"types\": [\n      {\n        \"type\": \"issue-blue-gems\",\n        \"description\": \"Issue blue gems\",\n        \"lines\": [\n          {\n            \"key\": \"increase-pool\",\n            \"account\": { \n              \"path\": \"gems-issued\"\n            },\n            \"amount\": \"{{amount}}\",\n            \"currency\": {\n              \"code\": \"CUSTOM\",\n              \"customCurrencyId\": \"blue-gems\"\n            }\n          },\n          {...other line}\n        ]\n      }\n    ]\n  }\n}`\n          })]\n        })]\n      }), \"\\n\", _jsxs(TopicContainer, {\n        label: \"M\",\n        title: \"Group Ledger Entries\",\n        id: \"group-ledger-entries\",\n        children: [_jsx(_components.p, {\n          children: \"A Ledger Entry Group is a collection of related Ledger Entries that occur at different points in time. Each Group tracks the net change to each Ledger Account balance it affects.\"\n        }), _jsxs(_components.p, {\n          children: [\"Use Ledger Entry Groups to tie together Ledger Entries that are part of the same funds flow, such as a deposit, settlement or invoice. To store metadata, use \", _jsx(_components.a, {\n            href: \"#store-metadata\",\n            children: \"tags\"\n          }), \" instead.\"]\n        }), _jsxs(Page, {\n          id: \"group-ledger-entries-configuring-groups\",\n          title: \"Configuring Groups\",\n          label: \"a\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Groups for a Ledger Entry Type are defined as a list of key/value pairs in the Schema:\"\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"Ledger Entry Type with Groups\",\n            children: `{\n  \"type\": \"user_initiates_withdrawal\",\n  \"description\": \"{{user_id}} initiates withdrawal\",\n  \"lines\": [\n    {\n      \"account\": {\n        \"path\": \"liabilities/users:{{user_id}}/available\"\n      },\n      \"key\": \"decrease_user_balance\",\n      \"amount\": \"-{{withdraw_amount}}\"\n    },\n    {...other line}\n  ],\n  \"groups\": [\n    {\n      \"key\": \"withdrawal\",\n      \"value\": \"{{withdrawal_id}}\"\n    }\n  ]\n}`\n          }), _jsx(_components.p, {\n            children: \"Ledger Entry Groups have the following limitations:\"\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsx(_components.li, {\n              children: \"You can specify up to 10 Groups for any Ledger Entry type.\"\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [\"Parameters can be used in the \", _jsx(_components.code, {\n                children: \"value\"\n              }), \" of a Group, but not the \", _jsx(_components.code, {\n                children: \"key\"\n              }), \".\"]\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Group keys must be unique per Ledger Entry, and you can only provide one value for each key.\"\n            }), \"\\n\"]\n          })]\n        }), _jsxs(Page, {\n          id: \"group-ledger-entries-querying-balances\",\n          title: \"Querying balances\",\n          label: \"b\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"Use the \", _jsx(_components.code, {\n              children: \"ledgerEntryGroup.balances\"\n            }), \" expansion to get the net change per Ledger Account balance from all Ledger Entries in a Group. Group balances are eventually consistent.\"]\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            title: \"GetLedgerEntryGroupBalances\",\n            children: `query GetLedgerEntryGroupBalances(\n  $ledger: LedgerMatchInput!\n  $entryGroup: EntryGroupMatchInput!,\n) {\n  ledger(ledger: $ledger) {\n    ledgerEntryGroup(ledgerEntryGroup: $entryGroup) {\n      balances {\n        nodes {\n          account {\n            path\n          }\n          ownBalance\n        }\n      }\n    }\n  }\n}`\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"GetLedgerEntryGroupBalances Variables\",\n            children: `{\n  \"entryGroup\": {\n    \"key\": \"withdrawal\",\n    \"value\": \"some-withdrawal-id\"\n  },\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  }\n}`\n          }), _jsx(_components.p, {\n            children: \"The response for a Ledger Entry Group with a settled withdrawal:\"\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"GetLedgerEntryGroupBalances Response\",\n            children: `{\n  \"data\": {\n    \"ledger\": {\n      \"ledgerEntryGroup\": {\n        \"balances\": {\n          \"nodes\": [\n            {\n              \"account\": {\n                \"path\": \"asset-root/bank\"\n              },\n              \"ownBalance\": \"-50000\"\n            },\n            {\n              \"account\": {\n                \"path\": \"liability-root/user:user-id/available\"\n              },\n              \"ownBalance\": \"-50000\"\n            },\n            {\n              \"account\": {\n                \"path\": \"liability-root/user:user-id/pending\"\n              },\n              \"ownBalance\": \"0\"\n            }\n          ]\n        }\n      }\n    }\n  }\n}`\n          }), _jsx(Subpage, {\n            title: \"Consistent balances\",\n            id: \"group-ledger-entries-querying-balances-consistent-balances\",\n            children: _jsxs(_components.p, {\n              children: [\"Ledger Entry Groups support strongly-consistent reads for the ownBalance field. See \", _jsx(_components.a, {\n                href: \"#configure-consistency-consistent-groups\",\n                children: \"Consistent Ledger Entry Group balances\"\n              }), \" for more information on how to configure this in your Schema. See \", _jsx(_components.a, {\n                href: \"#configure-consistency-query-consistent-groups\",\n                children: \"Query Consistent Groups\"\n              }), \" for how to query strongly consistent Ledger Entry Group balances.\"]\n            })\n          }), _jsxs(Subpage, {\n            title: \"Filtering balances\",\n            id: \"group-ledger-entries-querying-balances-filtering-balances\",\n            children: [_jsx(_components.p, {\n              children: \"Balances in a Group may be filtered by account, currency, and ownBalance.\"\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"QueryLedgerEntryGroupBalances\",\n              children: `query QueryLedgerEntryGroupBalances(\n  $ledger: LedgerMatchInput!\n  $entryGroup: EntryGroupMatchInput!,\n  $filter: LedgerEntryGroupBalanceFilterSet,\n) {\n  ledger(ledger: $ledger) {\n    ledgerEntryGroup(ledgerEntryGroup: $entryGroup) {\n      balances(filter: $filter) {\n        nodes {\n          account {\n            path\n          }\n          ownBalance\n          currency {\n            code\n          }\n        }\n      }\n    }\n  }\n}`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"QueryLedgerEntryGroupBalances Variables\",\n              children: `{\n  \"entryGroup\": {\n    \"key\": \"withdrawal\",\n    \"value\": \"12345\"\n  },\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  },\n  \"filter\": {\n    \"currency\": {\n      \"equalTo\": { \"code\": \"USD\" }\n    },\n    \"ownBalance\": {\n      \"gte\": \"-1000\",\n      \"lte\": \"1000\"\n    },\n    \"account\": {\n      \"path\": {\n        \"equalTo\": \"liability-root/user:user-id/pending\"\n      }\n    }\n  }\n}`\n            }), _jsx(_components.p, {\n              children: \"The response is:\"\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"QueryLedgerEntryGroupBalances Response\",\n              children: `{\n  \"data\": {\n    \"ledger\": {\n      \"ledgerEntryGroup\": {\n        \"balances\": {\n          \"nodes\": [\n            {\n              \"account\": {\n                \"path\": \"liability-root/user:user-id/pending\"\n              },\n              \"ownBalance\": \"0\",\n              \"currency\": {\n                \"code\": \"USD\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}`\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Filter by template\",\n            id: \"group-ledger-entries-querying-balances-filter-by-template\",\n            children: [_jsx(_components.p, {\n              children: \"Group balances support filtering account paths using '*' in place of a template variable.\"\n            }), _jsx(CodeBlock, {\n              language: \"graphql\",\n              title: \"QueryLedgerEntryGroupBalances\",\n              children: `query QueryLedgerEntryGroupBalances(\n  $ledger: LedgerMatchInput!\n  $entryGroup: EntryGroupMatchInput!,\n  $filter: LedgerEntryGroupBalanceFilterSet,\n) {\n  ledger(ledger: $ledger) {\n    ledgerEntryGroup(ledgerEntryGroup: $entryGroup) {\n      balances(filter: $filter) {\n        nodes {\n          account {\n            path\n          }\n          ownBalance\n        }\n      }\n    }\n  }\n}`\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"QueryLedgerEntryGroupBalances Variables\",\n              children: `{\n  \"entryGroup\": {\n    \"key\": \"withdrawal\",\n    \"value\": \"12345\"\n  },\n  \"ledger\": {\n    \"ik\": \"quickstart-ledger\"\n  },\n  \"filter\": {\n    \"account\": {\n      \"path\": {\n        \"matches\": \"liability-root/user:*/pending\"\n      }\n    }\n  }\n}`\n            }), _jsx(_components.p, {\n              children: \"The response is:\"\n            }), _jsx(CodeBlock, {\n              language: \"json\",\n              title: \"QueryLedgerEntryGroupBalances Response\",\n              children: `{\n  \"data\": {\n    \"ledger\": {\n      \"ledgerEntryGroup\": {\n        \"balances\": {\n          \"nodes\": [\n            {\n              \"account\": {\n                \"path\": \"liability-root/user:user-id/pending\"\n              },\n              \"ownBalance\": \"0\"\n            },\n            {\n              \"account\": {\n                \"path\": \"liability-root/user:another-user-id/pending\"\n              },\n              \"ownBalance\": \"2500\"\n            }\n          ]\n        }\n      }\n    }\n  }\n}`\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"group-ledger-entries-updating-entry-groups\",\n          title: \"Updating Entry Groups\",\n          label: \"c\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"In addition to Groups defined in your Schema, you can add a posted Ledger Entry to additional Groups.\"\n          }), _jsx(CodeBlock, {\n            language: \"graphql\",\n            expandable: true,\n            title: \"updateLedgerEntry mutation\",\n            children: `mutation UpdateLedgerEntryGroups(\n  $ledgerEntry: LedgerEntryMatchInput!\n  $update: UpdateLedgerEntryInput!\n) {\n  updateLedgerEntry(\n    ledgerEntry: $ledgerEntry,\n    update: $update\n  ) {\n    __typename\n    ... on UpdateLedgerEntryResult {\n      entry {\n        type\n        ik\n        groups {\n          key\n          value\n        }\n        lines {\n          nodes {\n            amount\n            description\n            account {\n              path\n            }\n          }\n        }\n      }\n    }\n    ... on Error {\n      code\n      message\n    }\n  }\n}`\n          }), _jsx(CodeBlock, {\n            language: \"json\",\n            title: \"updateLedgerEntry variables to add and update groups\",\n            children: `{\n  \"ledgerEntry\": {\n    \"ik\": \"add-ledger-entry\",\n    \"ledger\": {\n      \"ik\": \"ledger-ik\"\n    }\n  },\n  \"update\": {\n    \"groups\": [\n      {\n        \"key\": \"withdrawal\",\n        \"value\": \"12345\"\n      }\n    ]\n  }\n}`\n          }), _jsx(_components.p, {\n            children: \"This is an additive operation:\"\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsx(_components.li, {\n              children: \"If you specify a new Group, this Ledger Entry will be added to that Group\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"If you don't specify an existing Group, this Ledger Entry will remain in that Group\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"You may not modify an existing Group key or remove an Ledger Entry from a Group\"\n            }), \"\\n\"]\n          }), _jsx(_components.p, {\n            children: \"You can only update a Ledger Entry a maximum of 10 times.\"\n          })]\n        })]\n      }), \"\\n\", _jsxs(TopicContainer, {\n        label: \"N\",\n        title: \"Export Data\",\n        id: \"export-data\",\n        children: [_jsxs(Page, {\n          id: \"export-data-s3-export\",\n          title: \"S3 Export\",\n          label: \"a\",\n          includePermalinkAroundChildren: false,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [_jsx(InlineLogo, {}), \" supports exporting your Ledger data to AWS S3. This makes your data available for analytics, regulatory compliance and ingestion into third-party systems.\"]\n          }), _jsx(AnimatedDiagram, {\n            type: \"export-data\"\n          }), _jsxs(Subpage, {\n            title: \"Export format\",\n            id: \"export-data-s3-export-export-format\",\n            children: [_jsx(_components.p, {\n              children: \"Data exports are delivered approximately every 5 minutes. Each data export contains the Ledger data created or updated since the previous export.\"\n            }), _jsx(_components.p, {\n              children: \"Exports are divided by data type into three files. Each file contains newline-separated JSON, where each line represents an individual instance of the respective data type: 'LedgerEntry', 'LedgerLine' or 'LedgerAccount'.\"\n            }), _jsxs(_components.p, {\n              children: [\"The files use a naming scheme of \", _jsx(_components.code, {\n                children: \"{File Prefix}/{type}/day={day}/hour={hour}/{partition}.part\"\n              }), \".\"]\n            }), _jsx(_components.p, {\n              children: \"Example files:\"\n            }), _jsxs(UnorderedListNoSpacing, {\n              children: [_jsx(ListItem, {\n                children: _jsx(_components.a, {\n                  href: \"example-ledger-entry-export.part\",\n                  children: \"Ledger Entry\"\n                })\n              }), \"\\n\", _jsx(ListItem, {\n                children: _jsx(_components.a, {\n                  href: \"example-ledger-line-export.part\",\n                  children: \"Ledger Line\"\n                })\n              }), \"\\n\", _jsx(ListItem, {\n                children: _jsx(_components.a, {\n                  href: \"example-ledger-account-export.part\",\n                  children: \"Ledger Account\"\n                })\n              })]\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Onboarding\",\n            id: \"export-data-s3-export-onboarding\",\n            children: [_jsxs(_components.p, {\n              children: [\"To enable data export, first create an \", _jsx(_components.a, {\n                href: \"https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-bucket-overview.html\",\n                children: \"S3 bucket\"\n              }), \". No special settings are required, but take note of the bucket name and AWS region.\"]\n            }), _jsxs(_components.p, {\n              children: [\"Once the bucket exists, navigate to the Settings -\u003e S3 Exports subsection of the \", _jsx(InlineLogo, {}), \" \", _jsx(_components.a, {\n                href: \"https://dashboard.fragment.dev\",\n                children: \"dashboard\"\n              }), \", and follow the instructions to create a new export. You need to provide:\"]\n            }), _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"S3 Bucket Name, the name of the S3 bucket in AWS.\"\n              }), \"\\n\", _jsxs(_components.li, {\n                children: [\"S3 Bucket Region, the AWS region of the bucket created in the previous step (for example, \", _jsx(_components.code, {\n                  children: \"us-east-1\"\n                }), \").\"]\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Export Name, a name for this export. This is for display purposes only.\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"File Prefix (optional), the path where exports are stored. If no file prefix is provided, exports are stored in the bucket root.\"\n              }), \"\\n\"]\n            }), _jsxs(_components.p, {\n              children: [\"The instructions in the dashboard include applying a \", _jsx(_components.a, {\n                href: \"https://aws.amazon.com/blogs/security/writing-iam-policies-how-to-grant-access-to-an-amazon-s3-bucket/\",\n                children: \"S3 bucket policy\"\n              }), \" to your bucket. Depending on how you manage your infrastructure, this may take some time, so the onboarding flow in the dashboard can be restarted at any time.\"]\n            })]\n          }), _jsxs(Subpage, {\n            title: \"Testing\",\n            id: \"export-data-s3-export-testing\",\n            children: [_jsxs(_components.p, {\n              children: [\"Once you've onboarded your data export, the dashboard lets you test the connection by writing a sample file to \", _jsx(_components.code, {\n                children: \"test/testLedgerEntry.part\"\n              }), \" in your bucket. The test result can be:\"]\n            }), _jsxs(_components.ul, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [_jsx(_components.code, {\n                  children: \"Policy Not Applied\"\n                }), \", \", _jsx(InlineLogo, {}), \" received an authorization error. This typically means the provided resource policy has not yet been applied within your AWS account. This may also mean the provided bucket name or region differs from the one created in the initial setup.\"]\n              }), \"\\n\", _jsxs(_components.li, {\n                children: [_jsx(_components.code, {\n                  children: \"Invalid Bucket Name\"\n                }), \", the provided bucket name does not exist in AWS.\"]\n              }), \"\\n\", _jsxs(_components.li, {\n                children: [_jsx(_components.code, {\n                  children: \"Incorrect AWS Region\"\n                }), \", the provided bucket exists in a different region than provided.\"]\n              }), \"\\n\", _jsxs(_components.li, {\n                children: [_jsx(_components.code, {\n                  children: \"Verified Permissions\"\n                }), \", the file was successfully written.\"]\n              }), \"\\n\"]\n            }), _jsxs(_components.p, {\n              children: [_jsx(InlineLogo, {}), \" does not remove the test file after verifying its existence.\"]\n            })]\n          })]\n        }), _jsxs(Page, {\n          id: \"export-data-retool\",\n          title: \"Retool\",\n          label: \"b\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"You can add \", _jsx(InlineLogo, {}), \" as a GraphQL resource in \", _jsx(_components.a, {\n              href: \"https://retool.com\",\n              children: \"Retool\"\n            }), \".\"]\n          }), _jsxs(_components.ol, {\n            children: [\"\\n\", _jsxs(_components.li, {\n              children: [\"Create an API client in the \", _jsx(InlineLogo, {}), \" \", _jsx(_components.a, {\n                href: \"https://dashboard.fragment.dev/go/s/api-clients\",\n                children: \"dashboard\"\n              }), \".\"]\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Add a new GraphQL Resource in Retool.\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Set the Base URL to your API URL.\"\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [\"Add the \", _jsx(_components.code, {\n                children: \"Authorization\"\n              }), \" Header with the value \", _jsx(_components.code, {\n                children: \"Bearer OAUTH2_TOKEN\"\n              }), \". Retool will replace OAUTH2_TOKEN with the actual token at runtime.\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [\"Set Authentication to \", _jsx(_components.code, {\n                children: \"OAuth 2.0\"\n              })]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [\"Enable \", _jsx(_components.code, {\n                children: \"Use Client Credentials Flow\"\n              })]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [\"Set the following values:\", \"\\n\", _jsxs(UnorderedListNoSpacing, {\n                children: [_jsx(ListItem, {\n                  children: \"Set Access Token URL to OAuth URL\"\n                }), \"\\n\", _jsx(ListItem, {\n                  children: \"Set the Client ID and Secret\"\n                }), \"\\n\", _jsx(ListItem, {\n                  children: \"Set Scopes to OAuth Scope\"\n                }), \"\\n\", _jsxs(ListItem, {\n                  children: [\"Set Prompt to \", _jsx(_components.code, {\n                    children: \"consent\"\n                  })]\n                })]\n              }), \"\\n\"]\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Save the resource.\"\n            }), \"\\n\"]\n          }), _jsx(_components.p, {\n            children: \"Note: Testing the connection in Retool may fail even when the resource is configured correctly. To check, use the resource in an app by running the query.\"\n          })]\n        })]\n      }), \"\\n\", _jsxs(TopicContainer, {\n        label: \"O\",\n        title: \"Under the hood\",\n        id: \"under-the-hood\",\n        children: [_jsxs(_components.p, {\n          children: [_jsx(InlineLogo, {}), \" is the database we wish we had at Stripe and Robinhood. It's the abstraction we want at the performance we need.\"]\n        }), _jsxs(Page, {\n          id: \"under-the-hood-performance\",\n          title: \"Performance\",\n          label: \"a\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"On February 13, 2024, we ran a load test to simulate traffic using \", _jsx(_components.a, {\n              href: \"https://k6.io\",\n              children: \"Grafana K6\"\n            }), \". A total of 19,622,609 requests were made over a 15 minute period. \", _jsx(_components.a, {\n              href: \"fragment-load-test-read.pdf\",\n              children: \"6,769,966 of them were reads\"\n            }), \" and \", _jsx(_components.a, {\n              href: \"fragment-load-test-write.pdf\",\n              children: \"12,852,643 of them were writes\"\n            }), \". We observed:\"]\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsx(_components.li, {\n              children: \"14,578 ledger entries per second average write throughput\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"7,489 balance reads per second average read throughput\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"33ms p95 read latency\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"69ms p95 write latency\"\n            }), \"\\n\"]\n          }), _jsx(_components.p, {\n            children: \"By comparison, at Robinhood it took 18 months of dedicated engineering effort to get even remotely close to these numbers.\"\n          })]\n        }), _jsxs(Page, {\n          id: \"under-the-hood-architecture\",\n          title: \"Architecture\",\n          label: \"b\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"To achieve this performance, \", _jsx(InlineLogo, {}), \" is built on top of two distributed databases:\"]\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsx(_components.li, {\n              children: \"Transactional storage on AWS DynamoDB\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Indexed storage on ElasticSearch\"\n            }), \"\\n\"]\n          }), _jsx(_components.p, {\n            children: \"A two-tier system, as opposed to one built on a single Postgres instance, is harder to build and maintain. But by having separate write-optimized and read-optimized systems, we can tune each system independently and use the best tool for each job.\"\n          })]\n        }), _jsxs(Page, {\n          id: \"under-the-hood-write-path\",\n          title: \"Write path\",\n          label: \"c\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"When customers hit any of our GraphQL mutations, all data is synchronously written into DynamoDB then asynchronously indexed on ElasticSearch.\"\n          }), _jsx(Diagram, {\n            type: \"writesUnderTheHood\"\n          })]\n        }), _jsxs(Page, {\n          id: \"under-the-hood-scaling-writes\",\n          title: \"Scaling writes\",\n          label: \"d\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"We optimize DynamoDB by:\"\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsx(_components.li, {\n              children: \"Storing data in many small partitions. Each ledger entry is its own Dynamo partition. This scales horizontally since each partition can be served from a different DynamoDB server.\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Using a single-table design with a dataloader. The dataloader batches several reads in a single application tick into one request to DynamoDB, minimizing the number of requests made to DynamoDB.\"\n            }), \"\\n\"]\n          }), _jsx(AnimatedDiagram, {\n            type: \"dynamo-under-the-hood\"\n          })]\n        }), _jsxs(Page, {\n          id: \"under-the-hood-read-path\",\n          title: \"Read path\",\n          label: \"e\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsx(_components.p, {\n            children: \"Depending on the query, GraphQL queries API requests are served from either DynamoDB or ElasticSearch.\"\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsx(_components.li, {\n              children: \"DynamoDB serves ledger account balances, single item lookups, and low-volume list queries\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"ElasticSearch serves list queries that may use filtering and pagination\"\n            }), \"\\n\"]\n          }), _jsx(AnimatedDiagram, {\n            type: \"reads-under-the-hood\"\n          })]\n        }), _jsxs(Page, {\n          id: \"under-the-hood-scaling-reads\",\n          title: \"Scaling reads\",\n          label: \"f\",\n          includePermalinkAroundChildren: true,\n          children: [_jsx(_components.div, {}), _jsxs(_components.p, {\n            children: [\"Our ElasticSearch strategy is based on the idea that each query should only hit a single server.  When a list query comes in, it gets routed to a single server, which uses sorting to cut down the search space, applies additional filters on indexed attributes, then returns the results. The results are fully hydrated so the \", _jsx(InlineLogo, {}), \" API can return data directly from ElasticSearch without hitting DynamoDB again.\"]\n          }), _jsx(AnimatedDiagram, {\n            type: \"elastic-under-the-hood\"\n          }), _jsx(_components.p, {\n            children: \"This strategy is opposite to Elasticsearch's default where docs are thrown onto random servers and queries map out to every server in the cluster. Our strategy works well for a highly structured search with a high hit rate: filtering data in a Ledger. The default strategy is better for a fuzzy search with a low hit rate, like searching for a string across millions of documents.\"\n          })]\n        })]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}}},"__N_SSG":true},"page":"/docs","query":{},"buildId":"W2yOYhxwWru5tElmEw2mc","isFallback":false,"gsp":true,"scriptLoader":[]}</script></body></html>